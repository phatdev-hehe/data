TITLE: Installing Bootstrap with Package Managers
DESCRIPTION: Commands for installing Bootstrap using various package managers including npm, yarn, Bun, Composer, and NuGet.
SOURCE: https://github.com/twbs/bootstrap/blob/main/README.md#2025-04-23_snippet_1

LANGUAGE: bash
CODE:
```
npm install bootstrap@v5.3.5
```

LANGUAGE: bash
CODE:
```
yarn add bootstrap@v5.3.5
```

LANGUAGE: bash
CODE:
```
bun add bootstrap@v5.3.5
```

LANGUAGE: bash
CODE:
```
composer require twbs/bootstrap:5.3.5
```

LANGUAGE: bash
CODE:
```
Install-Package bootstrap
```

LANGUAGE: bash
CODE:
```
Install-Package bootstrap.sass
```

----------------------------------------

TITLE: Server-side Form Validation Example
DESCRIPTION: Example of a form using Bootstrap's server-side validation classes (.is-valid and .is-invalid) with proper ARIA attributes and validation feedback messages.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/validation.mdx#2025-04-23_snippet_2

LANGUAGE: HTML
CODE:
```
<form class="row g-3">
    <div class="col-md-4">
      <label for="validationServer01" class="form-label">First name</label>
      <input type="text" class="form-control is-valid" id="validationServer01" value="Mark" required>
      <div class="valid-feedback">
        Looks good!
      </div>
    </div>
    <!-- Additional form elements omitted for brevity -->
</form>
```

----------------------------------------

TITLE: Custom Box-Sizing Override
DESCRIPTION: CSS snippet for overriding Bootstrap's default border-box setting
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/introduction.mdx#2025-04-23_snippet_5

LANGUAGE: css
CODE:
```
.selector-for-some-widget {
  box-sizing: content-box;
}
```

----------------------------------------

TITLE: Basic Bootstrap Grid Layout with Equal Columns
DESCRIPTION: Creates three equal-width columns centered in the page using Bootstrap's container and grid classes. Demonstrates basic grid structure with responsive behavior.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/grid.mdx#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
<div class="container text-center">
    <div class="row">
      <div class="col">
        Column
      </div>
      <div class="col">
        Column
      </div>
      <div class="col">
        Column
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Custom Styled Form Validation in Bootstrap
DESCRIPTION: Example of a Bootstrap form with custom validation styles using the needs-validation class and novalidate attribute. Includes input fields for personal information with custom feedback messages and styling.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/validation.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<form class="row g-3 needs-validation" novalidate>
    <div class="col-md-4">
      <label for="validationCustom01" class="form-label">First name</label>
      <input type="text" class="form-control" id="validationCustom01" value="Mark" required>
      <div class="valid-feedback">
        Looks good!
      </div>
    </div>
    <div class="col-md-4">
      <label for="validationCustom02" class="form-label">Last name</label>
      <input type="text" class="form-control" id="validationCustom02" value="Otto" required>
      <div class="valid-feedback">
        Looks good!
      </div>
    </div>
    <div class="col-md-4">
      <label for="validationCustomUsername" class="form-label">Username</label>
      <div class="input-group has-validation">
        <span class="input-group-text" id="inputGroupPrepend">@</span>
        <input type="text" class="form-control" id="validationCustomUsername" aria-describedby="inputGroupPrepend" required>
        <div class="invalid-feedback">
          Please choose a username.
        </div>
      </div>
    </div>
    <div class="col-md-6">
      <label for="validationCustom03" class="form-label">City</label>
      <input type="text" class="form-control" id="validationCustom03" required>
      <div class="invalid-feedback">
        Please provide a valid city.
      </div>
    </div>
    <div class="col-md-3">
      <label for="validationCustom04" class="form-label">State</label>
      <select class="form-select" id="validationCustom04" required>
        <option selected disabled value="">Choose...</option>
        <option>...</option>
      </select>
      <div class="invalid-feedback">
        Please select a valid state.
      </div>
    </div>
    <div class="col-md-3">
      <label for="validationCustom05" class="form-label">Zip</label>
      <input type="text" class="form-control" id="validationCustom05" required>
      <div class="invalid-feedback">
        Please provide a valid zip.
      </div>
    </div>
    <div class="col-12">
      <div class="form-check">
        <input class="form-check-input" type="checkbox" value="" id="invalidCheck" required>
        <label class="form-check-label" for="invalidCheck">
          Agree to terms and conditions
        </label>
        <div class="invalid-feedback">
          You must agree before submitting.
        </div>
      </div>
    </div>
    <div class="col-12">
      <button class="btn btn-primary" type="submit">Submit form</button>
    </div>
  </form>
```

----------------------------------------

TITLE: Viewport Meta Tag
DESCRIPTION: Meta tag for ensuring proper responsive behavior across devices
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/introduction.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<meta name="viewport" content="width=device-width, initial-scale=1">
```

----------------------------------------

TITLE: Basic HTML Bootstrap Template
DESCRIPTION: Initial HTML template setup with viewport meta tag for responsive behavior
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/introduction.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Bootstrap demo</title>
  </head>
  <body>
    <h1>Hello, world!</h1>
  </body>
</html>
```

----------------------------------------

TITLE: Varying Modal Content with JavaScript
DESCRIPTION: This JavaScript snippet shows how to dynamically change modal content based on which button triggered the modal. It uses event.relatedTarget and data attributes to customize the modal's content.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/modal.mdx#2025-04-23_snippet_8

LANGUAGE: javascript
CODE:
```
const exampleModal = document.getElementById('exampleModal')
if (exampleModal) {
  exampleModal.addEventListener('show.bs.modal', event => {
    // Button that triggered the modal
    const button = event.relatedTarget
    // Extract info from data-bs-* attributes
    const recipient = button.getAttribute('data-bs-whatever')
    // If necessary, you could initiate an Ajax request here
    // and then do the updating in a callback.

    // Update the modal's content.
    const modalTitle = exampleModal.querySelector('.modal-title')
    const modalBodyInput = exampleModal.querySelector('.modal-body input')

    modalTitle.textContent = `New message to ${recipient}`
    modalBodyInput.value = recipient
  })
}
```

----------------------------------------

TITLE: Implementing Button Variants in Bootstrap
DESCRIPTION: Examples of various semantic button variants in Bootstrap using theme color classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/buttons.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<button type="button" class="btn btn-primary">Primary</button>
<button type="button" class="btn btn-secondary">Secondary</button>
<button type="button" class="btn btn-success">Success</button>
<button type="button" class="btn btn-danger">Danger</button>
<button type="button" class="btn btn-warning">Warning</button>
<button type="button" class="btn btn-info">Info</button>
<button type="button" class="btn btn-light">Light</button>
<button type="button" class="btn btn-dark">Dark</button>
<button type="button" class="btn btn-link">Link</button>
```

----------------------------------------

TITLE: Implementing Accessible Toast with Extended Delay in HTML
DESCRIPTION: This snippet shows how to create an accessible toast notification with an extended delay and manual close option. It uses ARIA attributes for improved screen reader support.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/toasts.mdx#2025-04-23_snippet_10

LANGUAGE: html
CODE:
```
<div class="toast" role="alert" aria-live="polite" aria-atomic="true" data-bs-delay="10000">
  <div role="alert" aria-live="assertive" aria-atomic="true">...</div>
</div>
```

----------------------------------------

TITLE: Initializing Toast Components with JavaScript
DESCRIPTION: This JavaScript code demonstrates how to initialize multiple toast elements using Bootstrap's Toast constructor. It selects all elements with the 'toast' class and creates Toast instances.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/toasts.mdx#2025-04-23_snippet_12

LANGUAGE: javascript
CODE:
```
const toastElList = document.querySelectorAll('.toast')
const toastList = [...toastElList].map(toastEl => new bootstrap.Toast(toastEl, option))
```

----------------------------------------

TITLE: Complex Bootstrap Form Layout
DESCRIPTION: Showcases a complex form layout with multiple fields using Bootstrap's grid system and form components.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/layout.mdx#2025-04-23_snippet_3

LANGUAGE: HTML
CODE:
```
<form class="row g-3">
    <div class="col-md-6">
      <label for="inputEmail4" class="form-label">Email</label>
      <input type="email" class="form-control" id="inputEmail4">
    </div>
    <div class="col-md-6">
      <label for="inputPassword4" class="form-label">Password</label>
      <input type="password" class="form-control" id="inputPassword4">
    </div>
    <div class="col-12">
      <label for="inputAddress" class="form-label">Address</label>
      <input type="text" class="form-control" id="inputAddress" placeholder="1234 Main St">
    </div>
    <div class="col-12">
      <label for="inputAddress2" class="form-label">Address 2</label>
      <input type="text" class="form-control" id="inputAddress2" placeholder="Apartment, studio, or floor">
    </div>
    <div class="col-md-6">
      <label for="inputCity" class="form-label">City</label>
      <input type="text" class="form-control" id="inputCity">
    </div>
    <div class="col-md-4">
      <label for="inputState" class="form-label">State</label>
      <select id="inputState" class="form-select">
        <option selected>Choose...</option>
        <option>...</option>
      </select>
    </div>
    <div class="col-md-2">
      <label for="inputZip" class="form-label">Zip</label>
      <input type="text" class="form-control" id="inputZip">
    </div>
    <div class="col-12">
      <div class="form-check">
        <input class="form-check-input" type="checkbox" id="gridCheck">
        <label class="form-check-label" for="gridCheck">
          Check me out
        </label>
      </div>
    </div>
    <div class="col-12">
      <button type="submit" class="btn btn-primary">Sign in</button>
    </div>
  </form>
```

----------------------------------------

TITLE: Bootstrap Module Usage with Import Map
DESCRIPTION: Illustrates how to use Bootstrap as an ES module in the browser with an import map. This example includes the necessary HTML structure, import map configuration, and a script that creates a Popover instance.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/javascript.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="[[config:cdn.css]]" rel="stylesheet" integrity="[[config:cdn.css_hash]]" crossorigin="anonymous">
    <title>Hello, modularity!</title>
  </head>
  <body>
    <h1>Hello, modularity!</h1>
    <button id="popoverButton" type="button" class="btn btn-primary btn-lg" data-bs-toggle="popover" title="ESM in Browser" data-bs-content="Bang!">Custom popover</button>

    <script async src="https://cdn.jsdelivr.net/npm/es-module-shims@1/dist/es-module-shims.min.js" crossorigin="anonymous"></script>
    <script type="importmap">
    {
      "imports": {
        "@popperjs/core": "[[config:cdn.popper_esm]]",
        "bootstrap": "https://cdn.jsdelivr.net/npm/bootstrap@[[config:current_version]]/dist/js/bootstrap.esm.min.js"
      }
    }
    </script>
    <script type="module">
      import * as bootstrap from 'bootstrap'

      new bootstrap.Popover(document.getElementById('popoverButton'))
    </script>
  </body>
</html>
```

----------------------------------------

TITLE: Importing Bootstrap JavaScript Components Selectively
DESCRIPTION: Example showing how to selectively import only required Bootstrap JavaScript components to reduce bundle size. In this case, only the modal component is imported while others are commented out.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/optimize.mdx#2025-04-23_snippet_0

LANGUAGE: javascript
CODE:
```
// Import just what we need

// import 'bootstrap/js/dist/alert';
// import 'bootstrap/js/dist/button';
// import 'bootstrap/js/dist/carousel';
// import 'bootstrap/js/dist/collapse';
// import 'bootstrap/js/dist/dropdown';
import 'bootstrap/js/dist/modal';
// import 'bootstrap/js/dist/offcanvas';
// import 'bootstrap/js/dist/popover';
// import 'bootstrap/js/dist/scrollspy';
// import 'bootstrap/js/dist/tab';
// import 'bootstrap/js/dist/toast';
// import 'bootstrap/js/dist/tooltip';
```

----------------------------------------

TITLE: Creating Responsive Floated Images with Bootstrap Classes
DESCRIPTION: This snippet shows how to use Bootstrap classes to create a responsive floated image with wrapped text. It uses the .clearfix class to clear the float and demonstrates the interaction between columns and floated images.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/columns.mdx#2025-04-23_snippet_6

LANGUAGE: html
CODE:
```
<div class="clearfix">
    <Placeholder width="100%" height="210" class="col-md-6 float-md-end mb-3 ms-md-3" text="Responsive floated image" />

    <p>
      A paragraph of placeholder text. We're using it here to show the use of the clearfix class. We're adding quite a few meaningless phrases here to demonstrate how the columns interact here with the floated image.
    </p>

    <p>
      As you can see the paragraphs gracefully wrap around the floated image. Now imagine how this would look with some actual content in here, rather than just this boring placeholder text that goes on and on, but actually conveys no tangible information at. It simply takes up space and should not really be read.
    </p>

    <p>
      And yet, here you are, still persevering in reading this placeholder text, hoping for some more insights, or some hidden easter egg of content. A joke, perhaps. Unfortunately, there's none of that here.
    </p>
  </div>
```

----------------------------------------

TITLE: Handling Bootstrap Dropdown Events
DESCRIPTION: Example demonstrating how to attach an event listener to a dropdown element to handle Bootstrap dropdown events. Shows usage of the show.bs.dropdown event which fires when the dropdown is about to be shown.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_25

LANGUAGE: javascript
CODE:
```
const myDropdown = document.getElementById('myDropdown')
myDropdown.addEventListener('show.bs.dropdown', event => {
  // do something...
})
```

----------------------------------------

TITLE: Implementing Dark Dropdown in Navbar with Bootstrap
DESCRIPTION: This snippet shows how to integrate a dark dropdown menu within a dark-themed navbar using Bootstrap classes. It includes a collapsible navbar with a dropdown button and menu items.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_7

LANGUAGE: HTML
CODE:
```
<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Navbar</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavDarkDropdown" aria-controls="navbarNavDarkDropdown" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNavDarkDropdown">
        <ul class="navbar-nav">
          <li class="nav-item dropdown">
            <button class="btn btn-dark dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
              Dropdown
            </button>
            <ul class="dropdown-menu dropdown-menu-dark">
              <li><a class="dropdown-item" href="#">Action</a></li>
              <li><a class="dropdown-item" href="#">Another action</a></li>
              <li><a class="dropdown-item" href="#">Something else here</a></li>
            </ul>
          </li>
        </ul>
      </div>
    </div>
  </nav>
```

----------------------------------------

TITLE: Activating Bootstrap Modal via Data Attributes
DESCRIPTION: This HTML snippet shows how to activate a Bootstrap modal using data attributes without writing JavaScript. It uses 'data-bs-toggle' and 'data-bs-target' attributes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/modal.mdx#2025-04-23_snippet_14

LANGUAGE: html
CODE:
```
<button type="button" data-bs-toggle="modal" data-bs-target="#myModal">Launch modal</button>
```

----------------------------------------

TITLE: Hiding Elements Responsively in Bootstrap
DESCRIPTION: This code demonstrates how to hide elements on different screen sizes using Bootstrap's display utilities.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/display.mdx#2025-04-23_snippet_2

LANGUAGE: HTML
CODE:
```
<div class="d-lg-none">hide on lg and wider screens</div>
<div class="d-none d-lg-block">hide on screens smaller than lg</div>
```

----------------------------------------

TITLE: Variable Width Content Grid
DESCRIPTION: Demonstrates usage of col-{breakpoint}-auto classes for content-based column sizing with responsive behavior.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/grid.mdx#2025-04-23_snippet_3

LANGUAGE: HTML
CODE:
```
<div class="container text-center">
    <div class="row justify-content-md-center">
      <div class="col col-lg-2">
        1 of 3
      </div>
      <div class="col-md-auto">
        Variable width content
      </div>
      <div class="col col-lg-2">
        3 of 3
      </div>
    </div>
    <div class="row">
      <div class="col">
        1 of 3
      </div>
      <div class="col-md-auto">
        Variable width content
      </div>
      <div class="col col-lg-2">
        3 of 3
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Implementing Basic Bootstrap Accordion in HTML
DESCRIPTION: This snippet demonstrates how to create a basic Bootstrap accordion with three collapsible items. It uses the 'accordion' and 'accordion-item' classes, along with data attributes for toggling content visibility.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/accordion.mdx#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
<div class="accordion" id="accordionExample">
    <div class="accordion-item">
      <h2 class="accordion-header">
        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
          Accordion Item #1
        </button>
      </h2>
      <div id="collapseOne" class="accordion-collapse collapse show" data-bs-parent="#accordionExample">
        <div class="accordion-body">
          <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
        </div>
      </div>
    </div>
    <div class="accordion-item">
      <h2 class="accordion-header">
        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
          Accordion Item #2
        </button>
      </h2>
      <div id="collapseTwo" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
        <div class="accordion-body">
          <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
        </div>
      </div>
    </div>
    <div class="accordion-item">
      <h2 class="accordion-header">
        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
          Accordion Item #3
        </button>
      </h2>
      <div id="collapseThree" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
        <div class="accordion-body">
          <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
        </div>
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Creating Flex Containers in Bootstrap
DESCRIPTION: Examples showing how to create basic flexbox containers using Bootstrap's d-flex and d-inline-flex utilities
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/flex.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<div class="d-flex p-2">I'm a flexbox container!</div>
<div class="d-inline-flex p-2">I'm an inline flexbox container!</div>
```

----------------------------------------

TITLE: Creating and Using Bootstrap Alert Instance
DESCRIPTION: Example showing how to create a Bootstrap Alert instance and use its methods programmatically.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/alerts.mdx#2025-04-23_snippet_1

LANGUAGE: javascript
CODE:
```
const bsAlert = new bootstrap.Alert('#myAlert')
```

----------------------------------------

TITLE: Responsive Grid Layout
DESCRIPTION: Demonstrates responsive grid layout that changes from two columns on mobile to three columns on medium viewports.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/css-grid.mdx#2025-04-23_snippet_1

LANGUAGE: HTML
CODE:
```
<div class="grid text-center">
    <div class="g-col-6 g-col-md-4">.g-col-6 .g-col-md-4</div>
    <div class="g-col-6 g-col-md-4">.g-col-6 .g-col-md-4</div>
    <div class="g-col-6 g-col-md-4">.g-col-6 .g-col-md-4</div>
  </div>
```

----------------------------------------

TITLE: Large Split Button Dropdown Implementation
DESCRIPTION: Demonstrates implementation of large-sized split button dropdowns using the btn-lg class. Shows both default dropdown button and split button variations.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<div class="btn-group">
  <button class="btn btn-secondary btn-lg dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
    Large button
  </button>
  <ul class="dropdown-menu">
    ...
  </ul>
</div>
<div class="btn-group">
  <button class="btn btn-secondary btn-lg" type="button">
    Large split button
  </button>
  <button type="button" class="btn btn-lg btn-secondary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
    <span class="visually-hidden">Toggle Dropdown</span>
  </button>
  <ul class="dropdown-menu">
    ...
  </ul>
</div>
```

----------------------------------------

TITLE: Implementing Basic Navigation with Lists in Bootstrap
DESCRIPTION: Creates a basic navigation list using Bootstrap's .nav class with flexbox. Includes examples of active and disabled states, with proper ARIA attributes for accessibility.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<ul class="nav">
    <li class="nav-item">
      <a class="nav-link active" aria-current="page" href="#">Active</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Link</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Link</a>
    </li>
    <li class="nav-item">
      <a class="nav-link disabled" aria-disabled="true">Disabled</a>
    </li>
  </ul>
```

----------------------------------------

TITLE: Default Bootstrap Container Implementation
DESCRIPTION: Basic implementation of Bootstrap's default container class that provides responsive fixed-width container with max-width changes at each breakpoint.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/containers.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<div class="container">
  <!-- Content here -->
</div>
```

----------------------------------------

TITLE: Creating Basic Bootstrap List Group
DESCRIPTION: Demonstrates the most fundamental list group implementation using an unordered list with the 'list-group' class and 'list-group-item' class for individual items.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/list-group.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<ul class="list-group">
    <li class="list-group-item">An item</li>
    <li class="list-group-item">A second item</li>
    <li class="list-group-item">A third item</li>
    <li class="list-group-item">A fourth item</li>
    <li class="list-group-item">And a fifth one</li>
  </ul>
```

----------------------------------------

TITLE: Basic Bootstrap Navbar with Navigation Links
DESCRIPTION: Example of a navbar with navigation links using list-based structure. Features active state indicator with aria-current attribute, toggler button for mobile views, and disabled link styles.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navbar.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<nav class="navbar navbar-expand-lg bg-body-tertiary">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Navbar</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="#">Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">Features</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">Pricing</a>
          </li>
          <li class="nav-item">
            <a class="nav-link disabled" aria-disabled="true">Disabled</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>
```

----------------------------------------

TITLE: Creating a Bootstrap Tab Instance
DESCRIPTION: Shows how to create a new Tab instance using the constructor method, which is required before calling tab methods programmatically.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_24

LANGUAGE: javascript
CODE:
```
const bsTab = new bootstrap.Tab('#myTab')
```

----------------------------------------

TITLE: Implementing Horizontal Pills Navigation with Bootstrap
DESCRIPTION: This snippet shows how to create a horizontal pills navigation bar using Bootstrap classes. It includes tab buttons and associated content panes with placeholder text. The navigation is powered by Bootstrap's JavaScript for toggling content visibility.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_18

LANGUAGE: HTML
CODE:
```
<ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">
  <li class="nav-item" role="presentation">
    <button class="nav-link active" id="pills-home-tab" data-bs-toggle="pill" data-bs-target="#pills-home" type="button" role="tab" aria-controls="pills-home" aria-selected="true">Home</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="pills-profile-tab" data-bs-toggle="pill" data-bs-target="#pills-profile" type="button" role="tab" aria-controls="pills-profile" aria-selected="false">Profile</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="pills-contact-tab" data-bs-toggle="pill" data-bs-target="#pills-contact" type="button" role="tab" aria-controls="pills-contact" aria-selected="false">Contact</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="pills-disabled-tab" data-bs-toggle="pill" data-bs-target="#pills-disabled" type="button" role="tab" aria-controls="pills-disabled" aria-selected="false" disabled>Disabled</button>
  </li>
</ul>
<div class="tab-content" id="pills-tabContent">
  <div class="tab-pane fade show active" id="pills-home" role="tabpanel" aria-labelledby="pills-home-tab" tabindex="0">...</div>
  <div class="tab-pane fade" id="pills-profile" role="tabpanel" aria-labelledby="pills-profile-tab" tabindex="0">...</div>
  <div class="tab-pane fade" id="pills-contact" role="tabpanel" aria-labelledby="pills-contact-tab" tabindex="0">...</div>
  <div class="tab-pane fade" id="pills-disabled" role="tabpanel" aria-labelledby="pills-disabled-tab" tabindex="0">...</div>
</div>
```

----------------------------------------

TITLE: Basic Bootstrap Breadcrumb Implementation
DESCRIPTION: Examples of basic breadcrumb navigation with one, two, and three levels of depth using Bootstrap classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/breadcrumb.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
      <li class="breadcrumb-item active" aria-current="page">Home</li>
    </ol>
  </nav>

  <nav aria-label="breadcrumb">
    <ol class="breadcrumb">
      <li class="breadcrumb-item"><a href="#">Home</a></li>
      <li class="breadcrumb-item active" aria-current="page">Library</li>
    </ol>
  </nav>

  <nav aria-label="breadcrumb">
    <ol class="breadcrumb">
      <li class="breadcrumb-item"><a href="#">Home</a></li>
      <li class="breadcrumb-item"><a href="#">Library</a></li>
      <li class="breadcrumb-item active" aria-current="page">Data</li>
    </ol>
  </nav>
```

----------------------------------------

TITLE: Implementing a live demo Bootstrap modal with trigger button
DESCRIPTION: Complete HTML implementation for a functioning Bootstrap modal with a trigger button. Includes data attributes for targeting the modal and proper ARIA labels for accessibility.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/modal.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
  Launch demo modal
</button>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModalLabel">Modal title</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        ...
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save changes</button>
      </div>
    </div>
  </div>
</div>
```

----------------------------------------

TITLE: Implementing Vertical Gutters in Bootstrap Grid
DESCRIPTION: This example shows how to use the .gy-* class to control vertical gutter widths within a row when columns wrap to new lines. It also demonstrates the use of .overflow-hidden to prevent overflow.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/gutters.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<div class="container overflow-hidden text-center">
    <div class="row gy-5">
      <div class="col-6">
        <div class="p-3">Custom column padding</div>
      </div>
      <div class="col-6">
        <div class="p-3">Custom column padding</div>
      </div>
      <div class="col-6">
        <div class="p-3">Custom column padding</div>
      </div>
      <div class="col-6">
        <div class="p-3">Custom column padding</div>
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Centering Elements with Transform in Bootstrap
DESCRIPTION: Demonstrates how to center elements using translate-middle utility class combined with positioning utilities.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/position.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<div class="position-relative">
    <div class="position-absolute top-0 start-0 translate-middle"></div>
    <div class="position-absolute top-0 start-50 translate-middle"></div>
    <div class="position-absolute top-0 start-100 translate-middle"></div>
    <div class="position-absolute top-50 start-0 translate-middle"></div>
    <div class="position-absolute top-50 start-50 translate-middle"></div>
    <div class="position-absolute top-50 start-100 translate-middle"></div>
    <div class="position-absolute top-100 start-0 translate-middle"></div>
    <div class="position-absolute top-100 start-50 translate-middle"></div>
    <div class="position-absolute top-100 start-100 translate-middle"></div>
  </div>
```

----------------------------------------

TITLE: Creating Cards with List Groups and Footer in Bootstrap
DESCRIPTION: Demonstrates a card with a list group and a footer section. The list-group-flush class creates seamless lists within the card, while card-footer adds a distinct footer area at the bottom of the component.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/card.mdx#2025-04-23_snippet_6

LANGUAGE: JSX
CODE:
```
<div class="card" style="width: 18rem;">
    <ul class="list-group list-group-flush">
      <li class="list-group-item">An item</li>
      <li class="list-group-item">A second item</li>
      <li class="list-group-item">A third item</li>
    </ul>
    <div class="card-footer">
      Card footer
    </div>
  </div>
```

----------------------------------------

TITLE: Implementing Text Truncation with Bootstrap Classes in HTML
DESCRIPTION: This snippet demonstrates how to use the .text-truncate class in Bootstrap to truncate long text strings. It shows examples for both block-level and inline-level elements. The class requires display: inline-block or display: block to function properly.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/text-truncation.mdx#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
<!-- Block level -->
  <div class="row">
    <div class="col-2 text-truncate">
      This text is quite long, and will be truncated once displayed.
    </div>
  </div>

  <!-- Inline level -->
  <span class="d-inline-block text-truncate" style="max-width: 150px;">
    This text is quite long, and will be truncated once displayed.
  </span>
```

----------------------------------------

TITLE: Creating Outlined Style Button Group in HTML with Bootstrap
DESCRIPTION: Shows how to create a button group with outlined buttons using Bootstrap's outline button classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/button-group.mdx#2025-04-23_snippet_3

LANGUAGE: HTML
CODE:
```
<div class="btn-group" role="group" aria-label="Basic outlined example">
    <button type="button" class="btn btn-outline-primary">Left</button>
    <button type="button" class="btn btn-outline-primary">Middle</button>
    <button type="button" class="btn btn-outline-primary">Right</button>
  </div>
```

----------------------------------------

TITLE: Creating Tabbed Navigation Interface in Bootstrap
DESCRIPTION: Implements a tabbed navigation interface using the .nav-tabs class. This can be enhanced with Bootstrap's tab JavaScript plugin to create interactive tabbed content regions.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_6

LANGUAGE: html
CODE:
```
<ul class="nav nav-tabs">
    <li class="nav-item">
      <a class="nav-link active" aria-current="page" href="#">Active</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Link</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Link</a>
    </li>
    <li class="nav-item">
      <a class="nav-link disabled" aria-disabled="true">Disabled</a>
    </li>
  </ul>
```

----------------------------------------

TITLE: Bootstrap Navbar Color Schemes
DESCRIPTION: Examples of different navbar color schemes using Bootstrap's theme system with dark and light variants.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navbar.mdx#2025-04-23_snippet_9

LANGUAGE: HTML
CODE:
```
<nav class="navbar bg-dark border-bottom border-body" data-bs-theme="dark">
  <!-- Navbar content -->
</nav>

<nav class="navbar bg-primary" data-bs-theme="dark">
  <!-- Navbar content -->
</nav>

<nav class="navbar" style="background-color: #e3f2fd;" data-bs-theme="light">
  <!-- Navbar content -->
</nav>
```

----------------------------------------

TITLE: Implementing align-content-center in Bootstrap Flexbox
DESCRIPTION: Uses Bootstrap's d-flex, align-content-center, and flex-wrap utilities to center flex items vertically in the container along the cross axis, creating equal space above and below the content.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/flex.mdx#2025-04-23_snippet_14

LANGUAGE: html
CODE:
```
<div class="d-flex align-content-center flex-wrap">...</div>
```

----------------------------------------

TITLE: Creating Width-Controlled Block Buttons
DESCRIPTION: Example of half-width block buttons centered horizontally using grid column width classes and margin utilities.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/buttons.mdx#2025-04-23_snippet_12

LANGUAGE: html
CODE:
```
<div class="d-grid gap-2 col-6 mx-auto">
    <button class="btn btn-primary" type="button">Button</button>
    <button class="btn btn-primary" type="button">Button</button>
  </div>
```

----------------------------------------

TITLE: Creating a static backdrop modal in Bootstrap
DESCRIPTION: HTML implementation for a Bootstrap modal with static backdrop that prevents closing when clicking outside. Uses data attributes to control backdrop behavior and keyboard functionality.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/modal.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
  Launch static backdrop modal
</button>

<!-- Modal -->
<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="staticBackdropLabel">Modal title</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        ...
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Understood</button>
      </div>
    </div>
  </div>
</div>
```

----------------------------------------

TITLE: Defining Grid Breakpoints in Sass Variables
DESCRIPTION: This snippet shows how Bootstrap defines its grid breakpoints using a Sass map in the _variables.scss file. It sets up the breakpoint names and their corresponding minimum widths.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/breakpoints.mdx#2025-04-23_snippet_0

LANGUAGE: scss
CODE:
```
<ScssDocs name="grid-breakpoints" file="scss/_variables.scss" />
```

----------------------------------------

TITLE: Implementing Placeholder Cards in Bootstrap
DESCRIPTION: Comparison between a standard card component and a loading placeholder card. The example shows how to structure HTML to create a skeleton loader that matches the dimensions of the actual content.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/placeholders.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<div class="card">
  <img src="..." class="card-img-top" alt="...">

  <div class="card-body">
    <h5 class="card-title">Card title</h5>
    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
    <a href="#" class="btn btn-primary">Go somewhere</a>
  </div>
</div>

<div class="card" aria-hidden="true">
  <img src="..." class="card-img-top" alt="...">
  <div class="card-body">
    <h5 class="card-title placeholder-glow">
      <span class="placeholder col-6"></span>
    </h5>
    <p class="card-text placeholder-glow">
      <span class="placeholder col-7"></span>
      <span class="placeholder col-4"></span>
      <span class="placeholder col-4"></span>
      <span class="placeholder col-6"></span>
      <span class="placeholder col-8"></span>
    </p>
    <a class="btn btn-primary disabled placeholder col-6" aria-disabled="true"></a>
  </div>
</div>
```

----------------------------------------

TITLE: Bootstrap Card Group with Footer Implementation
DESCRIPTION: Demonstrates a card group with three cards that include dedicated footer sections. The footer content automatically aligns across all cards while maintaining equal heights. Each card includes an image placeholder, title, description, and a timestamp in the footer.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/card.mdx#2025-04-23_snippet_20

LANGUAGE: jsx
CODE:
```
<div class="card-group">
    <div class="card">
      <Placeholder width="100%" height="180" class="card-img-top" text="Image cap" />
      <div class="card-body">
        <h5 class="card-title">Card title</h5>
        <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
      </div>
      <div class="card-footer">
        <small class="text-body-secondary">Last updated 3 mins ago</small>
      </div>
    </div>
    <div class="card">
      <Placeholder width="100%" height="180" class="card-img-top" text="Image cap" />
      <div class="card-body">
        <h5 class="card-title">Card title</h5>
        <p class="card-text">This card has supporting text below as a natural lead-in to additional content.</p>
      </div>
      <div class="card-footer">
        <small class="text-body-secondary">Last updated 3 mins ago</small>
      </div>
    </div>
    <div class="card">
      <Placeholder width="100%" height="180" class="card-img-top" text="Image cap" />
      <div class="card-body">
        <h5 class="card-title">Card title</h5>
        <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action.</p>
      </div>
      <div class="card-footer">
        <small class="text-body-secondary">Last updated 3 mins ago</small>
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Implementing Basic Pagination Navigation in Bootstrap
DESCRIPTION: Basic pagination structure with previous/next buttons and numerical page links. Uses list elements for screen reader accessibility and includes a navigation wrapper with aria-label for assistive technologies.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/pagination.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<nav aria-label="Page navigation example">
    <ul class="pagination">
      <li class="page-item"><a class="page-link" href="#">Previous</a></li>
      <li class="page-item"><a class="page-link" href="#">1</a></li>
      <li class="page-item"><a class="page-link" href="#">2</a></li>
      <li class="page-item"><a class="page-link" href="#">3</a></li>
      <li class="page-item"><a class="page-link" href="#">Next</a></li>
    </ul>
  </nav>
```

----------------------------------------

TITLE: Creating Basic Dropdown with Data Attributes in Bootstrap
DESCRIPTION: This HTML snippet shows the basic structure for creating a dropdown menu using data attributes. The button uses data-bs-toggle="dropdown" to enable dropdown functionality, and the dropdown menu is added as a list within a ul element.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_22

LANGUAGE: html
CODE:
```
<div class="dropdown">
  <button type="button" data-bs-toggle="dropdown" aria-expanded="false">
    Dropdown trigger
  </button>
  <ul class="dropdown-menu">
    ...
  </ul>
</div>
```

----------------------------------------

TITLE: Implementing Basic Floating Labels with Input Fields in Bootstrap
DESCRIPTION: Demonstrates the basic implementation of floating labels with input fields. Wraps input and label elements in .form-floating class, where the input must come first to utilize sibling selectors.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/floating-labels.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<div class="form-floating mb-3">
    <input type="email" class="form-control" id="floatingInput" placeholder="name@example.com">
    <label for="floatingInput">Email address</label>
  </div>
  <div class="form-floating">
    <input type="password" class="form-control" id="floatingPassword" placeholder="Password">
    <label for="floatingPassword">Password</label>
  </div>
```

----------------------------------------

TITLE: Responsive Bootstrap Containers Implementation
DESCRIPTION: Examples of responsive container classes that are 100% wide until their specified breakpoint is reached, then adopt max-width constraints.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/containers.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<div class="container-sm">100% wide until small breakpoint</div>
<div class="container-md">100% wide until medium breakpoint</div>
<div class="container-lg">100% wide until large breakpoint</div>
<div class="container-xl">100% wide until extra large breakpoint</div>
<div class="container-xxl">100% wide until extra extra large breakpoint</div>
```

----------------------------------------

TITLE: Implementing Directional Tooltips in Bootstrap
DESCRIPTION: HTML markup for implementing tooltips in different directions (top, right, bottom, left). Each button uses data-bs-placement to control tooltip positioning.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/tooltips.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Tooltip on top">
  Tooltip on top
</button>
<button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="right" data-bs-title="Tooltip on right">
  Tooltip on right
</button>
<button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Tooltip on bottom">
  Tooltip on bottom
</button>
<button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="left" data-bs-title="Tooltip on left">
  Tooltip on left
</button>
```

----------------------------------------

TITLE: Bootstrap Grid Sass Mixins
DESCRIPTION: Essential Sass mixins for creating custom grid layouts, including row creation, column preparation, and offset functionality.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/grid.mdx#2025-04-23_snippet_8

LANGUAGE: scss
CODE:
```
// Creates a wrapper for a series of columns
@include make-row();

// Make the element grid-ready (applying everything but the width)
@include make-col-ready();

// Without optional size values, the mixin will create equal columns (similar to using .col)
@include make-col();
@include make-col($size, $columns: $grid-columns);

// Offset with margins
@include make-col-offset($size, $columns: $grid-columns);
```

----------------------------------------

TITLE: Creating Numbered List Group
DESCRIPTION: Shows how to create a numbered list group using the 'list-group-numbered' class with an ordered list. Numbers are generated via CSS for better placement and customization.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/list-group.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<ol class="list-group list-group-numbered">
    <li class="list-group-item">A list item</li>
    <li class="list-group-item">A list item</li>
    <li class="list-group-item">A list item</li>
  </ol>
```

----------------------------------------

TITLE: Creating Responsive Block Buttons
DESCRIPTION: Example of buttons that stack vertically on small screens and display horizontally on medium and larger screens using responsive display utilities.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/buttons.mdx#2025-04-23_snippet_11

LANGUAGE: html
CODE:
```
<div class="d-grid gap-2 d-md-block">
    <button class="btn btn-primary" type="button">Button</button>
    <button class="btn btn-primary" type="button">Button</button>
  </div>
```

----------------------------------------

TITLE: HTML Implementation of Bootstrap Popover Button
DESCRIPTION: This HTML code creates a button that triggers a popover when clicked. It uses data attributes to configure the popover's title and content.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/popovers.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<button type="button" class="btn btn-lg btn-danger" data-bs-toggle="popover" data-bs-title="Popover title" data-bs-content="And here's some amazing content. It's very engaging. Right?">Click to toggle popover</button>
```

----------------------------------------

TITLE: Bootstrap Navbar Brand with Text Examples
DESCRIPTION: Examples of implementing navbar brand using text. Shows two implementations: as a link and as a heading. Both use the .navbar-brand class with background styling via bg-body-tertiary.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navbar.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<!-- As a link -->
  <nav class="navbar bg-body-tertiary">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Navbar</a>
    </div>
  </nav>

  <!-- As a heading -->
  <nav class="navbar bg-body-tertiary">
    <div class="container-fluid">
      <span class="navbar-brand mb-0 h1">Navbar</span>
    </div>
  </nav>
```

----------------------------------------

TITLE: Implementing Labelless Form Controls in Bootstrap
DESCRIPTION: Example of form controls without labels, using aria-label for accessibility. Shows both checkbox and radio implementations.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/checks-radios.mdx#2025-04-23_snippet_12

LANGUAGE: HTML
CODE:
```
<div>
    <input class="form-check-input" type="checkbox" id="checkboxNoLabel" value="" aria-label="...">
  </div>

  <div>
    <input class="form-check-input" type="radio" name="radioNoLabel" id="radioNoLabel1" value="" aria-label="...">
  </div>
```

----------------------------------------

TITLE: Creating Active Items in Bootstrap List Group
DESCRIPTION: Shows how to indicate the current active selection in a list group by adding the '.active' class to a list group item along with 'aria-current="true"' for accessibility.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/list-group.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<ul class="list-group">
    <li class="list-group-item active" aria-current="true">An active item</li>
    <li class="list-group-item">A second item</li>
    <li class="list-group-item">A third item</li>
    <li class="list-group-item">A fourth item</li>
    <li class="list-group-item">And a fifth one</li>
  </ul>
```

----------------------------------------

TITLE: Implementing Badge Components with Headings in Bootstrap
DESCRIPTION: Example showing how to add badges to different heading elements (h1-h6). The badges use the 'text-bg-secondary' class for styling and contain the text 'New'.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/badge.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<h1>Example heading <span class="badge text-bg-secondary">New</span></h1>
<h2>Example heading <span class="badge text-bg-secondary">New</span></h2>
<h3>Example heading <span class="badge text-bg-secondary">New</span></h3>
<h4>Example heading <span class="badge text-bg-secondary">New</span></h4>
<h5>Example heading <span class="badge text-bg-secondary">New</span></h5>
<h6>Example heading <span class="badge text-bg-secondary">New</span></h6>
```

----------------------------------------

TITLE: Controlling Dropdown Auto-Close Behavior in Bootstrap
DESCRIPTION: This example demonstrates the four different auto-close behaviors for Bootstrap dropdowns: default (true), inside, outside, and manual (false). Each behavior determines whether the dropdown menu closes when clicking inside or outside the dropdown menu.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_21

LANGUAGE: html
CODE:
```
<div class="btn-group">
    <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" data-bs-auto-close="true" aria-expanded="false">
      Default dropdown
    </button>
    <ul class="dropdown-menu">
      <li><a class="dropdown-item" href="#">Menu item</a></li>
      <li><a class="dropdown-item" href="#">Menu item</a></li>
      <li><a class="dropdown-item" href="#">Menu item</a></li>
    </ul>
  </div>

  <div class="btn-group">
    <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" data-bs-auto-close="inside" aria-expanded="false">
      Clickable inside
    </button>
    <ul class="dropdown-menu">
      <li><a class="dropdown-item" href="#">Menu item</a></li>
      <li><a class="dropdown-item" href="#">Menu item</a></li>
      <li><a class="dropdown-item" href="#">Menu item</a></li>
    </ul>
  </div>

  <div class="btn-group">
    <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
      Clickable outside
    </button>
    <ul class="dropdown-menu">
      <li><a class="dropdown-item" href="#">Menu item</a></li>
      <li><a class="dropdown-item" href="#">Menu item</a></li>
      <li><a class="dropdown-item" href="#">Menu item</a></li>
    </ul>
  </div>

  <div class="btn-group">
    <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" data-bs-auto-close="false" aria-expanded="false">
      Manual close
    </button>
    <ul class="dropdown-menu">
      <li><a class="dropdown-item" href="#">Menu item</a></li>
      <li><a class="dropdown-item" href="#">Menu item</a></li>
      <li><a class="dropdown-item" href="#">Menu item</a></li>
    </ul>
  </div>
```

----------------------------------------

TITLE: Initializing Tooltips in Bootstrap with JavaScript
DESCRIPTION: This snippet demonstrates how to initialize all tooltip elements on a page by selecting them based on their data-bs-toggle attribute. This initialization is required before tooltips can be used.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/tooltips.mdx#2025-04-23_snippet_0

LANGUAGE: javascript
CODE:
```
const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
```

----------------------------------------

TITLE: Creating a Basic Bootstrap Form with Email and Password Fields
DESCRIPTION: Example of a basic Bootstrap form implementation with email input, password input, checkbox, and submit button. Demonstrates proper use of form-control, form-label, and form-check classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/overview.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<form>
    <div class="mb-3">
      <label for="exampleInputEmail1" class="form-label">Email address</label>
      <input type="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp">
      <div id="emailHelp" class="form-text">We'll never share your email with anyone else.</div>
    </div>
    <div class="mb-3">
      <label for="exampleInputPassword1" class="form-label">Password</label>
      <input type="password" class="form-control" id="exampleInputPassword1">
    </div>
    <div class="mb-3 form-check">
      <input type="checkbox" class="form-check-input" id="exampleCheck1">
      <label class="form-check-label" for="exampleCheck1">Check me out</label>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
  </form>
```

----------------------------------------

TITLE: Demonstrating Text Alignment Classes in HTML
DESCRIPTION: This snippet shows how to use Bootstrap's text alignment classes for different viewport sizes. It includes examples of start, center, and end alignment, as well as responsive alignment classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/text.mdx#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
<p class="text-start">Start aligned text on all viewport sizes.</p>
<p class="text-center">Center aligned text on all viewport sizes.</p>
<p class="text-end">End aligned text on all viewport sizes.</p>

<p class="text-sm-end">End aligned text on viewports sized SM (small) or wider.</p>
<p class="text-md-end">End aligned text on viewports sized MD (medium) or wider.</p>
<p class="text-lg-end">End aligned text on viewports sized LG (large) or wider.</p>
<p class="text-xl-end">End aligned text on viewports sized XL (extra large) or wider.</p>
<p class="text-xxl-end">End aligned text on viewports sized XXL (extra extra large) or wider.</p>
```

----------------------------------------

TITLE: Creating a Disabled Input Control in Bootstrap
DESCRIPTION: Example of creating a disabled input field in Bootstrap using the disabled attribute. This makes the input appear lighter and prevents user interactions.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/overview.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<input class="form-control" id="disabledInput" type="text" placeholder="Disabled input here..." disabled>
```

----------------------------------------

TITLE: Implementing Default Checkbox Controls in Bootstrap
DESCRIPTION: HTML structure for basic Bootstrap checkboxes showing both unchecked and checked states. Uses the .form-check class structure with sibling <input> and <label> elements.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/checks-radios.mdx#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
<div class="form-check">
    <input class="form-check-input" type="checkbox" value="" id="checkDefault">
    <label class="form-check-label" for="checkDefault">
      Default checkbox
    </label>
  </div>
  <div class="form-check">
    <input class="form-check-input" type="checkbox" value="" id="checkChecked" checked>
    <label class="form-check-label" for="checkChecked">
      Checked checkbox
    </label>
  </div>
```

----------------------------------------

TITLE: Floating Labels with Pre-filled Values in Bootstrap Forms
DESCRIPTION: Shows how floating labels automatically adjust when input fields already have values defined. The label adjusts to its floated position above the input.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/floating-labels.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<form class="form-floating">
    <input type="email" class="form-control" id="floatingInputValue" placeholder="name@example.com" value="test@example.com">
    <label for="floatingInputValue">Input with value</label>
  </form>
```

----------------------------------------

TITLE: Creating Centered Dropdown Menu with Bootstrap
DESCRIPTION: This snippet demonstrates how to create a centered dropdown menu using the .dropdown-center class in Bootstrap. It includes a button trigger and a list of dropdown items.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_8

LANGUAGE: HTML
CODE:
```
<div class="dropdown-center">
    <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
      Centered dropdown
    </button>
    <ul class="dropdown-menu">
      <li><a class="dropdown-item" href="#">Action</a></li>
      <li><a class="dropdown-item" href="#">Action two</a></li>
      <li><a class="dropdown-item" href="#">Action three</a></li>
    </ul>
  </div>
```

----------------------------------------

TITLE: Including Bootstrap JS with Separate Popper via CDN
DESCRIPTION: HTML code snippet for including Bootstrap's compiled JS and Popper separately via the jsDelivr CDN. This allows more flexibility in using Popper.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/download.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<script src="[[config:cdn.popper]]" integrity="[[config:cdn.popper_hash]]" crossorigin="anonymous"></script>
<script src="[[config:cdn.js]]" integrity="[[config:cdn.js_hash]]" crossorigin="anonymous"></script>
```

----------------------------------------

TITLE: Creating a Vertical Radio Toggle Button Group in Bootstrap
DESCRIPTION: This snippet illustrates how to create a vertical radio toggle button group using Bootstrap classes. It uses 'btn-check' for hidden radio inputs and 'btn-outline-danger' for styling the visible labels.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/button-group.mdx#2025-04-23_snippet_12

LANGUAGE: HTML
CODE:
```
<div class="btn-group-vertical" role="group" aria-label="Vertical radio toggle button group">
    <input type="radio" class="btn-check" name="vbtn-radio" id="vbtn-radio1" autocomplete="off" checked>
    <label class="btn btn-outline-danger" for="vbtn-radio1">Radio 1</label>
    <input type="radio" class="btn-check" name="vbtn-radio" id="vbtn-radio2" autocomplete="off">
    <label class="btn btn-outline-danger" for="vbtn-radio2">Radio 2</label>
    <input type="radio" class="btn-check" name="vbtn-radio" id="vbtn-radio3" autocomplete="off">
    <label class="btn btn-outline-danger" for="vbtn-radio3">Radio 3</label>
  </div>
```

----------------------------------------

TITLE: Including Bootstrap CSS and JS via CDN
DESCRIPTION: HTML code snippet for including Bootstrap's compiled CSS and JS files via the jsDelivr CDN. This method allows quick integration of Bootstrap without downloading files.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/download.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<link href="[[config:cdn.css]]" rel="stylesheet" integrity="[[config:cdn.css_hash]]" crossorigin="anonymous">
<script src="[[config:cdn.js_bundle]]" integrity="[[config:cdn.js_bundle_hash]]" crossorigin="anonymous"></script>
```

----------------------------------------

TITLE: Complete Bootstrap Template with CDN Links
DESCRIPTION: HTML template including Bootstrap CSS and JavaScript bundle with Popper.js integration
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/introduction.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Bootstrap demo</title>
    <link href="[[config:cdn.css]]" rel="stylesheet" integrity="[[config:cdn.css_hash]]" crossorigin="anonymous">
  </head>
  <body>
    <h1>Hello, world!</h1>
    <script src="[[config:cdn.js_bundle]]" integrity="[[config:cdn.js_bundle_hash]]" crossorigin="anonymous"></script>
  </body>
</html>
```

----------------------------------------

TITLE: Creating Pagination with Icon Navigation in Bootstrap
DESCRIPTION: Pagination implementation using icons («/») for previous and next actions. Includes proper ARIA attributes for accessibility with aria-label on links and aria-hidden on the icon spans.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/pagination.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<nav aria-label="Page navigation example">
    <ul class="pagination">
      <li class="page-item">
        <a class="page-link" href="#" aria-label="Previous">
          <span aria-hidden="true">&laquo;</span>
        </a>
      </li>
      <li class="page-item"><a class="page-link" href="#">1</a></li>
      <li class="page-item"><a class="page-link" href="#">2</a></li>
      <li class="page-item"><a class="page-link" href="#">3</a></li>
      <li class="page-item">
        <a class="page-link" href="#" aria-label="Next">
          <span aria-hidden="true">&raquo;</span>
        </a>
      </li>
    </ul>
  </nav>
```

----------------------------------------

TITLE: Custom Grid Breakpoints Configuration
DESCRIPTION: Example of customizing Bootstrap's grid breakpoints and container maximum widths using Sass variables.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/grid.mdx#2025-04-23_snippet_10

LANGUAGE: scss
CODE:
```
$grid-breakpoints: (
  xs: 0,
  sm: 480px,
  md: 768px,
  lg: 1024px
);

$container-max-widths: (
  sm: 420px,
  md: 720px,
  lg: 960px
);
```

----------------------------------------

TITLE: Mixed Column Layout Example in Bootstrap
DESCRIPTION: Demonstrates different column arrangements including stacked mobile columns, responsive widths, and fixed-width columns using Bootstrap grid classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/grid.mdx#2025-04-23_snippet_6

LANGUAGE: html
CODE:
```
<div class="container text-center">
    <!-- Stack the columns on mobile by making one full-width and the other half-width -->
    <div class="row">
      <div class="col-md-8">.col-md-8</div>
      <div class="col-6 col-md-4">.col-6 .col-md-4</div>
    </div>

    <!-- Columns start at 50% wide on mobile and bump up to 33.3% wide on desktop -->
    <div class="row">
      <div class="col-6 col-md-4">.col-6 .col-md-4</div>
      <div class="col-6 col-md-4">.col-6 .col-md-4</div>
      <div class="col-6 col-md-4">.col-6 .col-md-4</div>
    </div>

    <!-- Columns are always 50% wide, on mobile and desktop -->
    <div class="row">
      <div class="col-6">.col-6</div>
      <div class="col-6">.col-6</div>
    </div>
  </div>
```

----------------------------------------

TITLE: Creating Outline Buttons in Bootstrap
DESCRIPTION: Implementation of outline buttons that remove background colors and images while preserving button functionality using the .btn-outline-* classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/buttons.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<button type="button" class="btn btn-outline-primary">Primary</button>
<button type="button" class="btn btn-outline-secondary">Secondary</button>
<button type="button" class="btn btn-outline-success">Success</button>
<button type="button" class="btn btn-outline-danger">Danger</button>
<button type="button" class="btn btn-outline-warning">Warning</button>
<button type="button" class="btn btn-outline-info">Info</button>
<button type="button" class="btn btn-outline-light">Light</button>
<button type="button" class="btn btn-outline-dark">Dark</button>
```

----------------------------------------

TITLE: Implementing Max-width Media Queries with Sass Mixins
DESCRIPTION: This code shows how to use Bootstrap's Sass mixins for creating max-width media queries. It includes examples for different breakpoints and demonstrates how to apply styles for screens smaller than a specific size.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/breakpoints.mdx#2025-04-23_snippet_3

LANGUAGE: scss
CODE:
```
// No media query necessary for xs breakpoint as it's effectively `@media (max-width: 0) { ... }`
@include media-breakpoint-down(sm) { ... }
@include media-breakpoint-down(md) { ... }
@include media-breakpoint-down(lg) { ... }
@include media-breakpoint-down(xl) { ... }
@include media-breakpoint-down(xxl) { ... }

// Example: Style from medium breakpoint and down
@include media-breakpoint-down(md) {
  .custom-class {
    display: block;
  }
}
```

----------------------------------------

TITLE: Implementing Toast Placement Selection in HTML
DESCRIPTION: This snippet demonstrates how to create a form for selecting toast placement options and displays a sample toast. It uses Bootstrap classes for positioning and styling.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/toasts.mdx#2025-04-23_snippet_7

LANGUAGE: html
CODE:
```
<form>
    <div class="mb-3">
      <label for="selectToastPlacement">Toast placement</label>
      <select class="form-select mt-2" id="selectToastPlacement">
        <option value="" selected>Select a position...</option>
        <option value="top-0 start-0">Top left</option>
        <option value="top-0 start-50 translate-middle-x">Top center</option>
        <option value="top-0 end-0">Top right</option>
        <option value="top-50 start-0 translate-middle-y">Middle left</option>
        <option value="top-50 start-50 translate-middle">Middle center</option>
        <option value="top-50 end-0 translate-middle-y">Middle right</option>
        <option value="bottom-0 start-0">Bottom left</option>
        <option value="bottom-0 start-50 translate-middle-x">Bottom center</option>
        <option value="bottom-0 end-0">Bottom right</option>
      </select>
    </div>
  </form>
  <div aria-live="polite" aria-atomic="true" class="bg-body-secondary position-relative bd-example-toasts rounded-3">
    <div class="toast-container p-3" id="toastPlacement">
      <div class="toast">
        <div class="toast-header">
          <Placeholder width="20" height="20" background="#007aff" class="rounded me-2" text={false} title={false} />
          <strong class="me-auto">Bootstrap</strong>
          <small>11 mins ago</small>
        </div>
        <div class="toast-body">
          Hello, world! This is a toast message.
        </div>
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Basic Dropdown Menu with Button Items
DESCRIPTION: Implementation of a basic dropdown menu using button elements as items with the standard Bootstrap dropdown classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_13

LANGUAGE: HTML
CODE:
```
<div class="dropdown">
    <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
      Dropdown
    </button>
    <ul class="dropdown-menu">
      <li><button class="dropdown-item" type="button">Action</button></li>
      <li><button class="dropdown-item" type="button">Another action</button></li>
      <li><button class="dropdown-item" type="button">Something else here</button></li>
    </ul>
  </div>
```

----------------------------------------

TITLE: Dismissible Bootstrap Popover Implementation
DESCRIPTION: This HTML creates a dismissible popover that closes when the user clicks elsewhere. It uses an anchor tag with tabindex and the data-bs-trigger attribute set to 'focus' for proper cross-browser behavior.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/popovers.mdx#2025-04-23_snippet_8

LANGUAGE: html
CODE:
```
<a tabindex="0" class="btn btn-lg btn-danger" role="button" data-bs-toggle="popover" data-bs-trigger="focus" data-bs-title="Dismissible popover" data-bs-content="And here's some amazing content. It's very engaging. Right?">Dismissible popover</a>
```

----------------------------------------

TITLE: Compiled CSS for Single Breakpoint Media Query
DESCRIPTION: This snippet shows how a single breakpoint media query mixin compiles into a standard CSS media query. It demonstrates the result for the medium breakpoint.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/breakpoints.mdx#2025-04-23_snippet_6

LANGUAGE: scss
CODE:
```
@media (min-width: 768px) and (max-width: 991.98px) { ... }
```

----------------------------------------

TITLE: Multiple Toggles and Targets Collapse Example in HTML
DESCRIPTION: Example showing how multiple buttons can control different collapsible elements. Demonstrates individual control of separate elements and group control with the multi-collapse class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/collapse.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<p class="d-inline-flex gap-1">
    <a class="btn btn-primary" data-bs-toggle="collapse" href="#multiCollapseExample1" role="button" aria-expanded="false" aria-controls="multiCollapseExample1">Toggle first element</a>
    <button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#multiCollapseExample2" aria-expanded="false" aria-controls="multiCollapseExample2">Toggle second element</button>
    <button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target=".multi-collapse" aria-expanded="false" aria-controls="multiCollapseExample1 multiCollapseExample2">Toggle both elements</button>
  </p>
  <div class="row">
    <div class="col">
      <div class="collapse multi-collapse" id="multiCollapseExample1">
        <div class="card card-body">
          Some placeholder content for the first collapse component of this multi-collapse example. This panel is hidden by default but revealed when the user activates the relevant trigger.
        </div>
      </div>
    </div>
    <div class="col">
      <div class="collapse multi-collapse" id="multiCollapseExample2">
        <div class="card card-body">
          Some placeholder content for the second collapse component of this multi-collapse example. This panel is hidden by default but revealed when the user activates the relevant trigger.
        </div>
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Applying Custom Background Colors to Progress Bars
DESCRIPTION: This snippet demonstrates how to use Bootstrap's background utility classes to change the appearance of progress bars.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/progress.mdx#2025-04-23_snippet_4

LANGUAGE: HTML
CODE:
```
<div class="progress" role="progressbar" aria-label="Success example" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">
    <div class="progress-bar bg-success" style="width: 25%"></div>
  </div>
  <div class="progress" role="progressbar" aria-label="Info example" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100">
    <div class="progress-bar bg-info" style="width: 50%"></div>
  </div>
  <div class="progress" role="progressbar" aria-label="Warning example" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100">
    <div class="progress-bar bg-warning" style="width: 75%"></div>
  </div>
  <div class="progress" role="progressbar" aria-label="Danger example" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">
    <div class="progress-bar bg-danger" style="width: 100%"></div>
  </div>
```

----------------------------------------

TITLE: Customizing Gutter Sizes in Bootstrap SCSS
DESCRIPTION: This SCSS snippet shows how to customize gutter sizes in Bootstrap by modifying the $gutters Sass map. It inherits from the $spacers map and defines various gutter sizes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/gutters.mdx#2025-04-23_snippet_6

LANGUAGE: scss
CODE:
```
$grid-gutter-width: 1.5rem;
$gutters: (
  0: 0,
  1: $spacer * .25,
  2: $spacer * .5,
  3: $spacer,
  4: $spacer * 1.5,
  5: $spacer * 3,
);
```

----------------------------------------

TITLE: Integrating Spinners with Buttons in HTML
DESCRIPTION: Demonstrates how to incorporate spinners within buttons to indicate processing states.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/spinners.mdx#2025-04-23_snippet_5

LANGUAGE: HTML
CODE:
```
<button class="btn btn-primary" type="button" disabled>
    <span class="spinner-border spinner-border-sm" aria-hidden="true"></span>
    <span class="visually-hidden" role="status">Loading...</span>
  </button>
  <button class="btn btn-primary" type="button" disabled>
    <span class="spinner-border spinner-border-sm" aria-hidden="true"></span>
    <span role="status">Loading...</span>
  </button>
```

----------------------------------------

TITLE: Combining Input Groups with Floating Labels in Bootstrap
DESCRIPTION: Demonstrates how to integrate floating labels with Bootstrap's input groups. The input group includes a prepended text element alongside a floating label input.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/floating-labels.mdx#2025-04-23_snippet_8

LANGUAGE: html
CODE:
```
<div class="input-group mb-3">
    <span class="input-group-text">@</span>
    <div class="form-floating">
      <input type="text" class="form-control" id="floatingInputGroup1" placeholder="Username">
      <label for="floatingInputGroup1">Username</label>
    </div>
  </div>
```

----------------------------------------

TITLE: Creating a Dropdown Form with Toggle Button in Bootstrap
DESCRIPTION: This snippet demonstrates creating a dropdown with a toggleable form. The button uses data-bs-toggle="dropdown" and data-bs-auto-close="outside" to ensure the form doesn't close when clicking inside it. The form includes email, password fields and a remember me checkbox.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_19

LANGUAGE: html
CODE:
```
<div class="dropdown">
    <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false" data-bs-auto-close="outside">
      Dropdown form
    </button>
    <form class="dropdown-menu p-4">
      <div class="mb-3">
        <label for="exampleDropdownFormEmail2" class="form-label">Email address</label>
        <input type="email" class="form-control" id="exampleDropdownFormEmail2" placeholder="email@example.com">
      </div>
      <div class="mb-3">
        <label for="exampleDropdownFormPassword2" class="form-label">Password</label>
        <input type="password" class="form-control" id="exampleDropdownFormPassword2" placeholder="Password">
      </div>
      <div class="mb-3">
        <div class="form-check">
          <input type="checkbox" class="form-check-input" id="dropdownCheck2">
          <label class="form-check-label" for="dropdownCheck2">
            Remember me
          </label>
        </div>
      </div>
      <button type="submit" class="btn btn-primary">Sign in</button>
    </form>
  </div>
```

----------------------------------------

TITLE: Initializing Bootstrap Modal in JavaScript
DESCRIPTION: Demonstrates how to create a modal instance using JavaScript. Two methods are shown: one using a DOM element directly, and another using a CSS selector string.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/modal.mdx#2025-04-23_snippet_15

LANGUAGE: javascript
CODE:
```
const myModal = new bootstrap.Modal(document.getElementById('myModal'), options)
// or
const myModalAlternative = new bootstrap.Modal('#myModal', options)
```

----------------------------------------

TITLE: Default Bootstrap Navbar Implementation
DESCRIPTION: Basic navbar implementation with default positioning and styling.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navbar.mdx#2025-04-23_snippet_11

LANGUAGE: html
CODE:
```
<nav class="navbar bg-body-tertiary">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Default</a>
    </div>
  </nav>
```

----------------------------------------

TITLE: Nested Grid Layout
DESCRIPTION: Example of nested grids with custom column counts using CSS variables and mixed column sizing.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/css-grid.mdx#2025-04-23_snippet_3

LANGUAGE: HTML
CODE:
```
<div class="grid text-center overflow-x-auto" style="--bs-columns: 3;">
    <div>
      First auto-column
      <div class="grid">
        <div>Auto-column</div>
        <div>Auto-column</div>
      </div>
    </div>
    <div>
      Second auto-column
      <div class="grid" style="--bs-columns: 12;">
        <div class="g-col-6">6 of 12</div>
        <div class="g-col-4">4 of 12</div>
        <div class="g-col-2">2 of 12</div>
      </div>
    </div>
    <div>Third auto-column</div>
  </div>
```

----------------------------------------

TITLE: Creating Bootstrap Carousel with User-Initiated Autoplay in HTML
DESCRIPTION: This example shows a Bootstrap carousel that starts autoplaying only after user interaction. It uses 'data-bs-ride="true"' to enable this behavior. The carousel includes three slides with placeholder images and navigation controls.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/carousel.mdx#2025-04-23_snippet_5

LANGUAGE: HTML
CODE:
```
<div id="carouselExampleRide" class="carousel slide" data-bs-ride="true">
    <div class="carousel-inner">
      <div class="carousel-item active">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#555" background="#777" text="First slide" />
      </div>
      <div class="carousel-item">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#444" background="#666" text="Second slide" />
      </div>
      <div class="carousel-item">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#333" background="#555" text="Third slide" />
      </div>
    </div>
    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleRide" data-bs-slide="prev">
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleRide" data-bs-slide="next">
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Next</span>
    </button>
  </div>
```

----------------------------------------

TITLE: Implementing Form Within Dropdown Menu in Bootstrap
DESCRIPTION: This example shows how to place a form with email, password, and checkbox fields inside a dropdown menu using Bootstrap classes. The form includes proper spacing with the px-4 and py-3 utilities and includes additional menu items below a divider.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_18

LANGUAGE: html
CODE:
```
<div class="dropdown-menu">
    <form class="px-4 py-3">
      <div class="mb-3">
        <label for="exampleDropdownFormEmail1" class="form-label">Email address</label>
        <input type="email" class="form-control" id="exampleDropdownFormEmail1" placeholder="email@example.com">
      </div>
      <div class="mb-3">
        <label for="exampleDropdownFormPassword1" class="form-label">Password</label>
        <input type="password" class="form-control" id="exampleDropdownFormPassword1" placeholder="Password">
      </div>
      <div class="mb-3">
        <div class="form-check">
          <input type="checkbox" class="form-check-input" id="dropdownCheck">
          <label class="form-check-label" for="dropdownCheck">
            Remember me
          </label>
        </div>
      </div>
      <button type="submit" class="btn btn-primary">Sign in</button>
    </form>
    <div class="dropdown-divider"></div>
    <a class="dropdown-item" href="#">New around here? Sign up</a>
    <a class="dropdown-item" href="#">Forgot password?</a>
  </div>
```

----------------------------------------

TITLE: Bootstrap Navbar with Combined Image and Text Brand
DESCRIPTION: Example of implementing a navbar brand with both an image and text. Uses utility classes d-inline-block and align-text-top on the image to properly align it with the text.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navbar.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<nav class="navbar bg-body-tertiary">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">
        <img src="/docs/${getConfig().docs_version}/assets/brand/bootstrap-logo.svg" alt="Logo" width="30" height="24" class="d-inline-block align-text-top">
        Bootstrap
      </a>
    </div>
  </nav>
```

----------------------------------------

TITLE: Centering Pagination in Bootstrap with Flexbox
DESCRIPTION: Pagination implementation that uses flexbox utility (.justify-content-center) to center the pagination component. Includes disabled and active states with proper ARIA attributes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/pagination.mdx#2025-04-23_snippet_6

LANGUAGE: html
CODE:
```
<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
      <li class="page-item disabled">
        <a class="page-link">Previous</a>
      </li>
      <li class="page-item"><a class="page-link" href="#">1</a></li>
      <li class="page-item"><a class="page-link" href="#">2</a></li>
      <li class="page-item"><a class="page-link" href="#">3</a></li>
      <li class="page-item">
        <a class="page-link" href="#">Next</a>
      </li>
    </ul>
  </nav>
```

----------------------------------------

TITLE: Input Group with Button Addons
DESCRIPTION: Demonstrates various button addon configurations within input groups, including single and multiple button combinations.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/input-group.mdx#2025-04-23_snippet_4

LANGUAGE: HTML
CODE:
```
<div class="input-group mb-3">
    <button class="btn btn-outline-secondary" type="button" id="button-addon1">Button</button>
    <input type="text" class="form-control" placeholder="" aria-label="Example text with button addon" aria-describedby="button-addon1">
  </div>
```

----------------------------------------

TITLE: Adding Form Text in Bootstrap
DESCRIPTION: This snippet illustrates how to add form text below input fields for additional context or instructions. It uses the 'aria-describedby' attribute for accessibility.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/form-control.mdx#2025-04-23_snippet_2

LANGUAGE: HTML
CODE:
```
<label for="inputPassword5" class="form-label">Password</label>
  <input type="password" id="inputPassword5" class="form-control" aria-describedby="passwordHelpBlock">
  <div id="passwordHelpBlock" class="form-text">
    Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.
  </div>
```

----------------------------------------

TITLE: Responsive Utility Definition
DESCRIPTION: Demonstrates defining responsive utilities that generate classes for all breakpoints.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/api.mdx#2025-04-23_snippet_4

LANGUAGE: scss
CODE:
```
$utilities: (
  "opacity": (
    property: opacity,
    responsive: true,
    values: (
      0: 0,
      25: .25,
      50: .5,
      75: .75,
      100: 1,
    )
  )
);
```

----------------------------------------

TITLE: Implementing Right Offcanvas in Bootstrap
DESCRIPTION: This snippet shows the implementation of a right-positioned offcanvas component in Bootstrap. It includes a toggle button and the offcanvas structure with a header and body.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/offcanvas.mdx#2025-04-23_snippet_6

LANGUAGE: HTML
CODE:
```
<button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight" aria-controls="offcanvasRight">Toggle right offcanvas</button>

<div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasRight" aria-labelledby="offcanvasRightLabel">
  <div class="offcanvas-header">
    <h5 class="offcanvas-title" id="offcanvasRightLabel">Offcanvas right</h5>
    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
  </div>
  <div class="offcanvas-body">
    ...
  </div>
</div>
```

----------------------------------------

TITLE: Using Inline Text Elements in Bootstrap
DESCRIPTION: Demonstrates the styling of common inline HTML5 elements in Bootstrap, including mark, del, s, ins, u, small, strong, and em elements for different text treatments.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/typography.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<p>You can use the mark tag to <mark>highlight</mark> text.</p>
<p><del>This line of text is meant to be treated as deleted text.</del></p>
<p><s>This line of text is meant to be treated as no longer accurate.</s></p>
<p><ins>This line of text is meant to be treated as an addition to the document.</ins></p>
<p><u>This line of text will render as underlined.</u></p>
<p><small>This line of text is meant to be treated as fine print.</small></p>
<p><strong>This line rendered as bold text.</strong></p>
<p><em>This line rendered as italicized text.</em></p>
```

----------------------------------------

TITLE: Implementing Basic Progress Bars in HTML
DESCRIPTION: This snippet demonstrates how to create basic progress bars with different percentages using Bootstrap classes and inline styles.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/progress.mdx#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
<div class="progress" role="progressbar" aria-label="Basic example" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
    <div class="progress-bar" style="width: 0%"></div>
  </div>
  <div class="progress" role="progressbar" aria-label="Basic example" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">
    <div class="progress-bar" style="width: 25%"></div>
  </div>
  <div class="progress" role="progressbar" aria-label="Basic example" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100">
    <div class="progress-bar" style="width: 50%"></div>
  </div>
  <div class="progress" role="progressbar" aria-label="Basic example" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100">
    <div class="progress-bar" style="width: 75%"></div>
  </div>
  <div class="progress" role="progressbar" aria-label="Basic example" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">
    <div class="progress-bar" style="width: 100%"></div>
  </div>
```

----------------------------------------

TITLE: Installing Bootstrap via yarn
DESCRIPTION: Command to install Bootstrap in Node.js powered apps using yarn. This is an alternative to npm for projects using Yarn as the package manager.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/download.mdx#2025-04-23_snippet_4

LANGUAGE: sh
CODE:
```
yarn add bootstrap@[[config:current_version]]
```

----------------------------------------

TITLE: Creating Centered Dropup Menu with Bootstrap
DESCRIPTION: This snippet demonstrates how to create a centered dropup menu using the .dropup-center and .dropup classes in Bootstrap. It includes a button trigger and a list of dropdown items.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_10

LANGUAGE: HTML
CODE:
```
<div class="dropup-center dropup">
    <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
      Centered dropup
    </button>
    <ul class="dropdown-menu">
      <li><a class="dropdown-item" href="#">Action</a></li>
      <li><a class="dropdown-item" href="#">Action two</a></li>
      <li><a class="dropdown-item" href="#">Action three</a></li>
    </ul>
  </div>
```

----------------------------------------

TITLE: Implementing Size-specific Column Classes in Bootstrap Forms
DESCRIPTION: This example shows how to use size-specific column classes in a Bootstrap form. It utilizes col-sm-3 for specific sizing and includes various form input types with labels and placeholders.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/layout.mdx#2025-04-23_snippet_8

LANGUAGE: HTML
CODE:
```
<form class="row gx-3 gy-2 align-items-center">
    <div class="col-sm-3">
      <label class="visually-hidden" for="specificSizeInputName">Name</label>
      <input type="text" class="form-control" id="specificSizeInputName" placeholder="Jane Doe">
    </div>
    <div class="col-sm-3">
      <label class="visually-hidden" for="specificSizeInputGroupUsername">Username</label>
      <div class="input-group">
        <div class="input-group-text">@</div>
        <input type="text" class="form-control" id="specificSizeInputGroupUsername" placeholder="Username">
      </div>
    </div>
    <div class="col-sm-3">
      <label class="visually-hidden" for="specificSizeSelect">Preference</label>
      <select class="form-select" id="specificSizeSelect">
        <option selected>Choose...</option>
        <option value="1">One</option>
        <option value="2">Two</option>
        <option value="3">Three</option>
      </select>
    </div>
    <div class="col-auto">
      <div class="form-check">
        <input class="form-check-input" type="checkbox" id="autoSizingCheck2">
        <label class="form-check-label" for="autoSizingCheck2">
          Remember me
        </label>
      </div>
    </div>
    <div class="col-auto">
      <button type="submit" class="btn btn-primary">Submit</button>
    </div>
  </form>
```

----------------------------------------

TITLE: CSS Flexbox Class Example
DESCRIPTION: Bootstrap's flexbox utility class examples for enabling flex layout on elements.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/utilities.mdx#2025-04-23_snippet_1

LANGUAGE: CSS
CODE:
```
.d-flex
.d-sm-flex
```

----------------------------------------

TITLE: Live Toast Example with HTML Button Trigger
DESCRIPTION: Demonstrates how to create a toast that appears when a button is clicked. The toast is positioned in the bottom-right corner using Bootstrap positioning utilities.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/toasts.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<button type="button" class="btn btn-primary" id="liveToastBtn">Show live toast</button>

<div class="toast-container position-fixed bottom-0 end-0 p-3">
  <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="toast-header">
      <img src="..." class="rounded me-2" alt="...">
      <strong class="me-auto">Bootstrap</strong>
      <small>11 mins ago</small>
      <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body">
      Hello, world! This is a toast message.
    </div>
  </div>
</div>
```

----------------------------------------

TITLE: Creating a Responsive Offcanvas Navbar with Breakpoints in Bootstrap
DESCRIPTION: This example demonstrates how to create an offcanvas navbar that expands into a normal navbar at a specific breakpoint (lg). It includes the basic structure with a navbar brand, toggler button, and offcanvas container.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navbar.mdx#2025-04-23_snippet_22

LANGUAGE: html
CODE:
```
<nav class="navbar navbar-expand-lg bg-body-tertiary fixed-top">
  <a class="navbar-brand" href="#">Offcanvas navbar</a>
  <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#navbarOffcanvasLg" aria-controls="navbarOffcanvasLg" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>
  <div class="offcanvas offcanvas-end" tabindex="-1" id="navbarOffcanvasLg" aria-labelledby="navbarOffcanvasLgLabel">
    ...
  </div>
</nav>
```

----------------------------------------

TITLE: Positioning Badges with Utilities in Bootstrap
DESCRIPTION: Example of using Bootstrap utilities to position a badge in the corner of a button. The badge uses 'position-absolute' and translation utilities to create a notification counter with the value '99+'.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/badge.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<button type="button" class="btn btn-primary position-relative">
    Inbox
    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
      99+
      <span class="visually-hidden">unread messages</span>
    </span>
  </button>
```

----------------------------------------

TITLE: Implementing Basic Form Controls in Bootstrap
DESCRIPTION: This snippet demonstrates how to create basic form controls like input and textarea using Bootstrap classes. It includes labels and placeholder text for better user experience.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/form-control.mdx#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
<div class="mb-3">
    <label for="exampleFormControlInput1" class="form-label">Email address</label>
    <input type="email" class="form-control" id="exampleFormControlInput1" placeholder="name@example.com">
  </div>
  <div class="mb-3">
    <label for="exampleFormControlTextarea1" class="form-label">Example textarea</label>
    <textarea class="form-control" id="exampleFormControlTextarea1" rows="3"></textarea>
  </div>
```

----------------------------------------

TITLE: Input Group Sizing Examples
DESCRIPTION: Demonstrates different input group sizes using input-group-sm and input-group-lg classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/input-group.mdx#2025-04-23_snippet_2

LANGUAGE: HTML
CODE:
```
<div class="input-group input-group-sm mb-3">
    <span class="input-group-text" id="inputGroup-sizing-sm">Small</span>
    <input type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm">
  </div>
```

----------------------------------------

TITLE: Initializing Dropdowns with JavaScript in Bootstrap
DESCRIPTION: This JavaScript code demonstrates how to initialize Bootstrap dropdowns programmatically. It selects all elements with the class 'dropdown-toggle', converts the NodeList to an array, and creates a new Bootstrap Dropdown instance for each element.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_23

LANGUAGE: js
CODE:
```
const dropdownElementList = document.querySelectorAll('.dropdown-toggle')
const dropdownList = [...dropdownElementList].map(dropdownToggleEl => new bootstrap.Dropdown(dropdownToggleEl))
```

----------------------------------------

TITLE: Adding Color Picker Input in Bootstrap
DESCRIPTION: This snippet demonstrates how to implement a color picker input using Bootstrap classes. It uses the 'form-control-color' class for consistent styling across browsers.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/form-control.mdx#2025-04-23_snippet_6

LANGUAGE: HTML
CODE:
```
<label for="exampleColorInput" class="form-label">Color picker</label>
<input type="color" class="form-control form-control-color" id="exampleColorInput" value="#563d7c" title="Choose your color">
```

----------------------------------------

TITLE: Implementing Vertical Navigation with Lists in Bootstrap
DESCRIPTION: Uses the .flex-column utility to create a vertical navigation stack. Can be combined with responsive variants to create navigation that adapts to different viewport sizes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<ul class="nav flex-column">
    <li class="nav-item">
      <a class="nav-link active" aria-current="page" href="#">Active</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Link</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Link</a>
    </li>
    <li class="nav-item">
      <a class="nav-link disabled" aria-disabled="true">Disabled</a>
    </li>
  </ul>
```

----------------------------------------

TITLE: Configuring Popper with Custom Function in Bootstrap
DESCRIPTION: Example showing how to use a function with popperConfig option to customize Popper.js configuration for Bootstrap popovers.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/popovers.mdx#2025-04-23_snippet_10

LANGUAGE: javascript
CODE:
```
const popover = new bootstrap.Popover(element, {
  popperConfig(defaultBsPopperConfig) {
    // const newPopperConfig = {...}
    // use defaultBsPopperConfig if needed...
    // return newPopperConfig
  }
})
```

----------------------------------------

TITLE: Implementing Grid System in Bootstrap Modal
DESCRIPTION: This snippet demonstrates how to use the Bootstrap grid system within a modal dialog by nesting .container-fluid within the .modal-body. It shows various column layouts and nesting options.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/modal.mdx#2025-04-23_snippet_7

LANGUAGE: html
CODE:
```
<div class="modal-body">
  <div class="container-fluid">
    <div class="row">
      <div class="col-md-4">.col-md-4</div>
      <div class="col-md-4 ms-auto">.col-md-4 .ms-auto</div>
    </div>
    <div class="row">
      <div class="col-md-3 ms-auto">.col-md-3 .ms-auto</div>
      <div class="col-md-2 ms-auto">.col-md-2 .ms-auto</div>
    </div>
    <div class="row">
      <div class="col-md-6 ms-auto">.col-md-6 .ms-auto</div>
    </div>
    <div class="row">
      <div class="col-sm-9">
        Level 1: .col-sm-9
        <div class="row">
          <div class="col-8 col-sm-6">
            Level 2: .col-8 .col-sm-6
          </div>
          <div class="col-4 col-sm-6">
            Level 2: .col-4 .col-sm-6
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
```

----------------------------------------

TITLE: Mixed-Width Column Layout
DESCRIPTION: Shows how to create layouts with mixed column widths using specific column sizes (col-6, col-5) alongside auto-sized columns.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/grid.mdx#2025-04-23_snippet_2

LANGUAGE: HTML
CODE:
```
<div class="container text-center">
    <div class="row">
      <div class="col">
        1 of 3
      </div>
      <div class="col-6">
        2 of 3 (wider)
      </div>
      <div class="col">
        3 of 3
      </div>
    </div>
    <div class="row">
      <div class="col">
        1 of 3
      </div>
      <div class="col-5">
        2 of 3 (wider)
      </div>
      <div class="col">
        3 of 3
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Handling Bootstrap Modal Events in JavaScript
DESCRIPTION: Demonstrates how to attach an event listener to a Bootstrap modal. This example listens for the 'hidden.bs.modal' event, which fires when the modal has finished being hidden from the user.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/modal.mdx#2025-04-23_snippet_17

LANGUAGE: javascript
CODE:
```
const myModalEl = document.getElementById('myModal')
myModalEl.addEventListener('hidden.bs.modal', event => {
  // do something...
})
```

----------------------------------------

TITLE: Implementing Standard Aspect Ratio Examples
DESCRIPTION: Demonstration of built-in aspect ratio classes including 1:1, 4:3, 16:9, and 21:9 ratios.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/ratio.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<div class="ratio ratio-1x1">
    <div>1x1</div>
  </div>
  <div class="ratio ratio-4x3">
    <div>4x3</div>
  </div>
  <div class="ratio ratio-16x9">
    <div>16x9</div>
  </div>
  <div class="ratio ratio-21x9">
    <div>21x9</div>
  </div>
```

----------------------------------------

TITLE: Creating Vertical Navigation with Nav Element in Bootstrap
DESCRIPTION: Demonstrates vertical navigation using the <nav> element with .flex-column utility, showing a more flexible markup approach without requiring list elements.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<nav class="nav flex-column">
    <a class="nav-link active" aria-current="page" href="#">Active</a>
    <a class="nav-link" href="#">Link</a>
    <a class="nav-link" href="#">Link</a>
    <a class="nav-link disabled" aria-disabled="true">Disabled</a>
  </nav>
```

----------------------------------------

TITLE: Handling Bootstrap Tab Events
DESCRIPTION: Demonstrates how to listen for tab events such as 'shown.bs.tab' to execute code after a tab has been displayed. The example shows accessing the active and previous tabs.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_25

LANGUAGE: javascript
CODE:
```
const tabEl = document.querySelector('button[data-bs-toggle="tab"]')
tabEl.addEventListener('shown.bs.tab', event => {
  event.target // newly activated tab
  event.relatedTarget // previous active tab
})
```

----------------------------------------

TITLE: Creating Nested Button Group with Dropdown in HTML using Bootstrap
DESCRIPTION: Illustrates how to create a nested button group that includes a dropdown menu using Bootstrap classes and data attributes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/button-group.mdx#2025-04-23_snippet_9

LANGUAGE: HTML
CODE:
```
<div class="btn-group" role="group" aria-label="Button group with nested dropdown">
    <button type="button" class="btn btn-primary">1</button>
    <button type="button" class="btn btn-primary">2</button>

    <div class="btn-group" role="group">
      <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
        Dropdown
      </button>
      <ul class="dropdown-menu">
        <li><a class="dropdown-item" href="#">Dropdown link</a></li>
        <li><a class="dropdown-item" href="#">Dropdown link</a></li>
      </ul>
    </div>
  </div>
```

----------------------------------------

TITLE: Creating a Media Object with Bootstrap Flex Utilities
DESCRIPTION: Demonstrates how to recreate the Bootstrap 4 media object component using flex utilities. This example shows a basic media object with an image and text content.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/flex.mdx#2025-04-23_snippet_18

LANGUAGE: html
CODE:
```
<div class="d-flex">
    <div class="flex-shrink-0">
      <Placeholder width="100" height="100" color="#999" background="#e5e5e5" text="Image" />
    </div>
    <div class="flex-grow-1 ms-3">
      This is some content from a media component. You can replace this with any content and adjust it as needed.
    </div>
  </div>
```

----------------------------------------

TITLE: Implementing Basic Border Spinner in HTML
DESCRIPTION: Creates a basic border spinner with accessibility considerations using Bootstrap classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/spinners.mdx#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
<div class="spinner-border" role="status">
    <span class="visually-hidden">Loading...</span>
  </div>
```

----------------------------------------

TITLE: Fixed Top Bootstrap Navbar
DESCRIPTION: Navbar fixed to the top of the viewport using fixed-top class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navbar.mdx#2025-04-23_snippet_12

LANGUAGE: html
CODE:
```
<nav class="navbar fixed-top bg-body-tertiary">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Fixed top</a>
    </div>
  </nav>
```

----------------------------------------

TITLE: Centering Toast Notifications with Flexbox in HTML
DESCRIPTION: This example demonstrates how to center toast notifications both horizontally and vertically using Bootstrap's flexbox utilities. It creates a flexible container for aligning the toast.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/toasts.mdx#2025-04-23_snippet_9

LANGUAGE: html
CODE:
```
<div aria-live="polite" aria-atomic="true" class="d-flex justify-content-center align-items-center w-100">
    <div class="toast" role="alert" aria-live="assertive" aria-atomic="true">
      <div class="toast-header">
        <Placeholder width="20" height="20" background="#007aff" class="rounded me-2" text={false} title={false} />
        <strong class="me-auto">Bootstrap</strong>
        <small>11 mins ago</small>
        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
      <div class="toast-body">
        Hello, world! This is a toast message.
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Using <span> Elements in Bootstrap Pagination for Disabled and Active States
DESCRIPTION: Pagination example that uses <span> elements instead of anchors for disabled and active states to remove click functionality and keyboard focus while maintaining visual styles.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/pagination.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<nav aria-label="...">
    <ul class="pagination">
      <li class="page-item disabled">
        <span class="page-link">Previous</span>
      </li>
      <li class="page-item"><a class="page-link" href="#">1</a></li>
      <li class="page-item active" aria-current="page">
        <span class="page-link">2</span>
      </li>
      <li class="page-item"><a class="page-link" href="#">3</a></li>
      <li class="page-item">
        <a class="page-link" href="#">Next</a>
      </li>
    </ul>
  </nav>
```

----------------------------------------

TITLE: Horizontal Bootstrap Form
DESCRIPTION: Shows implementation of a horizontal form layout using Bootstrap's grid classes and form components.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/layout.mdx#2025-04-23_snippet_4

LANGUAGE: HTML
CODE:
```
<form>
    <div class="row mb-3">
      <label for="inputEmail3" class="col-sm-2 col-form-label">Email</label>
      <div class="col-sm-10">
        <input type="email" class="form-control" id="inputEmail3">
      </div>
    </div>
    <div class="row mb-3">
      <label for="inputPassword3" class="col-sm-2 col-form-label">Password</label>
      <div class="col-sm-10">
        <input type="password" class="form-control" id="inputPassword3">
      </div>
    </div>
    <fieldset class="row mb-3">
      <legend class="col-form-label col-sm-2 pt-0">Radios</legend>
      <div class="col-sm-10">
        <div class="form-check">
          <input class="form-check-input" type="radio" name="gridRadios" id="gridRadios1" value="option1" checked>
          <label class="form-check-label" for="gridRadios1">
            First radio
          </label>
        </div>
        <div class="form-check">
          <input class="form-check-input" type="radio" name="gridRadios" id="gridRadios2" value="option2">
          <label class="form-check-label" for="gridRadios2">
            Second radio
          </label>
        </div>
        <div class="form-check disabled">
          <input class="form-check-input" type="radio" name="gridRadios" id="gridRadios3" value="option3" disabled>
          <label class="form-check-label" for="gridRadios3">
            Third disabled radio
          </label>
        </div>
      </div>
    </fieldset>
    <div class="row mb-3">
      <div class="col-sm-10 offset-sm-2">
        <div class="form-check">
          <input class="form-check-input" type="checkbox" id="gridCheck1">
          <label class="form-check-label" for="gridCheck1">
            Example checkbox
          </label>
        </div>
      </div>
    </div>
    <button type="submit" class="btn btn-primary">Sign in</button>
  </form>
```

----------------------------------------

TITLE: Implementing Bootstrap Scrollspy with Navbar
DESCRIPTION: Example of implementing Scrollspy with a Bootstrap navbar component. The code demonstrates how to set up a navigation bar with dropdown menu and corresponding scrollable content sections that update the active state based on scroll position. Uses data-bs-spy and data-bs-target attributes for functionality.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/scrollspy.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<nav id="navbar-example2" class="navbar bg-body-tertiary px-3 mb-3">
  <a class="navbar-brand" href="#">Navbar</a>
  <ul class="nav nav-pills">
    <li class="nav-item">
      <a class="nav-link" href="#scrollspyHeading1">First</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#scrollspyHeading2">Second</a>
    </li>
    <li class="nav-item dropdown">
      <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-expanded="false">Dropdown</a>
      <ul class="dropdown-menu">
        <li><a class="dropdown-item" href="#scrollspyHeading3">Third</a></li>
        <li><a class="dropdown-item" href="#scrollspyHeading4">Fourth</a></li>
        <li><hr class="dropdown-divider"></li>
        <li><a class="dropdown-item" href="#scrollspyHeading5">Fifth</a></li>
      </ul>
    </li>
  </ul>
</nav>
<div data-bs-spy="scroll" data-bs-target="#navbar-example2" data-bs-root-margin="0px 0px -40%" data-bs-smooth-scroll="true" class="scrollspy-example bg-body-tertiary p-3 rounded-2" tabindex="0">
  <h4 id="scrollspyHeading1">First heading</h4>
  <p>...</p>
  <h4 id="scrollspyHeading2">Second heading</h4>
  <p>...</p>
  <h4 id="scrollspyHeading3">Third heading</h4>
  <p>...</p>
  <h4 id="scrollspyHeading4">Fourth heading</h4>
  <p>...</p>
  <h4 id="scrollspyHeading5">Fifth heading</h4>
  <p>...</p>
</div>
```

----------------------------------------

TITLE: Importing Bootstrap CSS and JavaScript in main.js
DESCRIPTION: This JavaScript code imports the custom CSS and all of Bootstrap's JS into the main JavaScript file. It also shows how to import individual components.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/vite.mdx#2025-04-23_snippet_5

LANGUAGE: javascript
CODE:
```
// Import our custom CSS
import '../scss/styles.scss'

// Import all of Bootstrap's JS
import * as bootstrap from 'bootstrap'

// Alternatively, import individual components:
// import Alert from 'bootstrap/js/dist/alert';
// import { Tooltip, Toast, Popover } from 'bootstrap';
```

----------------------------------------

TITLE: Creating Block Buttons with Grid Utilities
DESCRIPTION: Implementation of full-width block buttons using display and gap utilities for responsive stacking.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/buttons.mdx#2025-04-23_snippet_10

LANGUAGE: html
CODE:
```
<div class="d-grid gap-2">
    <button class="btn btn-primary" type="button">Button</button>
    <button class="btn btn-primary" type="button">Button</button>
  </div>
```

----------------------------------------

TITLE: Creating Basic Range Input with Bootstrap
DESCRIPTION: Shows how to create a basic range input control using Bootstrap's form-range class. The example includes a label with the form-label class and an input with type="range".
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/range.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<label for="customRange1" class="form-label">Example range</label>
<input type="range" class="form-range" id="customRange1">
```

----------------------------------------

TITLE: Browser Default Form Validation in Bootstrap
DESCRIPTION: Example of a Bootstrap form using browser default validation behavior without custom styles. Shows standard form structure with basic HTML5 validation attributes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/validation.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<form class="row g-3">
    <div class="col-md-4">
      <label for="validationDefault01" class="form-label">First name</label>
      <input type="text" class="form-control" id="validationDefault01" value="Mark" required>
    </div>
    <div class="col-md-4">
      <label for="validationDefault02" class="form-label">Last name</label>
      <input type="text" class="form-control" id="validationDefault02" value="Otto" required>
    </div>
    <div class="col-md-4">
      <label for="validationDefaultUsername" class="form-label">Username</label>
      <div class="input-group">
        <span class="input-group-text" id="inputGroupPrepend2">@</span>
        <input type="text" class="form-control" id="validationDefaultUsername" aria-describedby="inputGroupPrepend2" required>
      </div>
    </div>
    <div class="col-md-6">
      <label for="validationDefault03" class="form-label">City</label>
      <input type="text" class="form-control" id="validationDefault03" required>
    </div>
    <div class="col-md-3">
      <label for="validationDefault04" class="form-label">State</label>
      <select class="form-select" id="validationDefault04" required>
        <option selected disabled value="">Choose...</option>
        <option>...</option>
      </select>
    </div>
    <div class="col-md-3">
      <label for="validationDefault05" class="form-label">Zip</label>
      <input type="text" class="form-control" id="validationDefault05" required>
    </div>
    <div class="col-12">
      <div class="form-check">
        <input class="form-check-input" type="checkbox" value="" id="invalidCheck2" required>
        <label class="form-check-label" for="invalidCheck2">
          Agree to terms and conditions
        </label>
      </div>
    </div>
    <div class="col-12">
      <button class="btn btn-primary" type="submit">Submit form</button>
    </div>
  </form>
```

----------------------------------------

TITLE: Implementing Dropend Buttons with Bootstrap
DESCRIPTION: This snippet shows how to create dropend buttons using Bootstrap classes. It includes both a default dropend button and a split dropend button with dropdown menus.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_11

LANGUAGE: HTML
CODE:
```
<!-- Default dropend button -->
<div class="btn-group dropend">
  <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
    Dropend
  </button>
  <ul class="dropdown-menu">
    <!-- Dropdown menu links -->
  </ul>
</div>

<!-- Split dropend button -->
<div class="btn-group dropend">
  <button type="button" class="btn btn-secondary">
    Split dropend
  </button>
  <button type="button" class="btn btn-secondary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
    <span class="visually-hidden">Toggle Dropend</span>
  </button>
  <ul class="dropdown-menu">
    <!-- Dropdown menu links -->
  </ul>
</div>
```

----------------------------------------

TITLE: Creating a Fixed-Top Offcanvas Navbar in Bootstrap
DESCRIPTION: This example shows how to transform a navbar into an offcanvas drawer that is always visible on all breakpoints. It includes a fixed-top navbar with a toggler that opens an offcanvas component containing navigation links, a dropdown menu, and a search form.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navbar.mdx#2025-04-23_snippet_21

LANGUAGE: html
CODE:
```
<nav class="navbar bg-body-tertiary fixed-top">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Offcanvas navbar</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar" aria-controls="offcanvasNavbar" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasNavbar" aria-labelledby="offcanvasNavbarLabel">
        <div class="offcanvas-header">
          <h5 class="offcanvas-title" id="offcanvasNavbarLabel">Offcanvas</h5>
          <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">
          <ul class="navbar-nav justify-content-end flex-grow-1 pe-3">
            <li class="nav-item">
              <a class="nav-link active" aria-current="page" href="#">Home</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="#">Link</a>
            </li>
            <li class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                Dropdown
              </a>
              <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="#">Action</a></li>
                <li><a class="dropdown-item" href="#">Another action</a></li>
                <li>
                  <hr class="dropdown-divider">
                </li>
                <li><a class="dropdown-item" href="#">Something else here</a></li>
              </ul>
            </li>
          </ul>
          <form class="d-flex mt-3" role="search">
            <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search"/>
            <button class="btn btn-outline-success" type="submit">Search</button>
          </form>
        </div>
      </div>
    </div>
  </nav>
```

----------------------------------------

TITLE: Creating Cards with List Groups in Bootstrap
DESCRIPTION: Demonstrates how to integrate list groups within a card component. This approach creates a structured list of content items with the list-group and list-group-flush classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/card.mdx#2025-04-23_snippet_4

LANGUAGE: JSX
CODE:
```
<div class="card" style="width: 18rem;">
    <ul class="list-group list-group-flush">
      <li class="list-group-item">An item</li>
      <li class="list-group-item">A second item</li>
      <li class="list-group-item">A third item</li>
    </ul>
  </div>
```

----------------------------------------

TITLE: Demonstrating Flex Grow and Shrink in Bootstrap
DESCRIPTION: This snippet shows how to use .flex-grow-1 and .flex-shrink-1 classes to control the growth and shrinking of flex items within a flex container.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/flex.mdx#2025-04-23_snippet_7

LANGUAGE: HTML
CODE:
```
<div class="d-flex">
    <div class="p-2 flex-grow-1">Flex item</div>
    <div class="p-2">Flex item</div>
    <div class="p-2">Third flex item</div>
  </div>
```

LANGUAGE: HTML
CODE:
```
<div class="d-flex">
    <div class="p-2 w-100">Flex item</div>
    <div class="p-2 flex-shrink-1">Flex item</div>
  </div>
```

----------------------------------------

TITLE: Bootstrap Container Sass Mixin Usage
DESCRIPTION: Custom container implementation using Bootstrap's Sass mixin for creating containers with customizable padding.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/containers.mdx#2025-04-23_snippet_3

LANGUAGE: scss
CODE:
```
// Source mixin
@mixin make-container($padding-x: $container-padding-x) {
  width: 100%;
  padding-right: $padding-x;
  padding-left: $padding-x;
  margin-right: auto;
  margin-left: auto;
}

// Usage
.custom-container {
  @include make-container();
}
```

----------------------------------------

TITLE: Installing Webpack Dependencies
DESCRIPTION: Installs core Webpack dependencies including webpack-cli, webpack-dev-server, and html-webpack-plugin.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/webpack.mdx#2025-04-23_snippet_1

LANGUAGE: sh
CODE:
```
npm i --save-dev webpack webpack-cli webpack-dev-server html-webpack-plugin
```

----------------------------------------

TITLE: Responsive Float Utilities Example in HTML
DESCRIPTION: Shows how to use responsive float utility classes that activate at different viewport breakpoints (SM, MD, LG, XL, XXL).
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/float.mdx#2025-04-23_snippet_1

LANGUAGE: HTML
CODE:
```
<div class="float-sm-end">Float end on viewports sized SM (small) or wider</div><br>
<div class="float-md-end">Float end on viewports sized MD (medium) or wider</div><br>
<div class="float-lg-end">Float end on viewports sized LG (large) or wider</div><br>
<div class="float-xl-end">Float end on viewports sized XL (extra large) or wider</div><br>
<div class="float-xxl-end">Float end on viewports sized XXL (extra extra large) or wider</div><br>
```

----------------------------------------

TITLE: Setting up Bootstrap development environment
DESCRIPTION: Shell commands for downloading Node.js, cloning the Bootstrap repository, and installing dependencies to set up the development environment.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/contribute.mdx#2025-04-23_snippet_1

LANGUAGE: shell
CODE:
```
1. [Download and install Node.js](https://nodejs.org/en/download/), which we use to manage our dependencies.
2. Either [download Bootstrap's sources]([[config:download.source]]) or fork and clone [Bootstrap's repository]([[config:repo]]).
3. Navigate to the root `/bootstrap` directory and run `npm install` to install our local dependencies listed in [package.json]([[config:repo]]/blob/v[[config:current_version]]/package.json).
```

----------------------------------------

TITLE: Using CSS Selectors with Bootstrap Constructors
DESCRIPTION: Shows how to use CSS selectors to initialize Bootstrap plugins (Modal, Dropdown, Offcanvas, and Alert) using their constructors or instance retrieval methods.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/javascript.mdx#2025-04-23_snippet_4

LANGUAGE: javascript
CODE:
```
const modal = new bootstrap.Modal('#myModal')
const dropdown = new bootstrap.Dropdown('[data-bs-toggle="dropdown"]')
const offcanvas = bootstrap.Offcanvas.getInstance('#myOffcanvas')
const alert = bootstrap.Alert.getOrCreateInstance('#myAlert')
```

----------------------------------------

TITLE: Using Viewport-Relative Sizing Utilities in Bootstrap HTML
DESCRIPTION: This snippet demonstrates how to use Bootstrap's viewport-relative sizing utilities to set elements' widths and heights based on the viewport dimensions, including minimum viewport width and height.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/sizing.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<div class="min-vw-100">Min-width 100vw</div>
<div class="min-vh-100">Min-height 100vh</div>
<div class="vw-100">Width 100vw</div>
<div class="vh-100">Height 100vh</div>
```

----------------------------------------

TITLE: Directional Bootstrap Popovers Implementation
DESCRIPTION: This HTML snippet demonstrates how to create popovers in four different directions (top, right, bottom, left) using the data-bs-placement attribute to control placement.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/popovers.mdx#2025-04-23_snippet_6

LANGUAGE: html
CODE:
```
<button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="top" data-bs-content="Top popover">
    Popover on top
  </button>
  <button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="right" data-bs-content="Right popover">
    Popover on right
  </button>
  <button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="bottom" data-bs-content="Bottom popover">
    Popover on bottom
  </button>
  <button type="button" class="btn btn-secondary" data-bs-container="body" data-bs-toggle="popover" data-bs-placement="left" data-bs-content="Left popover">
    Popover on left
  </button>
```

----------------------------------------

TITLE: Creating a Vertically Centered Media Object with Bootstrap Flex Utilities
DESCRIPTION: Enhances the basic media object by adding align-items-center to vertically center the content next to the image, creating a more balanced layout for media components.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/flex.mdx#2025-04-23_snippet_19

LANGUAGE: html
CODE:
```
<div class="d-flex align-items-center">
    <div class="flex-shrink-0">
      <Placeholder width="100" height="100" color="#999" background="#e5e5e5" text="Image" />
    </div>
    <div class="flex-grow-1 ms-3">
      This is some content from a media component. You can replace this with any content and adjust it as needed.
    </div>
  </div>
```

----------------------------------------

TITLE: Implementing Bootstrap Table Variants in HTML
DESCRIPTION: This code demonstrates how to apply contextual classes to tables, rows, or individual cells to create visual variants with different background colors in Bootstrap.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/tables.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<!-- On tables -->
<table class="table-primary">...</table>
<table class="table-secondary">...</table>
<table class="table-success">...</table>
<table class="table-danger">...</table>
<table class="table-warning">...</table>
<table class="table-info">...</table>
<table class="table-light">...</table>
<table class="table-dark">...</table>

<!-- On rows -->
<tr class="table-primary">...</tr>
<tr class="table-secondary">...</tr>
<tr class="table-success">...</tr>
<tr class="table-danger">...</tr>
<tr class="table-warning">...</tr>
<tr class="table-info">...</tr>
<tr class="table-light">...</tr>
<tr class="table-dark">...</tr>

<!-- On cells (`td` or `th`) -->
<tr>
  <td class="table-primary">...</td>
  <td class="table-secondary">...</td>
  <td class="table-success">...</td>
  <td class="table-danger">...</td>
  <td class="table-warning">...</td>
  <td class="table-info">...</td>
  <td class="table-light">...</td>
  <td class="table-dark">...</td>
</tr>
```

----------------------------------------

TITLE: Adding Custom Theme Colors in Bootstrap SCSS
DESCRIPTION: Demonstrates how to add a custom color to Bootstrap's theme system including necessary definitions for light and dark modes. Includes required imports, color definitions, and map merging operations for text, background, and border colors.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/color-modes.mdx#2025-04-23_snippet_5

LANGUAGE: scss
CODE:
```
// Required
@import "functions";
@import "variables";
@import "variables-dark";

// Add a custom color to $theme-colors
$custom-colors: (
  "custom-color": #712cf9
);
$theme-colors: map-merge($theme-colors, $custom-colors);

@import "maps";
@import "mixins";
@import "utilities";

// Add a custom color to new theme maps

// Light mode
$custom-colors-text: ("custom-color": #712cf9);
$custom-colors-bg-subtle: ("custom-color": #e1d2fe);
$custom-colors-border-subtle: ("custom-color": #bfa1fc);

$theme-colors-text: map-merge($theme-colors-text, $custom-colors-text);
$theme-colors-bg-subtle: map-merge($theme-colors-bg-subtle, $custom-colors-bg-subtle);
$theme-colors-border-subtle: map-merge($theme-colors-border-subtle, $custom-colors-border-subtle);

// Dark mode
$custom-colors-text-dark: ("custom-color": #e1d2f2);
$custom-colors-bg-subtle-dark: ("custom-color": #8951fa);
$custom-colors-border-subtle-dark: ("custom-color": #e1d2f2);

$theme-colors-text-dark: map-merge($theme-colors-text-dark, $custom-colors-text-dark);
$theme-colors-bg-subtle-dark: map-merge($theme-colors-bg-subtle-dark, $custom-colors-bg-subtle-dark);
$theme-colors-border-subtle-dark: map-merge($theme-colors-border-subtle-dark, $custom-colors-border-subtle-dark);

// Remainder of Bootstrap imports
@import "root";
@import "reboot";
// etc
```

----------------------------------------

TITLE: Applying Background Gradients in Bootstrap HTML
DESCRIPTION: Shows how to add a linear gradient background to elements using the .bg-gradient class in combination with contextual background classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/background.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<div class={`p-3 mb-2 bg-${themeColor.name} bg-gradient${themeColor.contrast_color ? (' text-' + themeColor.contrast_color) : ' text-white'}`}>.bg-{themeColor.name}.bg-gradient</div>
```

LANGUAGE: html
CODE:
```
<div class="p-3 mb-2 bg-black bg-gradient text-white">.bg-black.bg-gradient</div>
```

----------------------------------------

TITLE: Basic Input Group Examples
DESCRIPTION: Demonstrates basic input group configurations including text addons, URL inputs, and textarea combinations. Shows proper usage of aria-labels and form control classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/input-group.mdx#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
<div class="input-group mb-3">
    <span class="input-group-text" id="basic-addon1">@</span>
    <input type="text" class="form-control" placeholder="Username" aria-label="Username" aria-describedby="basic-addon1">
  </div>
```

----------------------------------------

TITLE: Implementing autofocus in Bootstrap modals with JavaScript
DESCRIPTION: Code to achieve autofocus functionality in Bootstrap modals using JavaScript, as the HTML5 autofocus attribute doesn't work with modals. This snippet adds an event listener to focus on an input when the modal is shown.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/modal.mdx#2025-04-23_snippet_0

LANGUAGE: js
CODE:
```
const myModal = document.getElementById('myModal')
const myInput = document.getElementById('myInput')

myModal.addEventListener('shown.bs.modal', () => {
  myInput.focus()
})
```

----------------------------------------

TITLE: Preventing Bootstrap Modal Show Event
DESCRIPTION: Shows how to use the 'show.bs.modal' event to prevent a Bootstrap modal from being shown. This example demonstrates event handling and the use of preventDefault().
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/javascript.mdx#2025-04-23_snippet_2

LANGUAGE: javascript
CODE:
```
const myModal = document.querySelector('#myModal')

myModal.addEventListener('show.bs.modal', event => {
  return event.preventDefault() // stops modal from being shown
})
```

----------------------------------------

TITLE: Sizing Bootstrap Placeholders
DESCRIPTION: Demonstrates how to adjust placeholder sizes using the modifier classes .placeholder-lg, .placeholder-sm, and .placeholder-xs.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/placeholders.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<span class="placeholder col-12 placeholder-lg"></span>
<span class="placeholder col-12"></span>
<span class="placeholder col-12 placeholder-sm"></span>
<span class="placeholder col-12 placeholder-xs"></span>
```

----------------------------------------

TITLE: Implementing Light and Dark Dropdowns in Bootstrap HTML
DESCRIPTION: This snippet demonstrates how to create dropdown menus with both light and dark themes using Bootstrap's data-bs-theme attribute.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/color-modes.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<div class="dropdown" data-bs-theme="light">
    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButtonLight" data-bs-toggle="dropdown" aria-expanded="false">
      Default dropdown
    </button>
    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButtonLight">
      <li><a class="dropdown-item active" href="#">Action</a></li>
      <li><a class="dropdown-item" href="#">Action</a></li>
      <li><a class="dropdown-item" href="#">Another action</a></li>
      <li><a class="dropdown-item" href="#">Something else here</a></li>
      <li><hr class="dropdown-divider"></li>
      <li><a class="dropdown-item" href="#">Separated link</a></li>
    </ul>
  </div>

  <div class="dropdown" data-bs-theme="dark">
    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButtonDark" data-bs-toggle="dropdown" aria-expanded="false">
      Dark dropdown
    </button>
    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButtonDark">
      <li><a class="dropdown-item active" href="#">Action</a></li>
      <li><a class="dropdown-item" href="#">Action</a></li>
      <li><a class="dropdown-item" href="#">Another action</a></li>
      <li><a class="dropdown-item" href="#">Something else here</a></li>
      <li><hr class="dropdown-divider"></li>
      <li><a class="dropdown-item" href="#">Separated link</a></li>
    </ul>
  </div>
```

----------------------------------------

TITLE: Creating Vertical Pills Navigation with Bootstrap
DESCRIPTION: This snippet demonstrates how to implement a vertical pills navigation using Bootstrap classes. It includes tab buttons aligned vertically and associated content panes. The aria-orientation attribute is added for better accessibility.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_19

LANGUAGE: HTML
CODE:
```
<div class="d-flex align-items-start">
  <div class="nav flex-column nav-pills me-3" id="v-pills-tab" role="tablist" aria-orientation="vertical">
    <button class="nav-link active" id="v-pills-home-tab" data-bs-toggle="pill" data-bs-target="#v-pills-home" type="button" role="tab" aria-controls="v-pills-home" aria-selected="true">Home</button>
    <button class="nav-link" id="v-pills-profile-tab" data-bs-toggle="pill" data-bs-target="#v-pills-profile" type="button" role="tab" aria-controls="v-pills-profile" aria-selected="false">Profile</button>
    <button class="nav-link" id="v-pills-disabled-tab" data-bs-toggle="pill" data-bs-target="#v-pills-disabled" type="button" role="tab" aria-controls="v-pills-disabled" aria-selected="false" disabled>Disabled</button>
    <button class="nav-link" id="v-pills-messages-tab" data-bs-toggle="pill" data-bs-target="#v-pills-messages" type="button" role="tab" aria-controls="v-pills-messages" aria-selected="false">Messages</button>
    <button class="nav-link" id="v-pills-settings-tab" data-bs-toggle="pill" data-bs-target="#v-pills-settings" type="button" role="tab" aria-controls="v-pills-settings" aria-selected="false">Settings</button>
  </div>
  <div class="tab-content" id="v-pills-tabContent">
    <div class="tab-pane fade show active" id="v-pills-home" role="tabpanel" aria-labelledby="v-pills-home-tab" tabindex="0">...</div>
    <div class="tab-pane fade" id="v-pills-profile" role="tabpanel" aria-labelledby="v-pills-profile-tab" tabindex="0">...</div>
    <div class="tab-pane fade" id="v-pills-disabled" role="tabpanel" aria-labelledby="v-pills-disabled-tab" tabindex="0">...</div>
    <div class="tab-pane fade" id="v-pills-messages" role="tabpanel" aria-labelledby="v-pills-messages-tab" tabindex="0">...</div>
    <div class="tab-pane fade" id="v-pills-settings" role="tabpanel" aria-labelledby="v-pills-settings-tab" tabindex="0">...</div>
  </div>
</div>
```

----------------------------------------

TITLE: Basic Toast Implementation in HTML
DESCRIPTION: The minimal HTML markup required to create a basic toast notification with a header and body. Includes a close button with appropriate ARIA attributes for accessibility.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/toasts.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<div class="toast" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="toast-header">
      <Placeholder width="20" height="20" background="#007aff" class="rounded me-2" text={false} title={false} />
      <strong class="me-auto">Bootstrap</strong>
      <small>11 mins ago</small>
      <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body">
      Hello, world! This is a toast message.
    </div>
  </div>
```

----------------------------------------

TITLE: Implementing a Dark Offcanvas Navbar in Bootstrap
DESCRIPTION: This example shows how to create a dark-themed offcanvas navbar with proper styling. It uses dark background classes for the navbar and offcanvas content, along with text-bg-dark for legibility, dropdown-menu-dark for the dropdown, and btn-close-white for the close button.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navbar.mdx#2025-04-23_snippet_23

LANGUAGE: html
CODE:
```
<nav class="navbar navbar-dark bg-dark fixed-top">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Offcanvas dark navbar</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasDarkNavbar" aria-controls="offcanvasDarkNavbar" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="offcanvas offcanvas-end text-bg-dark" tabindex="-1" id="offcanvasDarkNavbar" aria-labelledby="offcanvasDarkNavbarLabel">
        <div class="offcanvas-header">
          <h5 class="offcanvas-title" id="offcanvasDarkNavbarLabel">Dark offcanvas</h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">
          <ul class="navbar-nav justify-content-end flex-grow-1 pe-3">
            <li class="nav-item">
              <a class="nav-link active" aria-current="page" href="#">Home</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="#">Link</a>
            </li>
            <li class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                Dropdown
              </a>
              <ul class="dropdown-menu dropdown-menu-dark">
                <li><a class="dropdown-item" href="#">Action</a></li>
                <li><a class="dropdown-item" href="#">Another action</a></li>
                <li>
                  <hr class="dropdown-divider">
                </li>
                <li><a class="dropdown-item" href="#">Something else here</a></li>
              </ul>
            </li>
          </ul>
          <form class="d-flex mt-3" role="search">
            <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search"/>
            <button class="btn btn-success" type="submit">Search</button>
          </form>
        </div>
      </div>
    </div>
  </nav>
```

----------------------------------------

TITLE: Implementing Bootstrap Tabs with JavaScript in HTML
DESCRIPTION: This snippet shows how to create a tabbed navigation system using Bootstrap classes and data attributes. It includes tab buttons and corresponding content panes, demonstrating the structure required for the JavaScript plugin to function.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_16

LANGUAGE: html
CODE:
```
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item" role="presentation">
    <button class="nav-link active" id="home-tab" data-bs-toggle="tab" data-bs-target="#home-tab-pane" type="button" role="tab" aria-controls="home-tab-pane" aria-selected="true">Home</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="profile-tab" data-bs-toggle="tab" data-bs-target="#profile-tab-pane" type="button" role="tab" aria-controls="profile-tab-pane" aria-selected="false">Profile</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="contact-tab" data-bs-toggle="tab" data-bs-target="#contact-tab-pane" type="button" role="tab" aria-controls="contact-tab-pane" aria-selected="false">Contact</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="disabled-tab" data-bs-toggle="tab" data-bs-target="#disabled-tab-pane" type="button" role="tab" aria-controls="disabled-tab-pane" aria-selected="false" disabled>Disabled</button>
  </li>
</ul>
<div class="tab-content" id="myTabContent">
  <div class="tab-pane fade show active" id="home-tab-pane" role="tabpanel" aria-labelledby="home-tab" tabindex="0">...</div>
  <div class="tab-pane fade" id="profile-tab-pane" role="tabpanel" aria-labelledby="profile-tab" tabindex="0">...</div>
  <div class="tab-pane fade" id="contact-tab-pane" role="tabpanel" aria-labelledby="contact-tab" tabindex="0">...</div>
  <div class="tab-pane fade" id="disabled-tab-pane" role="tabpanel" aria-labelledby="disabled-tab" tabindex="0">...</div>
</div>
```

----------------------------------------

TITLE: Implementing Offcanvas Component in Bootstrap 5
DESCRIPTION: New offcanvas component for creating hidden sidebars on your page.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/migration.mdx#2025-04-23_snippet_19

LANGUAGE: HTML
CODE:
```
<div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvas" aria-labelledby="offcanvasLabel">
  <!-- Offcanvas content -->
</div>
```

----------------------------------------

TITLE: Implementing Toggle Buttons in HTML with Bootstrap
DESCRIPTION: This snippet demonstrates how to create toggle buttons using Bootstrap classes and data attributes. It includes examples of regular, active, and disabled toggle buttons in both default and primary styles.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/buttons.mdx#2025-04-23_snippet_14

LANGUAGE: html
CODE:
```
<p class="d-inline-flex gap-1">
    <button type="button" class="btn" data-bs-toggle="button">Toggle button</button>
    <button type="button" class="btn active" data-bs-toggle="button" aria-pressed="true">Active toggle button</button>
    <button type="button" class="btn" disabled data-bs-toggle="button">Disabled toggle button</button>
  </p>
  <p class="d-inline-flex gap-1">
    <button type="button" class="btn btn-primary" data-bs-toggle="button">Toggle button</button>
    <button type="button" class="btn btn-primary active" data-bs-toggle="button" aria-pressed="true">Active toggle button</button>
    <button type="button" class="btn btn-primary" disabled data-bs-toggle="button">Disabled toggle button</button>
  </p>
```

----------------------------------------

TITLE: Implementing Color Mode Toggle in JavaScript for Bootstrap
DESCRIPTION: This JavaScript snippet provides functionality to toggle between different color modes in a Bootstrap project, including system preference detection and local storage persistence.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/color-modes.mdx#2025-04-23_snippet_4

LANGUAGE: javascript
CODE:
```
(() => {
  'use strict'

  const storedTheme = localStorage.getItem('theme')

  const getPreferredTheme = () => {
    if (storedTheme) {
      return storedTheme
    }

    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'
  }

  const setTheme = function (theme) {
    if (theme === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches) {
      document.documentElement.setAttribute('data-bs-theme', 'dark')
    } else {
      document.documentElement.setAttribute('data-bs-theme', theme)
    }
  }

  setTheme(getPreferredTheme())

  const showActiveTheme = theme => {
    const activeThemeIcon = document.querySelector('.theme-icon-active use')
    const btnToActive = document.querySelector(`[data-bs-theme-value="${theme}"]`)
    const svgOfActiveBtn = btnToActive.querySelector('svg use').getAttribute('href')

    document.querySelectorAll('[data-bs-theme-value]').forEach(element => {
      element.classList.remove('active')
    })

    btnToActive.classList.add('active')
    activeThemeIcon.setAttribute('href', svgOfActiveBtn)
  }

  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {
    if (storedTheme !== 'light' || storedTheme !== 'dark') {
      setTheme(getPreferredTheme())
    }
  })

  window.addEventListener('DOMContentLoaded', () => {
    showActiveTheme(getPreferredTheme())

    document.querySelectorAll('[data-bs-theme-value]')
      .forEach(toggle => {
        toggle.addEventListener('click', () => {
          const theme = toggle.getAttribute('data-bs-theme-value')
          localStorage.setItem('theme', theme)
          setTheme(theme)
          showActiveTheme(theme)
        })
      })
  })
})()
```

----------------------------------------

TITLE: Creating a Bootstrap Tab Instance in JavaScript
DESCRIPTION: This snippet demonstrates how to create a new Bootstrap Tab instance using the constructor. It initializes a tab element with the ID 'myTab'.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/list-group.mdx#2025-04-23_snippet_13

LANGUAGE: javascript
CODE:
```
const bsTab = new bootstrap.Tab('#myTab')
```

----------------------------------------

TITLE: Creating Project Structure with Shell Commands
DESCRIPTION: Shell commands to create initial project directory structure and files for a Bootstrap-Parcel project.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/parcel.mdx#2025-04-23_snippet_0

LANGUAGE: shell
CODE:
```
mkdir my-project && cd my-project
npm init -y
```

----------------------------------------

TITLE: Implementing Min-width Media Queries with Sass Mixins
DESCRIPTION: This code demonstrates how to use Bootstrap's Sass mixins for creating min-width media queries. It includes examples for different breakpoints and shows how to apply styles for specific screen sizes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/breakpoints.mdx#2025-04-23_snippet_1

LANGUAGE: scss
CODE:
```
// Source mixins

// No media query necessary for xs breakpoint as it's effectively `@media (min-width: 0) { ... }`
@include media-breakpoint-up(sm) { ... }
@include media-breakpoint-up(md) { ... }
@include media-breakpoint-up(lg) { ... }
@include media-breakpoint-up(xl) { ... }
@include media-breakpoint-up(xxl) { ... }

// Usage

// Example: Hide starting at `min-width: 0`, and then show at the `sm` breakpoint
.custom-class {
  display: none;
}
@include media-breakpoint-up(sm) {
  .custom-class {
    display: block;
  }
}
```

----------------------------------------

TITLE: Input Groups with Validation and Floating Labels in Bootstrap
DESCRIPTION: Shows how to implement form validation with input groups and floating labels. The feedback element must be placed outside the .form-floating but inside the .input-group, requiring JavaScript for display.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/floating-labels.mdx#2025-04-23_snippet_9

LANGUAGE: html
CODE:
```
<div class="input-group has-validation">
    <span class="input-group-text">@</span>
    <div class="form-floating is-invalid">
      <input type="text" class="form-control is-invalid" id="floatingInputGroup2" placeholder="Username" required>
      <label for="floatingInputGroup2">Username</label>
    </div>
    <div class="invalid-feedback">
      Please choose a username.
    </div>
  </div>
```

----------------------------------------

TITLE: Input Group with Checkboxes and Radios
DESCRIPTION: Shows how to integrate checkboxes and radio buttons within input groups as addons.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/input-group.mdx#2025-04-23_snippet_3

LANGUAGE: HTML
CODE:
```
<div class="input-group mb-3">
    <div class="input-group-text">
      <input class="form-check-input mt-0" type="checkbox" value="" aria-label="Checkbox for following text input">
    </div>
    <input type="text" class="form-control" aria-label="Text input with checkbox">
  </div>
```

----------------------------------------

TITLE: Active State Dropdown Items
DESCRIPTION: Demonstration of active state styling in dropdown items using the .active class and aria-current attribute.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_15

LANGUAGE: HTML
CODE:
```
<ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#">Regular link</a></li>
    <li><a class="dropdown-item active" href="#" aria-current="true">Active link</a></li>
    <li><a class="dropdown-item" href="#">Another link</a></li>
  </ul>
```

----------------------------------------

TITLE: Bootstrap Navbar with Input Group
DESCRIPTION: Demonstrates using input groups within a navbar form, showing username input with prepended @ symbol.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navbar.mdx#2025-04-23_snippet_8

LANGUAGE: HTML
CODE:
```
<nav class="navbar bg-body-tertiary">
    <form class="container-fluid">
      <div class="input-group">
        <span class="input-group-text" id="basic-addon1">@</span>
        <input type="text" class="form-control" placeholder="Username" aria-label="Username" aria-describedby="basic-addon1"/>
      </div>
    </form>
  </nav>
```

----------------------------------------

TITLE: Generating Responsive Fullscreen Modals with Sass Loop
DESCRIPTION: This SCSS code generates responsive fullscreen modal classes using a loop and the $breakpoints map in Bootstrap.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/modal.mdx#2025-04-23_snippet_13

LANGUAGE: scss
CODE:
```
@each $breakpoint in map-keys($grid-breakpoints) {
  $next: breakpoint-next($breakpoint, $grid-breakpoints);
  $infix: breakpoint-infix($next, $grid-breakpoints);

  @if $next {
    @include media-breakpoint-down($next) {
      .modal-fullscreen#{$infix} {
        width: 100vw;
        max-width: none;
        height: 100%;
        margin: 0;

        .modal-content {
          height: 100%;
          border: 0;
          @include border-radius(0);
        }

        .modal-header,
        .modal-footer {
          @include border-radius(0);
        }

        .modal-body {
          overflow-y: auto;
        }
      }
    }
  }
}
```

----------------------------------------

TITLE: Implementing Disabled Checkbox States in Bootstrap
DESCRIPTION: Example showing disabled checkbox states including indeterminate, unchecked, and checked variations. Each uses the disabled attribute and maintains the standard form-check structure.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/checks-radios.mdx#2025-04-23_snippet_2

LANGUAGE: HTML
CODE:
```
<div class="form-check">
    <input class="form-check-input" type="checkbox" value="" id="checkIndeterminateDisabled" disabled>
    <label class="form-check-label" for="checkIndeterminateDisabled">
      Disabled indeterminate checkbox
    </label>
  </div>
  <div class="form-check">
    <input class="form-check-input" type="checkbox" value="" id="checkDisabled" disabled>
    <label class="form-check-label" for="checkDisabled">
      Disabled checkbox
    </label>
  </div>
  <div class="form-check">
    <input class="form-check-input" type="checkbox" value="" id="checkCheckedDisabled" checked disabled>
    <label class="form-check-label" for="checkCheckedDisabled">
      Disabled checked checkbox
    </label>
  </div>
```

----------------------------------------

TITLE: Implementing Floating Labels with Textareas in Bootstrap
DESCRIPTION: Shows how to use floating labels with textarea elements. By default, textareas with .form-control will be the same height as inputs.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/floating-labels.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<div class="form-floating">
    <textarea class="form-control" placeholder="Leave a comment here" id="floatingTextarea"></textarea>
    <label for="floatingTextarea">Comments</label>
  </div>
```

----------------------------------------

TITLE: Installing Bootstrap via Bun
DESCRIPTION: Command to install Bootstrap in Bun or Node.js powered apps using the Bun CLI. This is suitable for projects using Bun as the runtime or package manager.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/download.mdx#2025-04-23_snippet_5

LANGUAGE: sh
CODE:
```
bun add bootstrap@[[config:current_version]]
```

----------------------------------------

TITLE: Implementing Dark Dropdown Menu in HTML with Bootstrap
DESCRIPTION: This snippet demonstrates how to create a dark dropdown menu using Bootstrap classes. It includes a button trigger and a list of dropdown items with an active state and a divider.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_6

LANGUAGE: HTML
CODE:
```
<div class="dropdown">
    <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
      Dropdown button
    </button>
    <ul class="dropdown-menu dropdown-menu-dark">
      <li><a class="dropdown-item active" href="#">Action</a></li>
      <li><a class="dropdown-item" href="#">Another action</a></li>
      <li><a class="dropdown-item" href="#">Something else here</a></li>
      <li><hr class="dropdown-divider"></li>
      <li><a class="dropdown-item" href="#">Separated link</a></li>
    </ul>
  </div>
```

----------------------------------------

TITLE: Refreshing Scrollspy After DOM Changes
DESCRIPTION: JavaScript example showing how to refresh scrollspy instances after adding or removing elements in the DOM to ensure proper functionality.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/scrollspy.mdx#2025-04-23_snippet_7

LANGUAGE: javascript
CODE:
```
const dataSpyList = document.querySelectorAll('[data-bs-spy="scroll"]')
dataSpyList.forEach(dataSpyEl => {
  bootstrap.ScrollSpy.getInstance(dataSpyEl).refresh()
})
```

----------------------------------------

TITLE: Bootstrap Form Grid Layout
DESCRIPTION: Shows how to create a two-column form layout using Bootstrap's grid system.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/layout.mdx#2025-04-23_snippet_1

LANGUAGE: HTML
CODE:
```
<div class="row">
    <div class="col">
      <input type="text" class="form-control" placeholder="First name" aria-label="First name">
    </div>
    <div class="col">
      <input type="text" class="form-control" placeholder="Last name" aria-label="Last name">
    </div>
  </div>
```

----------------------------------------

TITLE: Bootstrap List Group with Tab Navigation
DESCRIPTION: Example of creating a tabbed interface using list groups. Demonstrates the structure needed for tab panels and their associated content areas.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/list-group.mdx#2025-04-23_snippet_11

LANGUAGE: html
CODE:
```
<div class="row">
  <div class="col-4">
    <div class="list-group" id="list-tab" role="tablist">
      <a class="list-group-item list-group-item-action active" id="list-home-list" data-bs-toggle="list" href="#list-home" role="tab" aria-controls="list-home">Home</a>
      <a class="list-group-item list-group-item-action" id="list-profile-list" data-bs-toggle="list" href="#list-profile" role="tab" aria-controls="list-profile">Profile</a>
      <a class="list-group-item list-group-item-action" id="list-messages-list" data-bs-toggle="list" href="#list-messages" role="tab" aria-controls="list-messages">Messages</a>
      <a class="list-group-item list-group-item-action" id="list-settings-list" data-bs-toggle="list" href="#list-settings" role="tab" aria-controls="list-settings">Settings</a>
    </div>
  </div>
  <div class="col-8">
    <div class="tab-content" id="nav-tabContent">
      <div class="tab-pane fade show active" id="list-home" role="tabpanel" aria-labelledby="list-home-list">...</div>
      <div class="tab-pane fade" id="list-profile" role="tabpanel" aria-labelledby="list-profile-list">...</div>
      <div class="tab-pane fade" id="list-messages" role="tabpanel" aria-labelledby="list-messages-list">...</div>
      <div class="tab-pane fade" id="list-settings" role="tabpanel" aria-labelledby="list-settings-list">...</div>
    </div>
  </div>
</div>
```

----------------------------------------

TITLE: Disabling Touch Swiping in Bootstrap Carousel with HTML
DESCRIPTION: This snippet shows how to disable touch swiping in a Bootstrap carousel. It uses the 'data-bs-touch="false"' attribute to turn off touch interaction. The carousel includes three slides with placeholder images and navigation controls.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/carousel.mdx#2025-04-23_snippet_8

LANGUAGE: HTML
CODE:
```
<div id="carouselExampleControlsNoTouching" class="carousel slide" data-bs-touch="false">
    <div class="carousel-inner">
      <div class="carousel-item active">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#555" background="#777" text="First slide" />
      </div>
      <div class="carousel-item">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#444" background="#666" text="Second slide" />
      </div>
      <div class="carousel-item">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#333" background="#555" text="Third slide" />
      </div>
    </div>
    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControlsNoTouching" data-bs-slide="prev">
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControlsNoTouching" data-bs-slide="next">
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Next</span>
    </button>
  </div>
```

----------------------------------------

TITLE: Setting Custom Container for Bootstrap Popovers
DESCRIPTION: This snippet shows how to specify a custom container for popovers to avoid rendering problems in complex components. The container option ensures the popover's HTML appears within the specified element.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/popovers.mdx#2025-04-23_snippet_1

LANGUAGE: js
CODE:
```
const popover = new bootstrap.Popover('.example-popover', {
  container: 'body'
})
```

----------------------------------------

TITLE: Customizing Font Weight for RTL in SCSS
DESCRIPTION: This SCSS snippet demonstrates how to use RTLCSS value directives to customize font weight for RTL output.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/rtl.mdx#2025-04-23_snippet_2

LANGUAGE: scss
CODE:
```
$font-weight-bold: 700 #{/* rtl:600 */} !default;
```

----------------------------------------

TITLE: Basic Focus Ring Example in HTML
DESCRIPTION: Demonstrates the basic usage of the .focus-ring class on an anchor element to create a custom focus ring.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/focus-ring.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<a href="#" class="d-inline-flex focus-ring py-1 px-2 text-decoration-none border rounded-2">
    Custom focus ring
  </a>
```

----------------------------------------

TITLE: Fixed Bottom Bootstrap Navbar
DESCRIPTION: Navbar fixed to the bottom of the viewport using fixed-bottom class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navbar.mdx#2025-04-23_snippet_13

LANGUAGE: html
CODE:
```
<nav class="navbar fixed-bottom bg-body-tertiary">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Fixed bottom</a>
    </div>
  </nav>
```

----------------------------------------

TITLE: Implementing Search Form in Bootstrap Navbar
DESCRIPTION: Example of integrating a search form within a Bootstrap navbar using flex layout and form controls.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navbar.mdx#2025-04-23_snippet_7

LANGUAGE: HTML
CODE:
```
<nav class="navbar bg-body-tertiary">
    <div class="container-fluid">
      <form class="d-flex" role="search">
        <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search"/>
        <button class="btn btn-outline-success" type="submit">Search</button>
      </form>
    </div>
  </nav>
```

----------------------------------------

TITLE: Creating Toggle Links with Bootstrap Classes
DESCRIPTION: This example shows how to implement toggle functionality on anchor elements using Bootstrap classes and ARIA attributes. It includes regular, active, and disabled toggle links in both default and primary styles.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/buttons.mdx#2025-04-23_snippet_15

LANGUAGE: html
CODE:
```
<p class="d-inline-flex gap-1">
    <a href="#" class="btn" role="button" data-bs-toggle="button">Toggle link</a>
    <a href="#" class="btn active" role="button" data-bs-toggle="button" aria-pressed="true">Active toggle link</a>
    <a class="btn disabled" aria-disabled="true" role="button" data-bs-toggle="button">Disabled toggle link</a>
  </p>
  <p class="d-inline-flex gap-1">
    <a href="#" class="btn btn-primary" role="button" data-bs-toggle="button">Toggle link</a>
    <a href="#" class="btn btn-primary active" role="button" data-bs-toggle="button" aria-pressed="true">Active toggle link</a>
    <a class="btn btn-primary disabled" aria-disabled="true" role="button" data-bs-toggle="button">Disabled toggle link</a>
  </p>
```

----------------------------------------

TITLE: Implementing Multiple Selection in Bootstrap Custom Select
DESCRIPTION: Shows how to create a multiple selection custom select element using the multiple attribute with the form-select class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/select.mdx#2025-04-23_snippet_2

LANGUAGE: HTML
CODE:
```
<select class="form-select" multiple aria-label="Multiple select example">
    <option selected>Open this select menu</option>
    <option value="1">One</option>
    <option value="2">Two</option>
    <option value="3">Three</option>
  </select>
```

----------------------------------------

TITLE: Adding Badge Counter to Button in Bootstrap
DESCRIPTION: Example of using a badge within a button to provide a counter. This implementation shows a primary button with a 'Notifications' label and a badge showing the number 4.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/badge.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<button type="button" class="btn btn-primary">
    Notifications <span class="badge text-bg-secondary">4</span>
  </button>
```

----------------------------------------

TITLE: Structuring Bootstrap Sass Project Files
DESCRIPTION: Shows the recommended file structure for a project using Bootstrap's Sass files, including custom stylesheets and node_modules.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/sass.mdx#2025-04-23_snippet_0

LANGUAGE: text
CODE:
```
your-project/
├── scss/
│   └── custom.scss
└── node_modules/
│   └── bootstrap/
│       ├── js/
│       └── scss/
└── index.html
```

----------------------------------------

TITLE: Rendering Responsive Image Placeholder in JSX
DESCRIPTION: This snippet demonstrates how to create a responsive image placeholder using Bootstrap's .img-fluid class. The placeholder is 100% wide and 250px tall, with the text 'Responsive image'.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/images.mdx#2025-04-23_snippet_0

LANGUAGE: jsx
CODE:
```
<Placeholder width="100%" height="250" class="bd-placeholder-img-lg img-fluid" text="Responsive image" />
```

----------------------------------------

TITLE: Configuring Individual Slide Intervals in Bootstrap Carousel with HTML
DESCRIPTION: This snippet illustrates how to set different interval times for individual slides in a Bootstrap carousel. It uses the 'data-bs-interval' attribute on each carousel item to specify custom delay times before transitioning to the next slide.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/carousel.mdx#2025-04-23_snippet_6

LANGUAGE: HTML
CODE:
```
<div id="carouselExampleInterval" class="carousel slide" data-bs-ride="carousel">
    <div class="carousel-inner">
      <div class="carousel-item active" data-bs-interval="10000">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#555" background="#777" text="First slide" />
      </div>
      <div class="carousel-item" data-bs-interval="2000">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#444" background="#666" text="Second slide" />
      </div>
      <div class="carousel-item">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#333" background="#555" text="Third slide" />
      </div>
    </div>
    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleInterval" data-bs-slide="prev">
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleInterval" data-bs-slide="next">
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Next</span>
    </button>
  </div>
```

----------------------------------------

TITLE: Demonstrating Text Color Utilities in Bootstrap HTML
DESCRIPTION: This snippet shows how to apply various text color utilities to paragraph elements, including theme colors, body text colors, and black/white variations.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/colors.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<p class="text-${themeColor.name}${themeColor.contrast_color ? ` bg-${themeColor.contrast_color}` : ``}">.text-${themeColor.name}</p>
<p class="text-${themeColor.name}-emphasis">.text-${themeColor.name}-emphasis</p>

<p class="text-body">.text-body</p>
<p class="text-body-emphasis">.text-body-emphasis</p>
<p class="text-body-secondary">.text-body-secondary</p>
<p class="text-body-tertiary">.text-body-tertiary</p>

<p class="text-black bg-white">.text-black</p>
<p class="text-white bg-dark">.text-white</p>
<p class="text-black-50 bg-white">.text-black-50</p>
<p class="text-white-50 bg-dark">.text-white-50</p>
```

----------------------------------------

TITLE: Creating a basic Bootstrap modal structure with HTML
DESCRIPTION: HTML structure for a basic Bootstrap modal component with header, body, and footer sections. Includes close button and action buttons for a complete modal dialog implementation.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/modal.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<div class="modal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Modal title</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p>Modal body text goes here.</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save changes</button>
      </div>
    </div>
  </div>
</div>
```

----------------------------------------

TITLE: Configuring Webpack with Bootstrap Loaders
DESCRIPTION: Complete Webpack configuration setup including style, CSS, PostCSS, and Sass loaders for processing Bootstrap styles. Includes development server configuration and HTML webpack plugin setup.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/webpack.mdx#2025-04-23_snippet_9

LANGUAGE: javascript
CODE:
```
'use strict'

const path = require('path')
const autoprefixer = require('autoprefixer')
const HtmlWebpackPlugin = require('html-webpack-plugin')

module.exports = {
  mode: 'development',
  entry: './src/js/main.js',
  output: {
    filename: 'main.js',
    path: path.resolve(__dirname, 'dist')
  },
  devServer: {
    static: path.resolve(__dirname, 'dist'),
    port: 8080,
    hot: true
  },
  plugins: [
    new HtmlWebpackPlugin({ template: './src/index.html' })
  ],
  module: {
    rules: [
      {
        test: /\.(scss)$/,
        use: [
          {
            // Adds CSS to the DOM by injecting a `<style>` tag
            loader: 'style-loader'
          },
          {
            // Interprets `@import` and `url()` like `import/require()` and will resolve them
            loader: 'css-loader'
          },
          {
            // Loader for webpack to process CSS with PostCSS
            loader: 'postcss-loader',
            options: {
              postcssOptions: {
                plugins: [
                  autoprefixer
                ]
              }
            }
          },
          {
            // Loads a SASS/SCSS file and compiles it to CSS
            loader: 'sass-loader',
            options: {
              sassOptions: {
                // Optional: Silence Sass deprecation warnings
                silenceDeprecations: [
                  'mixed-decls',
                  'color-functions',
                  'global-builtin',
                  'import'
                ]
              }
            }
          }
        ]
      }
    ]
  }
}
```

----------------------------------------

TITLE: Handling Asynchronous Bootstrap Events
DESCRIPTION: Illustrates how to handle asynchronous events in Bootstrap, specifically for a Collapse component. It shows how to execute code after a transition is complete.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/javascript.mdx#2025-04-23_snippet_5

LANGUAGE: javascript
CODE:
```
const myCollapseEl = document.querySelector('#myCollapse')

myCollapseEl.addEventListener('shown.bs.collapse', event => {
  // Action to execute once the collapsible area is expanded
})
```

----------------------------------------

TITLE: Custom Height Textareas with Floating Labels in Bootstrap
DESCRIPTION: Demonstrates how to set a custom height for textareas with floating labels. Instead of using the rows attribute, an explicit height is set through inline style.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/floating-labels.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<div class="form-floating">
    <textarea class="form-control" placeholder="Leave a comment here" id="floatingTextarea2" style="height: 100px"></textarea>
    <label for="floatingTextarea2">Comments</label>
  </div>
```

----------------------------------------

TITLE: Generating Color Swatches with SCSS
DESCRIPTION: Demonstrates how to use the color-contrast() function in a loop to generate color swatches with appropriate text contrast.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/sass.mdx#2025-04-23_snippet_11

LANGUAGE: scss
CODE:
```
@each $color, $value in $theme-colors {
  .swatch-#{$color} {
    color: color-contrast($value);
  }
}
```

----------------------------------------

TITLE: Creating Generic Indicator with Positioned Element in Bootstrap
DESCRIPTION: Example showing how to create a generic indicator without a count by replacing the badge class with utilities. This creates a small circular indicator that can be used for notifications.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/badge.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<button type="button" class="btn btn-primary position-relative">
    Profile
    <span class="position-absolute top-0 start-100 translate-middle p-2 bg-danger border border-light rounded-circle">
      <span class="visually-hidden">New alerts</span>
    </span>
  </button>
```

----------------------------------------

TITLE: Creating Growing Spinner in HTML
DESCRIPTION: Demonstrates how to implement a growing spinner as an alternative to the border spinner using Bootstrap classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/spinners.mdx#2025-04-23_snippet_1

LANGUAGE: HTML
CODE:
```
<div class="spinner-grow" role="status">
    <span class="visually-hidden">Loading...</span>
  </div>
```

----------------------------------------

TITLE: Using Color Contrast Function in SCSS
DESCRIPTION: Shows how to use the color-contrast() function for one-off contrast needs and with color map functions.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/sass.mdx#2025-04-23_snippet_12

LANGUAGE: scss
CODE:
```
.custom-element {
  color: color-contrast(#000); // returns `color: #fff`
}

.custom-element {
  color: color-contrast($dark); // returns `color: #fff`
}
```

----------------------------------------

TITLE: Using Color Scheme Mixin in SCSS
DESCRIPTION: Shows how to use the color-scheme mixin to create styles for light and dark color schemes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/sass.mdx#2025-04-23_snippet_14

LANGUAGE: scss
CODE:
```
.custom-element {
  @include color-scheme(light) {
    // Insert light mode styles here
  }

  @include color-scheme(dark) {
    // Insert dark mode styles here
  }
}
```

----------------------------------------

TITLE: Implementing align-content-between in Bootstrap Flexbox
DESCRIPTION: Uses Bootstrap's d-flex, align-content-between, and flex-wrap utilities to distribute flex items evenly along the cross axis with the first row at the top and last row at the bottom.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/flex.mdx#2025-04-23_snippet_15

LANGUAGE: html
CODE:
```
<div class="d-flex align-content-between flex-wrap">...</div>
```

----------------------------------------

TITLE: Creating Non-Autohiding Toast with Close Button in HTML
DESCRIPTION: This example demonstrates how to create a toast that doesn't automatically hide and includes a close button. It's suitable for important messages that require user action.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/toasts.mdx#2025-04-23_snippet_11

LANGUAGE: html
CODE:
```
<div role="alert" aria-live="assertive" aria-atomic="true" class="toast" data-bs-autohide="false">
    <div class="toast-header">
      <Placeholder width="20" height="20" background="#007aff" class="rounded me-2" text={false} title={false} />
      <strong class="me-auto">Bootstrap</strong>
      <small>11 mins ago</small>
      <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body">
      Hello, world! This is a toast message.
    </div>
  </div>
```

----------------------------------------

TITLE: Creating a Comprehensive HTML Form with Bootstrap Styling
DESCRIPTION: Illustrates a complex HTML form with various input types, select dropdowns, checkboxes, and radio buttons. The form uses Bootstrap classes for consistent styling and responsive layout.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/reboot.mdx#2025-04-23_snippet_14

LANGUAGE: html
CODE:
```
<form>
  <fieldset>
    <legend>Example legend</legend>
    <p>
      <label for="input">Example input</label>
      <input type="text" id="input" placeholder="Example input"/>
    </p>
    <p>
      <label for="email">Example email</label>
      <input type="email" id="email" placeholder="test@example.com"/>
    </p>
    <p>
      <label for="tel">Example telephone</label>
      <input type="tel" id="tel"/>
    </p>
    <p>
      <label for="url">Example url</label>
      <input type="url" id="url"/>
    </p>
    <p>
      <label for="number">Example number</label>
      <input type="number" id="number"/>
    </p>
    <p>
      <label for="search">Example search</label>
      <input type="search" id="search"/>
    </p>
    <p>
      <label for="range">Example range</label>
      <input type="range" id="range" min="0" max="10"/>
    </p>
    <p>
      <label for="file">Example file input</label>
      <input type="file" id="file"/>
    </p>
    <p>
      <label for="select">Example select</label>
      <select id="select">
        <option value="">Choose...</option>
        <optgroup label="Option group 1">
          <option value="">Option 1</option>
          <option value="">Option 2</option>
          <option value="">Option 3</option>
        </optgroup>
        <optgroup label="Option group 2">
          <option value="">Option 4</option>
          <option value="">Option 5</option>
          <option value="">Option 6</option>
        </optgroup>
      </select>
    </p>
    <p>
      <label>
        <input type="checkbox" value=""/>
        Check this checkbox
      </label>
    </p>
    <p>
      <label>
        <input type="radio" name="optionsRadios" id="optionsRadios1" value="option1" checked/>
        Option one is this and that
      </label>
      <label>
        <input type="radio" name="optionsRadios" id="optionsRadios2" value="option2"/>
        Option two is something else that's also super long to demonstrate the wrapping of these fancy form controls.
      </label>
      <label>
        <input type="radio" name="optionsRadios" id="optionsRadios3" value="option3" disabled/>
        Option three is disabled
      </label>
    </p>
    <p>
      <label for="textarea">Example textarea</label>
      <textarea id="textarea" rows="3"></textarea>
    </p>
    <p>
      <label for="date">Example date</label>
      <input type="date" id="date"/>
    </p>
    <p>
      <label for="time">Example time</label>
      <input type="time" id="time"/>
    </p>
    <p>
      <label for="password">Example password</label>
      <input type="password" id="password"/>
    </p>
    <p>
      <label for="datetime-local">Example datetime-local</label>
      <input type="datetime-local" id="datetime-local"/>
    </p>
    <p>
      <label for="week">Example week</label>
      <input type="week" id="week"/>
    </p>
    <p>
      <label for="month">Example month</label>
      <input type="month" id="month"/>
    </p>
    <p>
      <label for="color">Example color</label>
      <input type="color" id="color"/>
    </p>
    <p>
      <label for="output">Example output</label>
      <output name="result" id="output">100</output>
    </p>
    <p>
      <button type="submit">Button submit</button>
      <input type="submit" value="Input submit button"/>
      <input type="reset" value="Input reset button"/>
      <input type="button" value="Input button"/>
    </p>
    <p>
      <button type="submit" disabled>Button submit</button>
      <input type="submit" value="Input submit button" disabled/>
      <input type="reset" value="Input reset button" disabled/>
      <input type="button" value="Input button" disabled/>
    </p>
  </fieldset>
</form>
```

----------------------------------------

TITLE: Implementing Bootstrap Callouts in HTML
DESCRIPTION: This snippet demonstrates the usage of Bootstrap's Callout component with different types: default, warning, and danger. Callouts are used to highlight important information in the documentation.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/docsref.mdx#2025-04-23_snippet_1

LANGUAGE: HTML
CODE:
```
<Callout>
  Default callout
</Callout>

<Callout type="warning">
  Warning callout
</Callout>

<Callout type="danger">
  Danger callout
</Callout>
```

----------------------------------------

TITLE: Creating Always Responsive Table in HTML
DESCRIPTION: This snippet demonstrates how to create an always-responsive table using Bootstrap's .table-responsive class. The table will scroll horizontally across all breakpoints.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/tables.mdx#2025-04-23_snippet_10

LANGUAGE: html
CODE:
```
<div class="table-responsive">
  <table class="table">
    ...
  </table>
</div>
```

----------------------------------------

TITLE: Responsive Offcanvas Implementation
DESCRIPTION: Demonstrates a responsive offcanvas that toggles visibility based on viewport size using the .offcanvas-lg class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/offcanvas.mdx#2025-04-23_snippet_4

LANGUAGE: HTML
CODE:
```
<button class="btn btn-primary d-lg-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasResponsive" aria-controls="offcanvasResponsive">Toggle offcanvas</button>

  <div class="alert alert-info d-none d-lg-block">Resize your browser to show the responsive offcanvas toggle.</div>

  <div class="offcanvas-lg offcanvas-end" tabindex="-1" id="offcanvasResponsive" aria-labelledby="offcanvasResponsiveLabel">
    <div class="offcanvas-header">
      <h5 class="offcanvas-title" id="offcanvasResponsiveLabel">Responsive offcanvas</h5>
      <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#offcanvasResponsive" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
      <p class="mb-0">This is content within an <code>.offcanvas-lg</code>.</p>
    </div>
  </div>
```

----------------------------------------

TITLE: Defining Z-index Levels Map in SCSS
DESCRIPTION: This SCSS snippet defines a Sass map for customizing the available z-index values and generated utilities. It's located in the _variables.scss file.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/z-index.mdx#2025-04-23_snippet_1

LANGUAGE: SCSS
CODE:
```
<ScssDocs name="zindex-levels-map" file="scss/_variables.scss" />
```

----------------------------------------

TITLE: Controlling Flex Item Wrapping in Bootstrap
DESCRIPTION: These examples demonstrate how to use .flex-nowrap, .flex-wrap, and .flex-wrap-reverse classes to control the wrapping behavior of flex items within a flex container.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/flex.mdx#2025-04-23_snippet_10

LANGUAGE: HTML
CODE:
```
<div class="d-flex flex-nowrap">
  ...
</div>
```

LANGUAGE: HTML
CODE:
```
<div class="d-flex flex-wrap">
  ...
</div>
```

LANGUAGE: HTML
CODE:
```
<div class="d-flex flex-wrap-reverse">
  ...
</div>
```

----------------------------------------

TITLE: Implementing Autoplaying Bootstrap Carousel in HTML
DESCRIPTION: This snippet demonstrates how to create an autoplaying Bootstrap carousel. It includes three slides with placeholder images and navigation controls. The carousel is set to autoplay using the 'data-bs-ride="carousel"' attribute.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/carousel.mdx#2025-04-23_snippet_4

LANGUAGE: HTML
CODE:
```
<div id="carouselExampleAutoplaying" class="carousel slide" data-bs-ride="carousel">
    <div class="carousel-inner">
      <div class="carousel-item active">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#555" background="#777" text="First slide" />
      </div>
      <div class="carousel-item">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#444" background="#666" text="Second slide" />
      </div>
      <div class="carousel-item">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#333" background="#555" text="Third slide" />
      </div>
    </div>
    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleAutoplaying" data-bs-slide="prev">
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleAutoplaying" data-bs-slide="next">
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Next</span>
    </button>
  </div>
```

----------------------------------------

TITLE: Column Break Examples in Bootstrap Grid
DESCRIPTION: Demonstrates how to force column breaks using w-100 class and responsive display utilities in Bootstrap's grid system.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/columns.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<div class="container text-center">
    <div class="row">
      <div class="col-6 col-sm-3">.col-6 .col-sm-3</div>
      <div class="col-6 col-sm-3">.col-6 .col-sm-3</div>
      <div class="w-100"></div>
      <div class="col-6 col-sm-3">.col-6 .col-sm-3</div>
      <div class="col-6 col-sm-3">.col-6 .col-sm-3</div>
    </div>
  </div>
```

----------------------------------------

TITLE: Basic Collapse Implementation in HTML
DESCRIPTION: Example of implementing a basic collapse component with both link and button triggers. This demonstrates the fundamental structure with data attributes for controlling the collapse behavior.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/collapse.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<p class="d-inline-flex gap-1">
    <a class="btn btn-primary" data-bs-toggle="collapse" href="#collapseExample" role="button" aria-expanded="false" aria-controls="collapseExample">
      Link with href
    </a>
    <button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
      Button with data-bs-target
    </button>
  </p>
  <div class="collapse" id="collapseExample">
    <div class="card card-body">
      Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user activates the relevant trigger.
    </div>
  </div>
```

----------------------------------------

TITLE: Styling Blockquotes in HTML with Bootstrap
DESCRIPTION: Shows how to structure and style a blockquote element with a citation using Bootstrap classes for consistent margins and typography.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/reboot.mdx#2025-04-23_snippet_17

LANGUAGE: html
CODE:
```
<figure>
    <blockquote class="blockquote">
      <p>A well-known quote, contained in a blockquote element.</p>
    </blockquote>
    <figcaption>
      Someone famous in <cite title="Source Title">Source Title</cite>
    </figcaption>
  </figure>
```

----------------------------------------

TITLE: Implementing Nested Navigation with Bootstrap Scrollspy
DESCRIPTION: Example showing how to create a nested navigation structure with scrollspy functionality. Uses nav-pills for navigation and implements multiple levels of navigation hierarchy with synchronized scrolling and highlighting.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/scrollspy.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<div class="row">
  <div class="col-4">
    <nav id="navbar-example3" class="h-100 flex-column align-items-stretch pe-4 border-end">
      <nav class="nav nav-pills flex-column">
        <a class="nav-link" href="#item-1">Item 1</a>
        <nav class="nav nav-pills flex-column">
          <a class="nav-link ms-3 my-1" href="#item-1-1">Item 1-1</a>
          <a class="nav-link ms-3 my-1" href="#item-1-2">Item 1-2</a>
        </nav>
        <a class="nav-link" href="#item-2">Item 2</a>
        <a class="nav-link" href="#item-3">Item 3</a>
        <nav class="nav nav-pills flex-column">
          <a class="nav-link ms-3 my-1" href="#item-3-1">Item 3-1</a>
          <a class="nav-link ms-3 my-1" href="#item-3-2">Item 3-2</a>
        </nav>
      </nav>
    </nav>
  </div>

  <div class="col-8">
    <div data-bs-spy="scroll" data-bs-target="#navbar-example3" data-bs-smooth-scroll="true" class="scrollspy-example-2" tabindex="0">
      <div id="item-1">
        <h4>Item 1</h4>
        <p>...</p>
      </div>
      <div id="item-1-1">
        <h5>Item 1-1</h5>
        <p>...</p>
      </div>
      <div id="item-1-2">
        <h5>Item 1-2</h5>
        <p>...</p>
      </div>
      <div id="item-2">
        <h4>Item 2</h4>
        <p>...</p>
      </div>
      <div id="item-3">
        <h4>Item 3</h4>
        <p>...</p>
      </div>
      <div id="item-3-1">
        <h5>Item 3-1</h5>
        <p>...</p>
      </div>
      <div id="item-3-2">
        <h5>Item 3-2</h5>
        <p>...</p>
      </div>
    </div>
  </div>
</div>
```

----------------------------------------

TITLE: Bootstrap Column Sizing Example
DESCRIPTION: Shows how to implement custom column sizing in a Bootstrap form layout.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/layout.mdx#2025-04-23_snippet_6

LANGUAGE: HTML
CODE:
```
<div class="row g-3">
    <div class="col-sm-7">
      <input type="text" class="form-control" placeholder="City" aria-label="City">
    </div>
    <div class="col-sm">
      <input type="text" class="form-control" placeholder="State" aria-label="State">
    </div>
    <div class="col-sm">
      <input type="text" class="form-control" placeholder="Zip" aria-label="Zip">
    </div>
  </div>
```

----------------------------------------

TITLE: Creating Radio Button Controls in Bootstrap
DESCRIPTION: HTML implementation of basic radio buttons showing both default and checked states. Uses the same .form-check pattern with name attribute to group related options.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/checks-radios.mdx#2025-04-23_snippet_3

LANGUAGE: HTML
CODE:
```
<div class="form-check">
    <input class="form-check-input" type="radio" name="radioDefault" id="radioDefault1">
    <label class="form-check-label" for="radioDefault1">
      Default radio
    </label>
  </div>
  <div class="form-check">
    <input class="form-check-input" type="radio" name="radioDefault" id="radioDefault2" checked>
    <label class="form-check-label" for="radioDefault2">
      Default checked radio
    </label>
  </div>
```

----------------------------------------

TITLE: Creating Stacked Checkbox Controls in Bootstrap
DESCRIPTION: Example of vertically stacked checkboxes with default and disabled state options. This is the default arrangement when using .form-check classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/checks-radios.mdx#2025-04-23_snippet_7

LANGUAGE: HTML
CODE:
```
<div class="form-check">
    <input class="form-check-input" type="checkbox" value="" id="defaultCheck1">
    <label class="form-check-label" for="defaultCheck1">
      Default checkbox
    </label>
  </div>
  <div class="form-check">
    <input class="form-check-input" type="checkbox" value="" id="defaultCheck2" disabled>
    <label class="form-check-label" for="defaultCheck2">
      Disabled checkbox
    </label>
  </div>
```

----------------------------------------

TITLE: Three-Column Grid Cards with Equal Heights
DESCRIPTION: Demonstrates a three-column grid layout with equal height cards using the h-100 class. Shows how cards wrap responsively and maintain consistent heights across different content lengths.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/card.mdx#2025-04-23_snippet_22

LANGUAGE: HTML
CODE:
```
<div class="row row-cols-1 row-cols-md-3 g-4">
    <div class="col">
      <div class="card h-100">
        <Placeholder width="100%" height="140" class="card-img-top" text="Image cap" />
        <div class="card-body">
          <h5 class="card-title">Card title</h5>
          <p class="card-text">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
        </div>
      </div>
    </div>
    <div class="col">
      <div class="card h-100">
        <Placeholder width="100%" height="140" class="card-img-top" text="Image cap" />
        <div class="card-body">
          <h5 class="card-title">Card title</h5>
          <p class="card-text">This is a short card.</p>
        </div>
      </div>
    </div>
    <div class="col">
      <div class="card h-100">
        <Placeholder width="100%" height="140" class="card-img-top" text="Image cap" />
        <div class="card-body">
          <h5 class="card-title">Card title</h5>
          <p class="card-text">This is a longer card with supporting text below as a natural lead-in to additional content.</p>
        </div>
      </div>
    </div>
    <div class="col">
      <div class="card h-100">
        <Placeholder width="100%" height="140" class="card-img-top" text="Image cap" />
        <div class="card-body">
          <h5 class="card-title">Card title</h5>
          <p class="card-text">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
        </div>
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Installing Bootstrap Dependencies
DESCRIPTION: Installs Bootstrap and Popper.js core dependencies.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/webpack.mdx#2025-04-23_snippet_2

LANGUAGE: sh
CODE:
```
npm i --save bootstrap @popperjs/core
```

----------------------------------------

TITLE: Vertical Stack Button Group
DESCRIPTION: Example of stacking buttons vertically using .vstack class with gap utilities.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/stacks.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<div class="vstack gap-2 col-md-5 mx-auto">
    <button type="button" class="btn btn-secondary">Save changes</button>
    <button type="button" class="btn btn-outline-secondary">Cancel</button>
  </div>
```

----------------------------------------

TITLE: Interactive Offcanvas Demo
DESCRIPTION: Demonstrates triggering an offcanvas component using both link and button elements, including a dropdown menu within the offcanvas body.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/offcanvas.mdx#2025-04-23_snippet_1

LANGUAGE: HTML
CODE:
```
<a class="btn btn-primary" data-bs-toggle="offcanvas" href="#offcanvasExample" role="button" aria-controls="offcanvasExample">
    Link with href
  </a>
  <button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasExample" aria-controls="offcanvasExample">
    Button with data-bs-target
  </button>

  <div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasExample" aria-labelledby="offcanvasExampleLabel">
    <div class="offcanvas-header">
      <h5 class="offcanvas-title" id="offcanvasExampleLabel">Offcanvas</h5>
      <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
      <div>
        Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.
      </div>
      <div class="dropdown mt-3">
        <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
          Dropdown button
        </button>
        <ul class="dropdown-menu">
          <li><a class="dropdown-item" href="#">Action</a></li>
          <li><a class="dropdown-item" href="#">Another action</a></li>
          <li><a class="dropdown-item" href="#">Something else here</a></li>
        </ul>
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Customizing Link Opacity with CSS Variables in HTML
DESCRIPTION: This HTML example shows how to customize link opacity using CSS variables in Bootstrap. It demonstrates setting a custom link opacity directly in the HTML.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/reboot.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<a href="#" style="--bs-link-opacity: .5">This is an example link</a>
```

----------------------------------------

TITLE: Implementing Bootstrap Tabs with Custom Markup in HTML
DESCRIPTION: This snippet demonstrates how to create a tabbed navigation system using Bootstrap classes and data attributes with custom markup. It uses a <nav> element and <button> elements for improved semantic structure and accessibility.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_17

LANGUAGE: html
CODE:
```
<nav>
  <div class="nav nav-tabs" id="nav-tab" role="tablist">
    <button class="nav-link active" id="nav-home-tab" data-bs-toggle="tab" data-bs-target="#nav-home" type="button" role="tab" aria-controls="nav-home" aria-selected="true">Home</button>
    <button class="nav-link" id="nav-profile-tab" data-bs-toggle="tab" data-bs-target="#nav-profile" type="button" role="tab" aria-controls="nav-profile" aria-selected="false">Profile</button>
    <button class="nav-link" id="nav-contact-tab" data-bs-toggle="tab" data-bs-target="#nav-contact" type="button" role="tab" aria-controls="nav-contact" aria-selected="false">Contact</button>
    <button class="nav-link" id="nav-disabled-tab" data-bs-toggle="tab" data-bs-target="#nav-disabled" type="button" role="tab" aria-controls="nav-disabled" aria-selected="false" disabled>Disabled</button>
  </div>
</nav>
<div class="tab-content" id="nav-tabContent">
  <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab" tabindex="0">...</div>
  <div class="tab-pane fade" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab" tabindex="0">...</div>
  <div class="tab-pane fade" id="nav-contact" role="tabpanel" aria-labelledby="nav-contact-tab" tabindex="0">...</div>
  <div class="tab-pane fade" id="nav-disabled" role="tabpanel" aria-labelledby="nav-disabled-tab" tabindex="0">...</div>
</div>
```

----------------------------------------

TITLE: Creating Button Toolbar with Input Group in HTML using Bootstrap
DESCRIPTION: Demonstrates how to create a button toolbar that includes both button groups and an input group using Bootstrap classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/button-group.mdx#2025-04-23_snippet_7

LANGUAGE: HTML
CODE:
```
<div class="btn-toolbar mb-3" role="toolbar" aria-label="Toolbar with button groups">
    <div class="btn-group me-2" role="group" aria-label="First group">
      <button type="button" class="btn btn-outline-secondary">1</button>
      <button type="button" class="btn btn-outline-secondary">2</button>
      <button type="button" class="btn btn-outline-secondary">3</button>
      <button type="button" class="btn btn-outline-secondary">4</button>
    </div>
    <div class="input-group">
      <div class="input-group-text" id="btnGroupAddon">@</div>
      <input type="text" class="form-control" placeholder="Input group example" aria-label="Input group example" aria-describedby="btnGroupAddon">
    </div>
  </div>

  <div class="btn-toolbar justify-content-between" role="toolbar" aria-label="Toolbar with button groups">
    <div class="btn-group" role="group" aria-label="First group">
      <button type="button" class="btn btn-outline-secondary">1</button>
      <button type="button" class="btn btn-outline-secondary">2</button>
      <button type="button" class="btn btn-outline-secondary">3</button>
      <button type="button" class="btn btn-outline-secondary">4</button>
    </div>
    <div class="input-group">
      <div class="input-group-text" id="btnGroupAddon2">@</div>
      <input type="text" class="form-control" placeholder="Input group example" aria-label="Input group example" aria-describedby="btnGroupAddon2">
    </div>
  </div>
```

----------------------------------------

TITLE: Progress Steps Example with Position Utilities
DESCRIPTION: Demonstrates creating a progress step indicator using position utilities with progress bar and buttons.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/position.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<div class="position-relative m-4">
    <div class="progress" role="progressbar" aria-label="Progress" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" style="height: 1px;">
      <div class="progress-bar" style="width: 50%"></div>
    </div>
    <button type="button" class="position-absolute top-0 start-0 translate-middle btn btn-sm btn-primary rounded-pill" style="width: 2rem; height:2rem;">1</button>
    <button type="button" class="position-absolute top-0 start-50 translate-middle btn btn-sm btn-primary rounded-pill" style="width: 2rem; height:2rem;">2</button>
    <button type="button" class="position-absolute top-0 start-100 translate-middle btn btn-sm btn-secondary rounded-pill" style="width: 2rem; height:2rem;">3</button>
  </div>
```

----------------------------------------

TITLE: Bootstrap Navbar with Image Brand
DESCRIPTION: Example of implementing a navbar brand using an image. Uses the .navbar-brand class with an img element inside it. The container class provides proper spacing and alignment.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navbar.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<nav class="navbar bg-body-tertiary">
    <div class="container">
      <a class="navbar-brand" href="#">
        <img src="/docs/${getConfig().docs_version}/assets/brand/bootstrap-logo.svg" alt="Bootstrap" width="30" height="24">
      </a>
    </div>
  </nav>
```

----------------------------------------

TITLE: Defining Tertiary Color Variables in CSS
DESCRIPTION: CSS variables for tertiary colors, used for even lighter text and to style backgrounds for hover states, accents, and wells.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/color.mdx#2025-04-23_snippet_3

LANGUAGE: CSS
CODE:
```
--bs-tertiary-color
--bs-tertiary-color-rgb
--bs-tertiary-bg
--bs-tertiary-bg-rgb
```

----------------------------------------

TITLE: Implementing Split Button Dropdown Variations in Bootstrap
DESCRIPTION: Creates split button dropdowns with different color schemes (primary, secondary, success, info, warning, danger). Uses dropdown-toggle-split class for proper caret spacing and positioning.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<div class="btn-group">
  <button type="button" class="btn btn-danger">Danger</button>
  <button type="button" class="btn btn-danger dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
    <span class="visually-hidden">Toggle Dropdown</span>
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#">Action</a></li>
    <li><a class="dropdown-item" href="#">Another action</a></li>
    <li><a class="dropdown-item" href="#">Something else here</a></li>
    <li><hr class="dropdown-divider"></li>
    <li><a class="dropdown-item" href="#">Separated link</a></li>
  </ul>
</div>
```

----------------------------------------

TITLE: Grid Layout with Floating Labels in Bootstrap
DESCRIPTION: Demonstrates how to use floating labels within Bootstrap's grid system. Places form elements with floating labels inside column classes for responsive layouts.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/floating-labels.mdx#2025-04-23_snippet_10

LANGUAGE: html
CODE:
```
<div class="row g-2">
    <div class="col-md">
      <div class="form-floating">
        <input type="email" class="form-control" id="floatingInputGrid" placeholder="name@example.com" value="mdo@example.com">
        <label for="floatingInputGrid">Email address</label>
      </div>
    </div>
    <div class="col-md">
      <div class="form-floating">
        <select class="form-select" id="floatingSelectGrid">
          <option selected>Open this select menu</option>
          <option value="1">One</option>
          <option value="2">Two</option>
          <option value="3">Three</option>
        </select>
        <label for="floatingSelectGrid">Works with selects</label>
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Implementing Basic Dropdown Button in Bootstrap
DESCRIPTION: Creates a basic dropdown menu with a button toggle. The dropdown includes three action items in an unordered list.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<div class="dropdown">
    <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
      Dropdown button
    </button>
    <ul class="dropdown-menu">
      <li><a class="dropdown-item" href="#">Action</a></li>
      <li><a class="dropdown-item" href="#">Another action</a></li>
      <li><a class="dropdown-item" href="#">Something else here</a></li>
    </ul>
  </div>
```

----------------------------------------

TITLE: Implementing Simple Scrollspy with Bootstrap
DESCRIPTION: HTML structure for creating a basic scrollspy navigation with anchor links that highlight as the user scrolls through corresponding content sections.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/scrollspy.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<div class="row">
  <div class="col-4">
    <div id="simple-list-example" class="d-flex flex-column gap-2 simple-list-example-scrollspy text-center">
      <a class="p-1 rounded" href="#simple-list-item-1">Item 1</a>
      <a class="p-1 rounded" href="#simple-list-item-2">Item 2</a>
      <a class="p-1 rounded" href="#simple-list-item-3">Item 3</a>
      <a class="p-1 rounded" href="#simple-list-item-4">Item 4</a>
      <a class="p-1 rounded" href="#simple-list-item-5">Item 5</a>
    </div>
  </div>
  <div class="col-8">
    <div data-bs-spy="scroll" data-bs-target="#simple-list-example" data-bs-offset="0" data-bs-smooth-scroll="true" class="scrollspy-example" tabindex="0">
      <h4 id="simple-list-item-1">Item 1</h4>
      <p>...</p>
      <h4 id="simple-list-item-2">Item 2</h4>
      <p>...</p>
      <h4 id="simple-list-item-3">Item 3</h4>
      <p>...</p>
      <h4 id="simple-list-item-4">Item 4</h4>
      <p>...</p>
      <h4 id="simple-list-item-5">Item 5</h4>
      <p>...</p>
    </div>
  </div>
</div>
```

----------------------------------------

TITLE: Creating Checkbox Button Group in HTML with Bootstrap
DESCRIPTION: Demonstrates how to create a button group with checkbox-like toggle functionality using Bootstrap classes and input elements.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/button-group.mdx#2025-04-23_snippet_4

LANGUAGE: HTML
CODE:
```
<div class="btn-group" role="group" aria-label="Basic checkbox toggle button group">
    <input type="checkbox" class="btn-check" id="btncheck1" autocomplete="off">
    <label class="btn btn-outline-primary" for="btncheck1">Checkbox 1</label>

    <input type="checkbox" class="btn-check" id="btncheck2" autocomplete="off">
    <label class="btn btn-outline-primary" for="btncheck2">Checkbox 2</label>

    <input type="checkbox" class="btn-check" id="btncheck3" autocomplete="off">
    <label class="btn btn-outline-primary" for="btncheck3">Checkbox 3</label>
  </div>
```

----------------------------------------

TITLE: Implementing Card with Titles, Subtitles and Links in Bootstrap
DESCRIPTION: Demonstrates how to use card-title, card-subtitle, and card-link classes to create a structured card with titles and navigation links. Shows proper organization of title elements and link placement within a card.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/card.mdx#2025-04-23_snippet_2

LANGUAGE: JSX
CODE:
```
<div class="card" style="width: 18rem;">
    <div class="card-body">
      <h5 class="card-title">Card title</h5>
      <h6 class="card-subtitle mb-2 text-body-secondary">Card subtitle</h6>
      <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
      <a href="#" class="card-link">Card link</a>
      <a href="#" class="card-link">Another link</a>
    </div>
  </div>
```

----------------------------------------

TITLE: Installing Bootstrap Dependencies
DESCRIPTION: Command to install Bootstrap and Popper.js dependencies.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/parcel.mdx#2025-04-23_snippet_2

LANGUAGE: shell
CODE:
```
npm i --save bootstrap @popperjs/core
```

----------------------------------------

TITLE: Border Width Examples
DESCRIPTION: Examples demonstrating different border width utilities from 1 to 5.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/borders.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<span class="border border-1"></span>
<span class="border border-2"></span>
<span class="border border-3"></span>
<span class="border border-4"></span>
<span class="border border-5"></span>
```

----------------------------------------

TITLE: Implementing External Content Collapse with Bootstrap Navbar
DESCRIPTION: This snippet demonstrates how to use the collapse plugin to trigger content that sits outside of the navbar structure. It includes a dark-themed collapsible container and a navbar toggler that controls it via matching id and data-bs-target attributes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navbar.mdx#2025-04-23_snippet_20

LANGUAGE: html
CODE:
```
<div class="collapse" id="navbarToggleExternalContent" data-bs-theme="dark">
    <div class="bg-dark p-4">
      <h5 class="text-body-emphasis h4">Collapsed content</h5>
      <span class="text-body-secondary">Toggleable via the navbar brand.</span>
    </div>
  </div>
  <nav class="navbar navbar-dark bg-dark">
    <div class="container-fluid">
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarToggleExternalContent" aria-controls="navbarToggleExternalContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
    </div>
  </nav>
```

----------------------------------------

TITLE: Using Auto Margins with Flexbox in Bootstrap
DESCRIPTION: This example demonstrates how to use auto margins (.me-auto and .ms-auto) to control the positioning of flex items within a flex container.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/flex.mdx#2025-04-23_snippet_8

LANGUAGE: HTML
CODE:
```
<div class="d-flex mb-3">
    <div class="p-2">Flex item</div>
    <div class="p-2">Flex item</div>
    <div class="p-2">Flex item</div>
  </div>

  <div class="d-flex mb-3">
    <div class="me-auto p-2">Flex item</div>
    <div class="p-2">Flex item</div>
    <div class="p-2">Flex item</div>
  </div>

  <div class="d-flex mb-3">
    <div class="p-2">Flex item</div>
    <div class="p-2">Flex item</div>
    <div class="ms-auto p-2">Flex item</div>
  </div>
```

----------------------------------------

TITLE: Demonstrating Margin Utilities in Bootstrap Grid System
DESCRIPTION: This snippet shows how to use margin utilities like .me-auto and .ms-auto to control spacing between columns in a Bootstrap grid layout. It includes examples of pushing columns away from each other and creating auto-margins.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/columns.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<div class="container text-center">
    <div class="row">
      <div class="col-md-4">.col-md-4</div>
      <div class="col-md-4 ms-auto">.col-md-4 .ms-auto</div>
    </div>
    <div class="row">
      <div class="col-md-3 ms-md-auto">.col-md-3 .ms-md-auto</div>
      <div class="col-md-3 ms-md-auto">.col-md-3 .ms-md-auto</div>
    </div>
    <div class="row">
      <div class="col-auto me-auto">.col-auto .me-auto</div>
      <div class="col-auto">.col-auto</div>
    </div>
  </div>
```

----------------------------------------

TITLE: Creating Cards with Header, Body, and Footer in Bootstrap
DESCRIPTION: Demonstrates a complete card with header, body, and footer sections. The text-center class aligns all content centrally, and text-body-secondary adds subtle styling to the footer text.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/card.mdx#2025-04-23_snippet_11

LANGUAGE: JSX
CODE:
```
<div class="card text-center">
    <div class="card-header">
      Featured
    </div>
    <div class="card-body">
      <h5 class="card-title">Special title treatment</h5>
      <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
      <a href="#" class="btn btn-primary">Go somewhere</a>
    </div>
    <div class="card-footer text-body-secondary">
      2 days ago
    </div>
  </div>
```

----------------------------------------

TITLE: Implementing Bootstrap Pills with Dropdown Menu
DESCRIPTION: Example of Bootstrap navigation pills with dropdown menu integration. Shows the implementation of pill-style navigation with dropdown functionality and proper accessibility attributes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_15

LANGUAGE: HTML
CODE:
```
<ul class="nav nav-pills">
    <li class="nav-item">
      <a class="nav-link active" aria-current="page" href="#">Active</a>
    </li>
    <li class="nav-item dropdown">
      <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-expanded="false">Dropdown</a>
      <ul class="dropdown-menu">
        <li><a class="dropdown-item" href="#">Action</a></li>
        <li><a class="dropdown-item" href="#">Another action</a></li>
        <li><a class="dropdown-item" href="#">Something else here</a></li>
        <li><hr class="dropdown-divider"></li>
        <li><a class="dropdown-item" href="#">Separated link</a></li>
      </ul>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Link</a>
    </li>
    <li class="nav-item">
      <a class="nav-link disabled" aria-disabled="true">Disabled</a>
    </li>
  </ul>
```

----------------------------------------

TITLE: Setting Custom Boundary for Tooltip Positioning
DESCRIPTION: JavaScript example showing how to set a custom boundary for tooltip positioning using the popperConfig option. This is useful when dealing with scrollable containers.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/tooltips.mdx#2025-04-23_snippet_4

LANGUAGE: javascript
CODE:
```
const tooltip = new bootstrap.Tooltip('#example', {
  boundary: document.body // or document.querySelector('#boundary')
})
```

----------------------------------------

TITLE: Customizing Bootstrap Buttons with CSS Variables
DESCRIPTION: This SCSS snippet shows how to create a custom button modifier class using CSS variables. It demonstrates reassigning Bootstrap's CSS variables with a mixture of custom CSS and Sass variables.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/buttons.mdx#2025-04-23_snippet_18

LANGUAGE: scss
CODE:
```
.btn-bd-primary {
  --bs-btn-font-weight: 600;
  --bs-btn-color: var(--bs-white);
  --bs-btn-bg: var(--bd-violet-bg);
  --bs-btn-border-color: var(--bd-violet-bg);
  --bs-btn-hover-color: var(--bs-white);
  --bs-btn-hover-bg: #{shade-color($bd-violet, 10%)};
  --bs-btn-hover-border-color: #{shade-color($bd-violet, 10%)};
  --bs-btn-focus-shadow-rgb: var(--bd-violet-rgb);
  --bs-btn-active-color: var(--bs-btn-hover-color);
  --bs-btn-active-bg: #{shade-color($bd-violet, 20%)};
  --bs-btn-active-border-color: #{shade-color($bd-violet, 20%)};
}
```

----------------------------------------

TITLE: Parcel NPM Script Configuration
DESCRIPTION: NPM script configuration in package.json for running Parcel development server.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/parcel.mdx#2025-04-23_snippet_5

LANGUAGE: json
CODE:
```
{
   "scripts": {
     "start": "parcel serve src/index.html --public-url / --dist-dir dist",
     "test": "echo \"Error: no test specified\" && exit 1"
   }
}
```

----------------------------------------

TITLE: Basic Offcanvas Component Implementation
DESCRIPTION: Shows a basic offcanvas sidebar component with a header and body content. The component is shown by default using the .show class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/offcanvas.mdx#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
<div class="offcanvas offcanvas-start show" tabindex="-1" id="offcanvas" aria-labelledby="offcanvasLabel">
    <div class="offcanvas-header">
      <h5 class="offcanvas-title" id="offcanvasLabel">Offcanvas</h5>
      <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
      Content for the offcanvas goes here. You can place just about any Bootstrap component or custom elements here.
    </div>
  </div>
```

----------------------------------------

TITLE: Horizontal Stack Inline Form
DESCRIPTION: Creates an inline form layout using .hstack with input, buttons, and vertical rule.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/stacks.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<div class="hstack gap-3">
    <input class="form-control me-auto" type="text" placeholder="Add your item here..." aria-label="Add your item here...">
    <button type="button" class="btn btn-secondary">Submit</button>
    <div class="vr"></div>
    <button type="button" class="btn btn-outline-danger">Reset</button>
  </div>
```

----------------------------------------

TITLE: Basic Bootstrap Popover Initialization
DESCRIPTION: This snippet shows the basic method to initialize a single popover via JavaScript. It selects an element by ID and creates a new Bootstrap Popover instance with optional configuration.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/popovers.mdx#2025-04-23_snippet_4

LANGUAGE: js
CODE:
```
const exampleEl = document.getElementById('example')
const popover = new bootstrap.Popover(exampleEl, options)
```

----------------------------------------

TITLE: Sass Configuration for Bootstrap
DESCRIPTION: Optional Sass configuration to silence deprecation warnings.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/parcel.mdx#2025-04-23_snippet_6

LANGUAGE: javascript
CODE:
```
module.exports = {
  silenceDeprecations: ['import', 'mixed-decls', 'color-functions', 'global-builtin']
}
```

----------------------------------------

TITLE: Initializing Bootstrap Alert Component with JavaScript
DESCRIPTION: Code to initialize Bootstrap alert components by selecting all elements with the 'alert' class and creating Alert instances.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/alerts.mdx#2025-04-23_snippet_0

LANGUAGE: javascript
CODE:
```
const alertList = document.querySelectorAll('.alert')
const alerts = [...alertList].map(element => new bootstrap.Alert(element))
```

----------------------------------------

TITLE: Sizing Cards with Custom CSS in Bootstrap
DESCRIPTION: Demonstrates how to set a card's width using inline CSS styles. This approach allows for precise control over card dimensions by specifying an exact width (18rem in this example).
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/card.mdx#2025-04-23_snippet_14

LANGUAGE: JSX
CODE:
```
<div class="card" style="width: 18rem;">
    <div class="card-body">
      <h5 class="card-title">Special title treatment</h5>
      <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
      <a href="#" class="btn btn-primary">Go somewhere</a>
    </div>
  </div>
```

----------------------------------------

TITLE: Align Items Examples in Bootstrap
DESCRIPTION: Shows different align-items utilities for controlling flex item alignment on the cross axis
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/flex.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<div class="d-flex align-items-start">...</div>
<div class="d-flex align-items-end">...</div>
<div class="d-flex align-items-center">...</div>
<div class="d-flex align-items-baseline">...</div>
<div class="d-flex align-items-stretch">...</div>
```

----------------------------------------

TITLE: Initializing Bootstrap Collapse Elements with JavaScript
DESCRIPTION: JavaScript code for manually enabling collapse functionality on elements with the .collapse class. It selects all collapse elements and creates new Collapse instances for each.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/collapse.mdx#2025-04-23_snippet_3

LANGUAGE: js
CODE:
```
const collapseElementList = document.querySelectorAll('.collapse')
const collapseList = [...collapseElementList].map(collapseEl => new bootstrap.Collapse(collapseEl))
```

----------------------------------------

TITLE: Fluid Bootstrap Container Implementation
DESCRIPTION: Implementation of a fluid container that spans the full viewport width at all breakpoints.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/containers.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<div class="container-fluid">
  ...
</div>
```

----------------------------------------

TITLE: Creating Animated Striped Progress Bars in HTML
DESCRIPTION: This example shows how to add animation to striped progress bars using the .progress-bar-animated class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/progress.mdx#2025-04-23_snippet_7

LANGUAGE: HTML
CODE:
```
<div class="progress" role="progressbar" aria-label="Animated striped example" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100">
    <div class="progress-bar progress-bar-striped progress-bar-animated" style="width: 75%"></div>
  </div>
```

----------------------------------------

TITLE: Disabled Close Button Implementation in HTML
DESCRIPTION: Implementation of a disabled close button which has reduced opacity and prevents hover and active states with pointer-events: none and user-select: none.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/close-button.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<button type="button" class="btn-close" disabled aria-label="Close"></button>
```

----------------------------------------

TITLE: Vertical Alignment Examples with Bootstrap Grid
DESCRIPTION: Demonstrates vertical alignment of columns using align-items-* classes in Bootstrap's grid system. Shows alignment at start, center, and end positions.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/columns.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<div class="container text-center">
    <div class="row align-items-start">
      <div class="col">
        One of three columns
      </div>
      <div class="col">
        One of three columns
      </div>
      <div class="col">
        One of three columns
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Implementing Display Headings in Bootstrap
DESCRIPTION: Code for implementing Bootstrap's display headings (display-1 through display-6), which provide larger, more opinionated heading styles compared to traditional headings.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/typography.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<h1 class="display-1">Display 1</h1>
<h1 class="display-2">Display 2</h1>
<h1 class="display-3">Display 3</h1>
<h1 class="display-4">Display 4</h1>
<h1 class="display-5">Display 5</h1>
<h1 class="display-6">Display 6</h1>
```

----------------------------------------

TITLE: Creating a Card Body in Bootstrap
DESCRIPTION: Shows the basic building block of a Bootstrap card - the card-body class. This is used whenever you need a padded section within a card component.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/card.mdx#2025-04-23_snippet_1

LANGUAGE: JSX
CODE:
```
<div class="card">
    <div class="card-body">
      This is some text within a card body.
    </div>
  </div>
```

----------------------------------------

TITLE: Implementing Vertical Stack Layout in Bootstrap
DESCRIPTION: Creates a vertical stack layout using the .vstack class with gap utilities for spacing between items.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/stacks.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<div class="vstack gap-3">
    <div class="p-2">First item</div>
    <div class="p-2">Second item</div>
    <div class="p-2">Third item</div>
  </div>
```

----------------------------------------

TITLE: Using Clearfix HTML Class
DESCRIPTION: Example of applying the clearfix utility class to a parent element in HTML to clear floated content.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/clearfix.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<div class="clearfix">...</div>
```

----------------------------------------

TITLE: Implementing align-content-end in Bootstrap Flexbox
DESCRIPTION: Uses Bootstrap's d-flex, align-content-end, and flex-wrap utilities to align flex items at the end of the container along the cross axis, pushing all items to the bottom of the container.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/flex.mdx#2025-04-23_snippet_13

LANGUAGE: html
CODE:
```
<div class="d-flex align-content-end flex-wrap">...</div>
```

----------------------------------------

TITLE: Creating Equal-Width Nav Element in Bootstrap
DESCRIPTION: Shows how to implement equal-width navigation using the <nav> element with .nav-justified, providing a cleaner markup approach without requiring list elements.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_12

LANGUAGE: html
CODE:
```
<nav class="nav nav-pills nav-justified">
    <a class="nav-link active" aria-current="page" href="#">Active</a>
    <a class="nav-link" href="#">Much longer nav link</a>
    <a class="nav-link" href="#">Link</a>
    <a class="nav-link disabled" aria-disabled="true">Disabled</a>
  </nav>
```

----------------------------------------

TITLE: Changing Visual Order of Flex Items in Bootstrap
DESCRIPTION: This example shows how to use the .order-* classes to change the visual order of flex items within a flex container, regardless of their order in the DOM.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/flex.mdx#2025-04-23_snippet_11

LANGUAGE: HTML
CODE:
```
<div class="d-flex flex-nowrap">
    <div class="order-3 p-2">First flex item</div>
    <div class="order-2 p-2">Second flex item</div>
    <div class="order-1 p-2">Third flex item</div>
  </div>
```

----------------------------------------

TITLE: Toggling All Buttons Using Bootstrap JavaScript Methods
DESCRIPTION: This example demonstrates how to use Bootstrap's JavaScript methods to toggle all buttons on a page. It uses querySelectorAll to select all buttons and applies the toggle method to each.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/buttons.mdx#2025-04-23_snippet_17

LANGUAGE: javascript
CODE:
```
document.querySelectorAll('.btn').forEach(buttonElement => {
  const button = bootstrap.Button.getOrCreateInstance(buttonElement)
  button.toggle()
})
```

----------------------------------------

TITLE: Creating Thicker Dividers with Padding Utilities
DESCRIPTION: Using padding utilities with <hr> elements to create thicker dividers instead of relying on border properties.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/migration.mdx#2025-04-23_snippet_9

LANGUAGE: html
CODE:
```
<hr class="py-1">
```

LANGUAGE: html
CODE:
```
<hr class="my-5"/>
```

----------------------------------------

TITLE: Initializing Bootstrap Tabs via JavaScript
DESCRIPTION: Shows how to enable tabs programmatically by initializing each tab individually with JavaScript. The example demonstrates attaching event listeners to trigger tab activation.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_21

LANGUAGE: javascript
CODE:
```
const triggerTabList = document.querySelectorAll('#myTab button')
triggerTabList.forEach(triggerEl => {
  const tabTrigger = new bootstrap.Tab(triggerEl)

  triggerEl.addEventListener('click', event => {
    event.preventDefault()
    tabTrigger.show()
  })
})
```

----------------------------------------

TITLE: Installing Bootstrap via Composer
DESCRIPTION: Command to install Bootstrap using Composer, a dependency manager for PHP. This method is suitable for PHP projects using Composer.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/download.mdx#2025-04-23_snippet_8

LANGUAGE: sh
CODE:
```
composer require twbs/bootstrap:[[config:current_version]]
```

----------------------------------------

TITLE: Basic Border HTML Examples
DESCRIPTION: Examples showing how to add or remove borders using Bootstrap's border utilities.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/borders.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<span class="border"></span>
<span class="border-top"></span>
<span class="border-end"></span>
<span class="border-bottom"></span>
<span class="border-start"></span>
```

----------------------------------------

TITLE: Edge Positioning Elements in Bootstrap
DESCRIPTION: Shows how to position elements at various edges using Bootstrap's position utilities with top, start, bottom, and end properties.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/position.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<div class="position-relative">
    <div class="position-absolute top-0 start-0"></div>
    <div class="position-absolute top-0 end-0"></div>
    <div class="position-absolute top-50 start-50"></div>
    <div class="position-absolute bottom-50 end-50"></div>
    <div class="position-absolute bottom-0 start-0"></div>
    <div class="position-absolute bottom-0 end-0"></div>
  </div>
```

----------------------------------------

TITLE: Creating a Kitchen Sink Card Example in Bootstrap
DESCRIPTION: A comprehensive example of a card with multiple content types combined, including an image, text content, list group, and links. This demonstrates how various card elements can be combined in a single component.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/card.mdx#2025-04-23_snippet_7

LANGUAGE: JSX
CODE:
```
<div class="card" style="width: 18rem;">
    <Placeholder width="100%" height="180" class="card-img-top" text="Image cap" />
    <div class="card-body">
      <h5 class="card-title">Card title</h5>
      <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
    </div>
    <ul class="list-group list-group-flush">
      <li class="list-group-item">An item</li>
      <li class="list-group-item">A second item</li>
      <li class="list-group-item">A third item</li>
    </ul>
    <div class="card-body">
      <a href="#" class="card-link">Card link</a>
      <a href="#" class="card-link">Another link</a>
    </div>
  </div>
```

----------------------------------------

TITLE: Implementing File Inputs in Bootstrap
DESCRIPTION: This example shows various types of file input controls in Bootstrap, including default, multiple file selection, disabled, and sized variants.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/form-control.mdx#2025-04-23_snippet_5

LANGUAGE: HTML
CODE:
```
<div class="mb-3">
    <label for="formFile" class="form-label">Default file input example</label>
    <input class="form-control" type="file" id="formFile">
  </div>
  <div class="mb-3">
    <label for="formFileMultiple" class="form-label">Multiple files input example</label>
    <input class="form-control" type="file" id="formFileMultiple" multiple>
  </div>
  <div class="mb-3">
    <label for="formFileDisabled" class="form-label">Disabled file input example</label>
    <input class="form-control" type="file" id="formFileDisabled" disabled>
  </div>
  <div class="mb-3">
    <label for="formFileSm" class="form-label">Small file input example</label>
    <input class="form-control form-control-sm" id="formFileSm" type="file">
  </div>
  <div>
    <label for="formFileLg" class="form-label">Large file input example</label>
    <input class="form-control form-control-lg" id="formFileLg" type="file">
  </div>
```

----------------------------------------

TITLE: Implementing Default Custom Select in Bootstrap
DESCRIPTION: Uses the .form-select class to apply custom styles to a native <select> element. This example shows a basic select menu with options.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/select.mdx#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
<select class="form-select" aria-label="Default select example">
    <option selected>Open this select menu</option>
    <option value="1">One</option>
    <option value="2">Two</option>
    <option value="3">Three</option>
  </select>
```

----------------------------------------

TITLE: Creating Actionable List Group with Links
DESCRIPTION: Demonstrates how to create clickable list group items using anchor tags with the 'list-group-item-action' class, including active and disabled states.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/list-group.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<div class="list-group">
    <a href="#" class="list-group-item list-group-item-action active" aria-current="true">
      The current link item
    </a>
    <a href="#" class="list-group-item list-group-item-action">A second link item</a>
    <a href="#" class="list-group-item list-group-item-action">A third link item</a>
    <a href="#" class="list-group-item list-group-item-action">A fourth link item</a>
    <a href="#" class="list-group-item list-group-item-action disabled" aria-disabled="true">A disabled link item</a>
  </div>
```

----------------------------------------

TITLE: Demonstrating Max-Width Utility in Bootstrap HTML
DESCRIPTION: This snippet shows how to use Bootstrap's max-width utility class (mw-100) to limit an element's width to 100% of its parent container, even when its content would normally exceed that width.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/sizing.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<div style="width: 50%; height: 100px;">
    <div class="mw-100" style="width: 200%;">Max-width 100%</div>
  </div>
```

----------------------------------------

TITLE: Color Contrast Function Usage
DESCRIPTION: Updated color contrast function replacing the deprecated YIQ color space function with new variable names.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/migration.mdx#2025-04-23_snippet_5

LANGUAGE: scss
CODE:
```
$min-contrast-ratio
$color-contrast-dark
$color-contrast-light
```

----------------------------------------

TITLE: Fixed Bottom Position in Bootstrap
DESCRIPTION: Shows how to position an element fixed at the bottom of the viewport using Bootstrap's fixed-bottom class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/position.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<div class="fixed-bottom">...</div>
```

----------------------------------------

TITLE: Adding Tooltips and Popovers to Bootstrap Modals
DESCRIPTION: Shows how to implement tooltips and popovers within modal dialogs, including button triggers and hover effects. The example includes proper data attributes for Bootstrap's JavaScript functionality.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/modal.mdx#2025-04-23_snippet_6

LANGUAGE: html
CODE:
```
<div class="modal-body">
  <h2 class="fs-5">Popover in a modal</h2>
  <p>This <button class="btn btn-secondary" data-bs-toggle="popover" title="Popover title" data-bs-content="Popover body content is set in this attribute.">button</button> triggers a popover on click.</p>
  <hr>
  <h2 class="fs-5">Tooltips in a modal</h2>
  <p><a href="#" data-bs-toggle="tooltip" title="Tooltip">This link</a> and <a href="#" data-bs-toggle="tooltip" title="Tooltip">that link</a> have tooltips on hover.</p>
</div>
```

----------------------------------------

TITLE: Sizing Cards with Grid System in Bootstrap
DESCRIPTION: Demonstrates how to use Bootstrap's grid system to control card sizes and layout. The example uses col-sm-6 classes to create two cards side by side on screens sm and larger, with appropriate spacing.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/card.mdx#2025-04-23_snippet_12

LANGUAGE: JSX
CODE:
```
<div class="row">
    <div class="col-sm-6 mb-3 mb-sm-0">
      <div class="card">
        <div class="card-body">
          <h5 class="card-title">Special title treatment</h5>
          <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
          <a href="#" class="btn btn-primary">Go somewhere</a>
        </div>
      </div>
    </div>
    <div class="col-sm-6">
      <div class="card">
        <div class="card-body">
          <h5 class="card-title">Special title treatment</h5>
          <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
          <a href="#" class="btn btn-primary">Go somewhere</a>
        </div>
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Importing Bootstrap JavaScript
DESCRIPTION: JavaScript import statements for Bootstrap's JS components with examples of both full and individual imports.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/parcel.mdx#2025-04-23_snippet_8

LANGUAGE: javascript
CODE:
```
// Import all of Bootstrap's JS
import * as bootstrap from 'bootstrap'

// Or import individual components
import Alert from 'bootstrap/js/dist/alert'

// or, specify which plugins you need:
import { Tooltip, Toast, Popover } from 'bootstrap'
```

----------------------------------------

TITLE: Implementing Horizontal Stack Layout in Bootstrap
DESCRIPTION: Creates a horizontal stack layout using the .hstack class with gap utilities for spacing between items.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/stacks.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<div class="hstack gap-3">
    <div class="p-2">First item</div>
    <div class="p-2">Second item</div>
    <div class="p-2">Third item</div>
  </div>
```

----------------------------------------

TITLE: Horizontal Bootstrap Cards
DESCRIPTION: Demonstrates how to create horizontal card layouts using Bootstrap's grid system and utility classes. Includes responsive behavior for mobile devices.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/card.mdx#2025-04-23_snippet_18

LANGUAGE: HTML
CODE:
```
<div class="card mb-3" style="max-width: 540px;">
    <div class="row g-0">
      <div class="col-md-4">
        <Placeholder width="100%" height="250" text="Image" class="img-fluid rounded-start" />
      </div>
      <div class="col-md-8">
        <div class="card-body">
          <h5 class="card-title">Card title</h5>
          <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
          <p class="card-text"><small class="text-body-secondary">Last updated 3 mins ago</small></p>
        </div>
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Initializing Bootstrap Modal and Dropdown Components in JavaScript
DESCRIPTION: Demonstrates how to create new instances of Bootstrap Modal and Dropdown components using either a DOM element or a CSS selector as the first argument.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/migration.mdx#2025-04-23_snippet_21

LANGUAGE: javascript
CODE:
```
const modal = new bootstrap.Modal('#myModal')
const dropdown = new bootstrap.Dropdown('[data-bs-toggle="dropdown"]')
```

----------------------------------------

TITLE: Creating Flush Bootstrap Accordion in HTML
DESCRIPTION: This example shows how to implement a flush-style accordion using the 'accordion-flush' class. This removes some borders and rounded corners for an edge-to-edge appearance within the parent container.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/accordion.mdx#2025-04-23_snippet_1

LANGUAGE: HTML
CODE:
```
<div class="accordion accordion-flush" id="accordionFlushExample">
    <div class="accordion-item">
      <h2 class="accordion-header">
        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseOne" aria-expanded="false" aria-controls="flush-collapseOne">
          Accordion Item #1
        </button>
      </h2>
      <div id="flush-collapseOne" class="accordion-collapse collapse" data-bs-parent="#accordionFlushExample">
        <div class="accordion-body">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the first item's accordion body.</div>
      </div>
    </div>
    <div class="accordion-item">
      <h2 class="accordion-header">
        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseTwo" aria-expanded="false" aria-controls="flush-collapseTwo">
          Accordion Item #2
        </button>
      </h2>
      <div id="flush-collapseTwo" class="accordion-collapse collapse" data-bs-parent="#accordionFlushExample">
        <div class="accordion-body">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the second item's accordion body. Let's imagine this being filled with some actual content.</div>
      </div>
    </div>
    <div class="accordion-item">
      <h2 class="accordion-header">
        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseThree" aria-expanded="false" aria-controls="flush-collapseThree">
          Accordion Item #3
        </button>
      </h2>
      <div id="flush-collapseThree" class="accordion-collapse collapse" data-bs-parent="#accordionFlushExample">
        <div class="accordion-body">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.</div>
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Horizontal Stack with Vertical Rule
DESCRIPTION: Shows horizontal stack layout with vertical rule separator between items.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/stacks.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<div class="hstack gap-3">
    <div class="p-2">First item</div>
    <div class="p-2 ms-auto">Second item</div>
    <div class="vr"></div>
    <div class="p-2">Third item</div>
  </div>
```

----------------------------------------

TITLE: Displaying HTML Abbreviation Element Example
DESCRIPTION: This HTML snippet shows how to use the <abbr> element for abbreviations, specifically demonstrating its use for 'HTML' (HyperText Markup Language). It's wrapped in a Bootstrap example container.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/docsref.mdx#2025-04-23_snippet_3

LANGUAGE: HTML
CODE:
```
<div class="bd-example">
  The <abbr title="HyperText Markup Language">HTML</abbr> abbreviation element.
</div>
```

----------------------------------------

TITLE: Non-interactive Dropdown Items
DESCRIPTION: Example showing both non-interactive text items and clickable links in a dropdown menu using dropdown-item-text class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_14

LANGUAGE: HTML
CODE:
```
<ul class="dropdown-menu">
    <li><span class="dropdown-item-text">Dropdown item text</span></li>
    <li><a class="dropdown-item" href="#">Action</a></li>
    <li><a class="dropdown-item" href="#">Another action</a></li>
    <li><a class="dropdown-item" href="#">Something else here</a></li>
  </ul>
```

----------------------------------------

TITLE: Using Visually Hidden Mixins in SCSS
DESCRIPTION: This SCSS snippet shows how to use the visually-hidden and visually-hidden-focusable mixins in custom class definitions. These mixins provide the same functionality as their corresponding classes but allow for more flexible integration into existing stylesheets.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/visually-hidden.mdx#2025-04-23_snippet_1

LANGUAGE: SCSS
CODE:
```
// Usage as a mixin

.visually-hidden-title {
  @include visually-hidden;
}

.skip-navigation {
  @include visually-hidden-focusable;
}
```

----------------------------------------

TITLE: Adding Captions to Bootstrap Tables
DESCRIPTION: These snippets show how to add captions to Bootstrap tables, including positioning the caption at the top of the table using the 'caption-top' class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/tables.mdx#2025-04-23_snippet_9

LANGUAGE: html
CODE:
```
<table class="table table-sm">
  <caption>List of users</caption>
  <thead>
    ...
  </thead>
  <tbody>
    ...
  </tbody>
</table>
```

LANGUAGE: html
CODE:
```
<table class="table caption-top">
    <caption>List of users</caption>
    <thead>
      <tr>
        <th scope="col">#</th>
        <th scope="col">First</th>
        <th scope="col">Last</th>
        <th scope="col">Handle</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <th scope="row">1</th>
        <td>Mark</td>
        <td>Otto</td>
        <td>@mdo</td>
      </tr>
      <tr>
        <th scope="row">2</th>
        <td>Jacob</td>
        <td>Thornton</td>
        <td>@fat</td>
      </tr>
      <tr>
        <th scope="row">3</th>
        <td>John</td>
        <td>Doe</td>
        <td>@social</td>
      </tr>
    </tbody>
  </table>
```

----------------------------------------

TITLE: Using Bootstrap Opacity Classes in HTML
DESCRIPTION: Demonstrates the usage of Bootstrap's opacity utility classes ranging from 0% to 100% transparency. The classes follow the pattern .opacity-{value} where value can be 0, 25, 50, 75, or 100.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/opacity.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<div class="opacity-100">...</div>
<div class="opacity-75">...</div>
<div class="opacity-50">...</div>
<div class="opacity-25">...</div>
<div class="opacity-0">...</div>
```

----------------------------------------

TITLE: Implementing Bottom Offcanvas in Bootstrap
DESCRIPTION: This snippet illustrates the creation of a bottom-positioned offcanvas component in Bootstrap. It includes a toggle button and the offcanvas structure with a header and body.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/offcanvas.mdx#2025-04-23_snippet_7

LANGUAGE: HTML
CODE:
```
<button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasBottom" aria-controls="offcanvasBottom">Toggle bottom offcanvas</button>

<div class="offcanvas offcanvas-bottom" tabindex="-1" id="offcanvasBottom" aria-labelledby="offcanvasBottomLabel">
  <div class="offcanvas-header">
    <h5 class="offcanvas-title" id="offcanvasBottomLabel">Offcanvas bottom</h5>
    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
  </div>
  <div class="offcanvas-body small">
    ...
  </div>
</div>
```

----------------------------------------

TITLE: Flex Fill Usage in Bootstrap
DESCRIPTION: Shows how to force sibling elements to equal widths while taking up all available space
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/flex.mdx#2025-04-23_snippet_6

LANGUAGE: html
CODE:
```
<div class="d-flex">
    <div class="p-2 flex-fill">Flex item with a lot of content</div>
    <div class="p-2 flex-fill">Flex item</div>
    <div class="p-2 flex-fill">Flex item</div>
  </div>
```

----------------------------------------

TITLE: Applying Text-Background Utilities to Cards in HTML
DESCRIPTION: Shows how to use text-bg-* utility classes on card components to set background and contrasting text colors for the entire card.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/color-background.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<div class="card text-bg-primary mb-3" style="max-width: 18rem;">
    <div class="card-header">Header</div>
    <div class="card-body">
      <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
    </div>
  </div>
  <div class="card text-bg-info mb-3" style="max-width: 18rem;">
    <div class="card-header">Header</div>
    <div class="card-body">
      <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
    </div>
  </div>
```

----------------------------------------

TITLE: Creating Radio Button Group in HTML with Bootstrap
DESCRIPTION: Shows how to create a button group with radio button-like toggle functionality using Bootstrap classes and input elements.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/button-group.mdx#2025-04-23_snippet_5

LANGUAGE: HTML
CODE:
```
<div class="btn-group" role="group" aria-label="Basic radio toggle button group">
    <input type="radio" class="btn-check" name="btnradio" id="btnradio1" autocomplete="off" checked>
    <label class="btn btn-outline-primary" for="btnradio1">Radio 1</label>

    <input type="radio" class="btn-check" name="btnradio" id="btnradio2" autocomplete="off">
    <label class="btn btn-outline-primary" for="btnradio2">Radio 2</label>

    <input type="radio" class="btn-check" name="btnradio" id="btnradio3" autocomplete="off">
    <label class="btn btn-outline-primary" for="btnradio3">Radio 3</label>
  </div>
```

----------------------------------------

TITLE: Implementing Visually Hidden Elements with HTML and Bootstrap Classes
DESCRIPTION: This snippet demonstrates how to use Bootstrap's visually hidden classes to create elements that are hidden visually but still accessible to screen readers. It includes examples of `.visually-hidden` and `.visually-hidden-focusable` classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/visually-hidden.mdx#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
<h2 class="visually-hidden">Title for screen readers</h2>
  <a class="visually-hidden-focusable" href="#content">Skip to main content</a>
  <div class="visually-hidden-focusable">A container with a <a href="#">focusable element</a>.</div>
```

----------------------------------------

TITLE: Compiled CSS for Min-width Media Queries
DESCRIPTION: This snippet shows how the Sass mixins for min-width media queries compile into standard CSS media queries. It includes examples for different breakpoints from small devices to XX-Large devices.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/breakpoints.mdx#2025-04-23_snippet_2

LANGUAGE: scss
CODE:
```
// X-Small devices (portrait phones, less than 576px)
// No media query for `xs` since this is the default in Bootstrap

// Small devices (landscape phones, 576px and up)
@media (min-width: 576px) { ... }

// Medium devices (tablets, 768px and up)
@media (min-width: 768px) { ... }

// Large devices (desktops, 992px and up)
@media (min-width: 992px) { ... }

// X-Large devices (large desktops, 1200px and up)
@media (min-width: 1200px) { ... }

// XX-Large devices (larger desktops, 1400px and up)
@media (min-width: 1400px) { ... }
```

----------------------------------------

TITLE: Data Attribute Usage for JavaScript Functionality
DESCRIPTION: Shows Bootstrap's approach of using HTML data attributes to trigger JavaScript functionality without writing custom JavaScript code.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/extend/approach.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<!-- Using data attributes instead of JavaScript -->
<button data-bs-toggle="modal" data-bs-target="#exampleModal">
  Launch modal
</button>
```

----------------------------------------

TITLE: Small Split Button Dropdown Implementation
DESCRIPTION: Shows implementation of small-sized split button dropdowns using the btn-sm class. Includes both regular dropdown button and split button variations.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<div class="btn-group">
  <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
    Small button
  </button>
  <ul class="dropdown-menu">
    ...
  </ul>
</div>
<div class="btn-group">
  <button class="btn btn-secondary btn-sm" type="button">
    Small split button
  </button>
  <button type="button" class="btn btn-sm btn-secondary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
    <span class="visually-hidden">Toggle Dropdown</span>
  </button>
  <ul class="dropdown-menu">
    ...
  </ul>
</div>
```

----------------------------------------

TITLE: Implementing Horizontal Gutters in Bootstrap Grid
DESCRIPTION: This example demonstrates how to use the .gx-* class to control horizontal gutter widths in a Bootstrap grid. It also shows how to adjust the container padding to prevent overflow with larger gutters.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/gutters.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<div class="container px-4 text-center">
    <div class="row gx-5">
      <div class="col">
        <div class="p-3">Custom column padding</div>
      </div>
      <div class="col">
        <div class="p-3">Custom column padding</div>
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Applying Text Decoration in HTML
DESCRIPTION: This snippet demonstrates how to use Bootstrap's text decoration classes to add underline, line-through, or remove text decoration.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/text.mdx#2025-04-23_snippet_9

LANGUAGE: HTML
CODE:
```
<p class="text-decoration-underline">This text has a line underneath it.</p>
<p class="text-decoration-line-through">This text has a line going through it.</p>
<a href="#" class="text-decoration-none">This link has its text decoration removed</a>
```

----------------------------------------

TITLE: Practical Position Examples in Bootstrap
DESCRIPTION: Real-world examples showing position utilities used with Bootstrap components like badges and buttons.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/position.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<button type="button" class="btn btn-primary position-relative">
    Mails <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill text-bg-secondary">+99 <span class="visually-hidden">unread messages</span></span>
  </button>

  <div class="position-relative py-2 px-4 text-bg-secondary border border-secondary rounded-pill">
    Marker <svg width="1em" height="1em" viewBox="0 0 16 16" class="position-absolute top-100 start-50 translate-middle mt-1" fill="var(--bs-secondary)" xmlns="http://www.w3.org/2000/svg" aria-hidden="true"><path d="M7.247 11.14L2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z"/></svg>
  </div>

  <button type="button" class="btn btn-primary position-relative">
    Alerts <span class="position-absolute top-0 start-100 translate-middle badge border border-light rounded-circle bg-danger p-2"><span class="visually-hidden">unread messages</span></span>
  </button>
```

----------------------------------------

TITLE: Implementing a Fully Disabled Form Fieldset in Bootstrap
DESCRIPTION: Example of a Bootstrap form with a disabled fieldset, which disables all form controls within it including inputs, selects, and buttons. Shows proper implementation with accessibility considerations.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/overview.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<form>
    <fieldset disabled>
      <legend>Disabled fieldset example</legend>
      <div class="mb-3">
        <label for="disabledTextInput" class="form-label">Disabled input</label>
        <input type="text" id="disabledTextInput" class="form-control" placeholder="Disabled input">
      </div>
      <div class="mb-3">
        <label for="disabledSelect" class="form-label">Disabled select menu</label>
        <select id="disabledSelect" class="form-select">
          <option>Disabled select</option>
        </select>
      </div>
      <div class="mb-3">
        <div class="form-check">
          <input class="form-check-input" type="checkbox" id="disabledFieldsetCheck" disabled>
          <label class="form-check-label" for="disabledFieldsetCheck">
            Can't check this
          </label>
        </div>
      </div>
      <button type="submit" class="btn btn-primary">Submit</button>
    </fieldset>
  </form>
```

----------------------------------------

TITLE: Adding Images to Bootstrap Cards
DESCRIPTION: Shows how to add images to a card using the card-img-top class. This example demonstrates image placement at the top of the card with supporting text below it in the card-body section.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/card.mdx#2025-04-23_snippet_3

LANGUAGE: JSX
CODE:
```
<div class="card" style="width: 18rem;">
    <Placeholder width="100%" height="180" class="card-img-top" text="Image cap" />
    <div class="card-body">
      <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
    </div>
  </div>
```

----------------------------------------

TITLE: Creating Nav Component with Nav Element in Bootstrap
DESCRIPTION: Demonstrates a more flexible approach using the <nav> element instead of lists, while maintaining the same styling through Bootstrap's .nav class and flexbox properties.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<nav class="nav">
    <a class="nav-link active" aria-current="page" href="#">Active</a>
    <a class="nav-link" href="#">Link</a>
    <a class="nav-link" href="#">Link</a>
    <a class="nav-link disabled" aria-disabled="true">Disabled</a>
  </nav>
```

----------------------------------------

TITLE: Centering Block-Level Image with Margin Utility in JSX
DESCRIPTION: This snippet shows how to center a block-level image using Bootstrap's .mx-auto margin utility class. It creates a 200x200 rounded placeholder centered horizontally.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/images.mdx#2025-04-23_snippet_3

LANGUAGE: jsx
CODE:
```
<Placeholder width="200" height="200" class="rounded mx-auto d-block" />
```

----------------------------------------

TITLE: Dark Theme Close Button Implementation in HTML
DESCRIPTION: Implementation of close buttons in dark theme using the data-bs-theme="dark" attribute, which inverts the button's background image using CSS filters.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/close-button.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<div data-bs-theme="dark">
    <button type="button" class="btn-close" aria-label="Close"></button>
    <button type="button" class="btn-close" disabled aria-label="Close"></button>
  </div>
```

----------------------------------------

TITLE: Implementing Text Wrapping and Overflow in HTML
DESCRIPTION: This snippet demonstrates the use of Bootstrap's text-wrap and text-nowrap classes to control text wrapping and overflow behavior.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/text.mdx#2025-04-23_snippet_1

LANGUAGE: HTML
CODE:
```
<div class="badge text-bg-primary text-wrap" style="width: 6rem;">
    This text should wrap.
  </div>
```

LANGUAGE: HTML
CODE:
```
<div class="text-nowrap bg-body-secondary border" style="width: 8rem;">
    This text should overflow the parent.
  </div>
```

----------------------------------------

TITLE: Referencing JavaScript Documentation Component
DESCRIPTION: This snippet uses a custom 'JsDocs' component to reference JavaScript documentation for a 'live-toast' functionality. It points to a file in the site's assets, likely containing JavaScript snippets or utilities.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/docsref.mdx#2025-04-23_snippet_6

LANGUAGE: JSX
CODE:
```
<JsDocs name="live-toast" file="site/src/assets/partials/snippets.js" />
```

----------------------------------------

TITLE: Basic Bootstrap Card Group Implementation
DESCRIPTION: Creates a group of three cards with equal dimensions using Bootstrap's card-group class. Each card contains an image placeholder, title, description text, and timestamp. The cards automatically align and size themselves using display: flex starting at the sm breakpoint.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/card.mdx#2025-04-23_snippet_19

LANGUAGE: jsx
CODE:
```
<div class="card-group">
    <div class="card">
      <Placeholder width="100%" height="180" class="card-img-top" text="Image cap" />
      <div class="card-body">
        <h5 class="card-title">Card title</h5>
        <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
        <p class="card-text"><small class="text-body-secondary">Last updated 3 mins ago</small></p>
      </div>
    </div>
    <div class="card">
      <Placeholder width="100%" height="180" class="card-img-top" text="Image cap" />
      <div class="card-body">
        <h5 class="card-title">Card title</h5>
        <p class="card-text">This card has supporting text below as a natural lead-in to additional content.</p>
        <p class="card-text"><small class="text-body-secondary">Last updated 3 mins ago</small></p>
      </div>
    </div>
    <div class="card">
      <Placeholder width="100%" height="180" class="card-img-top" text="Image cap" />
      <div class="card-body">
        <h5 class="card-title">Card title</h5>
        <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action.</p>
        <p class="card-text"><small class="text-body-secondary">Last updated 3 mins ago</small></p>
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Demonstrating Bootstrap Button Styles in HTML
DESCRIPTION: This snippet showcases three different Bootstrap button styles: Primary, Accent, and Light. These are custom styles specific to Bootstrap's documentation.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/docsref.mdx#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
<button class="btn btn-bd-primary">Primary button</button>
<button class="btn btn-bd-accent">Accent button</button>
<button class="btn btn-bd-light">Light button</button>
```

----------------------------------------

TITLE: Border Opacity Examples
DESCRIPTION: Examples showing different border opacity levels using inline styles and utility classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/borders.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<div class="border border-success p-2 mb-2">This is default success border</div>
<div class="border border-success p-2" style="--bs-border-opacity: .5;">This is 50% opacity success border</div>
```

----------------------------------------

TITLE: Refreshing Scrollspy for Non-visible Elements
DESCRIPTION: JavaScript code to handle scrollspy initialization for elements that become visible after tab switching. This ensures scrollspy functionality works correctly in tabbed interfaces.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/scrollspy.mdx#2025-04-23_snippet_4

LANGUAGE: javascript
CODE:
```
document.querySelectorAll('#nav-tab>[data-bs-toggle="tab"]').forEach(el => {
  el.addEventListener('shown.bs.tab', () => {
    const target = el.getAttribute('data-bs-target')
    const scrollElem = document.querySelector(`${target} [data-bs-spy="scroll"]`)
    bootstrap.ScrollSpy.getOrCreateInstance(scrollElem).refresh()
  })
})
```

----------------------------------------

TITLE: Adding Header and Body to Bootstrap Cards
DESCRIPTION: Shows how to create a card with a header and body section. The card-header class creates a distinct section at the top, while card-body contains the main content including title, text, and a button.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/card.mdx#2025-04-23_snippet_8

LANGUAGE: JSX
CODE:
```
<div class="card">
    <div class="card-header">
      Featured
    </div>
    <div class="card-body">
      <h5 class="card-title">Special title treatment</h5>
      <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
      <a href="#" class="btn btn-primary">Go somewhere</a>
    </div>
  </div>
```

----------------------------------------

TITLE: Implementing Small-Sized Buttons in Bootstrap
DESCRIPTION: Examples of smaller buttons using the .btn-sm class with primary and secondary button variants.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/buttons.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<button type="button" class="btn btn-primary btn-sm">Small button</button>
<button type="button" class="btn btn-secondary btn-sm">Small button</button>
```

----------------------------------------

TITLE: Creating Basic Button Group in HTML with Bootstrap
DESCRIPTION: Demonstrates how to create a basic button group using Bootstrap classes. The buttons are wrapped in a div with the class 'btn-group' and each button has the class 'btn btn-primary'.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/button-group.mdx#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
<div class="btn-group" role="group" aria-label="Basic example">
    <button type="button" class="btn btn-primary">Left</button>
    <button type="button" class="btn btn-primary">Middle</button>
    <button type="button" class="btn btn-primary">Right</button>
  </div>
```

----------------------------------------

TITLE: Implementing Basic Bootstrap Carousel with Controls in HTML
DESCRIPTION: This snippet demonstrates a basic Bootstrap carousel with three slides and previous/next controls. It uses the 'carousel' and 'carousel-inner' classes for structure, and 'carousel-item' for individual slides.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/carousel.mdx#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
<div id="carouselExample" class="carousel slide">
    <div class="carousel-inner">
      <div class="carousel-item active">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#555" background="#777" text="First slide" />
      </div>
      <div class="carousel-item">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#444" background="#666" text="Second slide" />
      </div>
      <div class="carousel-item">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#333" background="#555" text="Third slide" />
      </div>
    </div>
    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExample" data-bs-slide="prev">
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#carouselExample" data-bs-slide="next">
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Next</span>
    </button>
  </div>
```

----------------------------------------

TITLE: Creating List Group with Badges
DESCRIPTION: Shows how to add badges to list group items to indicate counts or activity using flex utilities to position the badges.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/list-group.mdx#2025-04-23_snippet_7

LANGUAGE: html
CODE:
```
<ul class="list-group">
    <li class="list-group-item d-flex justify-content-between align-items-center">
      A list item
      <span class="badge text-bg-primary rounded-pill">14</span>
    </li>
    <li class="list-group-item d-flex justify-content-between align-items-center">
      A second list item
      <span class="badge text-bg-primary rounded-pill">2</span>
    </li>
    <li class="list-group-item d-flex justify-content-between align-items-center">
      A third list item
      <span class="badge text-bg-primary rounded-pill">1</span>
    </li>
  </ul>
```

----------------------------------------

TITLE: Creating Accessible Tabs with Bootstrap Data Attributes
DESCRIPTION: Demonstrates how to implement accessible tabs in Bootstrap using data attributes without JavaScript. The example shows proper ARIA attributes and roles for accessibility compliance.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_20

LANGUAGE: html
CODE:
```
<!-- Nav tabs -->
<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item" role="presentation">
    <button class="nav-link active" id="home-tab" data-bs-toggle="tab" data-bs-target="#home" type="button" role="tab" aria-controls="home" aria-selected="true">Home</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="profile-tab" data-bs-toggle="tab" data-bs-target="#profile" type="button" role="tab" aria-controls="profile" aria-selected="false">Profile</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="messages-tab" data-bs-toggle="tab" data-bs-target="#messages" type="button" role="tab" aria-controls="messages" aria-selected="false">Messages</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="settings-tab" data-bs-toggle="tab" data-bs-target="#settings" type="button" role="tab" aria-controls="settings" aria-selected="false">Settings</button>
  </li>
</ul>

<!-- Tab panes -->
<div class="tab-content">
  <div class="tab-pane active" id="home" role="tabpanel" aria-labelledby="home-tab" tabindex="0">...</div>
  <div class="tab-pane" id="profile" role="tabpanel" aria-labelledby="profile-tab" tabindex="0">...</div>
  <div class="tab-pane" id="messages" role="tabpanel" aria-labelledby="messages-tab" tabindex="0">...</div>
  <div class="tab-pane" id="settings" role="tabpanel" aria-labelledby="settings-tab" tabindex="0">...</div>
</div>
```

----------------------------------------

TITLE: Setting Font Weight and Style in HTML
DESCRIPTION: This snippet demonstrates the use of Bootstrap's font weight (fw-*) and font style (fst-*) utilities to quickly change the appearance of text.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/text.mdx#2025-04-23_snippet_5

LANGUAGE: HTML
CODE:
```
<p class="fw-bold">Bold text.</p>
<p class="fw-bolder">Bolder weight text (relative to the parent element).</p>
<p class="fw-semibold">Semibold weight text.</p>
<p class="fw-medium">Medium weight text.</p>
<p class="fw-normal">Normal weight text.</p>
<p class="fw-light">Light weight text.</p>
<p class="fw-lighter">Lighter weight text (relative to the parent element).</p>
<p class="fst-italic">Italic text.</p>
<p class="fst-normal">Text with normal font style</p>
```

----------------------------------------

TITLE: Demonstrating Block Display in Bootstrap
DESCRIPTION: This example illustrates the use of the d-block utility class to display span elements as blocks with text background colors.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/display.mdx#2025-04-23_snippet_1

LANGUAGE: HTML
CODE:
```
<span class="d-block p-2 text-bg-primary">d-block</span>
<span class="d-block p-2 text-bg-dark">d-block</span>
```

----------------------------------------

TITLE: Grid Cards with Footers
DESCRIPTION: Implements a grid layout with cards that include footers. Shows how footers automatically align across cards while maintaining equal heights with the h-100 class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/card.mdx#2025-04-23_snippet_23

LANGUAGE: HTML
CODE:
```
<div class="row row-cols-1 row-cols-md-3 g-4">
    <div class="col">
      <div class="card h-100">
        <Placeholder width="100%" height="180" class="card-img-top" text="Image cap" />
        <div class="card-body">
          <h5 class="card-title">Card title</h5>
          <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
        </div>
        <div class="card-footer">
          <small class="text-body-secondary">Last updated 3 mins ago</small>
        </div>
      </div>
    </div>
    <div class="col">
      <div class="card h-100">
        <Placeholder width="100%" height="180" class="card-img-top" text="Image cap" />
        <div class="card-body">
          <h5 class="card-title">Card title</h5>
          <p class="card-text">This card has supporting text below as a natural lead-in to additional content.</p>
        </div>
        <div class="card-footer">
          <small class="text-body-secondary">Last updated 3 mins ago</small>
        </div>
      </div>
    </div>
    <div class="col">
      <div class="card h-100">
        <Placeholder width="100%" height="180" class="card-img-top" text="Image cap" />
        <div class="card-body">
          <h5 class="card-title">Card title</h5>
          <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action.</p>
        </div>
        <div class="card-footer">
          <small class="text-body-secondary">Last updated 3 mins ago</small>
        </div>
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Customizing Range Input Step Size
DESCRIPTION: Demonstrates how to customize the step size of a range input using the step attribute. This example uses step="0.5" to allow for decimal increments rather than the default integer values.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/range.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<label for="customRange3" class="form-label">Example range</label>
<input type="range" class="form-range" min="0" max="5" step="0.5" id="customRange3">
```

----------------------------------------

TITLE: Sizing Cards with Utility Classes in Bootstrap
DESCRIPTION: Shows how to control card width using Bootstrap's sizing utility classes. The example uses w-75 and w-50 classes to set cards at 75% and 50% of their container width respectively.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/card.mdx#2025-04-23_snippet_13

LANGUAGE: JSX
CODE:
```
<div class="card w-75 mb-3">
    <div class="card-body">
      <h5 class="card-title">Card title</h5>
      <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
      <a href="#" class="btn btn-primary">Button</a>
    </div>
  </div>

  <div class="card w-50">
    <div class="card-body">
      <h5 class="card-title">Card title</h5>
      <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
      <a href="#" class="btn btn-primary">Button</a>
    </div>
  </div>
```

----------------------------------------

TITLE: Implementing Checkbox Toggle Buttons in Bootstrap
DESCRIPTION: Examples of checkbox-style toggle buttons using .btn-check class with primary styling and standard variants.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/checks-radios.mdx#2025-04-23_snippet_13

LANGUAGE: HTML
CODE:
```
<input type="checkbox" class="btn-check" id="btn-check" autocomplete="off">
<label class="btn btn-primary" for="btn-check">Single toggle</label>

<input type="checkbox" class="btn-check" id="btn-check-2" checked autocomplete="off">
<label class="btn btn-primary" for="btn-check-2">Checked</label>

<input type="checkbox" class="btn-check" id="btn-check-3" autocomplete="off" disabled>
<label class="btn btn-primary" for="btn-check-3">Disabled</label>
```

----------------------------------------

TITLE: Implementing List Group Navigation with Bootstrap Scrollspy
DESCRIPTION: Example showing how to create a list group-based navigation with scrollspy functionality. Uses list-group for navigation and implements single-level navigation with synchronized scrolling and highlighting.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/scrollspy.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<div class="row">
  <div class="col-4">
    <div id="list-example" class="list-group">
      <a class="list-group-item list-group-item-action" href="#list-item-1">Item 1</a>
      <a class="list-group-item list-group-item-action" href="#list-item-2">Item 2</a>
      <a class="list-group-item list-group-item-action" href="#list-item-3">Item 3</a>
      <a class="list-group-item list-group-item-action" href="#list-item-4">Item 4</a>
    </div>
  </div>
  <div class="col-8">
    <div data-bs-spy="scroll" data-bs-target="#list-example" data-bs-smooth-scroll="true" class="scrollspy-example" tabindex="0">
      <h4 id="list-item-1">Item 1</h4>
      <p>...</p>
      <h4 id="list-item-2">Item 2</h4>
      <p>...</p>
      <h4 id="list-item-3">Item 3</h4>
      <p>...</p>
      <h4 id="list-item-4">Item 4</h4>
      <p>...</p>
    </div>
  </div>
</div>
```

----------------------------------------

TITLE: Creating Right-Aligned Responsive Buttons
DESCRIPTION: Implementation of right-aligned buttons on medium and larger screens using flex utilities and responsive margin classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/buttons.mdx#2025-04-23_snippet_13

LANGUAGE: html
CODE:
```
<div class="d-grid gap-2 d-md-flex justify-content-md-end">
    <button class="btn btn-primary me-md-2" type="button">Button</button>
    <button class="btn btn-primary" type="button">Button</button>
  </div>
```

----------------------------------------

TITLE: Implementing Datalist in Bootstrap Forms
DESCRIPTION: This example shows how to create a datalist input in Bootstrap, providing users with autocomplete options while allowing free-form input.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/form-control.mdx#2025-04-23_snippet_7

LANGUAGE: HTML
CODE:
```
<label for="exampleDataList" class="form-label">Datalist example</label>
  <input class="form-control" list="datalistOptions" id="exampleDataList" placeholder="Type to search...">
  <datalist id="datalistOptions">
    <option value="San Francisco">
    <option value="New York">
    <option value="Seattle">
    <option value="Los Angeles">
    <option value="Chicago">
  </datalist>
```

----------------------------------------

TITLE: Custom Component with Stretched Link
DESCRIPTION: Demonstrates using stretched-link with a custom component that requires position-relative class to contain the clickable area properly.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/stretched-link.mdx#2025-04-23_snippet_1

LANGUAGE: jsx
CODE:
```
<div class="d-flex position-relative">
    <Placeholder width="144" height="144" class="flex-shrink-0 me-3" text={false} title="Generic placeholder image22222" />
    <div>
      <h5 class="mt-0">Custom component with stretched link</h5>
      <p>This is some placeholder content for the custom component. It is intended to mimic what some real-world content would look like, and we're using it here to give the component a bit of body and size.</p>
      <a href="#" class="stretched-link">Go somewhere</a>
    </div>
  </div>
```

----------------------------------------

TITLE: Responsive Sticky Top Variations in Bootstrap
DESCRIPTION: Shows how to use responsive variations of the sticky-top utility for different viewport sizes from SM to XXL.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/position.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<div class="sticky-sm-top">Stick to the top on viewports sized SM (small) or wider</div>
<div class="sticky-md-top">Stick to the top on viewports sized MD (medium) or wider</div>
<div class="sticky-lg-top">Stick to the top on viewports sized LG (large) or wider</div>
<div class="sticky-xl-top">Stick to the top on viewports sized XL (extra-large) or wider</div>
<div class="sticky-xxl-top">Stick to the top on viewports sized XXL (extra-extra-large) or wider</div>
```

----------------------------------------

TITLE: Creating HTML Callout Component
DESCRIPTION: Basic HTML structure for a custom callout component that follows Bootstrap's base-modifier pattern.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/components.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<div class="callout">...</div>
```

----------------------------------------

TITLE: Customizing Color Modes with SCSS in Bootstrap
DESCRIPTION: This SCSS snippet shows how to create a custom 'blue' color mode by overriding Bootstrap's CSS variables.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/color-modes.mdx#2025-04-23_snippet_3

LANGUAGE: scss
CODE:
```
[data-bs-theme="blue"] {
  --bs-body-color: var(--bs-white);
  --bs-body-color-rgb: #{to-rgb($white)};
  --bs-body-bg: var(--bs-blue);
  --bs-body-bg-rgb: #{to-rgb($blue)};
  --bs-tertiary-bg: #{$blue-600};

  .dropdown-menu {
    --bs-dropdown-bg: #{mix($blue-500, $blue-600)};
    --bs-dropdown-link-active-bg: #{$blue-700};
  }

  .btn-secondary {
    --bs-btn-bg: #{mix($gray-600, $blue-400, .5)};
    --bs-btn-border-color: #{rgba($white, .25)};
    --bs-btn-hover-bg: #{darken(mix($gray-600, $blue-400, .5), 5%)};
    --bs-btn-hover-border-color: #{rgba($white, .25)};
    --bs-btn-active-bg: #{darken(mix($gray-600, $blue-400, .5), 10%)};
    --bs-btn-active-border-color: #{rgba($white, .5)};
    --bs-btn-focus-border-color: #{rgba($white, .5)};
    --bs-btn-focus-box-shadow: 0 0 0 .25rem rgba(255, 255, 255, .2);
  }
}
```

----------------------------------------

TITLE: Creating Basic Icon Links in HTML
DESCRIPTION: Demonstrates how to create icon links using Bootstrap classes and SVG icons. Shows examples of icons placed before and after the link text.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/icon-link.mdx#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
<a class="icon-link" href="#">
    <svg xmlns="http://www.w3.org/2000/svg" class="bi" viewBox="0 0 16 16" aria-hidden="true">
      <path d="M8.186 1.113a.5.5 0 0 0-.372 0L1.846 3.5l2.404.961L10.404 2l-2.218-.887zm3.564 1.426L5.596 5 8 5.961 14.154 3.5l-2.404-.961zm3.25 1.7-6.5 2.6v7.922l6.5-2.6V4.24zM7.5 14.762V6.838L1 4.239v7.923l6.5 2.6zM7.443.184a1.5 1.5 0 0 1 1.114 0l7.129 2.852A.5.5 0 0 1 16 3.5v8.662a1 1 0 0 1-.629.928l-7.185 2.874a.5.5 0 0 1-.372 0L.63 13.09a1 1 0 0 1-.63-.928V3.5a.5.5 0 0 1 .314-.464L7.443.184z"/>
    </svg>
    Icon link
  </a>
```

LANGUAGE: HTML
CODE:
```
<a class="icon-link" href="#">
    Icon link
    <svg xmlns="http://www.w3.org/2000/svg" class="bi" viewBox="0 0 16 16" aria-hidden="true">
      <path d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z"/>
    </svg>
  </a>
```

----------------------------------------

TITLE: Implementing Row Columns Gutters in Bootstrap
DESCRIPTION: This example shows how to add gutter classes to row columns in Bootstrap. It uses responsive row columns and responsive gutter classes for a flexible layout.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/gutters.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<div class="container text-center">
    <div class="row row-cols-2 row-cols-lg-5 g-2 g-lg-3">
      <div class="col">
        <div class="p-3">Row column</div>
      </div>
      <div class="col">
        <div class="p-3">Row column</div>
      </div>
      <div class="col">
        <div class="p-3">Row column</div>
      </div>
      <div class="col">
        <div class="p-3">Row column</div>
      </div>
      <div class="col">
        <div class="p-3">Row column</div>
      </div>
      <div class="col">
        <div class="p-3">Row column</div>
      </div>
      <div class="col">
        <div class="p-3">Row column</div>
      </div>
      <div class="col">
        <div class="p-3">Row column</div>
      </div>
      <div class="col">
        <div class="p-3">Row column</div>
      </div>
      <div class="col">
        <div class="p-3">Row column</div>
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Adding Custom Colors to Bootstrap Sass Map
DESCRIPTION: Demonstrates how to add new custom colors to Bootstrap's theme-colors Sass map by creating a new map and merging it with the original.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/sass.mdx#2025-04-23_snippet_7

LANGUAGE: scss
CODE:
```
// Create your own map
$custom-colors: (
  "custom-color": #900
);

// Merge the maps
$theme-colors: map-merge($theme-colors, $custom-colors);
```

----------------------------------------

TITLE: Link Hover Opacity Examples - HTML
DESCRIPTION: Shows how to implement hover-state opacity changes for links using Bootstrap utility classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/link.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<p><a class="link-opacity-10-hover" href="#">Link hover opacity 10</a></p>
<p><a class="link-opacity-25-hover" href="#">Link hover opacity 25</a></p>
<p><a class="link-opacity-50-hover" href="#">Link hover opacity 50</a></p>
<p><a class="link-opacity-75-hover" href="#">Link hover opacity 75</a></p>
<p><a class="link-opacity-100-hover" href="#">Link hover opacity 100</a></p>
```

----------------------------------------

TITLE: Defining Custom CSS Variable in SCSS
DESCRIPTION: This SCSS snippet demonstrates how to define a custom CSS variable '--color' with the value 'blue' within a '.test' class selector. This is likely used for theming or color management in Bootstrap.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/docsref.mdx#2025-04-23_snippet_2

LANGUAGE: SCSS
CODE:
```
.test {
  --color: blue;
}
```

----------------------------------------

TITLE: Verifying SRI Hash for Bootstrap Files
DESCRIPTION: Shell command to generate SRI hash for Bootstrap files using OpenSSL. This is useful for verifying the integrity of downloaded Bootstrap files.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/download.mdx#2025-04-23_snippet_2

LANGUAGE: sh
CODE:
```
openssl dgst -sha384 -binary bootstrap.min.js | openssl base64 -A
```

----------------------------------------

TITLE: Basic Close Button Implementation in HTML
DESCRIPTION: A simple implementation of Bootstrap's close button with accessibility support through aria-label for screen readers.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/close-button.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<button type="button" class="btn-close" aria-label="Close"></button>
```

----------------------------------------

TITLE: Implementing Custom File Input Groups in Bootstrap
DESCRIPTION: Examples of input groups with custom file inputs. Shows various configurations including labels and buttons combined with file input elements.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/input-group.mdx#2025-04-23_snippet_8

LANGUAGE: HTML
CODE:
```
<div class="input-group mb-3">
    <label class="input-group-text" for="inputGroupFile01">Upload</label>
    <input type="file" class="form-control" id="inputGroupFile01">
  </div>

  <div class="input-group mb-3">
    <input type="file" class="form-control" id="inputGroupFile02">
    <label class="input-group-text" for="inputGroupFile02">Upload</label>
  </div>

  <div class="input-group mb-3">
    <button class="btn btn-outline-secondary" type="button" id="inputGroupFileAddon03">Button</button>
    <input type="file" class="form-control" id="inputGroupFile03" aria-describedby="inputGroupFileAddon03" aria-label="Upload">
  </div>

  <div class="input-group">
    <input type="file" class="form-control" id="inputGroupFile04" aria-describedby="inputGroupFileAddon04" aria-label="Upload">
    <button class="btn btn-outline-secondary" type="button" id="inputGroupFileAddon04">Button</button>
  </div>
```

----------------------------------------

TITLE: Creating Crossfade Effect in Bootstrap Carousel with HTML
DESCRIPTION: This example shows how to implement a crossfade transition in a Bootstrap carousel. The 'carousel-fade' class is added to the main carousel element to enable the fade effect instead of the default slide transition.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/carousel.mdx#2025-04-23_snippet_3

LANGUAGE: HTML
CODE:
```
<div id="carouselExampleFade" class="carousel slide carousel-fade">
    <div class="carousel-inner">
      <div class="carousel-item active">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#555" background="#777" text="First slide" />
      </div>
      <div class="carousel-item">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#444" background="#666" text="Second slide" />
      </div>
      <div class="carousel-item">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#333" background="#555" text="Third slide" />
      </div>
    </div>
    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleFade" data-bs-slide="prev">
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleFade" data-bs-slide="next">
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Next</span>
    </button>
  </div>
```

----------------------------------------

TITLE: Practical Clearfix Example with Buttons
DESCRIPTION: Complete example showing clearfix usage with floating buttons, demonstrating how it prevents layout issues with floated elements.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/clearfix.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<div class="bg-info clearfix">
    <button type="button" class="btn btn-secondary float-start">Example Button floated left</button>
    <button type="button" class="btn btn-secondary float-end">Example Button floated right</button>
  </div>
```

----------------------------------------

TITLE: Focus Ring SCSS Variables
DESCRIPTION: Shows the SCSS variables used for customizing the focus ring styles globally.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/focus-ring.mdx#2025-04-23_snippet_4

LANGUAGE: scss
CODE:
```
$focus-ring-width:      .25rem;
$focus-ring-opacity:    .25;
$focus-ring-color:      rgba($primary, $focus-ring-opacity);
$focus-ring-blur:       0;
$focus-ring-box-shadow: 0 0 $focus-ring-blur $focus-ring-width $focus-ring-color;
```

----------------------------------------

TITLE: Displaying Inline Code in HTML with Bootstrap
DESCRIPTION: This HTML snippet shows how to display inline code using the code element. It emphasizes the importance of escaping HTML angle brackets for proper rendering.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/reboot.mdx#2025-04-23_snippet_8

LANGUAGE: html
CODE:
```
For example, <code>&lt;section&gt;</code> should be wrapped as inline.
```

----------------------------------------

TITLE: Implementing Captions in Bootstrap Carousel with HTML
DESCRIPTION: This snippet demonstrates how to add captions to Bootstrap carousel slides. Captions are added using the 'carousel-caption' class within each 'carousel-item'. The example also shows how to hide captions on smaller viewports using utility classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/carousel.mdx#2025-04-23_snippet_2

LANGUAGE: HTML
CODE:
```
<div id="carouselExampleCaptions" class="carousel slide">
    <div class="carousel-indicators">
      <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
      <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="1" aria-label="Slide 2"></button>
      <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="2" aria-label="Slide 3"></button>
    </div>
    <div class="carousel-inner">
      <div class="carousel-item active">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#555" background="#777" text="First slide" />
        <div class="carousel-caption d-none d-md-block">
          <h5>First slide label</h5>
          <p>Some representative placeholder content for the first slide.</p>
        </div>
      </div>
      <div class="carousel-item">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#444" background="#666" text="Second slide" />
        <div class="carousel-caption d-none d-md-block">
          <h5>Second slide label</h5>
          <p>Some representative placeholder content for the second slide.</p>
        </div>
      </div>
      <div class="carousel-item">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#333" background="#555" text="Third slide" />
        <div class="carousel-caption d-none d-md-block">
          <h5>Third slide label</h5>
          <p>Some representative placeholder content for the third slide.</p>
        </div>
      </div>
    </div>
    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="prev">
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="next">
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Next</span>
    </button>
  </div>
```

----------------------------------------

TITLE: Custom Divider Breadcrumb
DESCRIPTION: Example of breadcrumb with custom divider using CSS custom property --bs-breadcrumb-divider.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/breadcrumb.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
    <ol class="breadcrumb">
      <li class="breadcrumb-item"><a href="#">Home</a></li>
      <li class="breadcrumb-item active" aria-current="page">Library</li>
    </ol>
  </nav>
```

----------------------------------------

TITLE: Using Picture Element with Responsive Image Classes in HTML
DESCRIPTION: This HTML snippet shows how to properly use Bootstrap's image classes with the <picture> element. It specifies an SVG source and a fallback img with .img-fluid and .img-thumbnail classes applied.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/images.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<picture>
  <source srcset="..." type="image/svg+xml">
  <img src="..." class="img-fluid img-thumbnail" alt="...">
</picture>
```

----------------------------------------

TITLE: Image Cards with Bootstrap
DESCRIPTION: Examples of cards with image caps at top and bottom positions, demonstrating how to incorporate images within Bootstrap cards.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/card.mdx#2025-04-23_snippet_17

LANGUAGE: HTML
CODE:
```
<div class="card mb-3">
    <Placeholder width="100%" height="180" class="card-img-top" text="Image cap" />
    <div class="card-body">
      <h5 class="card-title">Card title</h5>
      <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
      <p class="card-text"><small class="text-body-secondary">Last updated 3 mins ago</small></p>
    </div>
  </div>
```

----------------------------------------

TITLE: Implementing Segmented Button Input Groups in Bootstrap
DESCRIPTION: Examples of input groups with segmented dropdown buttons. Shows both prepended and appended button configurations with dropdown menus.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/input-group.mdx#2025-04-23_snippet_6

LANGUAGE: HTML
CODE:
```
<div class="input-group mb-3">
    <button type="button" class="btn btn-outline-secondary">Action</button>
    <button type="button" class="btn btn-outline-secondary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
      <span class="visually-hidden">Toggle Dropdown</span>
    </button>
    <ul class="dropdown-menu">
      <li><a class="dropdown-item" href="#">Action</a></li>
      <li><a class="dropdown-item" href="#">Another action</a></li>
      <li><a class="dropdown-item" href="#">Something else here</a></li>
      <li><hr class="dropdown-divider"></li>
      <li><a class="dropdown-item" href="#">Separated link</a></li>
    </ul>
    <input type="text" class="form-control" aria-label="Text input with segmented dropdown button">
  </div>

  <div class="input-group">
    <input type="text" class="form-control" aria-label="Text input with segmented dropdown button">
    <button type="button" class="btn btn-outline-secondary">Action</button>
    <button type="button" class="btn btn-outline-secondary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
      <span class="visually-hidden">Toggle Dropdown</span>
    </button>
    <ul class="dropdown-menu dropdown-menu-end">
      <li><a class="dropdown-item" href="#">Action</a></li>
      <li><a class="dropdown-item" href="#">Another action</a></li>
      <li><a class="dropdown-item" href="#">Something else here</a></li>
      <li><hr class="dropdown-divider"></li>
      <li><a class="dropdown-item" href="#">Separated link</a></li>
    </ul>
  </div>
```

----------------------------------------

TITLE: Implementing Vertical Overflow Controls in HTML
DESCRIPTION: This snippet demonstrates how to use Bootstrap's overflow-y utility classes to control content overflow vertically. It includes examples for auto, hidden, visible, and scroll overflow types on the y-axis.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/overflow.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<div class="overflow-y-auto">...</div>
<div class="overflow-y-hidden">...</div>
<div class="overflow-y-visible">...</div>
<div class="overflow-y-scroll">...</div>
```

----------------------------------------

TITLE: Adding Vite Start Script to package.json
DESCRIPTION: This JSON snippet adds a start script to package.json for running the Vite development server.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/vite.mdx#2025-04-23_snippet_3

LANGUAGE: json
CODE:
```
{
  "scripts": {
    "start": "vite",
    "test": "echo \"Error: no test specified\" && exit 1"
  }
}
```

----------------------------------------

TITLE: Modifying Bootstrap Plugin Default Settings
DESCRIPTION: Shows how to change the default settings for a Bootstrap plugin by modifying its Constructor.Default object. This example changes the default 'keyboard' option for the Modal plugin.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/javascript.mdx#2025-04-23_snippet_7

LANGUAGE: javascript
CODE:
```
// changes default for the modal plugin's `keyboard` option to false
bootstrap.Modal.Default.keyboard = false
```

----------------------------------------

TITLE: Configuring Popper with Bootstrap Tooltip
DESCRIPTION: Example showing how to use a function with popperConfig option to customize tooltip's Popper.js configuration.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/tooltips.mdx#2025-04-23_snippet_6

LANGUAGE: javascript
CODE:
```
const tooltip = new bootstrap.Tooltip(element, {
  popperConfig(defaultBsPopperConfig) {
    // const newPopperConfig = {...}
    // use defaultBsPopperConfig if needed...
    // return newPopperConfig
  }
})
```

----------------------------------------

TITLE: Static Backdrop Offcanvas
DESCRIPTION: Shows an offcanvas implementation with a static backdrop that prevents closing when clicking outside the component.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/offcanvas.mdx#2025-04-23_snippet_3

LANGUAGE: HTML
CODE:
```
<button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#staticBackdrop" aria-controls="staticBackdrop">
    Toggle static offcanvas
  </button>

  <div class="offcanvas offcanvas-start" data-bs-backdrop="static" tabindex="-1" id="staticBackdrop" aria-labelledby="staticBackdropLabel">
    <div class="offcanvas-header">
      <h5 class="offcanvas-title" id="staticBackdropLabel">Offcanvas</h5>
      <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
      <div>
        I will not close if you click outside of me.
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Implementing Dropup Buttons with Bootstrap
DESCRIPTION: This snippet shows how to create dropup buttons using Bootstrap classes. It includes both a default dropup button and a split dropup button with dropdown menus.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_9

LANGUAGE: HTML
CODE:
```
<!-- Default dropup button -->
<div class="btn-group dropup">
  <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
    Dropup
  </button>
  <ul class="dropdown-menu">
    <!-- Dropdown menu links -->
  </ul>
</div>

<!-- Split dropup button -->
<div class="btn-group dropup">
  <button type="button" class="btn btn-secondary">
    Split dropup
  </button>
  <button type="button" class="btn btn-secondary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
    <span class="visually-hidden">Toggle Dropdown</span>
  </button>
  <ul class="dropdown-menu">
    <!-- Dropdown menu links -->
  </ul>
</div>
```

----------------------------------------

TITLE: Implementing Responsive Navbar with Full Features in Bootstrap
DESCRIPTION: Example of a responsive light-themed navbar that collapses at the large breakpoint. It includes brand, navigation links, dropdown menu, and search form. Uses background and spacing utility classes like bg-body-tertiary, me-auto, mb-2, etc.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navbar.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<nav class="navbar navbar-expand-lg bg-body-tertiary">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Navbar</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="#">Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">Link</a>
          </li>
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
              Dropdown
            </a>
            <ul class="dropdown-menu">
              <li><a class="dropdown-item" href="#">Action</a></li>
              <li><a class="dropdown-item" href="#">Another action</a></li>
              <li><hr class="dropdown-divider"></li>
              <li><a class="dropdown-item" href="#">Something else here</a></li>
            </ul>
          </li>
          <li class="nav-item">
            <a class="nav-link disabled" aria-disabled="true">Disabled</a>
          </li>
        </ul>
        <form class="d-flex" role="search">
          <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search"/>
          <button class="btn btn-outline-success" type="submit">Search</button>
        </form>
      </div>
    </div>
  </nav>
```

----------------------------------------

TITLE: Stacked-to-Horizontal Grid Layout
DESCRIPTION: Demonstrates responsive behavior using col-sm-* classes where columns stack on mobile and become horizontal at small breakpoint.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/grid.mdx#2025-04-23_snippet_5

LANGUAGE: HTML
CODE:
```
<div class="container text-center">
    <div class="row">
      <div class="col-sm-8">col-sm-8</div>
      <div class="col-sm-4">col-sm-4</div>
    </div>
    <div class="row">
      <div class="col-sm">col-sm</div>
      <div class="col-sm">col-sm</div>
      <div class="col-sm">col-sm</div>
    </div>
  </div>
```

----------------------------------------

TITLE: Implementing Disabled and Active States in Bootstrap Pagination
DESCRIPTION: Pagination example showcasing both disabled (Previous) and active (2) states. Uses the .disabled class for unclickable links and .active to indicate the current page, with proper ARIA attributes for accessibility.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/pagination.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<nav aria-label="...">
    <ul class="pagination">
      <li class="page-item disabled">
        <a class="page-link">Previous</a>
      </li>
      <li class="page-item"><a class="page-link" href="#">1</a></li>
      <li class="page-item active" aria-current="page">
        <a class="page-link" href="#">2</a>
      </li>
      <li class="page-item"><a class="page-link" href="#">3</a></li>
      <li class="page-item">
        <a class="page-link" href="#">Next</a>
      </li>
    </ul>
  </nav>
```

----------------------------------------

TITLE: Implementing Basic Button with Base Class in HTML
DESCRIPTION: Uses the base .btn class that provides basic button styling like padding and content alignment. By default, it has a transparent border and background.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/buttons.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<button type="button" class="btn">Base class</button>
```

----------------------------------------

TITLE: Justify Content Examples in Bootstrap
DESCRIPTION: Demonstrates various justify-content utilities for aligning flex items along the main axis
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/flex.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<div class="d-flex justify-content-start">...</div>
<div class="d-flex justify-content-end">...</div>
<div class="d-flex justify-content-center">...</div>
<div class="d-flex justify-content-between">...</div>
<div class="d-flex justify-content-around">...</div>
<div class="d-flex justify-content-evenly">...</div>
```

----------------------------------------

TITLE: Link Underline Offset Examples - HTML
DESCRIPTION: Demonstrates different underline offset distances from text using em-based utilities.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/link.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<p><a href="#">Default link</a></p>
<p><a class="link-offset-1" href="#">Offset 1 link</a></p>
<p><a class="link-offset-2" href="#">Offset 2 link</a></p>
<p><a class="link-offset-3" href="#">Offset 3 link</a></p>
```

----------------------------------------

TITLE: Creating Large-Sized Pagination in Bootstrap
DESCRIPTION: Implementation of larger pagination controls using the .pagination-lg modifier class. Demonstrates active state on the first page element using appropriate ARIA attributes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/pagination.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<nav aria-label="...">
    <ul class="pagination pagination-lg">
      <li class="page-item active" aria-current="page">
        <span class="page-link">1</span>
      </li>
      <li class="page-item"><a class="page-link" href="#">2</a></li>
      <li class="page-item"><a class="page-link" href="#">3</a></li>
    </ul>
  </nav>
```

----------------------------------------

TITLE: Customizing Font Stack for RTL in SCSS
DESCRIPTION: This SCSS snippet shows how to modify the font stack to include Arabic fonts for RTL using RTLCSS insert directives.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/rtl.mdx#2025-04-23_snippet_3

LANGUAGE: scss
CODE:
```
$font-family-sans-serif:
  Helvetica Neue #{"/* rtl:insert:Arabic */"},
  // Cross-platform generic font family (default user interface font)
  system-ui,
  // Safari for macOS and iOS (San Francisco)
  -apple-system,
  // Chrome < 56 for macOS (San Francisco)
  BlinkMacSystemFont,
  // Windows
  "Segoe UI",
  // Android
  Roboto,
  // Basic web fallback
  Arial,
  // Linux
  "Noto Sans",
  // Sans serif fallback
  sans-serif,
  // Emoji fonts
  "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" !default;
```

----------------------------------------

TITLE: Implementing Breakpoint-Specific Responsive Tables in HTML
DESCRIPTION: This code shows how to create responsive tables for specific breakpoints using Bootstrap's .table-responsive{-sm|-md|-lg|-xl|-xxl} classes. The table will behave normally from the specified breakpoint and up.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/tables.mdx#2025-04-23_snippet_11

LANGUAGE: html
CODE:
```
<div class="table-responsive${breakpoint.abbr}">
    <table class="table">
      ...
    </table>
</div>
```

----------------------------------------

TITLE: Implementing Scrollable Modal in Bootstrap
DESCRIPTION: Shows how to create a scrollable modal by adding the modal-dialog-scrollable class to the modal dialog element. This allows the modal body to scroll while keeping the header and footer fixed.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/modal.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<!-- Scrollable modal -->
<div class="modal-dialog modal-dialog-scrollable">
  ...
</div>
```

----------------------------------------

TITLE: Creating List Group with Radio Buttons in Bootstrap
DESCRIPTION: Implementation of a list group containing radio button inputs. Uses Bootstrap's form classes and includes proper name grouping for radio functionality.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/list-group.mdx#2025-04-23_snippet_10

LANGUAGE: html
CODE:
```
<ul class="list-group">
    <li class="list-group-item">
      <input class="form-check-input me-1" type="radio" name="listGroupRadio" value="" id="firstRadio" checked>
      <label class="form-check-label" for="firstRadio">First radio</label>
    </li>
    <li class="list-group-item">
      <input class="form-check-input me-1" type="radio" name="listGroupRadio" value="" id="secondRadio">
      <label class="form-check-label" for="secondRadio">Second radio</label>
    </li>
    <li class="list-group-item">
      <input class="form-check-input me-1" type="radio" name="listGroupRadio" value="" id="thirdRadio">
      <label class="form-check-label" for="thirdRadio">Third radio</label>
    </li>
  </ul>
```

----------------------------------------

TITLE: Sticky Bottom Position in Bootstrap
DESCRIPTION: Demonstrates how to make an element stick to the bottom of the viewport after scrolling past it using Bootstrap's sticky-bottom class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/position.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<div class="sticky-bottom">...</div>
```

----------------------------------------

TITLE: Implementing List Group with Checkboxes in Bootstrap
DESCRIPTION: Example of creating a list group with checkbox inputs using Bootstrap classes. Each list item contains a checkbox input with associated label and proper accessibility attributes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/list-group.mdx#2025-04-23_snippet_9

LANGUAGE: html
CODE:
```
<ul class="list-group">
    <li class="list-group-item">
      <input class="form-check-input me-1" type="checkbox" value="" id="firstCheckbox">
      <label class="form-check-label" for="firstCheckbox">First checkbox</label>
    </li>
    <li class="list-group-item">
      <input class="form-check-input me-1" type="checkbox" value="" id="secondCheckbox">
      <label class="form-check-label" for="secondCheckbox">Second checkbox</label>
    </li>
    <li class="list-group-item">
      <input class="form-check-input me-1" type="checkbox" value="" id="thirdCheckbox">
      <label class="form-check-label" for="thirdCheckbox">Third checkbox</label>
    </li>
  </ul>
```

----------------------------------------

TITLE: Activating Individual Bootstrap Tabs
DESCRIPTION: Demonstrates different ways to activate specific tabs using JavaScript, including selecting by target name and selecting the first tab in a collection.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_22

LANGUAGE: javascript
CODE:
```
const triggerEl = document.querySelector('#myTab button[data-bs-target="#profile"]')
bootstrap.Tab.getInstance(triggerEl).show() // Select tab by name

const triggerFirstTabEl = document.querySelector('#myTab li:first-child button')
bootstrap.Tab.getInstance(triggerFirstTabEl).show() // Select first tab
```

----------------------------------------

TITLE: Body Scrolling Enabled Offcanvas
DESCRIPTION: Implements an offcanvas with enabled body scrolling and no backdrop using data-bs-scroll attribute.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/offcanvas.mdx#2025-04-23_snippet_2

LANGUAGE: HTML
CODE:
```
<button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasScrolling" aria-controls="offcanvasScrolling">Enable body scrolling</button>

  <div class="offcanvas offcanvas-start" data-bs-scroll="true" data-bs-backdrop="false" tabindex="-1" id="offcanvasScrolling" aria-labelledby="offcanvasScrollingLabel">
    <div class="offcanvas-header">
      <h5 class="offcanvas-title" id="offcanvasScrollingLabel">Offcanvas with body scrolling</h5>
      <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
      <p>Try scrolling the rest of the page to see this option in action.</p>
    </div>
  </div>
```

----------------------------------------

TITLE: Defining Border Color Variables in CSS
DESCRIPTION: CSS variables for border colors, used for component borders, dividers, and rules.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/color.mdx#2025-04-23_snippet_5

LANGUAGE: CSS
CODE:
```
--bs-border-color
--bs-border-color-rgb
```

----------------------------------------

TITLE: Creating a Quote Card in Bootstrap
DESCRIPTION: Shows how to create a card specifically designed for displaying quotes. Uses blockquote and figcaption elements within the card-body to properly format a quotation with attribution.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/card.mdx#2025-04-23_snippet_10

LANGUAGE: JSX
CODE:
```
<div class="card">
    <div class="card-header">
      Quote
    </div>
    <div class="card-body">
      <figure>
        <blockquote class="blockquote">
          <p>A well-known quote, contained in a blockquote element.</p>
        </blockquote>
        <figcaption class="blockquote-footer">
          Someone famous in <cite title="Source Title">Source Title</cite>
        </figcaption>
      </figure>
    </div>
  </div>
```

----------------------------------------

TITLE: Using Monospace Font in HTML
DESCRIPTION: This snippet demonstrates how to use the font-monospace class to change text to a monospace font.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/text.mdx#2025-04-23_snippet_7

LANGUAGE: HTML
CODE:
```
<p class="font-monospace">This is in monospace</p>
```

----------------------------------------

TITLE: Link Underline Opacity Examples - HTML
DESCRIPTION: Shows how to modify underline opacity using Bootstrap utility classes in combination with link-underline base class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/link.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<p><a class="link-offset-2 link-underline link-underline-opacity-0" href="#">Underline opacity 0</a></p>
<p><a class="link-offset-2 link-underline link-underline-opacity-10" href="#">Underline opacity 10</a></p>
<p><a class="link-offset-2 link-underline link-underline-opacity-25" href="#">Underline opacity 25</a></p>
<p><a class="link-offset-2 link-underline link-underline-opacity-50" href="#">Underline opacity 50</a></p>
<p><a class="link-offset-2 link-underline link-underline-opacity-75" href="#">Underline opacity 75</a></p>
<p><a class="link-offset-2 link-underline link-underline-opacity-100" href="#">Underline opacity 100</a></p>
```

----------------------------------------

TITLE: Sass Grid System Configuration
DESCRIPTION: Core Sass variables for configuring Bootstrap's grid system including number of columns, gutter width, and row columns maximum.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/grid.mdx#2025-04-23_snippet_7

LANGUAGE: scss
CODE:
```
$grid-columns:      12;
$grid-gutter-width: 1.5rem;
$grid-row-columns:  6;
```

----------------------------------------

TITLE: SCSS Mixin for Table Variants in Bootstrap
DESCRIPTION: This SCSS mixin demonstrates how Bootstrap internally handles table variants by setting custom properties for background, accent, hover, striped, and active states.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/tables.mdx#2025-04-23_snippet_3

LANGUAGE: scss
CODE:
```
@mixin table-variant($state, $background) {
  .table-#{$state} {
    $color: color-contrast(opaque($body-bg, $background));
    $hover-bg: mix($color, $background, percentage($table-hover-bg-factor));
    $striped-bg: mix($color, $background, percentage($table-striped-bg-factor));
    $active-bg: mix($color, $background, percentage($table-active-bg-factor));
    $border-color: mix($color, $background, percentage($table-border-factor));

    --#{$prefix}table-color: #{$color};
    --#{$prefix}table-bg: #{$background};
    --#{$prefix}table-border-color: #{$border-color};
    --#{$prefix}table-striped-bg: #{$striped-bg};
    --#{$prefix}table-striped-color: #{color-contrast(opaque($body-bg, $striped-bg))};
    --#{$prefix}table-active-bg: #{$active-bg};
    --#{$prefix}table-active-color: #{color-contrast(opaque($body-bg, $active-bg))};
    --#{$prefix}table-hover-bg: #{$hover-bg};
    --#{$prefix}table-hover-color: #{color-contrast(opaque($body-bg, $hover-bg))};

    color: var(--#{$prefix}table-color);
    border-color: var(--#{$prefix}table-border-color);
  }
}
```

----------------------------------------

TITLE: Toggler Left Brand Right Navbar
DESCRIPTION: Responsive navbar with toggler on left and brand name on right.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navbar.mdx#2025-04-23_snippet_19

LANGUAGE: html
CODE:
```
<nav class="navbar navbar-expand-lg bg-body-tertiary">
    <div class="container-fluid">
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarTogglerDemo03" aria-controls="navbarTogglerDemo03" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <a class="navbar-brand" href="#">Navbar</a>
      <div class="collapse navbar-collapse" id="navbarTogglerDemo03">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="#">Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">Link</a>
          </li>
          <li class="nav-item">
            <a class="nav-link disabled" aria-disabled="true">Disabled</a>
          </li>
        </ul>
        <form class="d-flex" role="search">
          <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search"/>
          <button class="btn btn-outline-success" type="submit">Search</button>
        </form>
      </div>
    </div>
  </nav>
```

----------------------------------------

TITLE: Configuring Bootstrap Modal Options in JavaScript
DESCRIPTION: Shows how to pass options when creating a new Bootstrap modal instance. In this example, the keyboard option is set to false, disabling the ability to close the modal with the escape key.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/modal.mdx#2025-04-23_snippet_16

LANGUAGE: javascript
CODE:
```
const myModal = new bootstrap.Modal('#myModal', {
  keyboard: false
})
```

----------------------------------------

TITLE: Creating Cards with Header and List Groups in Bootstrap
DESCRIPTION: Shows how to create a card with both a header section and a list group. This structure provides a title area followed by a structured list of items within the card component.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/card.mdx#2025-04-23_snippet_5

LANGUAGE: JSX
CODE:
```
<div class="card" style="width: 18rem;">
    <div class="card-header">
      Featured
    </div>
    <ul class="list-group list-group-flush">
      <li class="list-group-item">An item</li>
      <li class="list-group-item">A second item</li>
      <li class="list-group-item">A third item</li>
    </ul>
  </div>
```

----------------------------------------

TITLE: Complex Hover Effect Example - HTML
DESCRIPTION: Demonstrates combining multiple link utilities to create complex hover effects with changing offset and opacity.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/link.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<a class="link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover" href="#">
    Underline opacity 0
  </a>
```

----------------------------------------

TITLE: Importing Bootstrap JavaScript
DESCRIPTION: JavaScript code showing different ways to import Bootstrap's JS components, including importing all components or individual plugins as needed.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/webpack.mdx#2025-04-23_snippet_11

LANGUAGE: javascript
CODE:
```
// Import our custom CSS
import '../scss/styles.scss'

// Import all of Bootstrap's JS
import * as bootstrap from 'bootstrap'
```

LANGUAGE: javascript
CODE:
```
import Alert from 'bootstrap/js/dist/alert'

// or, specify which plugins you need:
import { Tooltip, Toast, Popover } from 'bootstrap'
```

----------------------------------------

TITLE: Initializing Bootstrap Carousel with JavaScript
DESCRIPTION: This snippet shows how to manually initialize a Bootstrap Carousel using JavaScript. It demonstrates creating a carousel instance with custom options like interval and touch support.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/carousel.mdx#2025-04-23_snippet_10

LANGUAGE: js
CODE:
```
const carousel = new bootstrap.Carousel('#myCarousel')
```

LANGUAGE: js
CODE:
```
const myCarouselElement = document.querySelector('#myCarousel')

const carousel = new bootstrap.Carousel(myCarouselElement, {
  interval: 2000,
  touch: false
})
```

----------------------------------------

TITLE: Using Standalone Column Classes in Bootstrap
DESCRIPTION: This example demonstrates how to use Bootstrap's .col-* classes outside of a .row to give elements specific widths. It shows how to create columns with 25% and 75% widths, and mentions that padding is omitted when these classes are used as non-direct children of a row.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/columns.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<div class="col-3 p-3 mb-2">
    .col-3: width of 25%
  </div>

  <div class="col-sm-9 p-3">
    .col-sm-9: width of 75% above sm breakpoint
  </div>
```

----------------------------------------

TITLE: Creating HTML-Rich Tooltips in Bootstrap
DESCRIPTION: Example of creating a tooltip with HTML content using the data-bs-html attribute set to true. This allows for formatted text within tooltips.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/tooltips.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-html="true" data-bs-title="<em>Tooltip</em> <u>with</u> <b>HTML</b>">
  Tooltip with HTML
</button>
```

----------------------------------------

TITLE: Creating Right-Aligned Navigation with Flexbox in Bootstrap
DESCRIPTION: Uses the .justify-content-end utility class to right-align navigation items, demonstrating how Bootstrap's flexbox utilities can be applied to nav components.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<ul class="nav justify-content-end">
    <li class="nav-item">
      <a class="nav-link active" aria-current="page" href="#">Active</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Link</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Link</a>
    </li>
    <li class="nav-item">
      <a class="nav-link disabled" aria-disabled="true">Disabled</a>
    </li>
  </ul>
```

----------------------------------------

TITLE: Defining Theme Colors in SCSS
DESCRIPTION: This snippet shows the Sass map for theme colors in Bootstrap's _variables.scss file.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/color.mdx#2025-04-23_snippet_13

LANGUAGE: SCSS
CODE:
```
// Content of scss/_variables.scss
$theme-colors: (
  "primary":    $primary,
  "secondary":  $secondary,
  "success":    $success,
  "info":       $info,
  "warning":    $warning,
  "danger":     $danger,
  "light":      $light,
  "dark":       $dark
);
```

----------------------------------------

TITLE: Applying Utility Classes to Icon Links in HTML
DESCRIPTION: Demonstrates the use of Bootstrap utility classes to modify the appearance of icon links, including color and underline styles.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/icon-link.mdx#2025-04-23_snippet_4

LANGUAGE: HTML
CODE:
```
<a class="icon-link icon-link-hover link-success link-underline-success link-underline-opacity-25" href="#">
    Icon link
    <svg xmlns="http://www.w3.org/2000/svg" class="bi" viewBox="0 0 16 16" aria-hidden="true">
      <path d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z"/>
    </svg>
  </a>
```

----------------------------------------

TITLE: Installing Bootstrap CSS via NuGet
DESCRIPTION: PowerShell command to install Bootstrap CSS using NuGet, a package manager for .NET. This method is suitable for .NET Framework projects.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/download.mdx#2025-04-23_snippet_9

LANGUAGE: powershell
CODE:
```
Install-Package bootstrap
```

----------------------------------------

TITLE: Creating Image Thumbnail Placeholder in JSX
DESCRIPTION: This code shows how to create an image thumbnail placeholder using Bootstrap's .img-thumbnail class. The placeholder is a 200x200 square with a title attribute describing its appearance.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/images.mdx#2025-04-23_snippet_1

LANGUAGE: jsx
CODE:
```
<Placeholder width="200" height="200" class="img-thumbnail" title="A generic square placeholder image with a white border around it, making it resemble a photograph taken with an old instant camera" />
```

----------------------------------------

TITLE: Logo Display HTML Implementation
DESCRIPTION: HTML code for displaying the primary Bootstrap logo with proper styling and responsive image handling.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/about/brand.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<div class="bd-brand-item px-2 py-5 mb-3 border rounded-3">
  <img class="d-block img-fluid mx-auto" src="/docs/[[config:docs_version]]/assets/brand/bootstrap-logo.svg" alt="Bootstrap" width="256" height="204" />
</div>
```

----------------------------------------

TITLE: Border Success CSS Implementation
DESCRIPTION: CSS implementation showing how border-success utility is generated with opacity support.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/borders.mdx#2025-04-23_snippet_3

LANGUAGE: css
CODE:
```
.border-success {
  --bs-border-opacity: 1;
  border-color: rgba(var(--bs-success-rgb), var(--bs-border-opacity)) !important;
}
```

----------------------------------------

TITLE: Defining Background Color with Opacity in Bootstrap CSS
DESCRIPTION: Illustrates how background color utilities are generated using CSS variables, allowing for dynamic alpha transparency changes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/background.mdx#2025-04-23_snippet_2

LANGUAGE: css
CODE:
```
.bg-success {
  --bs-bg-opacity: 1;
  background-color: rgba(var(--bs-success-rgb), var(--bs-bg-opacity)) !important;
}
```

----------------------------------------

TITLE: Creating Stacked Radio Button Controls in Bootstrap
DESCRIPTION: Example of vertically stacked radio buttons showing default, unchecked, and disabled states. Uses a shared name attribute to group related options.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/checks-radios.mdx#2025-04-23_snippet_8

LANGUAGE: HTML
CODE:
```
<div class="form-check">
    <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios1" value="option1" checked>
    <label class="form-check-label" for="exampleRadios1">
      Default radio
    </label>
  </div>
  <div class="form-check">
    <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios2" value="option2">
    <label class="form-check-label" for="exampleRadios2">
      Second default radio
    </label>
  </div>
  <div class="form-check">
    <input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadios3" value="option3" disabled>
    <label class="form-check-label" for="exampleRadios3">
      Disabled radio
    </label>
  </div>
```

----------------------------------------

TITLE: Creating Basic Card with Mixed Content in Bootstrap
DESCRIPTION: Demonstrates a basic Bootstrap card with an image placeholder, title, text content, and a button. The card has a fixed width of 18rem and showcases the fundamental structure of a Bootstrap card component.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/card.mdx#2025-04-23_snippet_0

LANGUAGE: JSX
CODE:
```
<div class="card" style="width: 18rem;">
    <Placeholder width="100%" height="180" class="card-img-top" text="Image cap" />
    <div class="card-body">
      <h5 class="card-title">Card title</h5>
      <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
      <a href="#" class="btn btn-primary">Go somewhere</a>
    </div>
  </div>
```

----------------------------------------

TITLE: Adding Event Listener to Bootstrap Toast in JavaScript
DESCRIPTION: This snippet demonstrates how to add an event listener to a Bootstrap Toast element. It listens for the 'hidden.bs.toast' event, which is fired when the toast has finished being hidden from the user.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/toasts.mdx#2025-04-23_snippet_13

LANGUAGE: javascript
CODE:
```
const myToastEl = document.getElementById('myToast')
myToastEl.addEventListener('hidden.bs.toast', () => {
  // do something...
})
```

----------------------------------------

TITLE: Implementing Horizontal & Vertical Gutters in Bootstrap
DESCRIPTION: This snippet demonstrates the use of .g-* classes to control both horizontal and vertical grid gutters simultaneously. It uses a smaller gutter width, eliminating the need for .overflow-hidden.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/gutters.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<div class="container text-center">
    <div class="row g-2">
      <div class="col-6">
        <div class="p-3">Custom column padding</div>
      </div>
      <div class="col-6">
        <div class="p-3">Custom column padding</div>
      </div>
      <div class="col-6">
        <div class="p-3">Custom column padding</div>
      </div>
      <div class="col-6">
        <div class="p-3">Custom column padding</div>
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Creating Disabled Custom Select in Bootstrap
DESCRIPTION: Shows how to create a disabled custom select element by adding the disabled attribute, which grays out the element and removes pointer events.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/select.mdx#2025-04-23_snippet_4

LANGUAGE: HTML
CODE:
```
<select class="form-select" aria-label="Disabled select example" disabled>
    <option selected>Open this select menu</option>
    <option value="1">One</option>
    <option value="2">Two</option>
    <option value="3">Three</option>
  </select>
```

----------------------------------------

TITLE: Basic Vertical Rule Implementation
DESCRIPTION: Simple implementation of a vertical rule using the vr class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/vertical-rule.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<div class="vr"></div>
```

----------------------------------------

TITLE: Using CSS Variables for Basic Styling in Bootstrap
DESCRIPTION: An example demonstrating how to use Bootstrap's CSS variables to reset font and link styles without Sass compilation. This approach provides flexibility similar to Sass variables but works directly in the browser.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/css-variables.mdx#2025-04-23_snippet_0

LANGUAGE: css
CODE:
```
body {
  font: 1rem/1.5 var(--bs-font-sans-serif);
}
a {
  color: var(--bs-blue);
}
```

----------------------------------------

TITLE: Separate Popper and Bootstrap JS Integration
DESCRIPTION: Alternative script includes for separate Popper.js and Bootstrap JavaScript files
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/introduction.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<script src="[[config:cdn.popper]]" integrity="[[config:cdn.popper_hash]]" crossorigin="anonymous"></script>
<script src="[[config:cdn.js]]" integrity="[[config:cdn.js_hash]]" crossorigin="anonymous"></script>
```

----------------------------------------

TITLE: Using Custom Sanitizer with DOMPurify
DESCRIPTION: Shows how to bypass Bootstrap's default sanitizer by implementing DOMPurify as a custom sanitization solution.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/javascript.mdx#2025-04-23_snippet_9

LANGUAGE: javascript
CODE:
```
const yourTooltipEl = document.querySelector('#yourTooltip')
const tooltip = new bootstrap.Tooltip(yourTooltipEl, {
  sanitizeFn(content) {
    return DOMPurify.sanitize(content)
  }
})
```

----------------------------------------

TITLE: Bootstrap Tooltip Markup Structure
DESCRIPTION: Example showing both the HTML markup needed to create a tooltip and the resulting markup generated by the Bootstrap tooltip plugin. Shows the minimal requirements for tooltip implementation.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/tooltips.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<!-- HTML to write -->
<a href="#" data-bs-toggle="tooltip" data-bs-title="Some tooltip text!">Hover over me</a>

<!-- Generated markup by the plugin -->
<div class="tooltip bs-tooltip-auto" role="tooltip">
  <div class="tooltip-arrow"></div>
  <div class="tooltip-inner">
    Some tooltip text!
  </div>
</div>
```

----------------------------------------

TITLE: Configuring Bootstrap Components with Data Attributes in HTML
DESCRIPTION: Demonstrates how to use data attributes to pass options to Bootstrap components. It shows the conversion from camelCase to kebab-case for attribute names and introduces the experimental data-bs-config attribute for JSON-based configuration.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/components/shortcodes/JsDataAttributes.mdx#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
data-bs-animation="{value}"
```

LANGUAGE: HTML
CODE:
```
data-bs-custom-class="beautifier"
```

LANGUAGE: HTML
CODE:
```
data-bs-config='{"delay":0, "title":123}'
```

LANGUAGE: HTML
CODE:
```
data-bs-title="456"
```

LANGUAGE: HTML
CODE:
```
data-bs-delay='{"show":0,"hide":150}'
```

----------------------------------------

TITLE: Implementing Always-Open Bootstrap Accordion in HTML
DESCRIPTION: This snippet demonstrates how to create an accordion where items can stay open when another item is opened. This is achieved by omitting the 'data-bs-parent' attribute on each '.accordion-collapse' element.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/accordion.mdx#2025-04-23_snippet_2

LANGUAGE: HTML
CODE:
```
<div class="accordion" id="accordionPanelsStayOpenExample">
    <div class="accordion-item">
      <h2 class="accordion-header">
        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseOne" aria-expanded="true" aria-controls="panelsStayOpen-collapseOne">
          Accordion Item #1
        </button>
      </h2>
      <div id="panelsStayOpen-collapseOne" class="accordion-collapse collapse show">
        <div class="accordion-body">
          <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
        </div>
      </div>
    </div>
    <div class="accordion-item">
      <h2 class="accordion-header">
        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseTwo" aria-expanded="false" aria-controls="panelsStayOpen-collapseTwo">
          Accordion Item #2
        </button>
      </h2>
      <div id="panelsStayOpen-collapseTwo" class="accordion-collapse collapse">
        <div class="accordion-body">
          <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
        </div>
      </div>
    </div>
    <div class="accordion-item">
      <h2 class="accordion-header">
        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseThree" aria-expanded="false" aria-controls="panelsStayOpen-collapseThree">
          Accordion Item #3
        </button>
      </h2>
      <div id="panelsStayOpen-collapseThree" class="accordion-collapse collapse">
        <div class="accordion-body">
          <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
        </div>
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Implementing Dark Variant Carousel in Bootstrap 5
DESCRIPTION: New .carousel-dark class for carousels with dark text, controls, and indicators, suitable for lighter backgrounds.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/migration.mdx#2025-04-23_snippet_15

LANGUAGE: HTML
CODE:
```
<div id="carouselExampleDark" class="carousel carousel-dark slide">
  <!-- Carousel content -->
</div>
```

----------------------------------------

TITLE: Implementing Dark Variant Carousel in HTML
DESCRIPTION: This snippet demonstrates how to create a dark variant of the Bootstrap Carousel using HTML. It includes carousel indicators, items with placeholders, and navigation controls.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/carousel.mdx#2025-04-23_snippet_9

LANGUAGE: html
CODE:
```
<div id="carouselExampleDark" class="carousel carousel-dark slide">
    <div class="carousel-indicators">
      <button type="button" data-bs-target="#carouselExampleDark" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
      <button type="button" data-bs-target="#carouselExampleDark" data-bs-slide-to="1" aria-label="Slide 2"></button>
      <button type="button" data-bs-target="#carouselExampleDark" data-bs-slide-to="2" aria-label="Slide 3"></button>
    </div>
    <div class="carousel-inner">
      <div class="carousel-item active" data-bs-interval="10000">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#aaa" background="#f5f5f5" text="First slide" />
        <div class="carousel-caption d-none d-md-block">
          <h5>First slide label</h5>
          <p>Some representative placeholder content for the first slide.</p>
        </div>
      </div>
      <div class="carousel-item" data-bs-interval="2000">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#bbb" background="#eee" text="Second slide" />
        <div class="carousel-caption d-none d-md-block">
          <h5>Second slide label</h5>
          <p>Some representative placeholder content for the second slide.</p>
        </div>
      </div>
      <div class="carousel-item">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#999" background="#e5e5e5" text="Third slide" />
        <div class="carousel-caption d-none d-md-block">
          <h5>Third slide label</h5>
          <p>Some representative placeholder content for the third slide.</p>
        </div>
      </div>
    </div>
    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleDark" data-bs-slide="prev">
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleDark" data-bs-slide="next">
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Next</span>
    </button>
  </div>
```

----------------------------------------

TITLE: Demonstrating Placeholder Link in HTML for Bootstrap
DESCRIPTION: This HTML snippet shows a placeholder link without an href attribute. In Bootstrap's Reboot, such links have their color and text-decoration reset to default values.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/reboot.mdx#2025-04-23_snippet_6

LANGUAGE: html
CODE:
```
<a>This is a placeholder link</a>
```

----------------------------------------

TITLE: Text Alignment in Bootstrap Cards
DESCRIPTION: Demonstrates different text alignment options within Bootstrap cards using text alignment utility classes. Shows left-aligned (default), center-aligned, and right-aligned variations.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/card.mdx#2025-04-23_snippet_15

LANGUAGE: HTML
CODE:
```
<div class="card mb-3" style="width: 18rem;">
    <div class="card-body">
      <h5 class="card-title">Special title treatment</h5>
      <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
      <a href="#" class="btn btn-primary">Go somewhere</a>
    </div>
  </div>

  <div class="card text-center mb-3" style="width: 18rem;">
    <div class="card-body">
      <h5 class="card-title">Special title treatment</h5>
      <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
      <a href="#" class="btn btn-primary">Go somewhere</a>
    </div>
  </div>

  <div class="card text-end" style="width: 18rem;">
    <div class="card-body">
      <h5 class="card-title">Special title treatment</h5>
      <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
      <a href="#" class="btn btn-primary">Go somewhere</a>
    </div>
  </div>
```

----------------------------------------

TITLE: Creating Fullscreen Modals in Bootstrap
DESCRIPTION: This code snippet shows how to implement a fullscreen modal in Bootstrap. It uses the 'modal-fullscreen-sm-down' class to create a responsive fullscreen behavior.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/modal.mdx#2025-04-23_snippet_12

LANGUAGE: html
CODE:
```
<!-- Full screen modal -->
<div class="modal-dialog modal-fullscreen-sm-down">
  ...
</div>
```

----------------------------------------

TITLE: Aligning Flex Items Vertically with Auto Margins in Bootstrap
DESCRIPTION: This snippet shows how to use align-items, flex-direction: column, and margin-top: auto or margin-bottom: auto to vertically align flex items within a container.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/flex.mdx#2025-04-23_snippet_9

LANGUAGE: HTML
CODE:
```
<div class="d-flex align-items-start flex-column mb-3" style="height: 200px;">
    <div class="mb-auto p-2">Flex item</div>
    <div class="p-2">Flex item</div>
    <div class="p-2">Flex item</div>
  </div>

  <div class="d-flex align-items-end flex-column mb-3" style="height: 200px;">
    <div class="p-2">Flex item</div>
    <div class="p-2">Flex item</div>
    <div class="mt-auto p-2">Flex item</div>
  </div>
```

----------------------------------------

TITLE: Demonstrating Z-index Levels in HTML
DESCRIPTION: This snippet shows how to use Bootstrap's z-index utilities to stack elements with different z-index values. It requires elements to have a position value other than static.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/z-index.mdx#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
<div class="z-3 position-absolute p-5 rounded-3"><span>z-3</span></div>
<div class="z-2 position-absolute p-5 rounded-3"><span>z-2</span></div>
<div class="z-1 position-absolute p-5 rounded-3"><span>z-1</span></div>
<div class="z-0 position-absolute p-5 rounded-3"><span>z-0</span></div>
<div class="z-n1 position-absolute p-5 rounded-3"><span>z-n1</span></div>
```

----------------------------------------

TITLE: Customizing Overflow Utilities in Sass
DESCRIPTION: This snippet references the Sass utilities API for overflow classes in Bootstrap. It indicates that overflow utilities are declared in the '_utilities.scss' file and can be customized using the $overflows variable in '_variables.scss'.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/overflow.mdx#2025-04-23_snippet_3

LANGUAGE: scss
CODE:
```
// Reference to Sass utilities API
<ScssDocs name="utils-overflow" file="scss/_utilities.scss" />
```

----------------------------------------

TITLE: Indicating Keyboard Input in HTML with Bootstrap
DESCRIPTION: This HTML example demonstrates the use of the kbd tag to indicate input typically entered via keyboard. It shows both single key and key combination representations.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/reboot.mdx#2025-04-23_snippet_11

LANGUAGE: html
CODE:
```
To switch directories, type <kbd>cd</kbd> followed by the name of the directory.<br>
To edit settings, press <kbd><kbd>Ctrl</kbd> + <kbd>,</kbd></kbd>
```

----------------------------------------

TITLE: Vertical Rule in Stack Layout
DESCRIPTION: Implementation of vertical rule within a horizontal stack layout with gap spacing and additional items.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/vertical-rule.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<div class="hstack gap-3">
    <div class="p-2">First item</div>
    <div class="p-2 ms-auto">Second item</div>
    <div class="vr"></div>
    <div class="p-2">Third item</div>
  </div>
```

----------------------------------------

TITLE: Managing Asynchronous Carousel Transitions
DESCRIPTION: Demonstrates how to handle asynchronous transitions in a Bootstrap Carousel. It shows that method calls during an ongoing transition are ignored.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/javascript.mdx#2025-04-23_snippet_6

LANGUAGE: javascript
CODE:
```
const myCarouselEl = document.querySelector('#myCarousel')
const carousel = bootstrap.Carousel.getInstance(myCarouselEl) // Retrieve a Carousel instance

myCarouselEl.addEventListener('slid.bs.carousel', event => {
  carousel.to('2') // Will slide to the slide 2 as soon as the transition to slide 1 is finished
})

carousel.to('1') // Will start sliding to the slide 1 and returns to the caller
carousel.to('2') // !! Will be ignored, as the transition to the slide 1 is not finished !!
```

----------------------------------------

TITLE: Implementing Pills Navigation Style in Bootstrap
DESCRIPTION: Creates a pill-style navigation component using the .nav-pills class, which provides rounded button-like styling for navigation links.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_7

LANGUAGE: html
CODE:
```
<ul class="nav nav-pills">
    <li class="nav-item">
      <a class="nav-link active" aria-current="page" href="#">Active</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Link</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Link</a>
    </li>
    <li class="nav-item">
      <a class="nav-link disabled" aria-disabled="true">Disabled</a>
    </li>
  </ul>
```

----------------------------------------

TITLE: Implementing Equal-Width Navigation with Pills in Bootstrap
DESCRIPTION: Uses .nav-justified class to create equal-width navigation items regardless of content length. Each navigation item takes up an equal portion of the available width.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_11

LANGUAGE: html
CODE:
```
<ul class="nav nav-pills nav-justified">
    <li class="nav-item">
      <a class="nav-link active" aria-current="page" href="#">Active</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Much longer nav link</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Link</a>
    </li>
    <li class="nav-item">
      <a class="nav-link disabled" aria-disabled="true">Disabled</a>
    </li>
  </ul>
```

----------------------------------------

TITLE: Setting Custom Size for Bootstrap Select Element
DESCRIPTION: Demonstrates how to set a custom size for the select element using the size attribute, which determines the number of visible options.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/select.mdx#2025-04-23_snippet_3

LANGUAGE: HTML
CODE:
```
<select class="form-select" size="3" aria-label="Size 3 select example">
    <option selected>Open this select menu</option>
    <option value="1">One</option>
    <option value="2">Two</option>
    <option value="3">Three</option>
  </select>
```

----------------------------------------

TITLE: Floating Labels with Form Validation in Bootstrap
DESCRIPTION: Demonstrates how floating labels work with form validation styles. Uses the is-invalid class to show validation state visually.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/floating-labels.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<form class="form-floating">
    <input type="email" class="form-control is-invalid" id="floatingInputInvalid" placeholder="name@example.com" value="test@example.com">
    <label for="floatingInputInvalid">Invalid input</label>
  </form>
```

----------------------------------------

TITLE: Brand Left Toggler Right Navbar
DESCRIPTION: Responsive navbar with brand name on left and toggler on right.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navbar.mdx#2025-04-23_snippet_18

LANGUAGE: html
CODE:
```
<nav class="navbar navbar-expand-lg bg-body-tertiary">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Navbar</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="#">Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">Link</a>
          </li>
          <li class="nav-item">
            <a class="nav-link disabled" aria-disabled="true">Disabled</a>
          </li>
        </ul>
        <form class="d-flex" role="search">
          <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search"/>
          <button class="btn btn-outline-success" type="submit">Search</button>
        </form>
      </div>
    </div>
  </nav>
```

----------------------------------------

TITLE: Creating Actionable List Group with Buttons
DESCRIPTION: Shows how to create clickable list group items using button elements with the 'list-group-item-action' class, including active and disabled states using the disabled attribute.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/list-group.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<div class="list-group">
    <button type="button" class="list-group-item list-group-item-action active" aria-current="true">
      The current button
    </button>
    <button type="button" class="list-group-item list-group-item-action">A second button item</button>
    <button type="button" class="list-group-item list-group-item-action">A third button item</button>
    <button type="button" class="list-group-item list-group-item-action">A fourth button item</button>
    <button type="button" class="list-group-item list-group-item-action" disabled>A disabled button item</button>
  </div>
```

----------------------------------------

TITLE: Sticky Bottom Bootstrap Navbar
DESCRIPTION: Navbar that sticks to the bottom when scrolling using sticky-bottom class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navbar.mdx#2025-04-23_snippet_15

LANGUAGE: html
CODE:
```
<nav class="navbar sticky-bottom bg-body-tertiary">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Sticky bottom</a>
    </div>
  </nav>
```

----------------------------------------

TITLE: Aligning Figure Caption with Text Utilities in Bootstrap
DESCRIPTION: This example shows how to align the figure's caption to the right using Bootstrap's text utility class .text-end. It demonstrates the flexibility in caption positioning.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/figures.mdx#2025-04-23_snippet_1

LANGUAGE: HTML
CODE:
```
<figure class="figure">
    <Placeholder width="400" height="300" class="figure-img img-fluid rounded" />
    <figcaption class="figure-caption text-end">A caption for the above image.</figcaption>
  </figure>
```

----------------------------------------

TITLE: Bootstrap Browserslist Configuration
DESCRIPTION: Configuration file specifying the range of browsers supported by Bootstrap through Browserslist. This is used by Autoprefixer to handle CSS prefix management.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/browsers-devices.mdx#2025-04-23_snippet_0

LANGUAGE: plaintext
CODE:
```
# .browserslistrc
```

----------------------------------------

TITLE: Bootstrap Form with Gutters
DESCRIPTION: Demonstrates form layout using Bootstrap's gutter modifier classes for spacing control.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/layout.mdx#2025-04-23_snippet_2

LANGUAGE: HTML
CODE:
```
<div class="row g-3">
    <div class="col">
      <input type="text" class="form-control" placeholder="First name" aria-label="First name">
    </div>
    <div class="col">
      <input type="text" class="form-control" placeholder="Last name" aria-label="Last name">
    </div>
  </div>
```

----------------------------------------

TITLE: Using Variable Tags in HTML with Bootstrap
DESCRIPTION: This HTML snippet shows the usage of the var tag to indicate variables in mathematical expressions or programming contexts.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/reboot.mdx#2025-04-23_snippet_10

LANGUAGE: html
CODE:
```
<var>y</var> = <var>m</var><var>x</var> + <var>b</var>
```

----------------------------------------

TITLE: Creating Flush List Group
DESCRIPTION: Demonstrates a list group with the 'list-group-flush' class to remove borders and rounded corners, rendering items edge-to-edge in a parent container.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/list-group.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<ul class="list-group list-group-flush">
    <li class="list-group-item">An item</li>
    <li class="list-group-item">A second item</li>
    <li class="list-group-item">A third item</li>
    <li class="list-group-item">A fourth item</li>
    <li class="list-group-item">And a fifth one</li>
  </ul>
```

----------------------------------------

TITLE: JavaScript for Triggering Live Toast Demo
DESCRIPTION: The JavaScript needed to initialize and show a toast when a button is clicked. References elements by their IDs from the HTML markup.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/toasts.mdx#2025-04-23_snippet_2

LANGUAGE: javascript
CODE:
```
<JsDocs name="live-toast" file="site/src/assets/partials/snippets.js" />
```

----------------------------------------

TITLE: Creating Toggle Switch Controls in Bootstrap
DESCRIPTION: HTML for toggle switches using the .form-switch class with checkboxes. Includes examples of default, checked, disabled, and disabled-checked states with role="switch" for accessibility.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/checks-radios.mdx#2025-04-23_snippet_5

LANGUAGE: HTML
CODE:
```
<div class="form-check form-switch">
    <input class="form-check-input" type="checkbox" role="switch" id="switchCheckDefault">
    <label class="form-check-label" for="switchCheckDefault">Default switch checkbox input</label>
  </div>
  <div class="form-check form-switch">
    <input class="form-check-input" type="checkbox" role="switch" id="switchCheckChecked" checked>
    <label class="form-check-label" for="switchCheckChecked">Checked switch checkbox input</label>
  </div>
  <div class="form-check form-switch">
    <input class="form-check-input" type="checkbox" role="switch" id="switchCheckDisabled" disabled>
    <label class="form-check-label" for="switchCheckDisabled">Disabled switch checkbox input</label>
  </div>
  <div class="form-check form-switch">
    <input class="form-check-input" type="checkbox" role="switch" id="switchCheckCheckedDisabled" checked disabled>
    <label class="form-check-label" for="switchCheckCheckedDisabled">Disabled checked switch checkbox input</label>
  </div>
```

----------------------------------------

TITLE: Adding Indicators to Bootstrap Carousel in HTML
DESCRIPTION: This example shows how to add indicators to a Bootstrap carousel. Indicators allow users to jump directly to a particular slide. The 'carousel-indicators' class is used to create the indicator buttons.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/carousel.mdx#2025-04-23_snippet_1

LANGUAGE: HTML
CODE:
```
<div id="carouselExampleIndicators" class="carousel slide">
    <div class="carousel-indicators">
      <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
      <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="1" aria-label="Slide 2"></button>
      <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="2" aria-label="Slide 3"></button>
    </div>
    <div class="carousel-inner">
      <div class="carousel-item active">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#555" background="#777" text="First slide" />
      </div>
      <div class="carousel-item">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#444" background="#666" text="Second slide" />
      </div>
      <div class="carousel-item">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#333" background="#555" text="Third slide" />
      </div>
    </div>
    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Next</span>
    </button>
  </div>
```

----------------------------------------

TITLE: Creating Inline Checkbox Controls in Bootstrap
DESCRIPTION: Example of horizontally aligned inline checkboxes using the .form-check-inline class. Includes default and disabled states arranged in a row.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/checks-radios.mdx#2025-04-23_snippet_9

LANGUAGE: HTML
CODE:
```
<div class="form-check form-check-inline">
    <input class="form-check-input" type="checkbox" id="inlineCheckbox1" value="option1">
    <label class="form-check-label" for="inlineCheckbox1">1</label>
  </div>
  <div class="form-check form-check-inline">
    <input class="form-check-input" type="checkbox" id="inlineCheckbox2" value="option2">
    <label class="form-check-label" for="inlineCheckbox2">2</label>
  </div>
  <div class="form-check form-check-inline">
    <input class="form-check-input" type="checkbox" id="inlineCheckbox3" value="option3" disabled>
    <label class="form-check-label" for="inlineCheckbox3">3 (disabled)</label>
  </div>
```

----------------------------------------

TITLE: Importing Bootstrap Toast Module in HTML
DESCRIPTION: Demonstrates how to import and use the Bootstrap Toast module as an ES module in HTML. This snippet shows how to create Toast instances for all elements with the 'toast' class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/javascript.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<script type="module">
  import { Toast } from 'bootstrap.esm.min.js'

  Array.from(document.querySelectorAll('.toast'))
    .forEach(toastNode => new Toast(toastNode))
</script>
```

----------------------------------------

TITLE: Adding New Bootstrap Utilities
DESCRIPTION: Demonstrates adding new utilities to the default utilities map using map-merge, showing how to add a responsive cursor utility.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/api.mdx#2025-04-23_snippet_7

LANGUAGE: scss
CODE:
```
@import "bootstrap/scss/functions";
@import "bootstrap/scss/variables";
@import "bootstrap/scss/variables-dark";
@import "bootstrap/scss/maps";
@import "bootstrap/scss/mixins";
@import "bootstrap/scss/utilities";

$utilities: map-merge(
  $utilities,
  (
    "cursor": (
      property: cursor,
      class: cursor,
      responsive: true,
      values: auto pointer grab,
    )
  )
);

@import "bootstrap/scss/utilities/api";
```

----------------------------------------

TITLE: Implementing Optional Modal Sizes in Bootstrap
DESCRIPTION: This snippet demonstrates how to use different size classes for Bootstrap modals. It shows the HTML structure for extra-large, large, and small modal dialogs.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/modal.mdx#2025-04-23_snippet_11

LANGUAGE: html
CODE:
```
<div class="modal-dialog modal-xl">...</div>
<div class="modal-dialog modal-lg">...</div>
<div class="modal-dialog modal-sm">...</div>
```

----------------------------------------

TITLE: Setting Tooltip Content Dynamically
DESCRIPTION: Demonstrates how to get a tooltip instance and dynamically update its content using the setContent method.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/tooltips.mdx#2025-04-23_snippet_7

LANGUAGE: javascript
CODE:
```
const tooltip = bootstrap.Tooltip.getInstance('#example') // Returns a Bootstrap tooltip instance

// setContent example
tooltip.setContent({ '.tooltip-inner': 'another title' })
```

----------------------------------------

TITLE: Basic Placeholder Implementation in Bootstrap
DESCRIPTION: Shows how to create basic placeholder elements using the .placeholder class with grid column classes to set width. Includes an example of applying placeholders to text and buttons.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/placeholders.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<p aria-hidden="true">
    <span class="placeholder col-6"></span>
  </p>

  <a class="btn btn-primary disabled placeholder col-4" aria-disabled="true"></a>
```

----------------------------------------

TITLE: Applying Bootstrap Color Utilities in HTML
DESCRIPTION: This snippet demonstrates how to use Bootstrap's color utility classes to style an element with primary colors.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/color.mdx#2025-04-23_snippet_12

LANGUAGE: HTML
CODE:
```
<div class="p-3 text-primary-emphasis bg-primary-subtle border border-primary-subtle rounded-3">
    Example element with utilities
  </div>
```

----------------------------------------

TITLE: Creating Multiple Stacked Progress Bars in HTML
DESCRIPTION: This example shows how to create a stacked progress bar with multiple segments using the .progress-stacked class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/progress.mdx#2025-04-23_snippet_5

LANGUAGE: HTML
CODE:
```
<div class="progress-stacked">
    <div class="progress" role="progressbar" aria-label="Segment one" aria-valuenow="15" aria-valuemin="0" aria-valuemax="100" style="width: 15%">
      <div class="progress-bar"></div>
    </div>
    <div class="progress" role="progressbar" aria-label="Segment two" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100" style="width: 30%">
      <div class="progress-bar bg-success"></div>
    </div>
    <div class="progress" role="progressbar" aria-label="Segment three" aria-valuenow="20" aria-valuemin="0" aria-valuemax="100" style="width: 20%">
      <div class="progress-bar bg-info"></div>
    </div>
  </div>
```

----------------------------------------

TITLE: Initializing Bootstrap Plugins with Options
DESCRIPTION: Demonstrates how to initialize Bootstrap plugins (Modal in this case) with default options and custom configuration objects. It also shows how to retrieve plugin instances.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/javascript.mdx#2025-04-23_snippet_3

LANGUAGE: javascript
CODE:
```
const myModalEl = document.querySelector('#myModal')
const modal = new bootstrap.Modal(myModalEl) // initialized with defaults

const configObject = { keyboard: false }
const modal1 = new bootstrap.Modal(myModalEl, configObject) // initialized with no keyboard

bootstrap.Popover.getInstance(myPopoverEl)

bootstrap.Popover.getOrCreateInstance(myPopoverEl, configObject)
```

----------------------------------------

TITLE: Sticky Top Bootstrap Navbar
DESCRIPTION: Navbar that sticks to the top when scrolling using sticky-top class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navbar.mdx#2025-04-23_snippet_14

LANGUAGE: html
CODE:
```
<nav class="navbar sticky-top bg-body-tertiary">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Sticky top</a>
    </div>
  </nav>
```

----------------------------------------

TITLE: Disabled Form Elements with Floating Labels in Bootstrap
DESCRIPTION: Demonstrates various disabled form elements with floating labels, including inputs, textareas, and select elements. The disabled attribute gives a grayed out appearance and prevents focusing.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/floating-labels.mdx#2025-04-23_snippet_6

LANGUAGE: html
CODE:
```
<div class="form-floating mb-3">
    <input type="email" class="form-control" id="floatingInputDisabled" placeholder="name@example.com" disabled>
    <label for="floatingInputDisabled">Email address</label>
  </div>
  <div class="form-floating mb-3">
    <textarea class="form-control" placeholder="Leave a comment here" id="floatingTextareaDisabled" disabled></textarea>
    <label for="floatingTextareaDisabled">Comments</label>
  </div>
  <div class="form-floating mb-3">
    <textarea class="form-control" placeholder="Leave a comment here" id="floatingTextarea2Disabled" style="height: 100px" disabled>Disabled textarea with some text inside</textarea>
    <label for="floatingTextarea2Disabled">Comments</label>
  </div>
  <div class="form-floating">
    <select class="form-select" id="floatingSelectDisabled" aria-label="Floating label disabled select example" disabled>
      <option selected>Open this select menu</option>
      <option value="1">One</option>
      <option value="2">Two</option>
      <option value="3">Three</option>
    </select>
    <label for="floatingSelectDisabled">Works with selects</label>
  </div>
```

----------------------------------------

TITLE: Implementing a Complex Vertical Button Group with Dropdowns in Bootstrap
DESCRIPTION: This example shows a more complex vertical button group that includes various dropdown buttons. It demonstrates the use of 'btn-group', 'dropdown-toggle', and directional classes like 'dropstart', 'dropend', and 'dropup'.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/button-group.mdx#2025-04-23_snippet_11

LANGUAGE: HTML
CODE:
```
<div class="btn-group-vertical" role="group" aria-label="Vertical button group">
    <div class="btn-group" role="group">
      <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
        Dropdown
      </button>
      <ul class="dropdown-menu">
        <li><a class="dropdown-item" href="#">Dropdown link</a></li>
        <li><a class="dropdown-item" href="#">Dropdown link</a></li>
      </ul>
    </div>
    <button type="button" class="btn btn-primary">Button</button>
    <button type="button" class="btn btn-primary">Button</button>
    <div class="btn-group dropstart" role="group">
      <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
        Dropdown
      </button>
      <ul class="dropdown-menu">
        <li><a class="dropdown-item" href="#">Dropdown link</a></li>
        <li><a class="dropdown-item" href="#">Dropdown link</a></li>
      </ul>
    </div>
    <div class="btn-group dropend" role="group">
      <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
        Dropdown
      </button>
      <ul class="dropdown-menu">
        <li><a class="dropdown-item" href="#">Dropdown link</a></li>
        <li><a class="dropdown-item" href="#">Dropdown link</a></li>
      </ul>
    </div>
    <div class="btn-group dropup" role="group">
      <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
        Dropdown
      </button>
      <ul class="dropdown-menu">
        <li><a class="dropdown-item" href="#">Dropdown link</a></li>
        <li><a class="dropdown-item" href="#">Dropdown link</a></li>
      </ul>
    </div>
  </div>
```

----------------------------------------

TITLE: Basic Form Group Layout with Bootstrap
DESCRIPTION: Demonstrates basic form group structure using margin utilities for spacing between form elements.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/layout.mdx#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
<div class="mb-3">
    <label for="formGroupExampleInput" class="form-label">Example label</label>
    <input type="text" class="form-control" id="formGroupExampleInput" placeholder="Example input placeholder">
  </div>
  <div class="mb-3">
    <label for="formGroupExampleInput2" class="form-label">Another label</label>
    <input type="text" class="form-control" id="formGroupExampleInput2" placeholder="Another input placeholder">
  </div>
```

----------------------------------------

TITLE: Handling Tooltip Events
DESCRIPTION: Example showing how to listen for tooltip events and trigger tooltip methods programmatically.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/tooltips.mdx#2025-04-23_snippet_8

LANGUAGE: javascript
CODE:
```
const myTooltipEl = document.getElementById('myTooltip')
const tooltip = bootstrap.Tooltip.getOrCreateInstance(myTooltipEl)

myTooltipEl.addEventListener('hidden.bs.tooltip', () => {
  // do something...
})

tooltip.hide()
```

----------------------------------------

TITLE: Flex Column Direction in Bootstrap
DESCRIPTION: Shows how to arrange flex items vertically using flex-column and flex-column-reverse utilities
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/flex.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<div class="d-flex flex-column mb-3">
    <div class="p-2">Flex item 1</div>
    <div class="p-2">Flex item 2</div>
    <div class="p-2">Flex item 3</div>
  </div>
  <div class="d-flex flex-column-reverse">
    <div class="p-2">Flex item 1</div>
    <div class="p-2">Flex item 2</div>
    <div class="p-2">Flex item 3</div>
  </div>
```

----------------------------------------

TITLE: Implementing Scrollspy via Data Attributes
DESCRIPTION: HTML example showing how to add scrollspy behavior to page navigation using data attributes. This is the simplest way to implement scrollspy functionality.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/scrollspy.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<body data-bs-spy="scroll" data-bs-target="#navbar-example">
  ...
  <div id="navbar-example">
    <ul class="nav nav-tabs" role="tablist">
      ...
    </ul>
  </div>
  ...
</body>
```

----------------------------------------

TITLE: Structured HTML Table with Bootstrap
DESCRIPTION: Shows a complete HTML table structure with thead and tbody sections containing user data. The table includes columns for ID, first name, last name, and social handle, formatted according to Bootstrap conventions.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/components/shortcodes/TableContent.md#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
  <thead>
    <tr>
      <th scope="col">#</th>
      <th scope="col">First</th>
      <th scope="col">Last</th>
      <th scope="col">Handle</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th scope="row">1</th>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
    </tr>
    <tr>
      <th scope="row">2</th>
      <td>Jacob</td>
      <td>Thornton</td>
      <td>@fat</td>
    </tr>
    <tr>
      <th scope="row">3</th>
      <td>John</td>
      <td>Doe</td>
      <td>@social</td>
    </tr>
  </tbody>
```

----------------------------------------

TITLE: Using Button Classes with Different HTML Elements
DESCRIPTION: Shows how to apply button classes to different HTML elements including anchor tags, button elements, and input elements.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/buttons.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<a class="btn btn-primary" href="#" role="button">Link</a>
<button class="btn btn-primary" type="submit">Button</button>
<input class="btn btn-primary" type="button" value="Input">
<input class="btn btn-primary" type="submit" value="Submit">
<input class="btn btn-primary" type="reset" value="Reset">
```

----------------------------------------

TITLE: Creating a Bootstrap Collapse Instance with Configuration in JavaScript
DESCRIPTION: JavaScript example demonstrating how to create a collapse instance with a specific configuration. Shows how to initialize with the toggle option set to false.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/collapse.mdx#2025-04-23_snippet_4

LANGUAGE: js
CODE:
```
const bsCollapse = new bootstrap.Collapse('#myCollapse', {
  toggle: false
})
```

----------------------------------------

TITLE: Controlling Display for Print in Bootstrap
DESCRIPTION: This example shows how to use Bootstrap's print display utilities to control element visibility when printing.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/display.mdx#2025-04-23_snippet_3

LANGUAGE: HTML
CODE:
```
<div class="d-print-none">Screen Only (Hide on print only)</div>
<div class="d-none d-print-block">Print Only (Hide on screen only)</div>
<div class="d-none d-lg-block d-print-block">Hide up to large on screen, but always show on print</div>
```

----------------------------------------

TITLE: Creating Headings with Secondary Text in Bootstrap
DESCRIPTION: Demonstrates how to create a heading with smaller secondary text by using the text-body-secondary utility class. This recreates the small secondary heading feature from Bootstrap 3.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/typography.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<h3>
    Fancy display heading
    <small class="text-body-secondary">With faded secondary text</small>
  </h3>
```

----------------------------------------

TITLE: Implementing Large-Sized Buttons in Bootstrap
DESCRIPTION: Examples of larger buttons using the .btn-lg class with primary and secondary button variants.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/buttons.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<button type="button" class="btn btn-primary btn-lg">Large button</button>
<button type="button" class="btn btn-secondary btn-lg">Large button</button>
```

----------------------------------------

TITLE: RFS with Important Flag in SCSS
DESCRIPTION: Demonstrates using RFS with the !important flag for padding values.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/rfs.mdx#2025-04-23_snippet_2

LANGUAGE: scss
CODE:
```
.selector {
  @include padding(2.5rem !important);
}
```

----------------------------------------

TITLE: Creating HTML Template for Bootstrap and Vite
DESCRIPTION: This HTML file serves as the main template for the Vite project, including necessary meta tags and a basic Bootstrap component.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/vite.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Bootstrap w/ Vite</title>
    <script type="module" src="./js/main.js"></script>
  </head>
  <body>
    <div class="container py-4 px-3 mx-auto">
      <h1>Hello, Bootstrap and Vite!</h1>
      <button class="btn btn-primary">Primary button</button>
    </div>
  </body>
</html>
```

----------------------------------------

TITLE: Creating Stacked Toast Notifications in HTML
DESCRIPTION: This code shows how to implement stacked toast notifications using Bootstrap classes. It includes multiple toasts within a container for better organization and positioning.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/toasts.mdx#2025-04-23_snippet_8

LANGUAGE: html
CODE:
```
<div aria-live="polite" aria-atomic="true" class="position-relative">
    <div class="toast-container top-0 end-0 p-3">
      <div class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
          <Placeholder width="20" height="20" background="#007aff" class="rounded me-2" text={false} title={false} />
          <strong class="me-auto">Bootstrap</strong>
          <small class="text-body-secondary">just now</small>
          <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
          See? Just like this.
        </div>
      </div>
      <div class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
          <Placeholder width="20" height="20" background="#007aff" class="rounded me-2" text={false} title={false} />
          <strong class="me-auto">Bootstrap</strong>
          <small class="text-body-secondary">2 seconds ago</small>
          <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
          Heads up, toasts will stack automatically
        </div>
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Implementing Centered Navigation with Flexbox in Bootstrap
DESCRIPTION: Uses flexbox utility class .justify-content-center to center-align navigation items horizontally, showing how Bootstrap's utility classes can be combined with nav components.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<ul class="nav justify-content-center">
    <li class="nav-item">
      <a class="nav-link active" aria-current="page" href="#">Active</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Link</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Link</a>
    </li>
    <li class="nav-item">
      <a class="nav-link disabled" aria-disabled="true">Disabled</a>
    </li>
  </ul>
```

----------------------------------------

TITLE: Implementing Progress Bar Animation Keyframes in SCSS
DESCRIPTION: CSS keyframe animation definition for animating Bootstrap's progress bars. Used specifically for the .progress-bar-animated class to create the animated striped effect.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/progress.mdx#2025-04-23_snippet_8



----------------------------------------

TITLE: Bootstrap HTML Template with Parcel
DESCRIPTION: Basic HTML template configured for Bootstrap and Parcel integration.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/parcel.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Bootstrap w/ Parcel</title>
    <link rel="stylesheet" href="scss/styles.scss">
    <script type="module" src="js/main.js"></script>
  </head>
  <body>
    <div class="container py-4 px-3 mx-auto">
      <h1>Hello, Bootstrap and Parcel!</h1>
      <button class="btn btn-primary">Primary button</button>
    </div>
  </body>
</html>
```

----------------------------------------

TITLE: Tooltip-based Validation Example
DESCRIPTION: Shows how to implement validation feedback using tooltips instead of standard feedback messages, requiring position: relative on parent elements.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/validation.mdx#2025-04-23_snippet_4

LANGUAGE: HTML
CODE:
```
<form class="row g-3 needs-validation" novalidate>
    <div class="col-md-4 position-relative">
      <label for="validationTooltip01" class="form-label">First name</label>
      <input type="text" class="form-control" id="validationTooltip01" value="Mark" required>
      <div class="valid-tooltip">
        Looks good!
      </div>
    </div>
    <!-- Additional form elements omitted for brevity -->
</form>
```

----------------------------------------

TITLE: Creating Underline Navigation Style in Bootstrap
DESCRIPTION: Implements an underlined navigation style using the .nav-underline class, providing a subtle bottom border for navigation items, with enhanced styling for the active item.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_8

LANGUAGE: html
CODE:
```
<ul class="nav nav-underline">
    <li class="nav-item">
      <a class="nav-link active" aria-current="page" href="#">Active</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Link</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Link</a>
    </li>
    <li class="nav-item">
      <a class="nav-link disabled" aria-disabled="true">Disabled</a>
    </li>
  </ul>
```

----------------------------------------

TITLE: Creating Disabled Range Input with Bootstrap
DESCRIPTION: Demonstrates how to create a disabled range input by adding the disabled boolean attribute to the input element. This gives it a grayed out appearance and prevents interaction.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/range.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<label for="disabledRange" class="form-label">Disabled range</label>
<input type="range" class="form-range" id="disabledRange" disabled>
```

----------------------------------------

TITLE: Creating Fill-Width Nav Element without List Items in Bootstrap
DESCRIPTION: Demonstrates how to implement fill-width navigation using the <nav> element without list items, showing a simplified markup approach that maintains the same styling.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_10

LANGUAGE: html
CODE:
```
<nav class="nav nav-pills nav-fill">
    <a class="nav-link active" aria-current="page" href="#">Active</a>
    <a class="nav-link" href="#">Much longer nav link</a>
    <a class="nav-link" href="#">Link</a>
    <a class="nav-link disabled" aria-disabled="true">Disabled</a>
  </nav>
```

----------------------------------------

TITLE: Applying Color Functions in SCSS
DESCRIPTION: Shows how to use Bootstrap's tint-color(), shade-color(), and shift-color() functions to manipulate colors in custom elements.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/sass.mdx#2025-04-23_snippet_10

LANGUAGE: scss
CODE:
```
.custom-element {
  color: tint-color($primary, 10%);
}

.custom-element-2 {
  color: shade-color($danger, 30%);
}

.custom-element-3 {
  color: shift-color($success, 40%);
  background-color: shift-color($success, -60%);
}
```

----------------------------------------

TITLE: Creating Bootstrap Collapse Instance with Options
DESCRIPTION: Demonstrates how to create a new collapse instance with custom options. Shows initialization with the toggle option set to false.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/accordion.mdx#2025-04-23_snippet_4

LANGUAGE: javascript
CODE:
```
const bsCollapse = new bootstrap.Collapse('#myCollapse', {
  toggle: false
})
```

----------------------------------------

TITLE: Adding Event Listener to Offcanvas in Bootstrap
DESCRIPTION: This JavaScript snippet demonstrates how to add an event listener to an offcanvas element. It listens for the 'hidden.bs.offcanvas' event, which is triggered when the offcanvas is fully hidden.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/offcanvas.mdx#2025-04-23_snippet_10

LANGUAGE: JavaScript
CODE:
```
const myOffcanvas = document.getElementById('myOffcanvas')
myOffcanvas.addEventListener('hidden.bs.offcanvas', event => {
  // do something...
})
```

----------------------------------------

TITLE: Implementing Active Table Styling in HTML
DESCRIPTION: This example shows how to highlight specific rows or cells using the 'table-active' class in standard and dark themed tables.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/tables.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<table class="table">
  <thead>
    ...
  </thead>
  <tbody>
    <tr class="table-active">
      ...
    </tr>
    <tr>
      ...
    </tr>
    <tr>
      <th scope="row">3</th>
      <td>John</td>
      <td>Doe</td>
      <td class="table-active">@social</td>
    </tr>
  </tbody>
</table>
```

----------------------------------------

TITLE: Adding Table Foot in Bootstrap
DESCRIPTION: This snippet demonstrates how to add a table foot (tfoot) to a Bootstrap table structure.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/tables.mdx#2025-04-23_snippet_8

LANGUAGE: html
CODE:
```
<table class="table">
  <thead>
    ...
  </thead>
  <tbody>
    ...
  </tbody>
  <tfoot>
    ...
  </tfoot>
</table>
```

----------------------------------------

TITLE: Responsive Grid with Mixed Column Sizes
DESCRIPTION: Shows different column arrangements using numbered and auto-sized columns across all breakpoints.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/grid.mdx#2025-04-23_snippet_4

LANGUAGE: HTML
CODE:
```
<div class="container text-center">
    <div class="row">
      <div class="col">col</div>
      <div class="col">col</div>
      <div class="col">col</div>
      <div class="col">col</div>
    </div>
    <div class="row">
      <div class="col-8">col-8</div>
      <div class="col-4">col-4</div>
    </div>
  </div>
```

----------------------------------------

TITLE: Applying Word Break in HTML
DESCRIPTION: This example shows how to use the text-break class to prevent long strings from breaking layout.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/text.mdx#2025-04-23_snippet_2

LANGUAGE: HTML
CODE:
```
<p class="text-break">mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm</p>
```

----------------------------------------

TITLE: Adding Source Attribution to Blockquotes in Bootstrap
DESCRIPTION: Shows how to properly add attribution to blockquotes by wrapping them in a figure element and using figcaption with the blockquote-footer class to cite the source.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/typography.mdx#2025-04-23_snippet_8

LANGUAGE: html
CODE:
```
<figure>
    <blockquote class="blockquote">
      <p>A well-known quote, contained in a blockquote element.</p>
    </blockquote>
    <figcaption class="blockquote-footer">
      Someone famous in <cite title="Source Title">Source Title</cite>
    </figcaption>
  </figure>
```

----------------------------------------

TITLE: Defining Body Color Variables in CSS
DESCRIPTION: CSS variables for setting the default foreground (color) and background for body and components.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/color.mdx#2025-04-23_snippet_1

LANGUAGE: CSS
CODE:
```
--bs-body-color
--bs-body-color-rgb
--bs-body-bg
--bs-body-bg-rgb
```

----------------------------------------

TITLE: Centering Spinner with Flexbox in HTML
DESCRIPTION: Demonstrates centering a spinner using Bootstrap's flexbox utilities.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/spinners.mdx#2025-04-23_snippet_3

LANGUAGE: HTML
CODE:
```
<div class="d-flex justify-content-center">
    <div class="spinner-border" role="status">
      <span class="visually-hidden">Loading...</span>
    </div>
  </div>
```

----------------------------------------

TITLE: Listening for Bootstrap Alert Closed Event in JavaScript
DESCRIPTION: This code snippet demonstrates how to add an event listener for the 'closed.bs.alert' event on a Bootstrap alert element. It allows for custom actions to be performed after the alert has been closed and CSS transitions have completed.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/alerts.mdx#2025-04-23_snippet_3

LANGUAGE: javascript
CODE:
```
const myAlert = document.getElementById('myAlert')
myAlert.addEventListener('closed.bs.alert', event => {
  // do something, for instance, explicitly move focus to the most appropriate element,
  // so it doesn't get lost/reset to the start of the page
  // document.getElementById('...').focus()
})
```

----------------------------------------

TITLE: Customizing Body Styles with Inline CSS Variables in HTML
DESCRIPTION: This HTML example shows how to make real-time customizations to body styles using CSS variables. It demonstrates setting a custom body color directly in the HTML.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/reboot.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<body style="--bs-body-color: #333;">
  <!-- ... -->
</body>
```

----------------------------------------

TITLE: Updating Progress Bar Markup in HTML for Improved Accessibility
DESCRIPTION: Shows the changes in HTML markup for progress bars to improve screen reader compatibility. The role and aria attributes are moved from the inner .progress-bar element to the outer .progress element.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/migration.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<!-- Previous markup -->
<div class="progress">
  <div class="progress-bar" role="progressbar" aria-label="Basic example" style="width: 25%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
</div>

<!-- New markup -->
<div class="progress" role="progressbar" aria-label="Basic example" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">
  <div class="progress-bar" style="width: 25%"></div>
</div>
```

----------------------------------------

TITLE: Implementing Reverse Form Controls in Bootstrap
DESCRIPTION: Example of form controls with reverse positioning using the .form-check-reverse modifier class. Includes checkbox and switch examples with their labels positioned on the left side.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/checks-radios.mdx#2025-04-23_snippet_11

LANGUAGE: HTML
CODE:
```
<div class="form-check form-check-reverse">
    <input class="form-check-input" type="checkbox" value="" id="reverseCheck1">
    <label class="form-check-label" for="reverseCheck1">
      Reverse checkbox
    </label>
  </div>
  <div class="form-check form-check-reverse">
    <input class="form-check-input" type="checkbox" value="" id="reverseCheck2" disabled>
    <label class="form-check-label" for="reverseCheck2">
      Disabled reverse checkbox
    </label>
  </div>

  <div class="form-check form-switch form-check-reverse">
    <input class="form-check-input" type="checkbox" id="switchCheckReverse">
    <label class="form-check-label" for="switchCheckReverse">Reverse switch checkbox input</label>
  </div>
```

----------------------------------------

TITLE: CSS Margin Examples
DESCRIPTION: Examples of Bootstrap's margin utility classes for spacing control.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/utilities.mdx#2025-04-23_snippet_2

LANGUAGE: CSS
CODE:
```
.me-3 { margin-right: 1rem }
.me-md-3 { margin-right: 1rem }
```

----------------------------------------

TITLE: Sticky Top Position in Bootstrap
DESCRIPTION: Demonstrates how to make an element stick to the top of the viewport after scrolling past it using Bootstrap's sticky-top class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/position.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<div class="sticky-top">...</div>
```

----------------------------------------

TITLE: Declaring Z-index Utilities in SCSS
DESCRIPTION: This SCSS snippet shows how z-index utilities are declared in the utilities API. It's located in the _utilities.scss file and can be customized using the utilities API.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/z-index.mdx#2025-04-23_snippet_2

LANGUAGE: SCSS
CODE:
```
<ScssDocs name="utils-zindex" file="scss/_utilities.scss" />
```

----------------------------------------

TITLE: Custom Property Scaling with RFS in SCSS
DESCRIPTION: Shows how to use the RFS mixin with custom CSS properties like border-radius.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/rfs.mdx#2025-04-23_snippet_1

LANGUAGE: scss
CODE:
```
.selector {
  @include rfs(4rem, border-radius);
}
```

----------------------------------------

TITLE: Horizontal Stack with Auto Margin Spacing
DESCRIPTION: Demonstrates horizontal stack layout using .ms-auto utility for spacing between items.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/stacks.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<div class="hstack gap-3">
    <div class="p-2">First item</div>
    <div class="p-2 ms-auto">Second item</div>
    <div class="p-2">Third item</div>
  </div>
```

----------------------------------------

TITLE: Initializing Bootstrap Button Instance in JavaScript
DESCRIPTION: This snippet shows how to create a Bootstrap Button instance using JavaScript. It demonstrates the basic initialization of a button object.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/buttons.mdx#2025-04-23_snippet_16

LANGUAGE: javascript
CODE:
```
const bsButton = new bootstrap.Button('#myButton')
```

----------------------------------------

TITLE: Creating Sized Button Groups in HTML with Bootstrap
DESCRIPTION: Shows how to create button groups of different sizes (large, default, small) using Bootstrap's sizing classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/button-group.mdx#2025-04-23_snippet_8

LANGUAGE: HTML
CODE:
```
<div class="btn-group btn-group-lg" role="group" aria-label="Large button group">
    <button type="button" class="btn btn-outline-primary">Left</button>
    <button type="button" class="btn btn-outline-primary">Middle</button>
    <button type="button" class="btn btn-outline-primary">Right</button>
  </div>
  <br>
  <div class="btn-group" role="group" aria-label="Default button group">
    <button type="button" class="btn btn-outline-primary">Left</button>
    <button type="button" class="btn btn-outline-primary">Middle</button>
    <button type="button" class="btn btn-outline-primary">Right</button>
  </div>
  <br>
  <div class="btn-group btn-group-sm" role="group" aria-label="Small button group">
    <button type="button" class="btn btn-outline-primary">Left</button>
    <button type="button" class="btn btn-outline-primary">Middle</button>
    <button type="button" class="btn btn-outline-primary">Right</button>
  </div>
```

----------------------------------------

TITLE: Using New Form Classes in HTML
DESCRIPTION: The consolidated form classes that replace the previous custom form classes, including changes to checkboxes, radios, selects, and other form controls.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/migration.mdx#2025-04-23_snippet_10

LANGUAGE: html
CODE:
```
<div class="form-check">...</div>
```

LANGUAGE: html
CODE:
```
<div class="form-check form-switch">...</div>
```

LANGUAGE: html
CODE:
```
<select class="form-select">...</select>
```

LANGUAGE: html
CODE:
```
<label class="form-label">...</label>
```

----------------------------------------

TITLE: Implementing Radio Toggle Buttons in Bootstrap
DESCRIPTION: Examples of radio-style toggle buttons using .btn-check class with secondary styling and standard variants.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/checks-radios.mdx#2025-04-23_snippet_14

LANGUAGE: HTML
CODE:
```
<input type="radio" class="btn-check" name="options" id="option1" autocomplete="off" checked>
<label class="btn btn-secondary" for="option1">Checked</label>

<input type="radio" class="btn-check" name="options" id="option2" autocomplete="off">
<label class="btn btn-secondary" for="option2">Radio</label>

<input type="radio" class="btn-check" name="options" id="option3" autocomplete="off" disabled>
<label class="btn btn-secondary" for="option3">Disabled</label>

<input type="radio" class="btn-check" name="options" id="option4" autocomplete="off">
<label class="btn btn-secondary" for="option4">Radio</label>
```

----------------------------------------

TITLE: Overriding Bootstrap Sass Variables
DESCRIPTION: Demonstrates how to override default Bootstrap Sass variables to customize the appearance, such as changing the body background and text color.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/sass.mdx#2025-04-23_snippet_5

LANGUAGE: scss
CODE:
```
// Required
@import "../node_modules/bootstrap/scss/functions";

// Default variable overrides
$body-bg: #000;
$body-color: #111;

// Required
@import "../node_modules/bootstrap/scss/variables";
@import "../node_modules/bootstrap/scss/variables-dark";
@import "../node_modules/bootstrap/scss/maps";
@import "../node_modules/bootstrap/scss/mixins";
@import "../node_modules/bootstrap/scss/root";

// Optional Bootstrap components here
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";
// etc
```

----------------------------------------

TITLE: Using Color Variables in SCSS
DESCRIPTION: This example demonstrates how to use Bootstrap's color variables in custom SCSS rules.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/color.mdx#2025-04-23_snippet_14

LANGUAGE: SCSS
CODE:
```
.alpha { color: $purple; }
.beta {
  color: $yellow-300;
  background-color: $indigo-900;
}
```

----------------------------------------

TITLE: Readonly Plaintext Inputs with Floating Labels in Bootstrap
DESCRIPTION: Shows how floating labels support .form-control-plaintext for toggling between editable inputs and plaintext values without affecting layout. Examples include empty inputs and inputs with values.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/floating-labels.mdx#2025-04-23_snippet_7

LANGUAGE: html
CODE:
```
<div class="form-floating mb-3">
    <input type="email" readonly class="form-control-plaintext" id="floatingEmptyPlaintextInput" placeholder="name@example.com">
    <label for="floatingEmptyPlaintextInput">Empty input</label>
  </div>
  <div class="form-floating mb-3">
    <input type="email" readonly class="form-control-plaintext" id="floatingPlaintextInput" placeholder="name@example.com" value="name@example.com">
    <label for="floatingPlaintextInput">Input with value</label>
  </div>
```

----------------------------------------

TITLE: Defining Margin and Padding Utility Classes in SCSS
DESCRIPTION: This snippet demonstrates how Bootstrap defines margin and padding utility classes using SCSS. It shows examples for top margin, left margin, horizontal padding, and all-sides padding.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/spacing.mdx#2025-04-23_snippet_0

LANGUAGE: scss
CODE:
```
.mt-0 {
  margin-top: 0 !important;
}

.ms-1 {
  margin-left: ($spacer * .25) !important;
}

.px-2 {
  padding-left: ($spacer * .5) !important;
  padding-right: ($spacer * .5) !important;
}

.p-3 {
  padding: $spacer !important;
}
```

----------------------------------------

TITLE: Removing Gutters in Bootstrap Grid
DESCRIPTION: This snippet demonstrates how to remove gutters between columns using the .g-0 class. It removes negative margins from .row and horizontal padding from immediate children columns.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/gutters.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<div class="row g-0 text-center">
    <div class="col-sm-6 col-md-8">.col-sm-6 .col-md-8</div>
    <div class="col-6 col-md-4">.col-6 .col-md-4</div>
  </div>
```

----------------------------------------

TITLE: Initializing Bootstrap Popovers with JavaScript
DESCRIPTION: This code snippet demonstrates how to initialize all popovers on a page by selecting elements with the data-bs-toggle attribute set to 'popover'. The code creates a list of popovers from matching elements.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/popovers.mdx#2025-04-23_snippet_0

LANGUAGE: js
CODE:
```
const popoverTriggerList = document.querySelectorAll('[data-bs-toggle="popover"]')
const popoverList = [...popoverTriggerList].map(popoverTriggerEl => new bootstrap.Popover(popoverTriggerEl))
```

----------------------------------------

TITLE: Custom-Styled Bootstrap Popover Implementation
DESCRIPTION: This HTML creates a button with a custom-styled popover using data-bs-custom-class to apply custom CSS variables. This allows for theming popovers with custom appearances.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/popovers.mdx#2025-04-23_snippet_7

LANGUAGE: html
CODE:
```
<button type="button" class="btn btn-secondary"
          data-bs-toggle="popover" data-bs-placement="right"
          data-bs-custom-class="custom-popover"
          data-bs-title="Custom popover"
          data-bs-content="This popover is themed via CSS variables.">
    Custom popover
  </button>
```

----------------------------------------

TITLE: Toast with Additional Action Buttons
DESCRIPTION: Example of a toast with additional action buttons inside the toast body. Includes a primary action button and a close button separated by a border.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/toasts.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<div class="toast" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="toast-body">
      Hello, world! This is a toast message.
      <div class="mt-2 pt-2 border-top">
        <button type="button" class="btn btn-primary btn-sm">Take action</button>
        <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="toast">Close</button>
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Implementing Striped Progress Bars in HTML
DESCRIPTION: This snippet demonstrates how to create striped progress bars using the .progress-bar-striped class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/progress.mdx#2025-04-23_snippet_6

LANGUAGE: HTML
CODE:
```
<div class="progress" role="progressbar" aria-label="Default striped example" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100">
    <div class="progress-bar progress-bar-striped" style="width: 10%"></div>
  </div>
  <div class="progress" role="progressbar" aria-label="Success striped example" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">
    <div class="progress-bar progress-bar-striped bg-success" style="width: 25%"></div>
  </div>
  <div class="progress" role="progressbar" aria-label="Info striped example" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100">
    <div class="progress-bar progress-bar-striped bg-info" style="width: 50%"></div>
  </div>
  <div class="progress" role="progressbar" aria-label="Warning striped example" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100">
    <div class="progress-bar progress-bar-striped bg-warning" style="width: 75%"></div>
  </div>
  <div class="progress" role="progressbar" aria-label="Danger striped example" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100">
    <div class="progress-bar progress-bar-striped bg-danger" style="width: 100%"></div>
  </div>
```

----------------------------------------

TITLE: Custom Two-Column Layout Implementation
DESCRIPTION: Example of implementing a custom two-column responsive layout using Bootstrap's Sass mixins and media breakpoints.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/grid.mdx#2025-04-23_snippet_9

LANGUAGE: scss
CODE:
```
.example-container {
  @include make-container();
  // Make sure to define this width after the mixin to override
  // `width: 100%` generated by `make-container()`
  width: 800px;
}

.example-row {
  @include make-row();
}

.example-content-main {
  @include make-col-ready();

  @include media-breakpoint-up(sm) {
    @include make-col(6);
  }
  @include media-breakpoint-up(lg) {
    @include make-col(8);
  }
}

.example-content-secondary {
  @include make-col-ready();

  @include media-breakpoint-up(sm) {
    @include make-col(6);
  }
  @include media-breakpoint-up(lg) {
    @include make-col(4);
  }
}
```

----------------------------------------

TITLE: Listening for Bootstrap Collapse Events in JavaScript
DESCRIPTION: Example showing how to add an event listener for the hidden.bs.collapse event on a collapsible element. The code demonstrates the proper way to handle collapse events in Bootstrap.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/collapse.mdx#2025-04-23_snippet_5

LANGUAGE: javascript
CODE:
```
const myCollapsible = document.getElementById('myCollapsible')
myCollapsible.addEventListener('hidden.bs.collapse', event => {
  // do something...
})
```

----------------------------------------

TITLE: Creating Autoplaying Bootstrap Carousel Without Controls in HTML
DESCRIPTION: This example demonstrates an autoplaying Bootstrap carousel without navigation controls. It includes three slides with placeholder images and uses the 'd-block' and 'w-100' classes to ensure proper image alignment.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/carousel.mdx#2025-04-23_snippet_7

LANGUAGE: HTML
CODE:
```
<div id="carouselExampleSlidesOnly" class="carousel slide" data-bs-ride="carousel">
    <div class="carousel-inner">
      <div class="carousel-item active">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#555" background="#777" text="First slide" />
      </div>
      <div class="carousel-item">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#444" background="#666" text="Second slide" />
      </div>
      <div class="carousel-item">
        <Placeholder width="800" height="400" class="bd-placeholder-img-lg d-block w-100" color="#333" background="#555" text="Third slide" />
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Initializing Individual Tooltip Instance with JavaScript
DESCRIPTION: This snippet shows how to initialize a single tooltip by selecting a specific element by ID and creating a new Tooltip instance. This approach allows for individual configuration of tooltips.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/tooltips.mdx#2025-04-23_snippet_3

LANGUAGE: javascript
CODE:
```
const exampleEl = document.getElementById('example')
const tooltip = new bootstrap.Tooltip(exampleEl, options)
```

----------------------------------------

TITLE: Animating Bootstrap Placeholders
DESCRIPTION: Shows how to add animation effects to placeholders using .placeholder-glow or .placeholder-wave classes to better indicate loading state.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/placeholders.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<p class="placeholder-glow">
    <span class="placeholder col-12"></span>
  </p>

  <p class="placeholder-wave">
    <span class="placeholder col-12"></span>
  </p>
```

----------------------------------------

TITLE: Using New Numbered List Group in Bootstrap 5
DESCRIPTION: Added .list-group-numbered modifier for creating numbered list groups.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/migration.mdx#2025-04-23_snippet_18

LANGUAGE: HTML
CODE:
```
<ol class="list-group list-group-numbered">
  <li class="list-group-item">First item</li>
  <li class="list-group-item">Second item</li>
  <li class="list-group-item">Third item</li>
</ol>
```

----------------------------------------

TITLE: Demonstrating Max-Height Utility in Bootstrap HTML
DESCRIPTION: This example demonstrates the use of Bootstrap's max-height utility class (mh-100) to limit an element's height to 100% of its parent container, even when its content would normally exceed that height.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/sizing.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<div style="height: 100px;">
    <div class="mh-100" style="width: 100px; height: 200px;">Max-height 100%</div>
  </div>
```

----------------------------------------

TITLE: Defining Light Color Variables in CSS
DESCRIPTION: CSS variables for light colors, used as an additional theme option for less contrasting colors.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/color.mdx#2025-04-23_snippet_11

LANGUAGE: CSS
CODE:
```
--bs-light
--bs-light-rgb
--bs-light-bg-subtle
--bs-light-border-subtle
--bs-light-text-emphasis
```

----------------------------------------

TITLE: Advanced Stretched Link Examples with Containing Block Behavior
DESCRIPTION: Demonstrates various scenarios where stretched-link behavior is affected by CSS properties like position and transform, including examples of when the stretched link won't work as expected.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/stretched-link.mdx#2025-04-23_snippet_3

LANGUAGE: jsx
CODE:
```
<div class="card" style="width: 18rem;">
    <Placeholder width="100%" height="180" class="card-img-top" text={false} title="Card image cap" />
    <div class="card-body">
      <h5 class="card-title">Card with stretched links</h5>
      <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
      <p class="card-text">
        <a href="#" class="stretched-link text-danger" style="position: relative;">Stretched link will not work here, because <code>position: relative</code> is added to the link</a>
      </p>
      <p class="card-text bg-body-tertiary" style="transform: rotate(0);">
        This <a href="#" class="text-warning stretched-link">stretched link</a> will only be spread over the <code>p</code>-tag, because a transform is applied to it.
      </p>
    </div>
  </div>
```

----------------------------------------

TITLE: Adding Fade Effects to Bootstrap Tabs
DESCRIPTION: Shows how to implement a fade transition effect when switching between tabs by adding the '.fade' class to tab panes. The active tab also needs the '.show' class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_23

LANGUAGE: html
CODE:
```
<div class="tab-content">
  <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab" tabindex="0">...</div>
  <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab" tabindex="0">...</div>
  <div class="tab-pane fade" id="messages" role="tabpanel" aria-labelledby="messages-tab" tabindex="0">...</div>
  <div class="tab-pane fade" id="settings" role="tabpanel" aria-labelledby="settings-tab" tabindex="0">...</div>
</div>
```

----------------------------------------

TITLE: Using New Position Utilities in Bootstrap 5
DESCRIPTION: New position utilities for top, right, bottom, and left with values of 0, 50%, and 100% for each property.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/migration.mdx#2025-04-23_snippet_20

LANGUAGE: HTML
CODE:
```
<div class="position-absolute top-0 start-0">Top left</div>
<div class="position-absolute top-50 start-50 translate-middle">Center</div>
<div class="position-absolute bottom-0 end-0">Bottom right</div>
```

----------------------------------------

TITLE: Creating Dropdown with Link Toggle in Bootstrap
DESCRIPTION: Demonstrates how to create a dropdown menu using an anchor tag as the toggle. The example includes adding the role="button" attribute for accessibility.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<div class="dropdown">
    <a class="btn btn-secondary dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
      Dropdown link
    </a>

    <ul class="dropdown-menu">
      <li><a class="dropdown-item" href="#">Action</a></li>
      <li><a class="dropdown-item" href="#">Another action</a></li>
      <li><a class="dropdown-item" href="#">Something else here</a></li>
    </ul>
  </div>
```

----------------------------------------

TITLE: Creating Auto-sizing Form Layout with Bootstrap
DESCRIPTION: This snippet demonstrates an auto-sizing form layout using Bootstrap's flexbox utilities. It uses .col-auto classes to size columns based on their content and includes various form input types.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/layout.mdx#2025-04-23_snippet_7

LANGUAGE: HTML
CODE:
```
<form class="row gy-2 gx-3 align-items-center">
    <div class="col-auto">
      <label class="visually-hidden" for="autoSizingInput">Name</label>
      <input type="text" class="form-control" id="autoSizingInput" placeholder="Jane Doe">
    </div>
    <div class="col-auto">
      <label class="visually-hidden" for="autoSizingInputGroup">Username</label>
      <div class="input-group">
        <div class="input-group-text">@</div>
        <input type="text" class="form-control" id="autoSizingInputGroup" placeholder="Username">
      </div>
    </div>
    <div class="col-auto">
      <label class="visually-hidden" for="autoSizingSelect">Preference</label>
      <select class="form-select" id="autoSizingSelect">
        <option selected>Choose...</option>
        <option value="1">One</option>
        <option value="2">Two</option>
        <option value="3">Three</option>
      </select>
    </div>
    <div class="col-auto">
      <div class="form-check">
        <input class="form-check-input" type="checkbox" id="autoSizingCheck">
        <label class="form-check-label" for="autoSizingCheck">
          Remember me
        </label>
      </div>
    </div>
    <div class="col-auto">
      <button type="submit" class="btn btn-primary">Submit</button>
    </div>
  </form>
```

----------------------------------------

TITLE: Implementing Floating Labels with Select Elements in Bootstrap
DESCRIPTION: Shows how to use floating labels with select elements. Unlike inputs, selects will always show the label in its floated state. Size and multiple attributes are not supported.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/floating-labels.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<div class="form-floating">
    <select class="form-select" id="floatingSelect" aria-label="Floating label select example">
      <option selected>Open this select menu</option>
      <option value="1">One</option>
      <option value="2">Two</option>
      <option value="3">Three</option>
    </select>
    <label for="floatingSelect">Works with selects</label>
  </div>
```

----------------------------------------

TITLE: Demonstrating CSS Selector Patterns in Bootstrap
DESCRIPTION: Example showing preferred CSS selector pattern for button components in Bootstrap, using a base class (.btn) for common styles and modifier classes (.btn-primary) for specific variations.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/extend/approach.mdx#2025-04-23_snippet_0

LANGUAGE: css
CODE:
```
.btn { /* Base styles */ }
.btn-primary { /* Modifier styles */ }
```

----------------------------------------

TITLE: jQuery Integration with Bootstrap Components
DESCRIPTION: Examples of using Bootstrap components with jQuery, including initialization and method triggering.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/javascript.mdx#2025-04-23_snippet_10

LANGUAGE: javascript
CODE:
```
// to enable tooltips with the default configuration
$('[data-bs-toggle="tooltip"]').tooltip()

// to initialize tooltips with given configuration
$('[data-bs-toggle="tooltip"]').tooltip({
  boundary: 'clippingParents',
  customClass: 'myClass'
})

// to trigger the `show` method
$('#myTooltip').tooltip('show')
```

----------------------------------------

TITLE: Using Theme Colors as Variables in SCSS
DESCRIPTION: Demonstrates how to use Bootstrap's theme colors as standalone variables in custom SCSS styles.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/sass.mdx#2025-04-23_snippet_9

LANGUAGE: scss
CODE:
```
.custom-element {
  color: $gray-100;
  background-color: $dark;
}
```

----------------------------------------

TITLE: Input Group Wrapping Example
DESCRIPTION: Shows how to control input group wrapping behavior using flex-nowrap class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/input-group.mdx#2025-04-23_snippet_1

LANGUAGE: HTML
CODE:
```
<div class="input-group flex-nowrap">
    <span class="input-group-text" id="addon-wrapping">@</span>
    <input type="text" class="form-control" placeholder="Username" aria-label="Username" aria-describedby="addon-wrapping">
  </div>
```

----------------------------------------

TITLE: Creating Inline Lists in Bootstrap
DESCRIPTION: Shows how to create horizontally aligned lists by combining the list-inline and list-inline-item classes. This removes bullets and applies light margin to create inline list items.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/typography.mdx#2025-04-23_snippet_12

LANGUAGE: html
CODE:
```
<ul class="list-inline">
    <li class="list-inline-item">This is a list item.</li>
    <li class="list-inline-item">And another one.</li>
    <li class="list-inline-item">But they're displayed inline.</li>
  </ul>
```

----------------------------------------

TITLE: SVG Divider Breadcrumb
DESCRIPTION: Implementation of breadcrumb with SVG divider using URL-encoded SVG in CSS custom property.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/breadcrumb.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<nav style="--bs-breadcrumb-divider: url(&#34;data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'%3E%3Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='%236c757d'/%3E%3C/svg%3E&#34;);" aria-label="breadcrumb">
    <ol class="breadcrumb">
      <li class="breadcrumb-item"><a href="#">Home</a></li>
      <li class="breadcrumb-item active" aria-current="page">Library</li>
    </ol>
  </nav>
```

----------------------------------------

TITLE: Horizontal Centering with Bootstrap in HTML
DESCRIPTION: This HTML example shows how to use the .mx-auto class to horizontally center a fixed-width block level element.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/spacing.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<div class="mx-auto p-2" style="width: 200px;">
  Centered element
</div>
```

----------------------------------------

TITLE: Implementing align-content-stretch in Bootstrap Flexbox
DESCRIPTION: Uses Bootstrap's d-flex, align-content-stretch, and flex-wrap utilities to stretch flex items to fill the container along the cross axis, making each row take up equal vertical space.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/flex.mdx#2025-04-23_snippet_17

LANGUAGE: html
CODE:
```
<div class="d-flex align-content-stretch flex-wrap">...</div>
```

----------------------------------------

TITLE: Installing Bootstrap Ruby Gem Directly
DESCRIPTION: Shell command to install the Bootstrap Ruby gem directly without using Bundler. This method is an alternative for Ruby projects not using Bundler.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/download.mdx#2025-04-23_snippet_7

LANGUAGE: sh
CODE:
```
gem install bootstrap -v [[config:current_ruby_version]]
```

----------------------------------------

TITLE: HTML Template Setup
DESCRIPTION: Basic HTML template with Bootstrap components for testing the setup.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/webpack.mdx#2025-04-23_snippet_7

LANGUAGE: html
CODE:
```
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Bootstrap w/ Webpack</title>
  </head>
  <body>
    <div class="container py-4 px-3 mx-auto">
      <h1>Hello, Bootstrap and Webpack!</h1>
      <button class="btn btn-primary">Primary button</button>
    </div>
  </body>
</html>
```

----------------------------------------

TITLE: Colored Toast with Custom Background
DESCRIPTION: A toast with a primary color background using Bootstrap's color utilities. Includes a white close button for better contrast against the colored background and removes the default border.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/toasts.mdx#2025-04-23_snippet_6

LANGUAGE: html
CODE:
```
<div class="toast align-items-center text-bg-primary border-0" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="d-flex">
      <div class="toast-body">
        Hello, world! This is a toast message.
      </div>
      <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
  </div>
```

----------------------------------------

TITLE: Customizing Range Input Min and Max Values
DESCRIPTION: Shows how to customize the minimum and maximum values of a range input using the min and max attributes. By default, range inputs have min=0 and max=100.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/range.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<label for="customRange2" class="form-label">Example range</label>
<input type="range" class="form-range" min="0" max="5" id="customRange2">
```

----------------------------------------

TITLE: Creating Button Group with Links in HTML using Bootstrap
DESCRIPTION: Shows how to create a button group using anchor tags instead of buttons. The links are styled as buttons using Bootstrap classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/button-group.mdx#2025-04-23_snippet_1

LANGUAGE: HTML
CODE:
```
<div class="btn-group">
    <a href="#" class="btn btn-primary active" aria-current="page">Active link</a>
    <a href="#" class="btn btn-primary">Link</a>
    <a href="#" class="btn btn-primary">Link</a>
  </div>
```

----------------------------------------

TITLE: Compiled CSS for Between Breakpoints Media Query
DESCRIPTION: This snippet shows how a between breakpoints media query mixin compiles into a standard CSS media query. It demonstrates the result for applying styles between medium and extra-large breakpoints.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/breakpoints.mdx#2025-04-23_snippet_8

LANGUAGE: scss
CODE:
```
// Example
// Apply styles starting from medium devices and up to extra large devices
@media (min-width: 768px) and (max-width: 1199.98px) { ... }
```

----------------------------------------

TITLE: Importing Bootstrap SCSS
DESCRIPTION: SCSS import statement to include Bootstrap's CSS components.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/parcel.mdx#2025-04-23_snippet_7

LANGUAGE: scss
CODE:
```
// Import all of Bootstrap's CSS
@import "bootstrap/scss/bootstrap";
```

----------------------------------------

TITLE: Using Default Exports with Bootstrap Components
DESCRIPTION: Demonstrates how to properly import and initialize Bootstrap components that use default exports from the dist folder.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/optimize.mdx#2025-04-23_snippet_1

LANGUAGE: javascript
CODE:
```
import Modal from 'bootstrap/js/dist/modal'
const modal = new Modal(document.getElementById('myModal'))
```

----------------------------------------

TITLE: Implementing Dark Mode in SCSS with Bootstrap Mixin
DESCRIPTION: This SCSS snippet shows how to use Bootstrap's color-mode mixin to implement dark mode styles.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/color-modes.mdx#2025-04-23_snippet_1

LANGUAGE: scss
CODE:
```
// Color mode variables in _root.scss
@include color-mode(dark) {
  // CSS variable overrides here...
}
```

----------------------------------------

TITLE: Basic Position Values in Bootstrap
DESCRIPTION: Demonstrates the basic position utility classes available in Bootstrap for setting an element's position property.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/position.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<div class="position-static">...</div>
<div class="position-relative">...</div>
<div class="position-absolute">...</div>
<div class="position-fixed">...</div>
<div class="position-sticky">...</div>
```

----------------------------------------

TITLE: Disabled State Dropdown Items
DESCRIPTION: Example showing disabled dropdown items using the .disabled class and aria-disabled attribute.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_16

LANGUAGE: HTML
CODE:
```
<ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#">Regular link</a></li>
    <li><a class="dropdown-item disabled" aria-disabled="true">Disabled link</a></li>
    <li><a class="dropdown-item" href="#">Another link</a></li>
  </ul>
```

----------------------------------------

TITLE: Creating a Simple Vertical Button Group in Bootstrap
DESCRIPTION: This snippet demonstrates how to create a basic vertical button group using Bootstrap classes. It uses the 'btn-group-vertical' class to stack buttons vertically.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/button-group.mdx#2025-04-23_snippet_10

LANGUAGE: HTML
CODE:
```
<div class="btn-group-vertical" role="group" aria-label="Vertical button group">
    <button type="button" class="btn btn-primary">Button</button>
    <button type="button" class="btn btn-primary">Button</button>
    <button type="button" class="btn btn-primary">Button</button>
    <button type="button" class="btn btn-primary">Button</button>
  </div>
```

----------------------------------------

TITLE: Adding Event Listener to Bootstrap Tab Elements in JavaScript
DESCRIPTION: This code snippet shows how to add event listeners to all tab elements with the 'data-bs-toggle="list"' attribute. It listens for the 'shown.bs.tab' event and provides access to the newly activated tab and the previous active tab.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/list-group.mdx#2025-04-23_snippet_14

LANGUAGE: javascript
CODE:
```
const tabElms = document.querySelectorAll('a[data-bs-toggle="list"]')
tabElms.forEach(tabElm => {
  tabElm.addEventListener('shown.bs.tab', event => {
    event.target // newly activated tab
    event.relatedTarget // previous active tab
  })
})
```

----------------------------------------

TITLE: Creating Cards with Header Element in Bootstrap
DESCRIPTION: Demonstrates using h5 element with the card-header class instead of a div. This creates a more semantically meaningful heading while maintaining the card header styling.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/card.mdx#2025-04-23_snippet_9

LANGUAGE: JSX
CODE:
```
<div class="card">
    <h5 class="card-header">Featured</h5>
    <div class="card-body">
      <h5 class="card-title">Special title treatment</h5>
      <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
      <a href="#" class="btn btn-primary">Go somewhere</a>
    </div>
  </div>
```

----------------------------------------

TITLE: Input Group with Dropdown Buttons
DESCRIPTION: Shows how to implement dropdown buttons within input groups, including positioning and menu options.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/input-group.mdx#2025-04-23_snippet_5

LANGUAGE: HTML
CODE:
```
<div class="input-group mb-3">
    <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">Dropdown</button>
    <ul class="dropdown-menu">
      <li><a class="dropdown-item" href="#">Action</a></li>
      <li><a class="dropdown-item" href="#">Another action</a></li>
      <li><a class="dropdown-item" href="#">Something else here</a></li>
      <li><hr class="dropdown-divider"></li>
      <li><a class="dropdown-item" href="#">Separated link</a></li>
    </ul>
    <input type="text" class="form-control" aria-label="Text input with dropdown button">
  </div>
```

----------------------------------------

TITLE: Running npm scripts for Bootstrap development
DESCRIPTION: Lists primary npm scripts used for compiling CSS and JavaScript, building documentation, and running tests in Bootstrap development.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/contribute.mdx#2025-04-23_snippet_0

LANGUAGE: markdown
CODE:
```
| Task | Description |
| --- | --- |
| `npm start` | Compiles CSS and JavaScript, builds the documentation, and starts a local server. |
| `npm run dist` | Creates the `dist/` directory with compiled files. Uses [Sass](https://sass-lang.com/), [Autoprefixer](https://github.com/postcss/autoprefixer), and [terser](https://github.com/terser/terser). |
| `npm test` | Runs tests locally after running `npm run dist` |
| `npm run docs-serve` | Builds and runs the documentation locally. |
```

----------------------------------------

TITLE: Using New Close Button Styles in Bootstrap 5
DESCRIPTION: Close buttons now use a background-image (embedded SVG) instead of &times; in HTML. A new .btn-close-white variant is available for dark backgrounds.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/migration.mdx#2025-04-23_snippet_16

LANGUAGE: HTML
CODE:
```
<button type="button" class="btn-close" aria-label="Close"></button>
<button type="button" class="btn-close btn-close-white" aria-label="Close"></button>
```

----------------------------------------

TITLE: Implementing Horizontal Overflow Controls in HTML
DESCRIPTION: This snippet shows how to use Bootstrap's overflow-x utility classes to control content overflow horizontally. It includes examples for auto, hidden, visible, and scroll overflow types on the x-axis.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/overflow.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<div class="overflow-x-auto">...</div>
<div class="overflow-x-hidden">...</div>
<div class="overflow-x-visible">...</div>
<div class="overflow-x-scroll">...</div>
```

----------------------------------------

TITLE: Implementing Visually Hidden Content in HTML with Bootstrap
DESCRIPTION: This snippet demonstrates how to use the .visually-hidden class to create content that is hidden visually but remains accessible to assistive technologies. It's useful for providing additional context to non-visual users.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/accessibility.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<p class="text-danger">
  <span class="visually-hidden">Danger: </span>
  This action is not reversible
</p>
```

----------------------------------------

TITLE: Implementing Custom Select Input Groups in Bootstrap
DESCRIPTION: Examples of input groups with custom select elements. Shows various configurations including labels and buttons combined with select dropdowns.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/input-group.mdx#2025-04-23_snippet_7

LANGUAGE: HTML
CODE:
```
<div class="input-group mb-3">
    <label class="input-group-text" for="inputGroupSelect01">Options</label>
    <select class="form-select" id="inputGroupSelect01">
      <option selected>Choose...</option>
      <option value="1">One</option>
      <option value="2">Two</option>
      <option value="3">Three</option>
    </select>
  </div>

  <div class="input-group mb-3">
    <select class="form-select" id="inputGroupSelect02">
      <option selected>Choose...</option>
      <option value="1">One</option>
      <option value="2">Two</option>
      <option value="3">Three</option>
    </select>
    <label class="input-group-text" for="inputGroupSelect02">Options</label>
  </div>

  <div class="input-group mb-3">
    <button class="btn btn-outline-secondary" type="button">Button</button>
    <select class="form-select" id="inputGroupSelect03" aria-label="Example select with button addon">
      <option selected>Choose...</option>
      <option value="1">One</option>
      <option value="2">Two</option>
      <option value="3">Three</option>
    </select>
  </div>

  <div class="input-group">
    <select class="form-select" id="inputGroupSelect04" aria-label="Example select with button addon">
      <option selected>Choose...</option>
      <option value="1">One</option>
      <option value="2">Two</option>
      <option value="3">Three</option>
    </select>
    <button class="btn btn-outline-secondary" type="button">Button</button>
  </div>
```

----------------------------------------

TITLE: Implementing Accessible Disabled Links with Keyboard Navigation Prevention
DESCRIPTION: Examples of disabled links that include tabindex="-1" to prevent keyboard focus while maintaining proper accessibility attributes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/buttons.mdx#2025-04-23_snippet_9

LANGUAGE: html
CODE:
```
<a href="#" class="btn btn-primary disabled" tabindex="-1" role="button" aria-disabled="true">Primary link</a>
<a href="#" class="btn btn-secondary disabled" tabindex="-1" role="button" aria-disabled="true">Link</a>
```

----------------------------------------

TITLE: Implementing Table Cell Vertical Alignment in HTML
DESCRIPTION: Shows how to apply Bootstrap's vertical alignment utilities to table cells. Demonstrates the same alignment options in a table context with a fixed height of 100px.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/vertical-align.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<table style="height: 100px;">
    <tbody>
      <tr>
        <td class="align-baseline">baseline</td>
        <td class="align-top">top</td>
        <td class="align-middle">middle</td>
        <td class="align-bottom">bottom</td>
        <td class="align-text-top">text-top</td>
        <td class="align-text-bottom">text-bottom</td>
      </tr>
    </tbody>
  </table>
```

----------------------------------------

TITLE: Initializing Scrollspy via JavaScript
DESCRIPTION: JavaScript code to manually initialize a ScrollSpy instance on a DOM element. This approach provides more control over the scrollspy implementation.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/scrollspy.mdx#2025-04-23_snippet_6

LANGUAGE: javascript
CODE:
```
const scrollSpy = new bootstrap.ScrollSpy(document.body, {
  target: '#navbar-example'
})
```

----------------------------------------

TITLE: Bootstrap Columns with Stretched Link
DESCRIPTION: Shows how to implement stretched-link within Bootstrap's grid system using columns with position-relative for proper containment.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/stretched-link.mdx#2025-04-23_snippet_2

LANGUAGE: jsx
CODE:
```
<div class="row g-0 bg-body-secondary position-relative">
    <div class="col-md-6 mb-md-0 p-md-4">
      <Placeholder width="100%" height="200" class="w-100" text={false} title="Generic placeholder image" />
    </div>
    <div class="col-md-6 p-4 ps-md-0">
      <h5 class="mt-0">Columns with stretched link</h5>
      <p>Another instance of placeholder content for this other custom component. It is intended to mimic what some real-world content would look like, and we're using it here to give the component a bit of body and size.</p>
      <a href="#" class="stretched-link">Go somewhere</a>
    </div>
  </div>
```

----------------------------------------

TITLE: Selectively Importing Bootstrap Sass Components
DESCRIPTION: Shows how to selectively import specific Bootstrap Sass components, including required parts and optional stylesheets, allowing for more granular customization.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/sass.mdx#2025-04-23_snippet_2

LANGUAGE: scss
CODE:
```
// Custom.scss
// Option B: Include parts of Bootstrap

// 1. Include functions first (so you can manipulate colors, SVGs, calc, etc)
@import "../node_modules/bootstrap/scss/functions";

// 2. Include any default variable overrides here

// 3. Include remainder of required Bootstrap stylesheets (including any separate color mode stylesheets)
@import "../node_modules/bootstrap/scss/variables";
@import "../node_modules/bootstrap/scss/variables-dark";

// 4. Include any default map overrides here

// 5. Include remainder of required parts
@import "../node_modules/bootstrap/scss/maps";
@import "../node_modules/bootstrap/scss/mixins";
@import "../node_modules/bootstrap/scss/root";

// 6. Include any other optional stylesheet partials as desired; list below is not inclusive of all available stylesheets
@import "../node_modules/bootstrap/scss/utilities";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";
@import "../node_modules/bootstrap/scss/images";
@import "../node_modules/bootstrap/scss/containers";
@import "../node_modules/bootstrap/scss/grid";
@import "../node_modules/bootstrap/scss/helpers";
// ...

// 7. Optionally include utilities API last to generate classes based on the Sass map in `_utilities.scss`
@import "../node_modules/bootstrap/scss/utilities/api";

// 8. Add additional custom code here
```

----------------------------------------

TITLE: Demonstrating Text Selection Utility Classes in HTML
DESCRIPTION: This snippet showcases the usage of Bootstrap's text selection utility classes. It includes examples of user-select-all, user-select-auto, and user-select-none classes applied to paragraph elements.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/interactions.mdx#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
<p class="user-select-all">This paragraph will be entirely selected when clicked by the user.</p>
<p class="user-select-auto">This paragraph has default select behavior.</p>
<p class="user-select-none">This paragraph will not be selectable when clicked by the user.</p>
```

----------------------------------------

TITLE: Applying Visibility Classes in HTML
DESCRIPTION: Demonstrates how to apply the .visible and .invisible classes to HTML elements to control their visibility. These classes do not affect layout or display properties.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/visibility.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<div class="visible">...</div>
<div class="invisible">...</div>
```

----------------------------------------

TITLE: Horizontal Collapse Implementation in HTML
DESCRIPTION: Implementation of a horizontal collapse that transitions width instead of height. Requires the .collapse-horizontal modifier class and a width set on the child element.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/collapse.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<p>
    <button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#collapseWidthExample" aria-expanded="false" aria-controls="collapseWidthExample">
      Toggle width collapse
    </button>
  </p>
  <div style="min-height: 120px;">
    <div class="collapse collapse-horizontal" id="collapseWidthExample">
      <div class="card card-body" style="width: 300px;">
        This is some placeholder content for a horizontal collapse. It's hidden by default and shown when triggered.
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Generating Custom Color Utilities in SCSS
DESCRIPTION: This snippet shows how to generate custom color utilities using Bootstrap's utility API and extended Sass maps.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/color.mdx#2025-04-23_snippet_15

LANGUAGE: SCSS
CODE:
```
@import "bootstrap/scss/functions";
@import "bootstrap/scss/variables";
@import "bootstrap/scss/variables-dark";
@import "bootstrap/scss/maps";
@import "bootstrap/scss/mixins";
@import "bootstrap/scss/utilities";

$all-colors: map-merge-multiple($blues, $indigos, $purples, $pinks, $reds, $oranges, $yellows, $greens, $teals, $cyans);

$utilities: map-merge(
  $utilities,
  (
    "color": map-merge(
      map-get($utilities, "color"),
      (
        values: map-merge(
          map-get(map-get($utilities, "color"), "values"),
          (
            $all-colors
          ),
        ),
      ),
    ),
  )
);

@import "bootstrap/scss/utilities/api";
```

----------------------------------------

TITLE: Importing Team Data Module
DESCRIPTION: Imports the getData function from the data library to fetch core team information.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/about/team.mdx#2025-04-23_snippet_0

LANGUAGE: JavaScript
CODE:
```
import { getData } from '@libs/data'
```

----------------------------------------

TITLE: Setting Focus Trigger for Dismissible Popovers
DESCRIPTION: This code configures a popover to be dismissed when a user clicks on any element other than the toggle element. It uses the 'focus' trigger option which is useful for creating dismissible popovers.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/popovers.mdx#2025-04-23_snippet_3

LANGUAGE: js
CODE:
```
const popover = new bootstrap.Popover('.popover-dismiss', {
  trigger: 'focus'
})
```

----------------------------------------

TITLE: Applying Font Size Classes in HTML
DESCRIPTION: This example shows how to use Bootstrap's font size utilities (fs-1 to fs-6) to quickly change the font size of text.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/text.mdx#2025-04-23_snippet_4

LANGUAGE: HTML
CODE:
```
<p class="fs-1">.fs-1 text</p>
<p class="fs-2">.fs-2 text</p>
<p class="fs-3">.fs-3 text</p>
<p class="fs-4">.fs-4 text</p>
<p class="fs-5">.fs-5 text</p>
<p class="fs-6">.fs-6 text</p>
```

----------------------------------------

TITLE: Initializing Bootstrap Collapse with JavaScript
DESCRIPTION: Example of manually enabling collapse functionality on accordion elements using JavaScript. Creates collapse instances for multiple elements using querySelectorAll.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/accordion.mdx#2025-04-23_snippet_3

LANGUAGE: javascript
CODE:
```
const accordionCollapseElementList = document.querySelectorAll('#myAccordion.collapse')
const accordionCollapseList = [...accordionCollapseElementList].map(accordionCollapseEl => new bootstrap.Collapse(accordionCollapseEl))
```

----------------------------------------

TITLE: Border Color Component Examples
DESCRIPTION: Examples showing how to modify border colors in form controls and components.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/borders.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<div class="mb-4">
    <label for="exampleFormControlInput1" class="form-label">Email address</label>
    <input type="email" class="form-control border-success" id="exampleFormControlInput1" placeholder="name@example.com">
  </div>

  <div class="h4 pb-2 mb-4 text-danger border-bottom border-danger">
    Dangerous heading
  </div>

  <div class="p-3 bg-info bg-opacity-10 border border-info border-start-0 rounded-end">
    Changing border color and width
  </div>
```

----------------------------------------

TITLE: Right-Aligning Pagination in Bootstrap with Flexbox
DESCRIPTION: Pagination implementation using the flexbox utility (.justify-content-end) to align the pagination component to the right of its container. Includes disabled and active states with proper ARIA attributes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/pagination.mdx#2025-04-23_snippet_7

LANGUAGE: html
CODE:
```
<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-end">
      <li class="page-item disabled">
        <a class="page-link">Previous</a>
      </li>
      <li class="page-item"><a class="page-link" href="#">1</a></li>
      <li class="page-item"><a class="page-link" href="#">2</a></li>
      <li class="page-item"><a class="page-link" href="#">3</a></li>
      <li class="page-item">
        <a class="page-link" href="#">Next</a>
      </li>
    </ul>
  </nav>
```

----------------------------------------

TITLE: Demonstrating Height Utilities in Bootstrap HTML
DESCRIPTION: This example illustrates the use of Bootstrap's height utility classes to set elements to 25%, 50%, 75%, 100%, and auto heights within a container with a fixed height of 100 pixels.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/sizing.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<div style="height: 100px;">
    <div class="h-25 d-inline-block" style="width: 120px;">Height 25%</div>
    <div class="h-50 d-inline-block" style="width: 120px;">Height 50%</div>
    <div class="h-75 d-inline-block" style="width: 120px;">Height 75%</div>
    <div class="h-100 d-inline-block" style="width: 120px;">Height 100%</div>
    <div class="h-auto d-inline-block" style="width: 120px;">Height auto</div>
  </div>
```

----------------------------------------

TITLE: Creating Card with Stretched Link in Bootstrap
DESCRIPTION: Example showing how to implement a stretched link within a Bootstrap card component. The entire card becomes clickable due to the stretched-link class applied to the button.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/stretched-link.mdx#2025-04-23_snippet_0

LANGUAGE: jsx
CODE:
```
<div class="card" style="width: 18rem;">
    <Placeholder width="100%" height="180" class="card-img-top" text={false} title="Card image cap" />
    <div class="card-body">
      <h5 class="card-title">Card with stretched link</h5>
      <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
      <a href="#" class="btn btn-primary stretched-link">Go somewhere</a>
    </div>
  </div>
```

----------------------------------------

TITLE: Removing Animation from Bootstrap Modal
DESCRIPTION: This HTML snippet shows how to remove the fade animation from a Bootstrap modal by omitting the .fade class. This results in a modal that appears instantly without transition effects.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/modal.mdx#2025-04-23_snippet_10

LANGUAGE: html
CODE:
```
<div class="modal" tabindex="-1" aria-labelledby="..." aria-hidden="true">
  ...
</div>
```

----------------------------------------

TITLE: Adding Hover Effect to Icon Links in HTML
DESCRIPTION: Shows how to add a hover effect to icon links using the .icon-link-hover class, which moves the icon to the right on hover.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/icon-link.mdx#2025-04-23_snippet_1

LANGUAGE: HTML
CODE:
```
<a class="icon-link icon-link-hover" href="#">
    Icon link
    <svg xmlns="http://www.w3.org/2000/svg" class="bi" viewBox="0 0 16 16" aria-hidden="true">
      <path d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z"/>
    </svg>
  </a>
```

----------------------------------------

TITLE: Customizing Placeholder Colors in Bootstrap
DESCRIPTION: Shows how to apply different background colors to placeholders using Bootstrap's theme color classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/placeholders.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<span class="placeholder col-12"></span>
  
```

----------------------------------------

TITLE: Importing All Bootstrap Sass Components
DESCRIPTION: Demonstrates how to import all of Bootstrap's Sass components into a custom stylesheet, allowing for variable overrides and additional custom code.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/sass.mdx#2025-04-23_snippet_1

LANGUAGE: scss
CODE:
```
// Custom.scss
// Option A: Include all of Bootstrap

// Include any default variable overrides here (though functions won't be available)

@import "../node_modules/bootstrap/scss/bootstrap";

// Then add additional custom code here
```

----------------------------------------

TITLE: Customizing Form Validation States using Sass in Bootstrap
DESCRIPTION: This code snippet demonstrates the use of the $form-validation-states Sass map to customize form validation states in Bootstrap. The map is located in the _variables.scss file and allows for customization of color, icon, tooltip color, and focus shadow for each validation state.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/validation.mdx#2025-04-23_snippet_5

LANGUAGE: scss
CODE:
```
$form-validation-states
```

----------------------------------------

TITLE: Toggling Between Multiple Bootstrap Modals
DESCRIPTION: This HTML snippet demonstrates how to toggle between two separate modal dialogs using data-bs-target and data-bs-toggle attributes. It allows switching from one modal to another without closing the first one completely.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/modal.mdx#2025-04-23_snippet_9

LANGUAGE: html
CODE:
```
<div class="modal fade" id="exampleModalToggle" aria-hidden="true" aria-labelledby="exampleModalToggleLabel" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h1 class="modal-title fs-5" id="exampleModalToggleLabel">Modal 1</h1>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          Show a second modal and hide this one with the button below.
        </div>
        <div class="modal-footer">
          <button class="btn btn-primary" data-bs-target="#exampleModalToggle2" data-bs-toggle="modal">Open second modal</button>
        </div>
      </div>
    </div>
  </div>
  <div class="modal fade" id="exampleModalToggle2" aria-hidden="true" aria-labelledby="exampleModalToggleLabel2" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h1 class="modal-title fs-5" id="exampleModalToggleLabel2">Modal 2</h1>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          Hide this modal and show the first with the button below.
        </div>
        <div class="modal-footer">
          <button class="btn btn-primary" data-bs-target="#exampleModalToggle" data-bs-toggle="modal">Back to first</button>
        </div>
      </div>
    </div>
  </div>
  <button class="btn btn-primary" data-bs-target="#exampleModalToggle" data-bs-toggle="modal">Open first modal</button>
```

----------------------------------------

TITLE: Implementing Single Breakpoint Media Queries with Sass Mixins
DESCRIPTION: This code shows how to use Bootstrap's Sass mixins for targeting a single segment of screen sizes. It demonstrates the syntax for creating media queries that apply to specific breakpoints.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/breakpoints.mdx#2025-04-23_snippet_5

LANGUAGE: scss
CODE:
```
@include media-breakpoint-only(xs) { ... }
@include media-breakpoint-only(sm) { ... }
@include media-breakpoint-only(md) { ... }
@include media-breakpoint-only(lg) { ... }
@include media-breakpoint-only(xl) { ... }
@include media-breakpoint-only(xxl) { ... }
```

----------------------------------------

TITLE: Basic Three Column Grid Layout
DESCRIPTION: Creates three equal-width columns using Bootstrap's CSS Grid system with g-col-4 classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/css-grid.mdx#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
<div class="grid text-center">
    <div class="g-col-4">.g-col-4</div>
    <div class="g-col-4">.g-col-4</div>
    <div class="g-col-4">.g-col-4</div>
  </div>
```

----------------------------------------

TITLE: Implementing Two-Column Grid Cards in Bootstrap
DESCRIPTION: Creates a responsive two-column grid layout for cards using row-cols-1 and row-cols-md-2 classes. Cards include image placeholders, titles, and text content with responsive behavior.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/card.mdx#2025-04-23_snippet_21

LANGUAGE: HTML
CODE:
```
<div class="row row-cols-1 row-cols-md-2 g-4">
    <div class="col">
      <div class="card">
        <Placeholder width="100%" height="140" class="card-img-top" text="Image cap" />
        <div class="card-body">
          <h5 class="card-title">Card title</h5>
          <p class="card-text">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
        </div>
      </div>
    </div>
    <div class="col">
      <div class="card">
        <Placeholder width="100%" height="140" class="card-img-top" text="Image cap" />
        <div class="card-body">
          <h5 class="card-title">Card title</h5>
          <p class="card-text">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
        </div>
      </div>
    </div>
    <div class="col">
      <div class="card">
        <Placeholder width="100%" height="140" class="card-img-top" text="Image cap" />
        <div class="card-body">
          <h5 class="card-title">Card title</h5>
          <p class="card-text">This is a longer card with supporting text below as a natural lead-in to additional content.</p>
        </div>
      </div>
    </div>
    <div class="col">
      <div class="card">
        <Placeholder width="100%" height="140" class="card-img-top" text="Image cap" />
        <div class="card-body">
          <h5 class="card-title">Card title</h5>
          <p class="card-text">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
        </div>
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Adjusting Line Height in HTML
DESCRIPTION: This example shows how to use Bootstrap's line height utilities (lh-*) to change the line height of text.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/text.mdx#2025-04-23_snippet_6

LANGUAGE: HTML
CODE:
```
<p class="lh-1">This is a long paragraph written to show how the line-height of an element is affected by our utilities. Classes are applied to the element itself or sometimes the parent element. These classes can be customized as needed with our utility API.</p>
<p class="lh-sm">This is a long paragraph written to show how the line-height of an element is affected by our utilities. Classes are applied to the element itself or sometimes the parent element. These classes can be customized as needed with our utility API.</p>
<p class="lh-base">This is a long paragraph written to show how the line-height of an element is affected by our utilities. Classes are applied to the element itself or sometimes the parent element. These classes can be customized as needed with our utility API.</p>
<p class="lh-lg">This is a long paragraph written to show how the line-height of an element is affected by our utilities. Classes are applied to the element itself or sometimes the parent element. These classes can be customized as needed with our utility API.</p>
```

----------------------------------------

TITLE: Configuring Progress Bar Width with Bootstrap Utilities
DESCRIPTION: This example shows how to use Bootstrap's utility classes to set the width of a progress bar.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/progress.mdx#2025-04-23_snippet_1

LANGUAGE: HTML
CODE:
```
<div class="progress" role="progressbar" aria-label="Basic example" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100">
    <div class="progress-bar w-75"></div>
  </div>
```

----------------------------------------

TITLE: Creating Numbered List Group with Custom Content
DESCRIPTION: Demonstrates a more complex numbered list group with custom content including subheadings, descriptions, and badges with pill styling.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/list-group.mdx#2025-04-23_snippet_6

LANGUAGE: html
CODE:
```
<ol class="list-group list-group-numbered">
    <li class="list-group-item d-flex justify-content-between align-items-start">
      <div class="ms-2 me-auto">
        <div class="fw-bold">Subheading</div>
        Content for list item
      </div>
      <span class="badge text-bg-primary rounded-pill">14</span>
    </li>
    <li class="list-group-item d-flex justify-content-between align-items-start">
      <div class="ms-2 me-auto">
        <div class="fw-bold">Subheading</div>
        Content for list item
      </div>
      <span class="badge text-bg-primary rounded-pill">14</span>
    </li>
    <li class="list-group-item d-flex justify-content-between align-items-start">
      <div class="ms-2 me-auto">
        <div class="fw-bold">Subheading</div>
        Content for list item
      </div>
      <span class="badge text-bg-primary rounded-pill">14</span>
    </li>
  </ol>
```

----------------------------------------

TITLE: Using Bootstrap Alert Methods
DESCRIPTION: Example demonstrating how to get an Alert instance and call its close method.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/alerts.mdx#2025-04-23_snippet_2

LANGUAGE: javascript
CODE:
```
const alert = bootstrap.Alert.getOrCreateInstance('#myAlert')
alert.close()
```

----------------------------------------

TITLE: Bootstrap jQuery No Conflict Implementation
DESCRIPTION: Shows how to implement no-conflict mode when using Bootstrap plugins alongside other UI frameworks.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/javascript.mdx#2025-04-23_snippet_11

LANGUAGE: javascript
CODE:
```
const bootstrapButton = $.fn.button.noConflict() // return $.fn.button to previously assigned value
$.fn.bootstrapBtn = bootstrapButton // give $().bootstrapBtn the Bootstrap functionality
```

----------------------------------------

TITLE: Black and White Logo Display Implementation
DESCRIPTION: HTML structure for displaying Bootstrap's black and white logo variants in a responsive grid layout with proper spacing and styling.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/about/brand.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<div class="bd-brand-logos d-sm-flex text-center bg-light rounded-3 overflow-hidden w-100 mb-3">
  <div class="bd-brand-item w-100 px-2 py-5">
    <img src="/docs/[[config:docs_version]]/assets/brand/bootstrap-logo-black.svg" alt="Bootstrap" width="128" height="102" loading="lazy" />
  </div>
  <div class="bd-brand-item w-100 px-2 py-5 inverse">
    <img src="/docs/[[config:docs_version]]/assets/brand/bootstrap-logo-white.svg" alt="Bootstrap" width="128" height="102" loading="lazy" />
  </div>
</div>
```

----------------------------------------

TITLE: Creating Button Toolbar in HTML with Bootstrap
DESCRIPTION: Illustrates how to create a button toolbar by combining multiple button groups using Bootstrap classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/button-group.mdx#2025-04-23_snippet_6

LANGUAGE: HTML
CODE:
```
<div class="btn-toolbar" role="toolbar" aria-label="Toolbar with button groups">
    <div class="btn-group me-2" role="group" aria-label="First group">
      <button type="button" class="btn btn-primary">1</button>
      <button type="button" class="btn btn-primary">2</button>
      <button type="button" class="btn btn-primary">3</button>
      <button type="button" class="btn btn-primary">4</button>
    </div>
    <div class="btn-group me-2" role="group" aria-label="Second group">
      <button type="button" class="btn btn-secondary">5</button>
      <button type="button" class="btn btn-secondary">6</button>
      <button type="button" class="btn btn-secondary">7</button>
    </div>
    <div class="btn-group" role="group" aria-label="Third group">
      <button type="button" class="btn btn-info">8</button>
    </div>
  </div>
```

----------------------------------------

TITLE: Basic Object Fit Examples with Placeholder Elements
DESCRIPTION: Demonstrates the five basic object-fit utility classes (contain, cover, fill, scale, none) applied to placeholder elements with specified dimensions.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/object-fit.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<Placeholder width="140" height="120" class="object-fit-contain border rounded" text="Object fit contain" markup="img" />
<Placeholder width="140" height="120" class="object-fit-cover border rounded" text="Object fit cover" markup="img" />
<Placeholder width="140" height="120" class="object-fit-fill border rounded" text="Object fit fill" markup="img" />
<Placeholder width="140" height="120" class="object-fit-scale border rounded" text="Object fit scale down" markup="img" />
<Placeholder width="140" height="120" class="object-fit-none border rounded" text="Object fit none" markup="img" />
```

----------------------------------------

TITLE: Directional Translation in Bootstrap
DESCRIPTION: Shows how to use translate-middle-x and translate-middle-y classes for horizontal or vertical positioning.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/position.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<div class="position-relative">
    <div class="position-absolute top-0 start-0"></div>
    <div class="position-absolute top-0 start-50 translate-middle-x"></div>
    <div class="position-absolute top-0 end-0"></div>
    <div class="position-absolute top-50 start-0 translate-middle-y"></div>
    <div class="position-absolute top-50 start-50 translate-middle"></div>
    <div class="position-absolute top-50 end-0 translate-middle-y"></div>
    <div class="position-absolute bottom-0 start-0"></div>
    <div class="position-absolute bottom-0 start-50 translate-middle-x"></div>
    <div class="position-absolute bottom-0 end-0"></div>
  </div>
```

----------------------------------------

TITLE: RFS Functions with Media Queries in SCSS
DESCRIPTION: Shows how to use RFS functions (rfs-fluid-value) within media queries for responsive scaling.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/rfs.mdx#2025-04-23_snippet_3

LANGUAGE: scss
CODE:
```
.selector {
  @include media-breakpoint-down(lg) {
    padding: rfs-fluid-value(2rem);
    font-size: rfs-fluid-value(1.125rem);
  }
}
```

LANGUAGE: css
CODE:
```
@media (max-width: 991.98px) {
  .selector {
    padding: calc(1.325rem + 0.9vw);
    font-size: 1.125rem; /* 1.125rem is small enough, so RFS won't rescale this */
  }
}
```

----------------------------------------

TITLE: Updating SCSS Import Order for Dark Mode Variables in Bootstrap
DESCRIPTION: This diff shows how to update the SCSS import order to include the new _variables-dark.scss file for dark mode support in Bootstrap v5.3.0-alpha1.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/migration.mdx#2025-04-23_snippet_0

LANGUAGE: diff
CODE:
```
diff --git a/scss/bootstrap.scss b/scss/bootstrap.scss
index 8f8296def..449d70487 100644
--- a/scss/bootstrap.scss
+++ b/scss/bootstrap.scss
@@ -6,6 +6,7 @@
  // Configuration
  @import "functions";
  @import "variables";
+ @import "variables-dark";
  @import "maps";
  @import "mixins";
  @import "utilities";
```

----------------------------------------

TITLE: Applying Text-Background Utilities to Badges in HTML
DESCRIPTION: Demonstrates the use of text-bg-* utility classes on badge components to set background and contrasting text colors.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/color-background.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<span class="badge text-bg-primary">Primary</span>
<span class="badge text-bg-info">Info</span>
```

----------------------------------------

TITLE: Implementing General Overflow Controls in HTML
DESCRIPTION: This snippet demonstrates how to use Bootstrap's general overflow utility classes to control content overflow in all directions. It includes examples for auto, hidden, visible, and scroll overflow types.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/overflow.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<div class="overflow-auto">...</div>
<div class="overflow-hidden">...</div>
<div class="overflow-visible">...</div>
<div class="overflow-scroll">...</div>
```

----------------------------------------

TITLE: Creating Vertically Centered Modals in Bootstrap
DESCRIPTION: Demonstrates how to vertically center modals using the modal-dialog-centered class, with options for both standard and scrollable centered modals.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/modal.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<!-- Vertically centered modal -->
<div class="modal-dialog modal-dialog-centered">
  ...
</div>

<!-- Vertically centered scrollable modal -->
<div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
  ...
</div>
```

----------------------------------------

TITLE: Implementing Contextual Dropdown Buttons in Bootstrap
DESCRIPTION: Shows how to create a dropdown with different button variants (danger). The example includes a divider in the dropdown menu to separate grouped items.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<!-- Example single danger button -->
<div class="btn-group">
  <button type="button" class="btn btn-danger dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
    Danger
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#">Action</a></li>
    <li><a class="dropdown-item" href="#">Another action</a></li>
    <li><a class="dropdown-item" href="#">Something else here</a></li>
    <li><hr class="dropdown-divider"></li>
    <li><a class="dropdown-item" href="#">Separated link</a></li>
  </ul>
</div>
```

----------------------------------------

TITLE: Configuring Print Utilities in Bootstrap SCSS
DESCRIPTION: Demonstrates how to enable print-specific utility classes using the opacity property as an example. The configuration generates both standard and print-specific classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/api.mdx#2025-04-23_snippet_5

LANGUAGE: scss
CODE:
```
$utilities: (
  "opacity": (
    property: opacity,
    print: true,
    values: (
      0: 0,
      25: .25,
      50: .5,
      75: .75,
      100: 1,
    )
  )
);
```

LANGUAGE: css
CODE:
```
.opacity-0 { opacity: 0 !important; }
.opacity-25 { opacity: .25 !important; }
.opacity-50 { opacity: .5 !important; }
.opacity-75 { opacity: .75 !important; }
.opacity-100 { opacity: 1 !important; }

@media print {
  .opacity-print-0 { opacity: 0 !important; }
  .opacity-print-25 { opacity: .25 !important; }
  .opacity-print-50 { opacity: .5 !important; }
  .opacity-print-75 { opacity: .75 !important; }
  .opacity-print-100 { opacity: 1 !important; }
}
```

----------------------------------------

TITLE: JavaScript Initialization for Bootstrap Tabs
DESCRIPTION: JavaScript code to manually initialize and control tab functionality in Bootstrap list groups. Shows how to activate tabs programmatically.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/list-group.mdx#2025-04-23_snippet_12

LANGUAGE: javascript
CODE:
```
const triggerTabList = document.querySelectorAll('#myTab a')
triggerTabList.forEach(triggerEl => {
  const tabTrigger = new bootstrap.Tab(triggerEl)

  triggerEl.addEventListener('click', event => {
    event.preventDefault()
    tabTrigger.show()
  })
})
```

----------------------------------------

TITLE: Configuring Popovers within Modal Dialogs
DESCRIPTION: This code example demonstrates how to set a custom container for popovers inside modal dialogs. This ensures the popover is appended to the modal, which is important for interactive elements within popovers.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/popovers.mdx#2025-04-23_snippet_2

LANGUAGE: js
CODE:
```
const popover = new bootstrap.Popover('.example-popover', {
  container: '.modal-body'
})
```

----------------------------------------

TITLE: Using Text Transform Classes in HTML
DESCRIPTION: This snippet demonstrates the use of Bootstrap's text transform classes: text-lowercase, text-uppercase, and text-capitalize.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/text.mdx#2025-04-23_snippet_3

LANGUAGE: HTML
CODE:
```
<p class="text-lowercase">Lowercased text.</p>
<p class="text-uppercase">Uppercased text.</p>
<p class="text-capitalize">CapiTaliZed text.</p>
```

----------------------------------------

TITLE: Creating Readonly Plain Text Inputs in Bootstrap
DESCRIPTION: This snippet demonstrates how to create readonly plain text inputs in a form layout. It uses the 'form-control-plaintext' class to style readonly inputs as plain text.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/form-control.mdx#2025-04-23_snippet_4

LANGUAGE: HTML
CODE:
```
<div class="mb-3 row">
    <label for="staticEmail" class="col-sm-2 col-form-label">Email</label>
    <div class="col-sm-10">
      <input type="text" readonly class="form-control-plaintext" id="staticEmail" value="email@example.com">
    </div>
  </div>
  <div class="mb-3 row">
    <label for="inputPassword" class="col-sm-2 col-form-label">Password</label>
    <div class="col-sm-10">
      <input type="password" class="form-control" id="inputPassword">
    </div>
  </div>
```

----------------------------------------

TITLE: Customizing Focus Ring Color with CSS Variables in HTML
DESCRIPTION: Shows how to modify the focus ring color using CSS variables inline on an element.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/focus-ring.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<a href="#" class="d-inline-flex focus-ring py-1 px-2 text-decoration-none border rounded-2" style="--bs-focus-ring-color: rgba(var(--bs-success-rgb), .25)">
    Green focus ring
  </a>
```

----------------------------------------

TITLE: HTML5 Doctype Declaration
DESCRIPTION: Required HTML5 doctype declaration for Bootstrap
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/introduction.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<!doctype html>
<html lang="en">
  ...
</html>
```

----------------------------------------

TITLE: Webpack Configuration
DESCRIPTION: Basic Webpack configuration for development environment with HTML plugin and dev server settings.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/webpack.mdx#2025-04-23_snippet_6

LANGUAGE: js
CODE:
```
'use strict'

const path = require('path')
const HtmlWebpackPlugin = require('html-webpack-plugin')

module.exports = {
  mode: 'development',
  entry: './src/js/main.js',
  output: {
    filename: 'main.js',
    path: path.resolve(__dirname, 'dist')
  },
  devServer: {
    static: path.resolve(__dirname, 'dist'),
    port: 8080,
    hot: true
  },
  plugins: [
    new HtmlWebpackPlugin({ template: './src/index.html' })
  ]
}
```

----------------------------------------

TITLE: Applying Background Opacity in Bootstrap HTML
DESCRIPTION: Demonstrates how to modify the opacity of background colors using inline styles or pre-defined opacity classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/background.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<div class="bg-success p-2 text-white">This is default success background</div>
<div class="bg-success p-2" style="--bs-bg-opacity: .5;">This is 50% opacity success background</div>
```

LANGUAGE: html
CODE:
```
<div class="bg-success p-2 text-white">This is default success background</div>
<div class="bg-success p-2 text-white bg-opacity-75">This is 75% opacity success background</div>
<div class="bg-success p-2 text-dark bg-opacity-50">This is 50% opacity success background</div>
<div class="bg-success p-2 text-dark bg-opacity-25">This is 25% opacity success background</div>
<div class="bg-success p-2 text-dark bg-opacity-10">This is 10% opacity success background</div>
```

----------------------------------------

TITLE: Implementing Vertical Alignment in Bootstrap Tables
DESCRIPTION: This snippet demonstrates how to use vertical alignment classes in Bootstrap tables. It shows the usage of 'align-middle' and 'align-bottom' classes for table and row alignment, as well as 'align-top' for individual cell alignment.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/tables.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<div class="table-responsive">
  <table class="table align-middle">
    <thead>
      <tr>
        ...
      </tr>
    </thead>
    <tbody>
      <tr>
        ...
      </tr>
      <tr class="align-bottom">
        ...
      </tr>
      <tr>
        <td>...</td>
        <td>...</td>
        <td class="align-top">This cell is aligned to the top.</td>
        <td>...</td>
      </tr>
    </tbody>
  </table>
</div>
```

----------------------------------------

TITLE: Applying Text Opacity in Bootstrap HTML
DESCRIPTION: This example shows how to use inline styles to override the default opacity of a text color utility class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/colors.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<div class="text-primary">This is default primary text</div>
<div class="text-primary" style="--bs-text-opacity: .5;">This is 50% opacity primary text</div>
```

----------------------------------------

TITLE: Custom Class Prefix Utility
DESCRIPTION: Shows how to customize the generated class names using the class option for opacity utilities.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/api.mdx#2025-04-23_snippet_2

LANGUAGE: scss
CODE:
```
$utilities: (
  "opacity": (
    property: opacity,
    class: o,
    values: (
      0: 0,
      25: .25,
      50: .5,
      75: .75,
      100: 1,
    )
  )
);
```

----------------------------------------

TITLE: Creating Lead Paragraphs in Bootstrap
DESCRIPTION: Example of how to make a paragraph stand out by adding the .lead class. This creates a larger, slightly emphasized paragraph that can be used for introductory text.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/typography.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<p class="lead">
    This is a lead paragraph. It stands out from regular paragraphs.
  </p>
```

----------------------------------------

TITLE: Creating Mixed Style Button Group in HTML with Bootstrap
DESCRIPTION: Illustrates how to create a button group with different button styles (danger, warning, success) using Bootstrap classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/button-group.mdx#2025-04-23_snippet_2

LANGUAGE: HTML
CODE:
```
<div class="btn-group" role="group" aria-label="Basic mixed styles example">
    <button type="button" class="btn btn-danger">Left</button>
    <button type="button" class="btn btn-warning">Middle</button>
    <button type="button" class="btn btn-success">Right</button>
  </div>
```

----------------------------------------

TITLE: Implementing Stacked Progress Bars in HTML with New .progress-stacked Class
DESCRIPTION: Demonstrates the new approach to creating stacked progress bars using the .progress-stacked class. Each segment is now wrapped in its own .progress element for improved structure and accessibility.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/migration.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<!-- Previous markup -->
<div class="progress">
  <div class="progress-bar" role="progressbar" aria-label="Segment one" style="width: 15%" aria-valuenow="15" aria-valuemin="0" aria-valuemax="100"></div>
  <div class="progress-bar bg-success" role="progressbar" aria-label="Segment two" style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"></div>
  <div class="progress-bar bg-info" role="progressbar" aria-label="Segment three" style="width: 20%" aria-valuenow="20" aria-valuemin="0" aria-valuemax="100"></div>
</div>

<!-- New markup -->
<div class="progress-stacked">
  <div class="progress" role="progressbar" aria-label="Segment one" aria-valuenow="15" aria-valuemin="0" aria-valuemax="100" style="width: 15%">
    <div class="progress-bar"></div>
  </div>
  <div class="progress" role="progressbar" aria-label="Segment two" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100" style="width: 30%">
    <div class="progress-bar bg-success"></div>
  </div>
  <div class="progress" role="progressbar" aria-label="Segment three" aria-valuenow="20" aria-valuemin="0" aria-valuemax="100" style="width: 20%">
    <div class="progress-bar bg-info"></div>
  </div>
</div>
```

----------------------------------------

TITLE: Applying CSS Variables for Body Styles in Bootstrap
DESCRIPTION: This SCSS snippet demonstrates how CSS variables are applied to common body styles in Bootstrap's Reboot component. It shows the usage of variables for body color, background color, and link color.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/reboot.mdx#2025-04-23_snippet_0

LANGUAGE: scss
CODE:
```
body {
  color: var(--bs-body-color);
  background-color: var(--bs-body-bg);
}

a {
  color: var(--bs-link-color);
}
```

----------------------------------------

TITLE: Rendering Colored Links in JSX
DESCRIPTION: This code snippet demonstrates how to render colored links using Bootstrap's .link-* classes. It maps through theme colors and creates a paragraph with a link for each color, including a special emphasis link.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/colored-links.mdx#2025-04-23_snippet_0

LANGUAGE: jsx
CODE:
```
<Example code={[
  ...getData('theme-colors').map((themeColor) => `<p><a href="#" class="link-${themeColor.name}">${themeColor.title} link</a></p>`),
  `<p><a href="#" class="link-body-emphasis">Emphasis link</a></p>`
]} />
```

----------------------------------------

TITLE: Border Removal HTML Examples
DESCRIPTION: Examples demonstrating how to remove borders using Bootstrap's border-0 utilities.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/borders.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<span class="border border-0"></span>
<span class="border border-top-0"></span>
<span class="border border-end-0"></span>
<span class="border border-bottom-0"></span>
<span class="border border-start-0"></span>
```

----------------------------------------

TITLE: Hidden Brand Toggler Navbar
DESCRIPTION: Responsive navbar with hidden brand at smallest breakpoint and left-aligned toggler.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navbar.mdx#2025-04-23_snippet_17

LANGUAGE: html
CODE:
```
<nav class="navbar navbar-expand-lg bg-body-tertiary">
    <div class="container-fluid">
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarTogglerDemo01" aria-controls="navbarTogglerDemo01" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarTogglerDemo01">
        <a class="navbar-brand" href="#">Hidden brand</a>
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="#">Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">Link</a>
          </li>
          <li class="nav-item">
            <a class="nav-link disabled" aria-disabled="true">Disabled</a>
          </li>
        </ul>
        <form class="d-flex" role="search">
          <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search"/>
          <button class="btn btn-outline-success" type="submit">Search</button>
        </form>
      </div>
    </div>
  </nav>
```

----------------------------------------

TITLE: Customizing Icon Link Hover Transform in HTML and CSS
DESCRIPTION: Demonstrates how to customize the hover transform effect of an icon link using inline CSS variables.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/icon-link.mdx#2025-04-23_snippet_2

LANGUAGE: HTML
CODE:
```
<a class="icon-link icon-link-hover" style="--bs-icon-link-transform: translate3d(0, -.125rem, 0);" href="#">
    <svg xmlns="http://www.w3.org/2000/svg" class="bi" viewBox="0 0 16 16" aria-hidden="true">
      <path d="M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z"/>
      <path d="M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z"/>
    </svg>
    Icon link
  </a>
```

----------------------------------------

TITLE: Fixed Top Position in Bootstrap
DESCRIPTION: Demonstrates how to position an element fixed at the top of the viewport using Bootstrap's fixed-top class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/position.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<div class="fixed-top">...</div>
```

----------------------------------------

TITLE: Rendering Colored Links with Utilities in JSX
DESCRIPTION: This code snippet shows how to render colored links with additional link utilities in Bootstrap. It applies offset, underline opacity, and hover effects to the links for each theme color.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/colored-links.mdx#2025-04-23_snippet_1

LANGUAGE: jsx
CODE:
```
<Example code={[
  ...getData('theme-colors').map((themeColor) => `<p><a href="#" class="link-${themeColor.name} link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover">${themeColor.title} link</a></p>`),
  `<p><a href="#" class="link-body-emphasis link-offset-2 link-underline-opacity-25 link-underline-opacity-75-hover">Emphasis link</a></p>`
]} />
```

----------------------------------------

TITLE: Creating List Group with Rich Custom Content
DESCRIPTION: Demonstrates a list group with complex content including headings, timestamps, paragraphs, and small text using flexbox utilities for layout.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/list-group.mdx#2025-04-23_snippet_8

LANGUAGE: html
CODE:
```
<div class="list-group">
    <a href="#" class="list-group-item list-group-item-action active" aria-current="true">
      <div class="d-flex w-100 justify-content-between">
        <h5 class="mb-1">List group item heading</h5>
        <small>3 days ago</small>
      </div>
      <p class="mb-1">Some placeholder content in a paragraph.</p>
      <small>And some small print.</small>
    </a>
    <a href="#" class="list-group-item list-group-item-action">
      <div class="d-flex w-100 justify-content-between">
        <h5 class="mb-1">List group item heading</h5>
        <small class="text-body-secondary">3 days ago</small>
      </div>
      <p class="mb-1">Some placeholder content in a paragraph.</p>
      <small class="text-body-secondary">And some muted small print.</small>
    </a>
    <a href="#" class="list-group-item list-group-item-action">
      <div class="d-flex w-100 justify-content-between">
        <h5 class="mb-1">List group item heading</h5>
        <small class="text-body-secondary">3 days ago</small>
      </div>
      <p class="mb-1">Some placeholder content in a paragraph.</p>
      <small class="text-body-secondary">And some muted small print.</small>
    </a>
  </div>
```

----------------------------------------

TITLE: Bootstrap Navbar with Dropdown Menu
DESCRIPTION: Example of navbar incorporating a dropdown menu. Shows proper nesting structure for dropdown integration, with separate elements for .nav-item and .nav-link. Includes toggler button for responsive behavior.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navbar.mdx#2025-04-23_snippet_6

LANGUAGE: html
CODE:
```
<nav class="navbar navbar-expand-lg bg-body-tertiary">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Navbar</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNavDropdown">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="#">Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">Features</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">Pricing</a>
          </li>
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
              Dropdown link
            </a>
            <ul class="dropdown-menu">
              <li><a class="dropdown-item" href="#">Action</a></li>
              <li><a class="dropdown-item" href="#">Another action</a></li>
              <li><a class="dropdown-item" href="#">Something else here</a></li>
            </ul>
          </li>
        </ul>
      </div>
    </div>
  </nav>
```

----------------------------------------

TITLE: Implementing Input Groups with Validation
DESCRIPTION: Input groups with validation now require an additional .has-validation class to fix the border radius issue on validation feedback.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/migration.mdx#2025-04-23_snippet_11

LANGUAGE: html
CODE:
```
<div class="input-group has-validation">...</div>
```

----------------------------------------

TITLE: RTL Starter Template in HTML
DESCRIPTION: A complete HTML starter template for RTL support, including necessary meta tags, CSS inclusion, and optional JavaScript.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/rtl.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<!doctype html>
<html lang="ar" dir="rtl">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="[[config:cdn.css_rtl]]" integrity="[[config:cdn.css_rtl_hash]]" crossorigin="anonymous">

    <title>مرحبًا بالعالم!</title>
  </head>
  <body>
    <h1>مرحبًا بالعالم!</h1>

    <!-- Optional JavaScript; choose one of the two! -->

    <!-- Option 1: Bootstrap Bundle with Popper -->
    <script src="[[config:cdn.js_bundle]]" integrity="[[config:cdn.js_bundle_hash]]" crossorigin="anonymous"></script>

    <!-- Option 2: Separate Popper and Bootstrap JS -->
    <!--
    <script src="[[config:cdn.popper]]" integrity="[[config:cdn.popper_hash]]" crossorigin="anonymous"></script>
    <script src="[[config:cdn.js]]" integrity="[[config:cdn.js_hash]]" crossorigin="anonymous"></script>
    -->
  </body>
</html>
```

----------------------------------------

TITLE: Creating Inline Forms with Responsive Layout in Bootstrap
DESCRIPTION: This snippet demonstrates how to create inline forms with responsive layouts using Bootstrap's row-cols-* classes. It includes input groups, select dropdowns, checkboxes, and buttons, all aligned horizontally on larger screens.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/layout.mdx#2025-04-23_snippet_9

LANGUAGE: HTML
CODE:
```
<form class="row row-cols-lg-auto g-3 align-items-center">
    <div class="col-12">
      <label class="visually-hidden" for="inlineFormInputGroupUsername">Username</label>
      <div class="input-group">
        <div class="input-group-text">@</div>
        <input type="text" class="form-control" id="inlineFormInputGroupUsername" placeholder="Username">
      </div>
    </div>

    <div class="col-12">
      <label class="visually-hidden" for="inlineFormSelectPref">Preference</label>
      <select class="form-select" id="inlineFormSelectPref">
        <option selected>Choose...</option>
        <option value="1">One</option>
        <option value="2">Two</option>
        <option value="3">Three</option>
      </select>
    </div>

    <div class="col-12">
      <div class="form-check">
        <input class="form-check-input" type="checkbox" id="inlineFormCheck">
        <label class="form-check-label" for="inlineFormCheck">
          Remember me
        </label>
      </div>
    </div>

    <div class="col-12">
      <button type="submit" class="btn btn-primary">Submit</button>
    </div>
  </form>
```

----------------------------------------

TITLE: Installing Bootstrap via npm
DESCRIPTION: Command to install Bootstrap in Node.js powered apps using npm. This method is suitable for projects using Node.js build tools.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/download.mdx#2025-04-23_snippet_3

LANGUAGE: sh
CODE:
```
npm install bootstrap@[[config:current_version]]
```

----------------------------------------

TITLE: Bootstrap Directory Structure
DESCRIPTION: The file structure of a Bootstrap download, showing the organization of CSS and JavaScript files including compiled, minified, and map versions.
SOURCE: https://github.com/twbs/bootstrap/blob/main/README.md#2025-04-23_snippet_2

LANGUAGE: text
CODE:
```
bootstrap/
├── css/
│   ├── bootstrap-grid.css
│   ├── bootstrap-grid.css.map
│   ├── bootstrap-grid.min.css
│   ├── bootstrap-grid.min.css.map
│   ├── bootstrap-grid.rtl.css
│   ├── bootstrap-grid.rtl.css.map
│   ├── bootstrap-grid.rtl.min.css
│   ├── bootstrap-grid.rtl.min.css.map
│   ├── bootstrap-reboot.css
│   ├── bootstrap-reboot.css.map
│   ├── bootstrap-reboot.min.css
│   ├── bootstrap-reboot.min.css.map
│   ├── bootstrap-reboot.rtl.css
│   ├── bootstrap-reboot.rtl.css.map
│   ├── bootstrap-reboot.rtl.min.css
│   ├── bootstrap-reboot.rtl.min.css.map
│   ├── bootstrap-utilities.css
│   ├── bootstrap-utilities.css.map
│   ├── bootstrap-utilities.min.css
│   ├── bootstrap-utilities.min.css.map
│   ├── bootstrap-utilities.rtl.css
│   ├── bootstrap-utilities.rtl.css.map
│   ├── bootstrap-utilities.rtl.min.css
│   ├── bootstrap-utilities.rtl.min.css.map
│   ├── bootstrap.css
│   ├── bootstrap.css.map
│   ├── bootstrap.min.css
│   ├── bootstrap.min.css.map
│   ├── bootstrap.rtl.css
│   ├── bootstrap.rtl.css.map
│   ├── bootstrap.rtl.min.css
│   └── bootstrap.rtl.min.css.map
└── js/
    ├── bootstrap.bundle.js
    ├── bootstrap.bundle.js.map
    ├── bootstrap.bundle.min.js
    ├── bootstrap.bundle.min.js.map
    ├── bootstrap.esm.js
    ├── bootstrap.esm.js.map
    ├── bootstrap.esm.min.js
    ├── bootstrap.esm.min.js.map
    ├── bootstrap.js
    ├── bootstrap.js.map
    ├── bootstrap.min.js
    └── bootstrap.min.js.map
```

----------------------------------------

TITLE: Defining Z-index Variables in SCSS for Bootstrap Components
DESCRIPTION: This SCSS snippet defines z-index variables for various Bootstrap components. It sets specific z-index values for elements like dropdowns, sticky elements, modals, popovers, and tooltips to ensure proper layering and interaction.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/z-index.mdx#2025-04-23_snippet_0

LANGUAGE: scss
CODE:
```
$zindex-dropdown:                   1000 !default;
$zindex-sticky:                     1020 !default;
$zindex-fixed:                      1030 !default;
$zindex-offcanvas-backdrop:         1040 !default;
$zindex-offcanvas:                  1045 !default;
$zindex-modal-backdrop:             1050 !default;
$zindex-modal:                      1055 !default;
$zindex-popover:                    1070 !default;
$zindex-tooltip:                    1080 !default;
$zindex-toast:                      1090 !default;
```

----------------------------------------

TITLE: Creating a Single Offcanvas Instance with JavaScript in Bootstrap
DESCRIPTION: This JavaScript snippet shows how to create a single offcanvas instance using Bootstrap's JavaScript API. It targets a specific element by its ID and initializes a new Offcanvas instance.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/offcanvas.mdx#2025-04-23_snippet_9

LANGUAGE: JavaScript
CODE:
```
const bsOffcanvas = new bootstrap.Offcanvas('#myOffcanvas')
```

----------------------------------------

TITLE: Implementing Table Group Dividers in HTML
DESCRIPTION: This example shows how to add a thicker border between table groups by applying the 'table-group-divider' class to the tbody element.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/tables.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<table class="table">
    <thead>
      <tr>
        <th scope="col">#</th>
        <th scope="col">First</th>
        <th scope="col">Last</th>
        <th scope="col">Handle</th>
      </tr>
    </thead>
    <tbody class="table-group-divider">
      <tr>
        <th scope="row">1</th>
        <td>Mark</td>
        <td>Otto</td>
        <td>@mdo</td>
      </tr>
      <tr>
        <th scope="row">2</th>
        <td>Jacob</td>
        <td>Thornton</td>
        <td>@fat</td>
      </tr>
      <tr>
        <th scope="row">3</th>
        <td>John</td>
        <td>Doe</td>
        <td>@social</td>
      </tr>
    </tbody>
  </table>
```

----------------------------------------

TITLE: Customizing Spinner Size with Inline Styles in HTML
DESCRIPTION: Shows how to adjust the size of spinners using inline CSS styles.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/spinners.mdx#2025-04-23_snippet_4

LANGUAGE: HTML
CODE:
```
<div class="spinner-border" style="width: 3rem; height: 3rem;" role="status">
    <span class="visually-hidden">Loading...</span>
  </div>
  <div class="spinner-grow" style="width: 3rem; height: 3rem;" role="status">
    <span class="visually-hidden">Loading...</span>
  </div>
```

----------------------------------------

TITLE: Bootstrap Form Label Sizing
DESCRIPTION: Demonstrates different form label sizes using Bootstrap's form-control sizing classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/layout.mdx#2025-04-23_snippet_5

LANGUAGE: HTML
CODE:
```
<div class="row mb-3">
    <label for="colFormLabelSm" class="col-sm-2 col-form-label col-form-label-sm">Email</label>
    <div class="col-sm-10">
      <input type="email" class="form-control form-control-sm" id="colFormLabelSm" placeholder="col-form-label-sm">
    </div>
  </div>
  <div class="row mb-3">
    <label for="colFormLabel" class="col-sm-2 col-form-label">Email</label>
    <div class="col-sm-10">
      <input type="email" class="form-control" id="colFormLabel" placeholder="col-form-label">
    </div>
  </div>
  <div class="row">
    <label for="colFormLabelLg" class="col-sm-2 col-form-label col-form-label-lg">Email</label>
    <div class="col-sm-10">
      <input type="email" class="form-control form-control-lg" id="colFormLabelLg" placeholder="col-form-label-lg">
    </div>
  </div>
```

----------------------------------------

TITLE: Overriding Existing Bootstrap Utilities
DESCRIPTION: Shows how to override existing utilities by using the same key, exemplified with responsive overflow utility classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/api.mdx#2025-04-23_snippet_6

LANGUAGE: scss
CODE:
```
$utilities: (
  "overflow": (
    responsive: true,
    property: overflow,
    values: visible hidden scroll auto,
  ),
);
```

----------------------------------------

TITLE: Scrollable Bootstrap Navbar
DESCRIPTION: Navbar with scrollable content using navbar-nav-scroll class and custom scroll height.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navbar.mdx#2025-04-23_snippet_16

LANGUAGE: html
CODE:
```
<nav class="navbar navbar-expand-lg bg-body-tertiary">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Navbar scroll</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarScroll" aria-controls="navbarScroll" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarScroll">
        <ul class="navbar-nav me-auto my-2 my-lg-0 navbar-nav-scroll" style="--bs-scroll-height: 100px;">
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="#">Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">Link</a>
          </li>
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
              Link
            </a>
            <ul class="dropdown-menu">
              <li><a class="dropdown-item" href="#">Action</a></li>
              <li><a class="dropdown-item" href="#">Another action</a></li>
              <li><hr class="dropdown-divider"></li>
              <li><a class="dropdown-item" href="#">Something else here</a></li>
            </ul>
          </li>
          <li class="nav-item">
            <a class="nav-link disabled" aria-disabled="true">Link</a>
          </li>
        </ul>
        <form class="d-flex" role="search">
          <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search"/>
          <button class="btn btn-outline-success" type="submit">Search</button>
        </form>
      </div>
    </div>
  </nav>
```

----------------------------------------

TITLE: Using Clearfix SCSS Mixin
DESCRIPTION: Example of using the clearfix mixin in SCSS to add clearfix functionality to a custom element class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/clearfix.mdx#2025-04-23_snippet_1

LANGUAGE: scss
CODE:
```
.element {
  @include clearfix;
}
```

----------------------------------------

TITLE: Rendering Translation Links with React in MDX
DESCRIPTION: This code snippet imports data and generates a list of links to community-translated Bootstrap documentation. Each list item includes links with proper language attributes (hreflang and lang) and displays both the description and name of the translation.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/about/translations.mdx#2025-04-23_snippet_0

LANGUAGE: jsx
CODE:
```
import { getData } from '@libs/data'

Community members have translated Bootstrap's documentation into various languages. None are officially supported and they may not always be up-to-date.

<ul>
  {getData('translations').map((translation) => {
    return (
      <li><a href={translation.url} hreflang={translation.code} lang={translation.code} >{translation.description} ({translation.name})</a></li>
    )
  })}
</ul>
```

----------------------------------------

TITLE: Displaying Sample Output in HTML with Bootstrap
DESCRIPTION: This HTML snippet shows how to use the samp tag to indicate sample output from a computer program or script.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/reboot.mdx#2025-04-23_snippet_12

LANGUAGE: html
CODE:
```
<samp>This text is meant to be treated as sample output from a computer program.</samp>
```

----------------------------------------

TITLE: Implementing LTR and RTL Simultaneously in SCSS
DESCRIPTION: This SCSS snippet demonstrates how to use RTLCSS String Maps to implement both LTR and RTL styles in the same stylesheet.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/rtl.mdx#2025-04-23_snippet_4

LANGUAGE: scss
CODE:
```
/* rtl:begin:options: {
  "autoRename": true,
  "stringMap":[ {
    "name": "ltr-rtl",
    "priority": 100,
    "search": ["ltr"],
    "replace": ["rtl"],
    "options": {
      "scope": "*",
      "ignoreCase": false
    }
  } ]
} */
.ltr {
  @import "../node_modules/bootstrap/scss/bootstrap";
}
/*rtl:end:options*/
```

----------------------------------------

TITLE: Flex Direction Control in Bootstrap
DESCRIPTION: Demonstrates how to control flex item direction using flex-row and flex-row-reverse utilities
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/flex.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<div class="d-flex flex-row mb-3">
    <div class="p-2">Flex item 1</div>
    <div class="p-2">Flex item 2</div>
    <div class="p-2">Flex item 3</div>
  </div>
  <div class="d-flex flex-row-reverse">
    <div class="p-2">Flex item 1</div>
    <div class="p-2">Flex item 2</div>
    <div class="p-2">Flex item 3</div>
  </div>
```

----------------------------------------

TITLE: Aligning Spinner with Margin in HTML
DESCRIPTION: Shows how to use margin utilities to space out a spinner within its container.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/spinners.mdx#2025-04-23_snippet_2

LANGUAGE: HTML
CODE:
```
<div class="spinner-border m-5" role="status">
    <span class="visually-hidden">Loading...</span>
  </div>
```

----------------------------------------

TITLE: Using role="button" for Non-Button Elements in HTML
DESCRIPTION: Shows how to use the role="button" attribute on non-button elements to indicate interactivity and change the default cursor to a pointer.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/reboot.mdx#2025-04-23_snippet_15

LANGUAGE: html
CODE:
```
<span role="button" tabindex="0">Non-button element button</span>
```

----------------------------------------

TITLE: Creating a Visually Hidden Focusable Skip Link in HTML with Bootstrap
DESCRIPTION: This example shows how to implement a 'skip to main content' link using the .visually-hidden-focusable class. This ensures the link is invisible until focused, making it accessible for sighted keyboard users.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/accessibility.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<a class="visually-hidden-focusable" href="#content">Skip to main content</a>
```

----------------------------------------

TITLE: Implementing align-content-start in Bootstrap Flexbox
DESCRIPTION: Uses Bootstrap's d-flex, align-content-start, and flex-wrap utilities to align flex items at the start of the container along the cross axis. This is useful for multi-row flex layouts.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/flex.mdx#2025-04-23_snippet_12

LANGUAGE: html
CODE:
```
<div class="d-flex align-content-start flex-wrap">
  ...
</div>
```

----------------------------------------

TITLE: Implementing Pointer Event Utility Classes in HTML
DESCRIPTION: This code demonstrates the use of Bootstrap's pointer event utility classes pe-none and pe-auto. It shows how these classes affect the clickability of links and how they can be applied to both links and parent elements.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/interactions.mdx#2025-04-23_snippet_1

LANGUAGE: HTML
CODE:
```
<p><a href="#" class="pe-none" tabindex="-1" aria-disabled="true">This link</a> can not be clicked.</p>
<p><a href="#" class="pe-auto">This link</a> can be clicked (this is default behavior).</p>
<p class="pe-none"><a href="#" tabindex="-1" aria-disabled="true">This link</a> can not be clicked because the <code>pointer-events</code> property is inherited from its parent. However, <a href="#" class="pe-auto">this link</a> has a <code>pe-auto</code> class and can be clicked.</p>
```

----------------------------------------

TITLE: Defining Info Color Variables in CSS
DESCRIPTION: CSS variables for info colors, used for neutral and informative content.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/color.mdx#2025-04-23_snippet_10

LANGUAGE: CSS
CODE:
```
--bs-info
--bs-info-rgb
--bs-info-bg-subtle
--bs-info-border-subtle
--bs-info-text-emphasis
```

----------------------------------------

TITLE: Defining Native Font Stack in SCSS for Bootstrap
DESCRIPTION: This SCSS snippet defines the native font stack used by Bootstrap. It includes system fonts for various operating systems and devices, ensuring optimal text rendering across platforms.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/reboot.mdx#2025-04-23_snippet_2

LANGUAGE: scss
CODE:
```
$font-family-sans-serif:
  // Cross-platform generic font family (default user interface font)
  system-ui,
  // Safari for macOS and iOS (San Francisco)
  -apple-system,
  // Windows
  "Segoe UI",
  // Android
  Roboto,
  // older macOS and iOS
  "Helvetica Neue",
  // Linux
  "Noto Sans",
  "Liberation Sans",
  // Basic web fallback
  Arial,
  // Sans serif fallback
  sans-serif,
  // Emoji fonts
  "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" !default;
```

----------------------------------------

TITLE: Importing Bootstrap SCSS
DESCRIPTION: SCSS import statement to include all of Bootstrap's source Sass styles in the project.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/webpack.mdx#2025-04-23_snippet_10

LANGUAGE: scss
CODE:
```
// Import all of Bootstrap's CSS
@import "bootstrap/scss/bootstrap";
```

----------------------------------------

TITLE: Enabling Dark Mode in Bootstrap HTML
DESCRIPTION: This HTML snippet demonstrates how to enable dark mode across an entire project by adding the data-bs-theme attribute to the html element.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/color-modes.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<!doctype html>
<html lang="en" data-bs-theme="dark">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Bootstrap demo</title>
    <link href="[[config:cdn.css]]" rel="stylesheet" integrity="[[config:cdn.css_hash]]" crossorigin="anonymous">
  </head>
  <body>
    <h1>Hello, world!</h1>
    <script src="[[config:cdn.js_bundle]]" integrity="[[config:cdn.js_bundle_hash]]" crossorigin="anonymous"></script>
  </body>
</html>
```

----------------------------------------

TITLE: Implementing Fill-Width Navigation with Pills in Bootstrap
DESCRIPTION: Uses .nav-fill class with pill-style navigation to proportionally distribute navigation items across available width, where each item's width is based on its content.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_9

LANGUAGE: html
CODE:
```
<ul class="nav nav-pills nav-fill">
    <li class="nav-item">
      <a class="nav-link active" aria-current="page" href="#">Active</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Much longer nav link</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Link</a>
    </li>
    <li class="nav-item">
      <a class="nav-link disabled" aria-disabled="true">Disabled</a>
    </li>
  </ul>
```

----------------------------------------

TITLE: Creating Sized Custom Selects in Bootstrap
DESCRIPTION: Demonstrates how to create large and small custom select elements using form-select-lg and form-select-sm classes, respectively.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/select.mdx#2025-04-23_snippet_1

LANGUAGE: HTML
CODE:
```
<select class="form-select form-select-lg mb-3" aria-label="Large select example">
    <option selected>Open this select menu</option>
    <option value="1">One</option>
    <option value="2">Two</option>
    <option value="3">Three</option>
  </select>

  <select class="form-select form-select-sm" aria-label="Small select example">
    <option selected>Open this select menu</option>
    <option value="1">One</option>
    <option value="2">Two</option>
    <option value="3">Three</option>
  </select>
```

----------------------------------------

TITLE: Installing Parcel Dependencies
DESCRIPTION: Command to install Parcel bundler as a development dependency.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/parcel.mdx#2025-04-23_snippet_1

LANGUAGE: shell
CODE:
```
npm i --save-dev parcel
```

----------------------------------------

TITLE: Updating HTML for Extracted CSS
DESCRIPTION: Diff showing the HTML changes needed to include the extracted CSS file in the project.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/webpack.mdx#2025-04-23_snippet_14

LANGUAGE: diff
CODE:
```
--- a/dist/index.html
+++ b/dist/index.html
@@ -3,6 +3,7 @@
   <head>
     <meta charset="utf-8">
     <meta name="viewport" content="width=device-width, initial-scale=1">
+    <link rel="stylesheet" href="./main.css">
     <title>Bootstrap w/ Webpack</title>
   </head>
```

----------------------------------------

TITLE: Grid with Column Starts
DESCRIPTION: Shows how to use grid-column-start positioning with g-start classes to control column placement.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/css-grid.mdx#2025-04-23_snippet_2

LANGUAGE: HTML
CODE:
```
<div class="grid text-center">
    <div class="g-col-3 g-start-2">.g-col-3 .g-start-2</div>
    <div class="g-col-4 g-start-6">.g-col-4 .g-start-6</div>
  </div>
```

----------------------------------------

TITLE: Configuring SVG Extraction in Webpack
DESCRIPTION: Diff showing Webpack configuration changes needed to extract inline SVG files into separate assets.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/webpack.mdx#2025-04-23_snippet_15

LANGUAGE: diff
CODE:
```
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -23,6 +23,14 @@ module.exports = {
   },
   module: {
     rules: [
+      {
+        mimetype: 'image/svg+xml',
+        scheme: 'data',
+        type: 'asset/resource',
+        generator: {
+          filename: 'icons/[hash].svg'
+        }
+      },
       {
         test: /\.(scss)$/,
         use: [
```

----------------------------------------

TITLE: Displaying HTML Link Element in Bootstrap
DESCRIPTION: This HTML snippet demonstrates a basic link element. In Bootstrap's Reboot, links have a default color and underline applied, with hover effects but no special focus styles.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/reboot.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<a href="#">This is an example link</a>
```

----------------------------------------

TITLE: Stacked Toasts Implementation in HTML
DESCRIPTION: Shows how to stack multiple toast notifications using a container with positioning utilities. Each toast has its own header and dismiss button.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/toasts.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<div class="toast-container position-static">
    <div class="toast" role="alert" aria-live="assertive" aria-atomic="true">
      <div class="toast-header">
        <Placeholder width="20" height="20" background="#007aff" class="rounded me-2" text={false} title={false} />
        <strong class="me-auto">Bootstrap</strong>
        <small class="text-body-secondary">just now</small>
        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
      <div class="toast-body">
        See? Just like this.
      </div>
    </div>

    <div class="toast" role="alert" aria-live="assertive" aria-atomic="true">
      <div class="toast-header">
        <Placeholder width="20" height="20" background="#007aff" class="rounded me-2" text={false} title={false} />
        <strong class="me-auto">Bootstrap</strong>
        <small class="text-body-secondary">2 seconds ago</small>
        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
      <div class="toast-body">
        Heads up, toasts will stack automatically
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Implementing Abbreviations in Bootstrap
DESCRIPTION: Examples of using the abbr element for abbreviations and acronyms in Bootstrap. The initialism class can be added for a slightly smaller font size for acronyms.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/typography.mdx#2025-04-23_snippet_6

LANGUAGE: html
CODE:
```
<p><abbr title="attribute">attr</abbr></p>
<p><abbr title="HyperText Markup Language" class="initialism">HTML</abbr></p>
```

----------------------------------------

TITLE: Displaying Bootstrap Source Code Structure
DESCRIPTION: Illustrates the directory structure of Bootstrap's source code, including compiled assets, documentation, and source files for CSS and JavaScript.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/contents.mdx#2025-04-23_snippet_1

LANGUAGE: text
CODE:
```
bootstrap/
├── dist/
│   ├── css/
│   └── js/
├── site/
│   └──content/
│      └── docs/
│          └── [[config:docs_version]]/
│              └── examples/
├── js/
└── scss/
```

----------------------------------------

TITLE: Creating Center-Aligned Blockquotes in Bootstrap
DESCRIPTION: Example of how to center-align a blockquote with attribution using the text-center utility class applied to the figure element.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/typography.mdx#2025-04-23_snippet_9

LANGUAGE: html
CODE:
```
<figure class="text-center">
    <blockquote class="blockquote">
      <p>A well-known quote, contained in a blockquote element.</p>
    </blockquote>
    <figcaption class="blockquote-footer">
      Someone famous in <cite title="Source Title">Source Title</cite>
    </figcaption>
  </figure>
```

----------------------------------------

TITLE: Configuring Bootstrap Dropdown with Custom Popper Settings
DESCRIPTION: Example showing how to initialize a Bootstrap Dropdown with custom Popper.js configuration using the popperConfig function option. The function receives the default Bootstrap Popper configuration and allows returning a modified configuration.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_24

LANGUAGE: javascript
CODE:
```
const dropdown = new bootstrap.Dropdown(element, {
  popperConfig(defaultBsPopperConfig) {
    // const newPopperConfig = {...}
    // use defaultBsPopperConfig if needed...
    // return newPopperConfig
  }
})
```

----------------------------------------

TITLE: Creating Indeterminate Checkbox in Bootstrap
DESCRIPTION: HTML for an indeterminate checkbox that requires JavaScript to set its state. This example shows the basic structure with appropriate .form-check classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/checks-radios.mdx#2025-04-23_snippet_1

LANGUAGE: HTML
CODE:
```
<div class="form-check">
    <input class="form-check-input" type="checkbox" value="" id="checkIndeterminate">
    <label class="form-check-label" for="checkIndeterminate">
      Indeterminate checkbox
    </label>
  </div>
```

----------------------------------------

TITLE: Defining Sass Variables for Headings in Bootstrap
DESCRIPTION: This snippet shows Sass variables used for sizing and spacing of headings in Bootstrap. These variables are defined in the '_variables.scss' file and are part of the typography customization options.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/typography.mdx#2025-04-23_snippet_14

LANGUAGE: SCSS
CODE:
```
<ScssDocs name="headings-variables" file="scss/_variables.scss" />
```

----------------------------------------

TITLE: Implementing Top Offcanvas in Bootstrap
DESCRIPTION: This snippet demonstrates how to create a top-positioned offcanvas component in Bootstrap. It includes a toggle button and the offcanvas structure with a header and body.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/offcanvas.mdx#2025-04-23_snippet_5

LANGUAGE: HTML
CODE:
```
<button class="btn btn-primary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasTop" aria-controls="offcanvasTop">Toggle top offcanvas</button>

<div class="offcanvas offcanvas-top" tabindex="-1" id="offcanvasTop" aria-labelledby="offcanvasTopLabel">
  <div class="offcanvas-header">
    <h5 class="offcanvas-title" id="offcanvasTopLabel">Offcanvas top</h5>
    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
  </div>
  <div class="offcanvas-body">
    ...
  </div>
</div>
```

----------------------------------------

TITLE: Equal-Width Multi-Row Grid Layout
DESCRIPTION: Demonstrates two different row layouts with equal-width columns. First row contains two columns, second row contains three columns, showing grid flexibility.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/grid.mdx#2025-04-23_snippet_1

LANGUAGE: HTML
CODE:
```
<div class="container text-center">
    <div class="row">
      <div class="col">
        1 of 2
      </div>
      <div class="col">
        2 of 2
      </div>
    </div>
    <div class="row">
      <div class="col">
        1 of 3
      </div>
      <div class="col">
        2 of 3
      </div>
      <div class="col">
        3 of 3
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Adjusting Progress Bar Height in HTML and CSS
DESCRIPTION: This snippet demonstrates how to set custom heights for progress bars using inline styles.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/progress.mdx#2025-04-23_snippet_2

LANGUAGE: HTML
CODE:
```
<div class="progress" role="progressbar" aria-label="Example 1px high" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" style="height: 1px">
    <div class="progress-bar" style="width: 25%"></div>
  </div>
  <div class="progress" role="progressbar" aria-label="Example 20px high" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" style="height: 20px">
    <div class="progress-bar" style="width: 25%"></div>
  </div>
```

----------------------------------------

TITLE: Styling Tables in HTML with Bootstrap
DESCRIPTION: Demonstrates the structure of a basic HTML table with a caption, header, and body. The table is styled using Bootstrap classes for consistent text alignment and border collapse.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/reboot.mdx#2025-04-23_snippet_13

LANGUAGE: html
CODE:
```
<table>
    <caption>
      This is an example table, and this is its caption to describe the contents.
    </caption>
    <thead>
      <tr>
        <th>Table heading</th>
        <th>Table heading</th>
        <th>Table heading</th>
        <th>Table heading</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>Table cell</td>
        <td>Table cell</td>
        <td>Table cell</td>
        <td>Table cell</td>
      </tr>
      <tr>
        <td>Table cell</td>
        <td>Table cell</td>
        <td>Table cell</td>
        <td>Table cell</td>
      </tr>
      <tr>
        <td>Table cell</td>
        <td>Table cell</td>
        <td>Table cell</td>
        <td>Table cell</td>
      </tr>
    </tbody>
  </table>
```

----------------------------------------

TITLE: Implementing Bootstrap Tabs with Dropdown Menu
DESCRIPTION: Example of Bootstrap navigation tabs with dropdown menu integration. Includes accessibility attributes and demonstrates proper class usage for tabs, dropdowns, and disabled states.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_14

LANGUAGE: HTML
CODE:
```
<ul class="nav nav-tabs">
    <li class="nav-item">
      <a class="nav-link active" aria-current="page" href="#">Active</a>
    </li>
    <li class="nav-item dropdown">
      <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-expanded="false">Dropdown</a>
      <ul class="dropdown-menu">
        <li><a class="dropdown-item" href="#">Action</a></li>
        <li><a class="dropdown-item" href="#">Another action</a></li>
        <li><a class="dropdown-item" href="#">Something else here</a></li>
        <li><hr class="dropdown-divider"></li>
        <li><a class="dropdown-item" href="#">Separated link</a></li>
      </ul>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="#">Link</a>
    </li>
    <li class="nav-item">
      <a class="nav-link disabled" aria-disabled="true">Disabled</a>
    </li>
  </ul>
```

----------------------------------------

TITLE: Bootstrap Navbar with Non-List Navigation Markup
DESCRIPTION: Alternative implementation of navbar navigation that avoids list-based approach. Uses div with .navbar-nav class instead of ul/li structure, while maintaining the same functionality and responsive behavior.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navbar.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<nav class="navbar navbar-expand-lg bg-body-tertiary">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Navbar</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
        <div class="navbar-nav">
          <a class="nav-link active" aria-current="page" href="#">Home</a>
          <a class="nav-link" href="#">Features</a>
          <a class="nav-link" href="#">Pricing</a>
          <a class="nav-link disabled" aria-disabled="true">Disabled</a>
        </div>
      </div>
    </div>
  </nav>
```

----------------------------------------

TITLE: Creating Inline Radio Button Controls in Bootstrap
DESCRIPTION: Example of horizontally aligned inline radio buttons using the .form-check-inline class. Includes default and disabled options arranged in a row with shared name attribute.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/checks-radios.mdx#2025-04-23_snippet_10

LANGUAGE: HTML
CODE:
```
<div class="form-check form-check-inline">
    <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio1" value="option1">
    <label class="form-check-label" for="inlineRadio1">1</label>
  </div>
  <div class="form-check form-check-inline">
    <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio2" value="option2">
    <label class="form-check-label" for="inlineRadio2">2</label>
  </div>
  <div class="form-check form-check-inline">
    <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio3" value="option3" disabled>
    <label class="form-check-label" for="inlineRadio3">3 (disabled)</label>
  </div>
```

----------------------------------------

TITLE: Aligning Description Lists with Bootstrap Grid System in HTML
DESCRIPTION: This snippet demonstrates how to align terms and descriptions horizontally using Bootstrap's grid system classes. It includes examples of truncated text, nested definition lists, and various formatting options.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/typography.mdx#2025-04-23_snippet_13

LANGUAGE: HTML
CODE:
```
<dl class="row">
    <dt class="col-sm-3">Description lists</dt>
    <dd class="col-sm-9">A description list is perfect for defining terms.</dd>

    <dt class="col-sm-3">Term</dt>
    <dd class="col-sm-9">
      <p>Definition for the term.</p>
      <p>And some more placeholder definition text.</p>
    </dd>

    <dt class="col-sm-3">Another term</dt>
    <dd class="col-sm-9">This definition is short, so no extra paragraphs or anything.</dd>

    <dt class="col-sm-3 text-truncate">Truncated term is truncated</dt>
    <dd class="col-sm-9">This can be useful when space is tight. Adds an ellipsis at the end.</dd>

    <dt class="col-sm-3">Nesting</dt>
    <dd class="col-sm-9">
      <dl class="row">
        <dt class="col-sm-4">Nested definition list</dt>
        <dd class="col-sm-8">I heard you like definition lists. Let me put a definition list inside your definition list.</dd>
      </dl>
    </dd>
  </dl>
```

----------------------------------------

TITLE: Supported Form Elements Validation
DESCRIPTION: Demonstrates validation styles for various form controls including textareas, checkboxes, radio buttons, select menus, and file inputs.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/validation.mdx#2025-04-23_snippet_3

LANGUAGE: HTML
CODE:
```
<form class="was-validated">
    <div class="mb-3">
      <label for="validationTextarea" class="form-label">Textarea</label>
      <textarea class="form-control" id="validationTextarea" placeholder="Required example textarea" required></textarea>
      <div class="invalid-feedback">
        Please enter a message in the textarea.
      </div>
    </div>
    <!-- Additional form elements omitted for brevity -->
</form>
```

----------------------------------------

TITLE: Implementing Basic Ratio Container with iframe
DESCRIPTION: Example of using the ratio helper class to create a 16:9 aspect ratio container for a YouTube video iframe.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/ratio.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<div class="ratio ratio-16x9">
    <iframe src="https://www.youtube.com/embed/zpOULjyy-n8?rel=0" title="YouTube video" allowfullscreen></iframe>
  </div>
```

----------------------------------------

TITLE: Right-aligned Dropdown Menu
DESCRIPTION: Implementation of a right-aligned dropdown menu using the dropdown-menu-end class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_17

LANGUAGE: HTML
CODE:
```
<div class="btn-group">
    <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
      Right-aligned menu example
    </button>
    <ul class="dropdown-menu dropdown-menu-end">
      <li><button class="dropdown-item" type="button">Action</button></li>
      <li><button class="dropdown-item" type="button">Another action</button></li>
      <li><button class="dropdown-item" type="button">Something else here</button></li>
    </ul>
  </div>
```

----------------------------------------

TITLE: Creating Custom-Sized Buttons Using CSS Variables
DESCRIPTION: Demonstrates how to customize button size with CSS variables to define custom padding and font size.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/buttons.mdx#2025-04-23_snippet_6

LANGUAGE: html
CODE:
```
<button type="button" class="btn btn-primary"
          style="--bs-btn-padding-y: .25rem; --bs-btn-padding-x: .5rem; --bs-btn-font-size: .75rem;">
    Custom button
  </button>
```

----------------------------------------

TITLE: Creating Project Structure
DESCRIPTION: Creates the necessary project directories and files.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/webpack.mdx#2025-04-23_snippet_4

LANGUAGE: sh
CODE:
```
mkdir {src,src/js,src/scss}
touch src/index.html src/js/main.js src/scss/styles.scss webpack.config.js
```

----------------------------------------

TITLE: Compiling Sass to CSS Using CLI
DESCRIPTION: Demonstrates how to use the Sass CLI to compile custom Sass files into CSS, including installation and watch command for automatic compilation on file changes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/sass.mdx#2025-04-23_snippet_3

LANGUAGE: sh
CODE:
```
# Install Sass globally
npm install -g sass

# Watch your custom Sass for changes and compile it to CSS
sass --watch ./scss/custom.scss ./css/custom.css
```

----------------------------------------

TITLE: Implementing align-content-around in Bootstrap Flexbox
DESCRIPTION: Uses Bootstrap's d-flex, align-content-around, and flex-wrap utilities to distribute flex items evenly along the cross axis with equal space around each row, including before the first and after the last row.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/flex.mdx#2025-04-23_snippet_16

LANGUAGE: html
CODE:
```
<div class="d-flex align-content-around flex-wrap">...</div>
```

----------------------------------------

TITLE: Centering Image with Text Alignment in JSX
DESCRIPTION: This example demonstrates how to center an image using Bootstrap's text alignment class. It wraps a 200x200 rounded placeholder in a div with the .text-center class.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/images.mdx#2025-04-23_snippet_4

LANGUAGE: jsx
CODE:
```
<div class="text-center">
    <Placeholder width="200" height="200" class="rounded" />
  </div>
```

----------------------------------------

TITLE: Defining Sizing Utilities in Bootstrap Sass
DESCRIPTION: This SCSS code snippet from the Bootstrap utilities API defines the sizing utility classes, including their property, values, and class name format. It generates classes for width, height, and their variations.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/sizing.mdx#2025-04-23_snippet_5

LANGUAGE: scss
CODE:
```
"utils-sizing": (
  property: width height,
  class: w h,
  values: (
    25: 25%,
    50: 50%,
    75: 75%,
    100: 100%,
    auto: auto
  )
),
"utils-max-sizing": (
  property: max-width max-height,
  class: mw mh,
  values: (
    100: 100%
  )
),
"utils-viewport-sizing": (
  property: min-width min-height width height,
  class: min-vw min-vh vw vh,
  values: (
    100: 100vh
  )
)
```

----------------------------------------

TITLE: Navigation Tabs in Bootstrap Cards
DESCRIPTION: Shows how to implement navigation tabs within a card header using Bootstrap's nav components. Features active, regular, and disabled navigation items.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/card.mdx#2025-04-23_snippet_16

LANGUAGE: HTML
CODE:
```
<div class="card text-center">
    <div class="card-header">
      <ul class="nav nav-tabs card-header-tabs">
        <li class="nav-item">
          <a class="nav-link active" aria-current="true" href="#">Active</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Link</a>
        </li>
        <li class="nav-item">
          <a class="nav-link disabled" aria-disabled="true">Disabled</a>
        </li>
      </ul>
    </div>
    <div class="card-body">
      <h5 class="card-title">Special title treatment</h5>
      <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
      <a href="#" class="btn btn-primary">Go somewhere</a>
    </div>
  </div>
```

----------------------------------------

TITLE: Bootstrap Popover Instance Methods Example
DESCRIPTION: Demonstrates how to get a popover instance and modify its content using getOrCreateInstance and setContent methods.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/popovers.mdx#2025-04-23_snippet_11

LANGUAGE: javascript
CODE:
```
// getOrCreateInstance example
const popover = bootstrap.Popover.getOrCreateInstance('#example') // Returns a Bootstrap popover instance

// setContent example
popover.setContent({
  '.popover-header': 'another title',
  '.popover-body': 'another content'
})
```

----------------------------------------

TITLE: Initializing Offcanvas Components with JavaScript in Bootstrap
DESCRIPTION: This JavaScript snippet demonstrates how to manually initialize all offcanvas components on a page using Bootstrap's JavaScript API. It selects all elements with the 'offcanvas' class and creates new Offcanvas instances.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/offcanvas.mdx#2025-04-23_snippet_8

LANGUAGE: JavaScript
CODE:
```
const offcanvasElementList = document.querySelectorAll('.offcanvas')
const offcanvasList = [...offcanvasElementList].map(offcanvasEl => new bootstrap.Offcanvas(offcanvasEl))
```

----------------------------------------

TITLE: Bootstrap Shadow Examples in HTML
DESCRIPTION: Demonstrates the four main shadow utility classes in Bootstrap: shadow-none (no shadow), shadow-sm (small shadow), shadow (regular shadow), and shadow-lg (larger shadow). Each example shows the shadow effect applied to a padded, rounded container.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/shadows.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<div class="shadow-none p-3 mb-5 bg-body-tertiary rounded">No shadow</div>
<div class="shadow-sm p-3 mb-5 bg-body-tertiary rounded">Small shadow</div>
<div class="shadow p-3 mb-5 bg-body-tertiary rounded">Regular shadow</div>
<div class="shadow-lg p-3 mb-5 bg-body-tertiary rounded">Larger shadow</div>
```

----------------------------------------

TITLE: Implementing Dropstart Buttons with Bootstrap
DESCRIPTION: This snippet demonstrates how to create dropstart buttons using Bootstrap classes. It includes both a default dropstart button and a split dropstart button with dropdown menus.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_12

LANGUAGE: HTML
CODE:
```
<!-- Default dropstart button -->
<div class="btn-group dropstart">
  <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
    Dropstart
  </button>
  <ul class="dropdown-menu">
    <!-- Dropdown menu links -->
  </ul>
</div>

<!-- Split dropstart button -->
<div class="btn-group dropstart">
  <button type="button" class="btn btn-secondary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
    <span class="visually-hidden">Toggle Dropstart</span>
  </button>
  <ul class="dropdown-menu">
    <!-- Dropdown menu links -->
  </ul>
  <button type="button" class="btn btn-secondary">
    Split dropstart
  </button>
</div>
```

----------------------------------------

TITLE: Creating Nested Tables in Bootstrap
DESCRIPTION: This code snippet illustrates how to create nested tables in Bootstrap. It shows that border styles, active styles, and table variants are not inherited by nested tables.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/tables.mdx#2025-04-23_snippet_6

LANGUAGE: html
CODE:
```
<table class="table table-striped table-bordered">
  <thead>
    ...
  </thead>
  <tbody>
    ...
    <tr>
      <td colspan="4">
        <table class="table mb-0">
          ...
        </table>
      </td>
    </tr>
    ...
  </tbody>
</table>
```

----------------------------------------

TITLE: Bootstrap Popover Event Handling
DESCRIPTION: Shows how to add an event listener for popover events, specifically the hidden.bs.popover event.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/popovers.mdx#2025-04-23_snippet_12

LANGUAGE: javascript
CODE:
```
const myPopoverTrigger = document.getElementById('myPopover')
myPopoverTrigger.addEventListener('hidden.bs.popover', () => {
  // do something...
})
```

----------------------------------------

TITLE: Listening for Scrollspy Activation Events
DESCRIPTION: JavaScript code demonstrating how to listen for the 'activate.bs.scrollspy' event, which fires whenever an anchor is activated by the scrollspy.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/scrollspy.mdx#2025-04-23_snippet_8

LANGUAGE: javascript
CODE:
```
const firstScrollSpyEl = document.querySelector('[data-bs-spy="scroll"]')
firstScrollSpyEl.addEventListener('activate.bs.scrollspy', () => {
  // do something...
})
```

----------------------------------------

TITLE: Video Element Object Fit Examples
DESCRIPTION: Demonstrates how to apply object-fit utilities to video elements with different fitting behaviors.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/object-fit.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<video src="..." class="object-fit-contain" autoplay></video>
<video src="..." class="object-fit-cover" autoplay></video>
<video src="..." class="object-fit-fill" autoplay></video>
<video src="..." class="object-fit-scale" autoplay></video>
<video src="..." class="object-fit-none" autoplay></video>
```

----------------------------------------

TITLE: Implementing Dark Dropdown Menu in Bootstrap 5
DESCRIPTION: New .dropdown-menu-dark variant for on-demand dark dropdowns with improved contrast.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/migration.mdx#2025-04-23_snippet_17

LANGUAGE: HTML
CODE:
```
<div class="dropdown-menu dropdown-menu-dark">
  <!-- Dropdown items -->
</div>
```

----------------------------------------

TITLE: Implementing CSS Extraction in Webpack Config
DESCRIPTION: Diff showing changes needed to implement CSS extraction using mini-css-extract-plugin in the Webpack configuration.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/webpack.mdx#2025-04-23_snippet_13

LANGUAGE: diff
CODE:
```
--- a/webpack.config.js
+++ b/webpack.config.js
@@ -3,6 +3,7 @@
 const path = require('path')
 const autoprefixer = require('autoprefixer')
 const HtmlWebpackPlugin = require('html-webpack-plugin')
+const miniCssExtractPlugin = require('mini-css-extract-plugin')

 module.exports = {
   mode: 'development',
@@ -17,7 +18,8 @@ module.exports = {
     hot: true
   },
   plugins: [
-    new HtmlWebpackPlugin({ template: './src/index.html' })
+    new HtmlWebpackPlugin({ template: './src/index.html' }),
+    new miniCssExtractPlugin()
   ],
   module: {
     rules: [
@@ -25,8 +27,8 @@ module.exports = {
         test: /\.(scss)$/,
         use: [
           {
-            // Adds CSS to the DOM by injecting a `<style>` tag
-            loader: 'style-loader'
+            // Extracts CSS for each JS file that includes CSS
+            loader: miniCssExtractPlugin.loader
           },
```

----------------------------------------

TITLE: Responsive Object Fit Examples
DESCRIPTION: Shows how to use responsive object-fit utilities that activate at different breakpoints (sm, md, lg, xl, xxl).
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/object-fit.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<Placeholder width="140" height="80" class="object-fit-sm-contain border rounded" text="Contain on sm" markup="img" />
<Placeholder width="140" height="80" class="object-fit-md-contain border rounded" text="Contain on md" markup="img" />
<Placeholder width="140" height="80" class="object-fit-lg-contain border rounded" text="Contain on lg" markup="img" />
<Placeholder width="140" height="80" class="object-fit-xl-contain border rounded" text="Contain on xl" markup="img" />
<Placeholder width="140" height="80" class="object-fit-xxl-contain border rounded" text="Contain on xxl" markup="img" />
```

----------------------------------------

TITLE: Customizing Icon Link Color in HTML and CSS
DESCRIPTION: Shows how to customize the color of an icon link on hover using inline CSS variables.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/icon-link.mdx#2025-04-23_snippet_3

LANGUAGE: HTML
CODE:
```
<a class="icon-link icon-link-hover" style="--bs-link-hover-color-rgb: 25, 135, 84;" href="#">
    Icon link
    <svg xmlns="http://www.w3.org/2000/svg" class="bi" viewBox="0 0 16 16" aria-hidden="true">
      <path d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z"/>
    </svg>
  </a>
```

----------------------------------------

TITLE: Implementing New Color Functions in Sass
DESCRIPTION: New color functions including tint-color() and shade-color() that mix colors with white or black instead of changing lightness by a fixed amount. The shift-color() function either tints or shades a color based on weight parameter.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/migration.mdx#2025-04-23_snippet_7

LANGUAGE: scss
CODE:
```
tint-color($color, $weight)
```

LANGUAGE: scss
CODE:
```
shade-color($color, $weight)
```

LANGUAGE: scss
CODE:
```
shift-color($color, $weight)
```

----------------------------------------

TITLE: Defining Secondary Color Variables in CSS
DESCRIPTION: CSS variables for secondary colors, used for lighter text and to indicate disabled component states.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/color.mdx#2025-04-23_snippet_2

LANGUAGE: CSS
CODE:
```
--bs-secondary-color
--bs-secondary-color-rgb
--bs-secondary-bg
--bs-secondary-bg-rgb
```

----------------------------------------

TITLE: Implementing Disabled Radio Button States in Bootstrap
DESCRIPTION: Example showing disabled radio button states in both unchecked and checked variations. Uses the standard form-check structure with disabled attribute.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/checks-radios.mdx#2025-04-23_snippet_4

LANGUAGE: HTML
CODE:
```
<div class="form-check">
    <input class="form-check-input" type="radio" name="radioDisabled" id="radioDisabled" disabled>
    <label class="form-check-label" for="radioDisabled">
      Disabled radio
    </label>
  </div>
  <div class="form-check">
    <input class="form-check-input" type="radio" name="radioDisabled" id="radioCheckedDisabled" checked disabled>
    <label class="form-check-label" for="radioCheckedDisabled">
      Disabled checked radio
    </label>
  </div>
```

----------------------------------------

TITLE: Implementing Inline Form Text in Bootstrap
DESCRIPTION: This example shows how to create inline form text using Bootstrap classes. It demonstrates a compact layout for a password input with inline help text.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/form-control.mdx#2025-04-23_snippet_3

LANGUAGE: HTML
CODE:
```
<div class="row g-3 align-items-center">
    <div class="col-auto">
      <label for="inputPassword6" class="col-form-label">Password</label>
    </div>
    <div class="col-auto">
      <input type="password" id="inputPassword6" class="form-control" aria-describedby="passwordHelpInline">
    </div>
    <div class="col-auto">
      <span id="passwordHelpInline" class="form-text">
        Must be 8-20 characters long.
      </span>
    </div>
  </div>
```

----------------------------------------

TITLE: Using Bootstrap Heading Classes with Paragraph Elements
DESCRIPTION: Example showing how to apply heading styles (h1-h6) to paragraph elements using Bootstrap heading classes. This is useful when semantic heading elements cannot be used but the styling is desired.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/typography.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<p class="h1">h1. Bootstrap heading</p>
<p class="h2">h2. Bootstrap heading</p>
<p class="h3">h3. Bootstrap heading</p>
<p class="h4">h4. Bootstrap heading</p>
<p class="h5">h5. Bootstrap heading</p>
<p class="h6">h6. Bootstrap heading</p>
```

----------------------------------------

TITLE: Demonstrating Width Utilities in Bootstrap HTML
DESCRIPTION: This snippet shows how to use Bootstrap's width utility classes to set elements to 25%, 50%, 75%, 100%, and auto widths relative to their parent container.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/sizing.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<div class="w-25 p-3">Width 25%</div>
<div class="w-50 p-3">Width 50%</div>
<div class="w-75 p-3">Width 75%</div>
<div class="w-100 p-3">Width 100%</div>
<div class="w-auto p-3">Width auto</div>
```

----------------------------------------

TITLE: Implementing Inline Element Vertical Alignment in HTML
DESCRIPTION: Demonstrates the usage of Bootstrap's vertical alignment utility classes with inline span elements. Shows different alignment options including baseline, top, middle, bottom, text-top, and text-bottom.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/vertical-align.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<span class="align-baseline">baseline</span>
<span class="align-top">top</span>
<span class="align-middle">middle</span>
<span class="align-bottom">bottom</span>
<span class="align-text-top">text-top</span>
<span class="align-text-bottom">text-bottom</span>
```

----------------------------------------

TITLE: Using title or data-bs-title attributes for Bootstrap tooltips in HTML
DESCRIPTION: This snippet demonstrates the usage of 'title' and 'data-bs-title' attributes for Bootstrap tooltips. It explains that both attributes are acceptable, and Popper will automatically replace 'title' with 'data-bs-title' when rendering the element.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/callouts/warning-data-bs-title-vs-title.md#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
<element title="Tooltip content"></element>
<element data-bs-title="Tooltip content"></element>
```

----------------------------------------

TITLE: Align Self Examples in Bootstrap
DESCRIPTION: Demonstrates individual flex item alignment options using align-self utilities
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/flex.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<div class="align-self-start">Aligned flex item</div>
<div class="align-self-end">Aligned flex item</div>
<div class="align-self-center">Aligned flex item</div>
<div class="align-self-baseline">Aligned flex item</div>
<div class="align-self-stretch">Aligned flex item</div>
```

----------------------------------------

TITLE: Custom Toast Content with Simplified Layout
DESCRIPTION: A simplified toast implementation without the default header, using flexbox utilities to adjust the layout. The close button is positioned alongside the content.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/toasts.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<div class="toast align-items-center" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="d-flex">
      <div class="toast-body">
        Hello, world! This is a toast message.
      </div>
      <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
  </div>
```

----------------------------------------

TITLE: Customized Grid with Gaps
DESCRIPTION: Shows how to customize grid gaps using CSS variables for different vertical and horizontal spacing.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/css-grid.mdx#2025-04-23_snippet_4

LANGUAGE: HTML
CODE:
```
<div class="grid text-center" style="--bs-gap: .25rem 1rem;">
    <div class="g-col-6">.g-col-6</div>
    <div class="g-col-6">.g-col-6</div>
    <div class="g-col-6">.g-col-6</div>
    <div class="g-col-6">.g-col-6</div>
  </div>
```

----------------------------------------

TITLE: Using New Grid Gutter Classes in HTML
DESCRIPTION: New gutter classes for controlling spacing between grid columns, including options for all gutters (.g-*), horizontal gutters (.gx-*), and vertical gutters (.gy-*).
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/migration.mdx#2025-04-23_snippet_8

LANGUAGE: html
CODE:
```
<div class="g-0">...</div>
```

LANGUAGE: html
CODE:
```
<div class="gx-*">...</div>
```

LANGUAGE: html
CODE:
```
<div class="gy-*">...</div>
```

----------------------------------------

TITLE: Implementing Native Switch Haptics for Mobile Safari
DESCRIPTION: Example of a switch control with the switch attribute for haptic feedback on iOS 17.4+. Maintains Bootstrap styling while enabling the native haptic feedback behavior.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/checks-radios.mdx#2025-04-23_snippet_6

LANGUAGE: HTML
CODE:
```
<div class="form-check form-switch">
    <input class="form-check-input" type="checkbox" value="" id="checkNativeSwitch" switch>
    <label class="form-check-label" for="checkNativeSwitch">
      Native switch haptics
    </label>
  </div>
```

----------------------------------------

TITLE: Applying Background Colors in Bootstrap HTML
DESCRIPTION: Demonstrates how to apply contextual background colors and subtle background colors using Bootstrap classes. Includes examples for body colors, black, white, and transparent backgrounds.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/background.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<div class="p-3 mb-2 bg-${themeColor.name} ${themeColor.contrast_color ? `text-${themeColor.contrast_color}` : `text-white`}">.bg-${themeColor.name}</div>
<div class="p-3 mb-2 bg-${themeColor.name}-subtle text-${themeColor.name}-emphasis">.bg-${themeColor.name}-subtle</div>
```

LANGUAGE: html
CODE:
```
<div class="p-3 mb-2 bg-body-secondary">.bg-body-secondary</div>
<div class="p-3 mb-2 bg-body-tertiary">.bg-body-tertiary</div>
<div class="p-3 mb-2 bg-body text-body">.bg-body</div>
<div class="p-3 mb-2 bg-black text-white">.bg-black</div>
<div class="p-3 mb-2 bg-white text-dark">.bg-white</div>
<div class="p-3 mb-2 bg-transparent text-body">.bg-transparent</div>
```

----------------------------------------

TITLE: Basic Link Opacity Examples - HTML
DESCRIPTION: Demonstrates how to apply different opacity levels to links using Bootstrap utility classes from 10% to 100% opacity.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/link.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<p><a class="link-opacity-10" href="#">Link opacity 10</a></p>
<p><a class="link-opacity-25" href="#">Link opacity 25</a></p>
<p><a class="link-opacity-50" href="#">Link opacity 50</a></p>
<p><a class="link-opacity-75" href="#">Link opacity 75</a></p>
<p><a class="link-opacity-100" href="#">Link opacity 100</a></p>
```

----------------------------------------

TITLE: Displaying Basic Figure with Caption in Bootstrap
DESCRIPTION: This snippet demonstrates how to use the .figure, .figure-img, and .figure-caption classes to create a basic figure with a caption in Bootstrap. The .img-fluid class is used to make the image responsive.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/figures.mdx#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
<figure class="figure">
    <Placeholder width="400" height="300" class="figure-img img-fluid rounded" />
    <figcaption class="figure-caption">A caption for the above image.</figcaption>
  </figure>
```

----------------------------------------

TITLE: Implementing Between Breakpoints Media Queries with Sass Mixins
DESCRIPTION: This code demonstrates how to use Bootstrap's Sass mixins for creating media queries that span multiple breakpoint widths. It shows an example of applying styles between medium and extra-large breakpoints.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/breakpoints.mdx#2025-04-23_snippet_7

LANGUAGE: scss
CODE:
```
@include media-breakpoint-between(md, xl) { ... }
```

----------------------------------------

TITLE: Modifying Existing Bootstrap Utilities
DESCRIPTION: Shows how to modify existing utilities using map-get and map-merge functions, adding an additional value to width utilities.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/api.mdx#2025-04-23_snippet_8

LANGUAGE: scss
CODE:
```
@import "bootstrap/scss/functions";
@import "bootstrap/scss/variables";
@import "bootstrap/scss/variables-dark";
@import "bootstrap/scss/maps";
@import "bootstrap/scss/mixins";
@import "bootstrap/scss/utilities";

$utilities: map-merge(
  $utilities,
  (
    "width": map-merge(
      map-get($utilities, "width"),
      (
        values: map-merge(
          map-get(map-get($utilities, "width"), "values"),
          (10: 10%),
        ),
      ),
    ),
  )
);

@import "bootstrap/scss/utilities/api";
```

----------------------------------------

TITLE: Implementing Dark Active Table Styling in HTML
DESCRIPTION: This code shows how to apply the 'table-active' class to highlight rows and cells within a dark-themed table.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/tables.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<table class="table table-dark">
  <thead>
    ...
  </thead>
  <tbody>
    <tr class="table-active">
      ...
    </tr>
    <tr>
      ...
    </tr>
    <tr>
      <th scope="row">3</th>
      <td>John</td>
      <td>Doe</td>
      <td class="table-active">@social</td>
    </tr>
  </tbody>
</table>
```

----------------------------------------

TITLE: Styling Horizontal Rules in HTML with Bootstrap Classes
DESCRIPTION: This HTML example demonstrates various ways to style horizontal rules (hr elements) using Bootstrap classes. It shows default, colored, and customized border styles.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/reboot.mdx#2025-04-23_snippet_7

LANGUAGE: html
CODE:
```
<hr>

<div class="text-success">
  <hr>
</div>

<hr class="border border-danger border-2 opacity-50">
<hr class="border border-primary border-3 opacity-75">
```

----------------------------------------

TITLE: Aligning Images with Float Classes in JSX
DESCRIPTION: This example demonstrates how to align images using Bootstrap's float classes. It creates two 200x200 rounded placeholders, one floating left and one floating right.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/images.mdx#2025-04-23_snippet_2

LANGUAGE: jsx
CODE:
```
<Placeholder width="200" height="200" class="rounded float-start" />
<Placeholder width="200" height="200" class="rounded float-end" />
```

----------------------------------------

TITLE: Horizontal Alignment with Bootstrap Grid
DESCRIPTION: Shows how to horizontally align columns using justify-content-* classes, including start, center, end, around, between, and evenly options.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/columns.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<div class="container text-center">
    <div class="row justify-content-start">
      <div class="col-4">
        One of two columns
      </div>
      <div class="col-4">
        One of two columns
      </div>
    </div>
</div>
```

----------------------------------------

TITLE: Customizing Bootstrap Sanitizer Allowlist
DESCRIPTION: Demonstrates how to modify the default allowList for Bootstrap's built-in sanitizer by adding custom elements and attributes validation.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/javascript.mdx#2025-04-23_snippet_8

LANGUAGE: javascript
CODE:
```
const myDefaultAllowList = bootstrap.Tooltip.Default.allowList

// To allow table elements
myDefaultAllowList.table = []

// To allow td elements and data-bs-option attributes on td elements
myDefaultAllowList.td = ['data-bs-option']

// You can push your custom regex to validate your attributes.
// Be careful about your regular expressions being too lax
const myCustomRegex = /^data-my-app-[\w-]+/
myDefaultAllowList['*'].push(myCustomRegex)
```

----------------------------------------

TITLE: Including Compiled CSS in HTML
DESCRIPTION: Shows how to include the compiled CSS file in an HTML document, ensuring the custom styles are applied to the web page.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/sass.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Custom Bootstrap</title>
    <link href="/css/custom.css" rel="stylesheet">
  </head>
  <body>
    <h1>Hello, world!</h1>
  </body>
</html>
```

----------------------------------------

TITLE: Sizing Form Controls in Bootstrap
DESCRIPTION: This example shows how to adjust the size of form controls using Bootstrap's sizing classes. It includes large, default, and small input sizes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/form-control.mdx#2025-04-23_snippet_1

LANGUAGE: HTML
CODE:
```
<input class="form-control form-control-lg" type="text" placeholder=".form-control-lg" aria-label=".form-control-lg example">
<input class="form-control" type="text" placeholder="Default input" aria-label="default input example">
<input class="form-control form-control-sm" type="text" placeholder=".form-control-sm" aria-label=".form-control-sm example">
```

----------------------------------------

TITLE: Creating Small-Sized Pagination in Bootstrap
DESCRIPTION: Implementation of smaller pagination controls using the .pagination-sm modifier class. Includes active state on the first page element with appropriate ARIA labeling.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/pagination.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<nav aria-label="...">
    <ul class="pagination pagination-sm">
      <li class="page-item active" aria-current="page">
        <span class="page-link">1</span>
      </li>
      <li class="page-item"><a class="page-link" href="#">2</a></li>
      <li class="page-item"><a class="page-link" href="#">3</a></li>
    </ul>
  </nav>
```

----------------------------------------

TITLE: Brand Name Usage Example Implementation
DESCRIPTION: HTML implementation showing correct and incorrect usage of the Bootstrap brand name with visual indicators and styling.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/about/brand.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<div class="bd-brand-logos d-sm-flex text-center border rounded-3 overflow-hidden w-100 mb-3">
  <div class="bd-brand-item w-100 px-2 py-5">
    <div class="h3">Bootstrap</div>
    <strong class="text-success">Correct</strong>
  </div>
  <div class="bd-brand-item w-100 px-2 py-5">
    <div class="h3 text-body-secondary">BootStrap</div>
    <strong class="text-danger">Incorrect</strong>
  </div>
</div>
```

----------------------------------------

TITLE: Defining Success Color Variables in CSS
DESCRIPTION: CSS variables for success colors, used for positive or successful actions and information.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/color.mdx#2025-04-23_snippet_7

LANGUAGE: CSS
CODE:
```
--bs-success
--bs-success-rgb
--bs-success-bg-subtle
--bs-success-border-subtle
--bs-success-text-emphasis
```

----------------------------------------

TITLE: Rendering Theme Color Examples in JSX
DESCRIPTION: Generates div elements for each theme color using the text-bg-* utility classes. The getData function is used to retrieve theme color data.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/color-background.mdx#2025-04-23_snippet_1

LANGUAGE: jsx
CODE:
```
<Example code={getData('theme-colors').map((themeColor) => `<div class="text-bg-${themeColor.name} p-3">${themeColor.title} with contrasting color</div>`)} />
```

----------------------------------------

TITLE: Importing Utility Functions for Bootstrap Color System
DESCRIPTION: Imports utility functions 'getData' from the data library and 'getSequence' from the utils library, which are likely used to manage color data and sequences in the Bootstrap color system.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/color.mdx#2025-04-23_snippet_0

LANGUAGE: JavaScript
CODE:
```
import { getData } from '@libs/data'
import { getSequence } from '@libs/utils'
```

----------------------------------------

TITLE: Demonstrating HTML Paragraph Element in Bootstrap
DESCRIPTION: This HTML example shows a basic paragraph element. In Bootstrap's Reboot, paragraphs have their margin-top removed and margin-bottom set to 1rem for consistent spacing.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/reboot.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<p>This is an example paragraph.</p>
```

----------------------------------------

TITLE: Implementing Toggle Buttons in Bootstrap 5
DESCRIPTION: New markup for toggle buttons using checkboxes or radios. The .btn-check class is added to the input, paired with .btn classes on the label.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/migration.mdx#2025-04-23_snippet_13

LANGUAGE: HTML
CODE:
```
<input type="checkbox" class="btn-check" id="btn-check" autocomplete="off">
<label class="btn btn-primary" for="btn-check">Single toggle</label>
```

----------------------------------------

TITLE: Using Text Opacity Utility Classes in Bootstrap HTML
DESCRIPTION: This snippet demonstrates the use of .text-opacity-* utility classes to adjust the opacity of text colors without inline styles.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/colors.mdx#2025-04-23_snippet_3

LANGUAGE: html
CODE:
```
<div class="text-primary">This is default primary text</div>
<div class="text-primary text-opacity-75">This is 75% opacity primary text</div>
<div class="text-primary text-opacity-50">This is 50% opacity primary text</div>
<div class="text-primary text-opacity-25">This is 25% opacity primary text</div>
```

----------------------------------------

TITLE: Styling Table Head with Light and Dark Themes
DESCRIPTION: These snippets show how to apply light and dark themes to the table head using the 'table-light' and 'table-dark' classes on the thead element.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/tables.mdx#2025-04-23_snippet_7

LANGUAGE: html
CODE:
```
<table class="table">
  <thead class="table-light">
    ...
  </thead>
  <tbody>
    ...
  </tbody>
</table>
```

LANGUAGE: html
CODE:
```
<table class="table">
  <thead class="table-dark">
    ...
  </thead>
  <tbody>
    ...
  </tbody>
</table>
```

----------------------------------------

TITLE: Replacing .btn-block with Utilities in Bootstrap 5
DESCRIPTION: Instead of using .btn-block, buttons are now wrapped with .d-grid and .gap-* utilities for spacing and responsive control.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/migration.mdx#2025-04-23_snippet_14

LANGUAGE: HTML
CODE:
```
<div class="d-grid gap-2">
  <button class="btn btn-primary" type="button">Button</button>
  <button class="btn btn-primary" type="button">Button</button>
</div>
```

----------------------------------------

TITLE: Defining Text Color Utility in Bootstrap CSS
DESCRIPTION: This CSS snippet demonstrates how the .text-primary utility is defined using CSS variables for color and opacity, allowing for dynamic color changes and transparency.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/colors.mdx#2025-04-23_snippet_1

LANGUAGE: css
CODE:
```
.text-primary {
  --bs-text-opacity: 1;
  color: rgba(var(--bs-primary-rgb), var(--bs-text-opacity)) !important;
}
```

----------------------------------------

TITLE: Defining Sass Variables for Miscellaneous Typography Elements in Bootstrap
DESCRIPTION: This snippet references Sass variables for miscellaneous typography elements in Bootstrap. These variables are defined in the '_variables.scss' file and cover various aspects of typography styling.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/typography.mdx#2025-04-23_snippet_15

LANGUAGE: SCSS
CODE:
```
<ScssDocs name="type-variables" file="scss/_variables.scss" />
```

----------------------------------------

TITLE: Disabled Element with Bootstrap Popover
DESCRIPTION: This HTML shows how to implement a popover on a disabled button by wrapping it in a span that triggers the popover. This is necessary since disabled elements cannot receive hover or click events.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/popovers.mdx#2025-04-23_snippet_9

LANGUAGE: html
CODE:
```
<span class="d-inline-block" tabindex="0" data-bs-toggle="popover" data-bs-trigger="hover focus" data-bs-content="Disabled popover">
    <button class="btn btn-primary" type="button" disabled>Disabled button</button>
  </span>
```

----------------------------------------

TITLE: Using Add and Subtract Functions in SCSS
DESCRIPTION: Demonstrates the use of add() and subtract() functions to avoid errors with unitless 0 values in calc() expressions.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/sass.mdx#2025-04-23_snippet_13

LANGUAGE: scss
CODE:
```
$border-radius: .25rem;
$border-width: 1px;

.element {
  // Output calc(.25rem - 1px) is valid
  border-radius: calc($border-radius - $border-width);
}

.element {
  // Output the same calc(.25rem - 1px) as above
  border-radius: subtract($border-radius, $border-width);
}
```

----------------------------------------

TITLE: Basic Float Utilities Example in HTML
DESCRIPTION: Demonstrates the basic float utility classes for floating elements left, right or disabling float across all viewport sizes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/float.mdx#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
<div class="float-start">Float start on all viewport sizes</div><br>
<div class="float-end">Float end on all viewport sizes</div><br>
<div class="float-none">Don't float on all viewport sizes</div>
```

----------------------------------------

TITLE: Defining Emphasis Color Variables in CSS
DESCRIPTION: CSS variables for emphasis colors, used for higher contrast text. Not applicable for backgrounds.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/color.mdx#2025-04-23_snippet_4

LANGUAGE: CSS
CODE:
```
--bs-emphasis-color
--bs-emphasis-color-rgb
```

----------------------------------------

TITLE: Creating Right-Aligned Blockquotes in Bootstrap
DESCRIPTION: Example of how to right-align a blockquote with attribution using the text-end utility class applied to the figure element.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/typography.mdx#2025-04-23_snippet_10

LANGUAGE: html
CODE:
```
<figure class="text-end">
    <blockquote class="blockquote">
      <p>A well-known quote, contained in a blockquote element.</p>
    </blockquote>
    <figcaption class="blockquote-footer">
      Someone famous in <cite title="Source Title">Source Title</cite>
    </figcaption>
  </figure>
```

----------------------------------------

TITLE: Basic Utility Definition in SCSS
DESCRIPTION: Example of defining opacity utilities using the Bootstrap utility API. Shows basic structure of utility definition with property and values.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/api.mdx#2025-04-23_snippet_0

LANGUAGE: scss
CODE:
```
$utilities: (
  "opacity": (
    property: opacity,
    values: (
      0: 0,
      25: .25,
      50: .5,
      75: .75,
      100: 1,
    )
  )
);
```

----------------------------------------

TITLE: Installing Bootstrap Sass via NuGet
DESCRIPTION: PowerShell command to install Bootstrap Sass using NuGet. This is an alternative to the CSS package, providing Sass source files for more customization in .NET projects.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/download.mdx#2025-04-23_snippet_10

LANGUAGE: powershell
CODE:
```
Install-Package bootstrap.sass
```

----------------------------------------

TITLE: Defining Sass Variables for Image Thumbnails
DESCRIPTION: This SCSS snippet references the location of Sass variables used for image thumbnails in Bootstrap. These variables are defined in the _variables.scss file.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/images.mdx#2025-04-23_snippet_6

LANGUAGE: scss
CODE:
```
<ScssDocs name="thumbnail-variables" file="scss/_variables.scss" />
```

----------------------------------------

TITLE: Handling Bootstrap Collapse Events
DESCRIPTION: Example of attaching an event listener to handle collapse state changes. Shows how to listen for the hidden.bs.collapse event.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/accordion.mdx#2025-04-23_snippet_5

LANGUAGE: javascript
CODE:
```
const myCollapsible = document.getElementById('myCollapsible')
myCollapsible.addEventListener('hidden.bs.collapse', event => {
  // do something...
})
```

----------------------------------------

TITLE: Adjusting Placeholder Width in Bootstrap
DESCRIPTION: Demonstrates three different methods for controlling placeholder width: using grid column classes, width utilities, or inline styles.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/placeholders.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<span class="placeholder col-6"></span>
<span class="placeholder w-75"></span>
<span class="placeholder" style="width: 25%;"></span>
```

----------------------------------------

TITLE: Adding Labels to Progress Bars in HTML
DESCRIPTION: This example shows how to include text labels within progress bars for better user feedback.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/progress.mdx#2025-04-23_snippet_3

LANGUAGE: HTML
CODE:
```
<div class="progress" role="progressbar" aria-label="Example with label" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">
    <div class="progress-bar" style="width: 25%">25%</div>
  </div>
```

----------------------------------------

TITLE: Demonstrating Inline Display in Bootstrap
DESCRIPTION: This snippet shows how to use the d-inline utility class to display elements inline with text background colors.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/display.mdx#2025-04-23_snippet_0

LANGUAGE: HTML
CODE:
```
<div class="d-inline p-2 text-bg-primary">d-inline</div>
<div class="d-inline p-2 text-bg-dark">d-inline</div>
```

----------------------------------------

TITLE: Responsive Sticky Bottom Variations in Bootstrap
DESCRIPTION: Shows how to use responsive variations of the sticky-bottom utility for different viewport sizes from SM to XXL.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/position.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<div class="sticky-sm-bottom">Stick to the bottom on viewports sized SM (small) or wider</div>
<div class="sticky-md-bottom">Stick to the bottom on viewports sized MD (medium) or wider</div>
<div class="sticky-lg-bottom">Stick to the bottom on viewports sized LG (large) or wider</div>
<div class="sticky-xl-bottom">Stick to the bottom on viewports sized XL (extra-large) or wider</div>
<div class="sticky-xxl-bottom">Stick to the bottom on viewports sized XXL (extra-extra-large) or wider</div>
```

----------------------------------------

TITLE: CSS Variable Utility Definition
DESCRIPTION: Example of generating CSS variable-based utilities with custom variable naming.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/api.mdx#2025-04-23_snippet_3

LANGUAGE: scss
CODE:
```
$utilities: (
  "text-opacity": (
    css-var: true,
    css-variable-name: text-alpha,
    class: text-opacity,
    values: (
      25: .25,
      50: .5,
      75: .75,
      100: 1
    )
  ),
);
```

----------------------------------------

TITLE: Customizing Bootstrap Grid with Inline Styles and Classes
DESCRIPTION: Demonstrates how to extend Bootstrap's default grid system by combining inline styles for custom column count and gap size with predefined grid classes. Shows modification of --bs-columns and --bs-gap CSS variables.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/css-grid.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<div class="grid text-center" style="--bs-columns: 18; --bs-gap: .5rem;">
    <div style="grid-column: span 14;">14 columns</div>
    <div class="g-col-4">.g-col-4</div>
  </div>
```

----------------------------------------

TITLE: Focus Ring Utilities SCSS
DESCRIPTION: Defines the SCSS for generating focus ring utility classes with different colors.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/focus-ring.mdx#2025-04-23_snippet_5

LANGUAGE: scss
CODE:
```
"focus-ring": (
  css-var: true,
  css-variable-name: focus-ring-color,
  class: focus-ring,
  values: map-loop($theme-colors, rgba-css-var, "$key", 0.25)
),
```

----------------------------------------

TITLE: Creating Disabled Buttons in Bootstrap
DESCRIPTION: Examples of disabled buttons using the disabled attribute for standard and outline button variants.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/buttons.mdx#2025-04-23_snippet_7

LANGUAGE: html
CODE:
```
<button type="button" class="btn btn-primary" disabled>Primary button</button>
<button type="button" class="btn btn-secondary" disabled>Button</button>
<button type="button" class="btn btn-outline-primary" disabled>Primary button</button>
<button type="button" class="btn btn-outline-secondary" disabled>Button</button>
```

----------------------------------------

TITLE: Adding Bootstrap to Ruby Projects via Bundler
DESCRIPTION: Ruby code snippet to add Bootstrap to a Ruby project's Gemfile. This method is recommended for Ruby applications using Bundler for dependency management.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/download.mdx#2025-04-23_snippet_6

LANGUAGE: ruby
CODE:
```
gem 'bootstrap', '~> [[config:current_ruby_version]]'
```

----------------------------------------

TITLE: Bootstrap Navbar with Container
DESCRIPTION: Shows how to wrap a navbar in containers for different responsive layouts and centered positioning.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navbar.mdx#2025-04-23_snippet_10

LANGUAGE: HTML
CODE:
```
<div class="container">
    <nav class="navbar navbar-expand-lg bg-body-tertiary">
      <div class="container-fluid">
        <a class="navbar-brand" href="#">Navbar</a>
      </div>
    </nav>
  </div>
```

----------------------------------------

TITLE: Rendering Additional Icons List in JSX
DESCRIPTION: Maps through additional icon libraries data to render a list of links to alternative icon set websites.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/extend/icons.mdx#2025-04-23_snippet_2

LANGUAGE: jsx
CODE:
```
{getData('icons').more.map((icon) => {
  return (
    <li><a href={icon.website}>{icon.name}</a></li>
  )
})}
```

----------------------------------------

TITLE: Modifying Bootstrap Sass Color Map
DESCRIPTION: Shows how to modify existing colors in Bootstrap's theme-colors Sass map by overriding individual color variables.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/sass.mdx#2025-04-23_snippet_6

LANGUAGE: scss
CODE:
```
$primary: #0074d9;
$danger: #ff4136;

$theme-colors: (
  "primary": $primary,
  "danger": $danger
);
```

----------------------------------------

TITLE: Defining Primary Color Variables in CSS
DESCRIPTION: CSS variables for primary colors, used for hyperlinks, focus styles, and component and form active states.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/color.mdx#2025-04-23_snippet_6

LANGUAGE: CSS
CODE:
```
--bs-primary
--bs-primary-rgb
--bs-primary-bg-subtle
--bs-primary-border-subtle
--bs-primary-text-emphasis
```

----------------------------------------

TITLE: CSS Root Variables Implementation
DESCRIPTION: Global CSS variables defined at the :root level for controlling body styles and component customization.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/migration.mdx#2025-04-23_snippet_6

LANGUAGE: css
CODE:
```
:root {
  --bs-body-color: #212529;
  --bs-body-bg: #fff;
}
```

----------------------------------------

TITLE: Basic Font Size Scaling with RFS Mixin in SCSS
DESCRIPTION: Demonstrates the basic usage of RFS font-size mixin to create responsive typography that scales based on viewport width.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/rfs.mdx#2025-04-23_snippet_0

LANGUAGE: scss
CODE:
```
.title {
  @include font-size(4rem);
}
```

LANGUAGE: css
CODE:
```
.title {
  font-size: calc(1.525rem + 3.3vw);
}

@media (min-width: 1200px) {
  .title {
    font-size: 4rem;
  }
}
```

----------------------------------------

TITLE: Implementing Outlined Toggle Buttons in Bootstrap
DESCRIPTION: Examples of outlined toggle buttons using various button styles including primary, secondary, success, and danger variants.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/forms/checks-radios.mdx#2025-04-23_snippet_15

LANGUAGE: HTML
CODE:
```
<input type="checkbox" class="btn-check" id="btn-check-outlined" autocomplete="off">
<label class="btn btn-outline-primary" for="btn-check-outlined">Single toggle</label><br>

<input type="checkbox" class="btn-check" id="btn-check-2-outlined" checked autocomplete="off">
<label class="btn btn-outline-secondary" for="btn-check-2-outlined">Checked</label><br>

<input type="radio" class="btn-check" name="options-outlined" id="success-outlined" autocomplete="off" checked>
<label class="btn btn-outline-success" for="success-outlined">Checked success radio</label>

<input type="radio" class="btn-check" name="options-outlined" id="danger-outlined" autocomplete="off">
<label class="btn btn-outline-danger" for="danger-outlined">Danger radio</label>
```

----------------------------------------

TITLE: Text Decoration Utility Definition
DESCRIPTION: Demonstrates defining text decoration utilities with multiple simple values without a map structure.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/api.mdx#2025-04-23_snippet_1

LANGUAGE: scss
CODE:
```
$utilities: (
  "text-decoration": (
    property: text-decoration,
    values: none underline line-through
  )
);
```

----------------------------------------

TITLE: Creating Basic Blockquotes in Bootstrap
DESCRIPTION: Basic implementation of a blockquote in Bootstrap using the blockquote class to quote blocks of content from another source.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/typography.mdx#2025-04-23_snippet_7

LANGUAGE: html
CODE:
```
<blockquote class="blockquote">
    <p>A well-known quote, contained in a blockquote element.</p>
  </blockquote>
```

----------------------------------------

TITLE: No Divider Breadcrumb
DESCRIPTION: Example of breadcrumb without dividers by setting empty CSS custom property.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/breadcrumb.mdx#2025-04-23_snippet_5

LANGUAGE: html
CODE:
```
<nav style="--bs-breadcrumb-divider: '';" aria-label="breadcrumb">
    <ol class="breadcrumb">
      <li class="breadcrumb-item"><a href="#">Home</a></li>
      <li class="breadcrumb-item active" aria-current="page">Library</li>
    </ol>
  </nav>
```

----------------------------------------

TITLE: Sass Divider Configuration
DESCRIPTION: SCSS configuration for custom breadcrumb divider using the quote function.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/breadcrumb.mdx#2025-04-23_snippet_2

LANGUAGE: scss
CODE:
```
$breadcrumb-divider: quote(">");
```

----------------------------------------

TITLE: Implementing Callout Component Styles with SCSS
DESCRIPTION: SCSS implementation showing the base callout class and its modifier classes for different variants (info, warning, danger).
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/components.mdx#2025-04-23_snippet_1

LANGUAGE: scss
CODE:
```
// Base class
.callout {}

// Modifier classes
.callout-info {}
.callout-warning {}
.callout-danger {}
```

----------------------------------------

TITLE: Defining Negative Margin Utility in SCSS
DESCRIPTION: This SCSS snippet demonstrates how to define a negative margin utility class, specifically for top margin.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/spacing.mdx#2025-04-23_snippet_2

LANGUAGE: scss
CODE:
```
.mt-n1 {
  margin-top: -0.25rem !important;
}
```

----------------------------------------

TITLE: Project Directory Structure
DESCRIPTION: Shows the expected project directory structure after setup.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/webpack.mdx#2025-04-23_snippet_5

LANGUAGE: text
CODE:
```
my-project/
├── src/
│   ├── js/
│   │   └── main.js
│   ├── scss/
│   │   └── styles.scss
│   └── index.html
├── package-lock.json
├── package.json
└── webpack.config.js
```

----------------------------------------

TITLE: Responsive Ratio Implementation Example
DESCRIPTION: HTML implementation of the responsive ratio that changes from 4:3 to 2:1 at medium breakpoint.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/ratio.mdx#2025-04-23_snippet_4

LANGUAGE: html
CODE:
```
<div class="ratio ratio-4x3">
    <div>4x3, then 2x1</div>
  </div>
```

----------------------------------------

TITLE: Including RTL CSS in HTML
DESCRIPTION: This snippet shows how to include the RTL version of Bootstrap's CSS in an HTML file.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/rtl.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<link rel="stylesheet" href="[[config:cdn.css_rtl]]" integrity="[[config:cdn.css_rtl_hash]]" crossorigin="anonymous">
```

----------------------------------------

TITLE: Configuring Dropdown Position with Offset and Reference in Bootstrap
DESCRIPTION: This example shows how to change the position of dropdown menus using data-bs-offset and data-bs-reference attributes. The first dropdown uses an offset of 10,20 pixels, while the second uses the parent element as a reference point for positioning.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/dropdowns.mdx#2025-04-23_snippet_20

LANGUAGE: html
CODE:
```
<div class="d-flex">
    <div class="dropdown me-1">
      <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false" data-bs-offset="10,20">
        Offset
      </button>
      <ul class="dropdown-menu">
        <li><a class="dropdown-item" href="#">Action</a></li>
        <li><a class="dropdown-item" href="#">Another action</a></li>
        <li><a class="dropdown-item" href="#">Something else here</a></li>
      </ul>
    </div>
    <div class="btn-group">
      <button type="button" class="btn btn-secondary">Reference</button>
      <button type="button" class="btn btn-secondary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false" data-bs-reference="parent">
        <span class="visually-hidden">Toggle Dropdown</span>
      </button>
      <ul class="dropdown-menu">
        <li><a class="dropdown-item" href="#">Action</a></li>
        <li><a class="dropdown-item" href="#">Another action</a></li>
        <li><a class="dropdown-item" href="#">Something else here</a></li>
        <li><hr class="dropdown-divider"></li>
        <li><a class="dropdown-item" href="#">Separated link</a></li>
      </ul>
    </div>
  </div>
```

----------------------------------------

TITLE: Setting CSS Grid Configuration in Sass
DESCRIPTION: Configuration options for enabling experimental CSS Grid support by disabling default grid classes and enabling CSS Grid functionality.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/migration.mdx#2025-04-23_snippet_4

LANGUAGE: scss
CODE:
```
$enable-grid-classes: false
$enable-cssgrid: true
```

----------------------------------------

TITLE: Custom Order Utility Classes in SCSS
DESCRIPTION: SCSS code showing how to extend Bootstrap's order utilities by adding new order values through the utilities map.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/columns.mdx#2025-04-23_snippet_3

LANGUAGE: scss
CODE:
```
$utilities: map-merge(
  $utilities,
  (
    "order": map-merge(
      map-get($utilities, "order"),
      (
        values: map-merge(
          map-get(map-get($utilities, "order"), "values"),
          (
            6: 6,
            last: 7
          )
        ),
      ),
    ),
  )
);
```

----------------------------------------

TITLE: Vertical Rule in Flex Layout
DESCRIPTION: Example showing vertical rule scaling within a flex container with fixed height.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/vertical-rule.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<div class="d-flex" style="height: 200px;">
    <div class="vr"></div>
  </div>
```

----------------------------------------

TITLE: Custom Ratio Implementation
DESCRIPTION: Example of creating a custom 2:1 aspect ratio using CSS custom properties.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/ratio.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<div class="ratio" style="--bs-aspect-ratio: 50%;">
    <div>2x1</div>
  </div>
```

----------------------------------------

TITLE: Handling Bootstrap Events with jQuery
DESCRIPTION: Demonstrates how to listen to Bootstrap events using jQuery's event system.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/javascript.mdx#2025-04-23_snippet_12

LANGUAGE: javascript
CODE:
```
$('#myTab a').on('shown.bs.tab', () => {
  // do something...
})
```

----------------------------------------

TITLE: Building Responsive Navigation with Flexbox Utilities in Bootstrap
DESCRIPTION: Creates responsive navigation that adapts to different viewport sizes using flexbox utilities. The navigation stacks vertically on small screens and becomes horizontal with equal-width items on larger screens.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/navs-tabs.mdx#2025-04-23_snippet_13

LANGUAGE: html
CODE:
```
<nav class="nav nav-pills flex-column flex-sm-row">
    <a class="flex-sm-fill text-sm-center nav-link active" aria-current="page" href="#">Active</a>
    <a class="flex-sm-fill text-sm-center nav-link" href="#">Longer nav link</a>
    <a class="flex-sm-fill text-sm-center nav-link" href="#">Link</a>
    <a class="flex-sm-fill text-sm-center nav-link disabled" aria-disabled="true">Disabled</a>
  </nav>
```

----------------------------------------

TITLE: Resetting Text Color in HTML
DESCRIPTION: This example shows how to use the text-reset class to reset a text or link's color to inherit from its parent.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/text.mdx#2025-04-23_snippet_8

LANGUAGE: HTML
CODE:
```
<p class="text-body-secondary">
    Secondary body text with a <a href="#" class="text-reset">reset link</a>.
  </p>
```

----------------------------------------

TITLE: Adding Event Listener to Bootstrap Carousel
DESCRIPTION: This snippet demonstrates how to add an event listener to a Bootstrap Carousel. It listens for the 'slide.bs.carousel' event, which fires immediately when the slide instance method is invoked.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/carousel.mdx#2025-04-23_snippet_11

LANGUAGE: js
CODE:
```
const myCarousel = document.getElementById('myCarousel')

myCarousel.addEventListener('slide.bs.carousel', event => {
  // do something...
})
```

----------------------------------------

TITLE: Responsive Ratio with Media Query
DESCRIPTION: SCSS example showing how to modify aspect ratio across breakpoints, changing from 4:3 to 2:1 at medium breakpoint.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/ratio.mdx#2025-04-23_snippet_3

LANGUAGE: scss
CODE:
```
.ratio-4x3 {
  @include media-breakpoint-up(md) {
    --bs-aspect-ratio: 50%; // 2x1
  }
}
```

----------------------------------------

TITLE: CSS Display Property Example
DESCRIPTION: Example of CSS display property values used in Bootstrap's display utilities for responsive toggling.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/utilities.mdx#2025-04-23_snippet_0

LANGUAGE: CSS
CODE:
```
display: flex
```

----------------------------------------

TITLE: Creating Unstyled Lists in Bootstrap
DESCRIPTION: Demonstrates how to remove the default bullet styling and left margin from list items using the list-unstyled class. Note that it only affects immediate children, not nested lists.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/typography.mdx#2025-04-23_snippet_11

LANGUAGE: html
CODE:
```
<ul class="list-unstyled">
    <li>This is a list.</li>
    <li>It appears completely unstyled.</li>
    <li>Structurally, it's still a list.</li>
    <li>However, this style only applies to immediate child elements.</li>
    <li>Nested lists:
      <ul>
        <li>are unaffected by this style</li>
        <li>will still show a bullet</li>
        <li>and have appropriate left margin</li>
      </ul>
    </li>
    <li>This may still come in handy in some situations.</li>
  </ul>
```

----------------------------------------

TITLE: Rendering Team Member List
DESCRIPTION: Creates a list group of team members using Bootstrap classes. Each member is displayed with their GitHub avatar, name, and username in a clickable element that links to their GitHub profile.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/about/team.mdx#2025-04-23_snippet_1

LANGUAGE: JSX
CODE:
```
<div class="list-group mb-3">
  {getData('core-team').map((member) => {
    return (
      <a class="list-group-item list-group-item-action d-flex align-items-center" href={`https://github.com/${member.user}`}>
        <img src={`https://github.com/${member.user}.png`} alt={`@${member.user}`} width="32" height="32" class="rounded me-2" loading="lazy"/>
        <span>
          <strong>{member.name}</strong> @{member.user}
        </span>
      </a>
    )
  })}
</div>
```

----------------------------------------

TITLE: Enabling Responsive Utilities in Bootstrap
DESCRIPTION: Demonstrates how to enable responsive classes for existing utilities that are not responsive by default, using border utilities as an example.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/api.mdx#2025-04-23_snippet_9

LANGUAGE: scss
CODE:
```
@import "bootstrap/scss/functions";
@import "bootstrap/scss/variables";
@import "bootstrap/scss/variables-dark";
@import "bootstrap/scss/maps";
@import "bootstrap/scss/mixins";
@import "bootstrap/scss/utilities";

$utilities: map-merge(
  $utilities,
  (
    "border": map-merge(
      map-get($utilities, "border"),
      ( responsive: true ),
    ),
  )
);

@import "bootstrap/scss/utilities/api";
```

LANGUAGE: css
CODE:
```
.border { ... }
.border-0 { ... }

@media (min-width: 576px) {
  .border-sm { ... }
  .border-sm-0 { ... }
}

@media (min-width: 768px) {
  .border-md { ... }
  .border-md-0 { ... }
}

@media (min-width: 992px) {
  .border-lg { ... }
  .border-lg-0 { ... }
}

@media (min-width: 1200px) {
  .border-xl { ... }
  .border-xl-0 { ... }
}

@media (min-width: 1400px) {
  .border-xxl { ... }
  .border-xxl-0 { ... }
}
```

----------------------------------------

TITLE: Defining Visibility Classes in SCSS
DESCRIPTION: Shows the SCSS definitions for the .visible and .invisible classes. These classes use the visibility property with !important to ensure they take precedence.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/visibility.mdx#2025-04-23_snippet_1

LANGUAGE: scss
CODE:
```
// Class
.visible {
  visibility: visible !important;
}
.invisible {
  visibility: hidden !important;
}
```

----------------------------------------

TITLE: Z-index Scale for Overlapping Component Elements
DESCRIPTION: Demonstrates the z-index scale (0-3) used within components that have overlapping elements to manage element states like hover, active, and focus.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/extend/approach.mdx#2025-04-23_snippet_1

LANGUAGE: css
CODE:
```
/* z-index scale within components */
0 /* default (initial) */
1 /* :hover */
2 /* :active/.active */
3 /* :focus */
```

----------------------------------------

TITLE: No Divider Sass Configuration
DESCRIPTION: SCSS configuration to remove breadcrumb dividers.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/breadcrumb.mdx#2025-04-23_snippet_6

LANGUAGE: scss
CODE:
```
$breadcrumb-divider: none;
```

----------------------------------------

TITLE: Creating Disabled Button Links in Bootstrap
DESCRIPTION: Examples of implementing disabled buttons using anchor tags with the .disabled class and proper accessibility attributes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/buttons.mdx#2025-04-23_snippet_8

LANGUAGE: html
CODE:
```
<a class="btn btn-primary disabled" role="button" aria-disabled="true">Primary link</a>
<a class="btn btn-secondary disabled" role="button" aria-disabled="true">Link</a>
```

----------------------------------------

TITLE: Styling Address Elements in HTML with Bootstrap
DESCRIPTION: Demonstrates the use of the <address> element for presenting contact information, with Bootstrap styling for improved readability and layout.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/reboot.mdx#2025-04-23_snippet_16

LANGUAGE: html
CODE:
```
<address>
    <strong>ACME Corporation</strong><br/>
    1123 Fictional St,<br/>
    San Francisco, CA 94103<br/>
    <abbr title="Phone">P:</abbr> (123) 456-7890
  </address>

  <address>
    <strong>Full Name</strong><br/>
    <a href="mailto:first.last@example.com">first.last@example.com</a>
  </address>
```

----------------------------------------

TITLE: Customizing Focus Ring Offset and Blur with CSS Variables in HTML
DESCRIPTION: Demonstrates how to adjust the focus ring's offset and blur using CSS variables.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/focus-ring.mdx#2025-04-23_snippet_2

LANGUAGE: html
CODE:
```
<a href="#" class="d-inline-flex focus-ring py-1 px-2 text-decoration-none border rounded-2" style="--bs-focus-ring-x: 10px; --bs-focus-ring-y: 10px; --bs-focus-ring-blur: 4px">
    Blurry offset focus ring
  </a>
```

----------------------------------------

TITLE: Using Badge Utilities in HTML
DESCRIPTION: The new approach to styling badges using background utilities instead of dedicated badge color classes.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/migration.mdx#2025-04-23_snippet_12

LANGUAGE: html
CODE:
```
<span class="badge text-bg-danger">Breaking</span>
```

LANGUAGE: html
CODE:
```
<span class="badge bg-primary">...</span>
```

LANGUAGE: html
CODE:
```
<span class="badge rounded-pill">...</span>
```

----------------------------------------

TITLE: Removing Colors from Bootstrap Sass Map
DESCRIPTION: Shows how to remove specific colors from Bootstrap's theme-colors Sass map using the map-remove function.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/sass.mdx#2025-04-23_snippet_8

LANGUAGE: scss
CODE:
```
// Required
@import "../node_modules/bootstrap/scss/functions";
@import "../node_modules/bootstrap/scss/variables";
@import "../node_modules/bootstrap/scss/variables-dark";

$theme-colors: map-remove($theme-colors, "info", "light", "dark");

@import "../node_modules/bootstrap/scss/maps";
@import "../node_modules/bootstrap/scss/mixins";
@import "../node_modules/bootstrap/scss/root";

// Optional
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";
// etc
```

----------------------------------------

TITLE: Markdown Structure for Bootstrap Best Practices
DESCRIPTION: Front matter and markdown structure defining a best practices guide for Bootstrap development, including section headers and callout components.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/best-practices.mdx#2025-04-23_snippet_0

LANGUAGE: markdown
CODE:
```
---
title: Best practices
description: Learn about some of the best practices we've gathered from years of working on and using Bootstrap.
---

We've designed and developed Bootstrap to work in a number of environments. Here are some of the best practices we've gathered from years of working on and using it ourselves.

<Callout>
**Heads up!** This copy is a work in progress.
</Callout>

### General outline

- Working with CSS
- Working with Sass files
- Building new CSS components
- Working with flexbox
- Ask in [our GitHub Discussions](https://github.com/twbs/bootstrap/discussions)
```

----------------------------------------

TITLE: Using the HTML5 hidden Attribute
DESCRIPTION: Demonstrates the use of the HTML5 [hidden] attribute to hide elements. This attribute is styled as display: none !important in Bootstrap for consistent behavior across browsers.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/reboot.mdx#2025-04-23_snippet_18

LANGUAGE: html
CODE:
```
<input type="text" hidden>
```

----------------------------------------

TITLE: Using Overflow Hidden for Horizontal Gutters in Bootstrap
DESCRIPTION: This snippet shows an alternative solution for implementing horizontal gutters by adding a wrapper with the .overflow-hidden class around the .row element.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/gutters.mdx#2025-04-23_snippet_1

LANGUAGE: html
CODE:
```
<div class="container overflow-hidden text-center">
    <div class="row gx-5">
      <div class="col">
        <div class="p-3">Custom column padding</div>
      </div>
      <div class="col">
        <div class="p-3">Custom column padding</div>
      </div>
    </div>
  </div>
```

----------------------------------------

TITLE: Implementing Synchronous and Asynchronous Unit Tests with Jasmine in Bootstrap
DESCRIPTION: Example code demonstrating both synchronous and asynchronous test patterns for Bootstrap components. The synchronous example tests the getInstance method of the Tab component, while the asynchronous example tests tooltip functionality with a Promise-based approach. Both examples follow Bootstrap's testing conventions and demonstrate proper use of Jasmine's assertion patterns.
SOURCE: https://github.com/twbs/bootstrap/blob/main/js/tests/README.md#2025-04-23_snippet_0

LANGUAGE: javascript
CODE:
```
// Synchronous test
describe('getInstance', () => {
  it('should return null if there is no instance', () => {
    // Make assertion
    expect(Tab.getInstance(fixtureEl)).toBeNull()
  })

  it('should return this instance', () => {
    fixtureEl.innerHTML = '<div></div>'

    const divEl = fixtureEl.querySelector('div')
    const tab = new Tab(divEl)

    // Make assertion
    expect(Tab.getInstance(divEl)).toEqual(tab)
  })
})

// Asynchronous test
it('should show a tooltip without the animation', () => {
  return new Promise(resolve => {
    fixtureEl.innerHTML = '<a href="#" rel="tooltip" title="Another tooltip"></a>'

    const tooltipEl = fixtureEl.querySelector('a')
    const tooltip = new Tooltip(tooltipEl, {
      animation: false
    })

    tooltipEl.addEventListener('shown.bs.tooltip', () => {
      const tip = document.querySelector('.tooltip')

      expect(tip).not.toBeNull()
      expect(tip.classList.contains('fade')).toEqual(false)
      resolve()
    })

    tooltip.show()
  })
})
```

----------------------------------------

TITLE: Implementing HTML Headings in Bootstrap
DESCRIPTION: HTML code for implementing the six heading levels in Bootstrap. This snippet shows the basic markup for h1 through h6 elements with Bootstrap styling.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/typography.mdx#2025-04-23_snippet_0

LANGUAGE: html
CODE:
```
<h1>h1. Bootstrap heading</h1>
<h2>h2. Bootstrap heading</h2>
<h3>h3. Bootstrap heading</h3>
<h4>h4. Bootstrap heading</h4>
<h5>h5. Bootstrap heading</h5>
<h6>h6. Bootstrap heading</h6>
```

----------------------------------------

TITLE: Installing Build Tools
DESCRIPTION: Installs necessary build tools and loaders for processing Bootstrap's CSS and JS.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/webpack.mdx#2025-04-23_snippet_3

LANGUAGE: sh
CODE:
```
npm i --save-dev autoprefixer css-loader postcss-loader sass sass-loader style-loader
```

----------------------------------------

TITLE: SVG Divider Sass Configuration
DESCRIPTION: SCSS configuration for SVG breadcrumb divider using the escape-svg function.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/components/breadcrumb.mdx#2025-04-23_snippet_4

LANGUAGE: scss
CODE:
```
$breadcrumb-divider: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='8' height='8'><path d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='#{$breadcrumb-divider-color}'/></svg>");
```

----------------------------------------

TITLE: Customizing Bootstrap Build with New _maps.scss in SCSS
DESCRIPTION: Shows how to structure a custom Bootstrap CSS build, including the new _maps.scss file. This example demonstrates overriding variables and Sass maps before importing Bootstrap's default maps and other components.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/migration.mdx#2025-04-23_snippet_3

LANGUAGE: scss
CODE:
```
// Functions come first
@import "functions";

// Optional variable overrides here
$custom-color: #df711b;
$custom-theme-colors: (
  "custom": $custom-color
);

// Variables come next
@import "variables";

// Optional Sass map overrides here
$theme-colors: map-merge($theme-colors, $custom-theme-colors);

// Followed by our default maps
@import "maps";

// Rest of our imports
@import "mixins";
@import "utilities";
@import "root";
@import "reboot";
// etc
```

----------------------------------------

TITLE: Formatting Code Blocks in HTML with Bootstrap
DESCRIPTION: This HTML example demonstrates how to format multi-line code blocks using pre and code elements. It highlights the need to escape angle brackets in the code for correct display.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/content/reboot.mdx#2025-04-23_snippet_9

LANGUAGE: html
CODE:
```
<pre><code>&lt;p&gt;Sample text here...&lt;/p&gt;
&lt;p&gt;And another line of sample text here...&lt;/p&gt;
</code></pre>
```

----------------------------------------

TITLE: Importing Bootstrap Sass in styles.scss
DESCRIPTION: This SCSS code imports all of Bootstrap's source Sass into the project's main stylesheet.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/vite.mdx#2025-04-23_snippet_4

LANGUAGE: scss
CODE:
```
// Import all of Bootstrap's CSS
@import "bootstrap/scss/bootstrap";
```

----------------------------------------

TITLE: Cloning Bootstrap Repository with Git
DESCRIPTION: Command to clone the Bootstrap repository from GitHub to your local machine using Git.
SOURCE: https://github.com/twbs/bootstrap/blob/main/README.md#2025-04-23_snippet_0

LANGUAGE: bash
CODE:
```
git clone https://github.com/twbs/bootstrap.git
```

----------------------------------------

TITLE: Creating Project Files Structure
DESCRIPTION: Shell commands to create project directories and files.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/parcel.mdx#2025-04-23_snippet_3

LANGUAGE: shell
CODE:
```
mkdir {src,src/js,src/scss}
touch src/index.html src/js/main.js src/scss/styles.scss
```

----------------------------------------

TITLE: Using Custom Example Component in JSX
DESCRIPTION: This snippet demonstrates the use of a custom 'Example' component, likely part of Bootstrap's documentation system. It renders a div with a 'test' class containing some text.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/docsref.mdx#2025-04-23_snippet_4

LANGUAGE: JSX
CODE:
```
<Example code={`<div class="test">This is a test.</div>`} />
```

----------------------------------------

TITLE: Configuring Vite for Bootstrap Project
DESCRIPTION: This JavaScript configuration file sets up Vite for a Bootstrap project, including server settings and optional Sass deprecation warnings silencing.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/vite.mdx#2025-04-23_snippet_1

LANGUAGE: javascript
CODE:
```
import { resolve } from 'path'

export default {
  root: resolve(__dirname, 'src'),
  build: {
    outDir: '../dist'
  },
  server: {
    port: 8080
  },
  // Optional: Silence Sass deprecation warnings. See note below.
  css: {
     preprocessorOptions: {
        scss: {
          silenceDeprecations: [
            'import',
            'mixed-decls',
            'color-functions',
            'global-builtin',
          ],
        },
     },
  },
}
```

----------------------------------------

TITLE: Displaying Bootstrap Compiled File Structure
DESCRIPTION: Shows the directory structure of compiled Bootstrap files, including CSS and JS directories with various file types (standard, minified, RTL, and map files).
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/contents.mdx#2025-04-23_snippet_0

LANGUAGE: text
CODE:
```
bootstrap/
├── css/
│   ├── bootstrap-grid.css
│   ├── bootstrap-grid.css.map
│   ├── bootstrap-grid.min.css
│   ├── bootstrap-grid.min.css.map
│   ├── bootstrap-grid.rtl.css
│   ├── bootstrap-grid.rtl.css.map
│   ├── bootstrap-grid.rtl.min.css
│   ├── bootstrap-grid.rtl.min.css.map
│   ├── bootstrap-reboot.css
│   ├── bootstrap-reboot.css.map
│   ├── bootstrap-reboot.min.css
│   ├── bootstrap-reboot.min.css.map
│   ├── bootstrap-reboot.rtl.css
│   ├── bootstrap-reboot.rtl.css.map
│   ├── bootstrap-reboot.rtl.min.css
│   ├── bootstrap-reboot.rtl.min.css.map
│   ├── bootstrap-utilities.css
│   ├── bootstrap-utilities.css.map
│   ├── bootstrap-utilities.min.css
│   ├── bootstrap-utilities.min.css.map
│   ├── bootstrap-utilities.rtl.css
│   ├── bootstrap-utilities.rtl.css.map
│   ├── bootstrap-utilities.rtl.min.css
│   ├── bootstrap-utilities.rtl.min.css.map
│   ├── bootstrap.css
│   ├── bootstrap.css.map
│   ├── bootstrap.min.css
│   ├── bootstrap.min.css.map
│   ├── bootstrap.rtl.css
│   ├── bootstrap.rtl.css.map
│   ├── bootstrap.rtl.min.css
│   └── bootstrap.rtl.min.css.map
└── js/
    ├── bootstrap.bundle.js
    ├── bootstrap.bundle.js.map
    ├── bootstrap.bundle.min.js
    ├── bootstrap.bundle.min.js.map
    ├── bootstrap.esm.js
    ├── bootstrap.esm.js.map
    ├── bootstrap.esm.min.js
    ├── bootstrap.esm.min.js.map
    ├── bootstrap.js
    ├── bootstrap.js.map
    ├── bootstrap.min.js
    └── bootstrap.min.js.map
```

----------------------------------------

TITLE: Installing CSS Extract Plugin
DESCRIPTION: Command to install the mini-css-extract-plugin for separating CSS from the JavaScript bundle.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/webpack.mdx#2025-04-23_snippet_12

LANGUAGE: sh
CODE:
```
npm install --save-dev mini-css-extract-plugin
```

----------------------------------------

TITLE: Initializing NPM Project
DESCRIPTION: Creates a new project directory and initializes an NPM project with default settings.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/webpack.mdx#2025-04-23_snippet_0

LANGUAGE: sh
CODE:
```
mkdir my-project && cd my-project
npm init -y
```

----------------------------------------

TITLE: Customizing Bootstrap Global Options Using Sass Variables
DESCRIPTION: A reference table of Bootstrap's configurable Sass variables that control global CSS preferences. These variables can be overridden in your project to customize appearance and behavior, then recompiled with 'npm run test'.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/options.mdx#_snippet_0

LANGUAGE: scss
CODE:
```
$spacer: 1rem;
$enable-dark-mode: true;
$enable-rounded: true;
$enable-shadows: false;
$enable-gradients: false;
$enable-transitions: true;
$enable-reduced-motion: true;
$enable-grid-classes: true;
$enable-cssgrid: false;
$enable-container-classes: true;
$enable-caret: true;
$enable-button-pointers: true;
$enable-rfs: true;
$enable-validation-icons: true;
$enable-negative-margins: false;
$enable-deprecation-messages: true;
$enable-important-utilities: true;
$enable-smooth-scroll: true;
```

----------------------------------------

TITLE: Creating Project Structure with Bash Commands
DESCRIPTION: These bash commands create the necessary project structure for a Vite project with Bootstrap, including directories and files.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/vite.mdx#2025-04-23_snippet_0

LANGUAGE: bash
CODE:
```
mkdir my-project && cd my-project
npm init -y

npm i --save-dev vite

npm i --save bootstrap @popperjs/core

npm i --save-dev sass

mkdir {src,src/js,src/scss}
touch src/index.html src/js/main.js src/scss/styles.scss vite.config.js
```

----------------------------------------

TITLE: NPM Scripts Configuration
DESCRIPTION: NPM scripts for running development server and building production bundle.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/getting-started/webpack.mdx#2025-04-23_snippet_8

LANGUAGE: json
CODE:
```
{
  "scripts": {
    "start": "webpack serve",
    "build": "webpack build --mode=production",
    "test": "echo \"Error: no test specified\" && exit 1"
  }
}
```

----------------------------------------

TITLE: Compiled CSS for Max-width Media Queries
DESCRIPTION: This snippet demonstrates how the Sass mixins for max-width media queries compile into standard CSS media queries. It includes examples for different breakpoints, subtracting .02px from the breakpoint values.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/layout/breakpoints.mdx#2025-04-23_snippet_4

LANGUAGE: scss
CODE:
```
// `xs` returns only a ruleset and no media query
// ... { ... }

// `sm` applies to x-small devices (portrait phones, less than 576px)
@media (max-width: 575.98px) { ... }

// `md` applies to small devices (landscape phones, less than 768px)
@media (max-width: 767.98px) { ... }

// `lg` applies to medium devices (tablets, less than 992px)
@media (max-width: 991.98px) { ... }

// `xl` applies to large devices (desktops, less than 1200px)
@media (max-width: 1199.98px) { ... }

// `xxl` applies to x-large devices (large desktops, less than 1400px)
@media (max-width: 1399.98px) { ... }
```

----------------------------------------

TITLE: Defining Danger Color Variables in CSS
DESCRIPTION: CSS variables for danger colors, used for errors and dangerous actions.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/color.mdx#2025-04-23_snippet_8

LANGUAGE: CSS
CODE:
```
--bs-danger
--bs-danger-rgb
--bs-danger-bg-subtle
--bs-danger-border-subtle
--bs-danger-text-emphasis
```

----------------------------------------

TITLE: Root Focus Ring SCSS Variables
DESCRIPTION: Lists the SCSS variables used for defining the default focus ring styles at the root level.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/focus-ring.mdx#2025-04-23_snippet_3

LANGUAGE: scss
CODE:
```
--bs-focus-ring-width: #{$focus-ring-width};
--bs-focus-ring-opacity: #{$focus-ring-opacity};
--bs-focus-ring-color: #{$focus-ring-color};
```

----------------------------------------

TITLE: Defining Warning Color Variables in CSS
DESCRIPTION: CSS variables for warning colors, used for non-destructive warning messages.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/customize/color.mdx#2025-04-23_snippet_9

LANGUAGE: CSS
CODE:
```
--bs-warning
--bs-warning-rgb
--bs-warning-bg-subtle
--bs-warning-border-subtle
--bs-warning-text-emphasis
```

----------------------------------------

TITLE: Dynamic Float Classes Generation in JSX
DESCRIPTION: Generates a list of all supported float utility classes using breakpoint data to show available class variations.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/utilities/float.mdx#2025-04-23_snippet_2

LANGUAGE: JSX
CODE:
```
{getData('breakpoints').map((breakpoint) => {
  return (
    <Fragment>
      <li><code>.float{breakpoint.abbr}-start</code></li>
      <li><code>.float{breakpoint.abbr}-end</code></li>
      <li><code>.float{breakpoint.abbr}-none</code></li>
    </Fragment>
  )
})}
```

----------------------------------------

TITLE: Importing Data Function in JSX
DESCRIPTION: Imports the getData utility function used to retrieve icon library information.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/extend/icons.mdx#2025-04-23_snippet_0

LANGUAGE: jsx
CODE:
```
import { getData } from '@libs/data'
```

----------------------------------------

TITLE: Referencing SCSS Documentation Component
DESCRIPTION: This snippet uses a custom 'ScssDocs' component to reference SCSS documentation for a variable gradient. It points to the '_variables.scss' file, which likely contains Bootstrap's SCSS variables.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/docsref.mdx#2025-04-23_snippet_5

LANGUAGE: JSX
CODE:
```
<ScssDocs name="variable-gradient" file="scss/_variables.scss" />
```

----------------------------------------

TITLE: Rendering Preferred Icons List in JSX
DESCRIPTION: Maps through preferred icon libraries data to render a list of links to icon set websites.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/extend/icons.mdx#2025-04-23_snippet_1

LANGUAGE: jsx
CODE:
```
{getData('icons').preferred.map((icon) => {
  return (
    <li><a href={icon.website}>{icon.name}</a></li>
  )
})}
```

----------------------------------------

TITLE: Importing Data Function in JSX
DESCRIPTION: Imports the getData function from the @libs/data module. This function is likely used to retrieve theme color data for examples.
SOURCE: https://github.com/twbs/bootstrap/blob/main/site/src/content/docs/helpers/color-background.mdx#2025-04-23_snippet_0

LANGUAGE: jsx
CODE:
```
import { getData } from '@libs/data'
```