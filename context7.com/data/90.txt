TITLE: Listing Docker Containers using Go Docker Client
DESCRIPTION: Example code demonstrating how to list all Docker containers using the Docker Engine API client in Go. This is equivalent to running 'docker ps --all' from the command line. The code creates a new client, queries for all containers, and prints their ID, image name, and status.
SOURCE: https://github.com/moby/moby/blob/master/client/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
package main

import (
	"context"
	"fmt"

	"github.com/docker/docker/api/types/container"
	"github.com/docker/docker/client"
)

func main() {
	apiClient, err := client.NewClientWithOpts(client.FromEnv)
	if err != nil {
		panic(err)
	}
	defer apiClient.Close()

	containers, err := apiClient.ContainerList(context.Background(), container.ListOptions{All: true})
	if err != nil {
		panic(err)
	}

	for _, ctr := range containers {
		fmt.Printf("%s %s (status: %s)\n", ctr.ID, ctr.Image, ctr.Status)
	}
}
```

----------------------------------------

TITLE: Removing Docker Image with HTTP DELETE Request
DESCRIPTION: Sends a DELETE request to remove a Docker image from the filesystem. The response includes a list of untagged and deleted image layers.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_59

LANGUAGE: http
CODE:
```
DELETE /v1.24/images/test HTTP/1.1
```

----------------------------------------

TITLE: Initializing a New Docker Swarm
DESCRIPTION: POST request to /swarm/init endpoint to initialize a new swarm. Includes parameters for listen address, advertise address, and swarm specifications.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_96

LANGUAGE: HTTP
CODE:
```
POST /v1.24/swarm/init HTTP/1.1
Content-Type: application/json
Content-Length: 12345

{
  "ListenAddr": "0.0.0.0:2377",
  "AdvertiseAddr": "192.168.1.1:2377",
  "ForceNewCluster": false,
  "Spec": {
    "Orchestration": {},
    "Raft": {},
    "Dispatcher": {},
    "CAConfig": {}
  }
}
```

----------------------------------------

TITLE: Driver API Interface Methods
DESCRIPTION: Core API methods that must be implemented by libnetwork drivers for network and endpoint management. These methods handle creation, deletion, and management of networks and endpoints using unique identifiers.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/design.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
driver.Config
driver.CreateNetwork
driver.DeleteNetwork
driver.CreateEndpoint
driver.DeleteEndpoint
driver.Join
driver.Leave
```

----------------------------------------

TITLE: Testing HTTP Handlers with Go's Testing Package
DESCRIPTION: Unit test for the health check handler that verifies both the status code and response body. The test creates a request, records the response, and compares against expected values.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gorilla/mux/README.md#2025-04-10_snippet_20

LANGUAGE: go
CODE:
```
// endpoints_test.go
package main

import (
    "net/http"
    "net/http/httptest"
    "testing"
)

func TestHealthCheckHandler(t *testing.T) {
    // Create a request to pass to our handler. We don't have any query parameters for now, so we'll
    // pass 'nil' as the third parameter.
    req, err := http.NewRequest("GET", "/health", nil)
    if err != nil {
        t.Fatal(err)
    }

    // We create a ResponseRecorder (which satisfies http.ResponseWriter) to record the response.
    rr := httptest.NewRecorder()
    handler := http.HandlerFunc(HealthCheckHandler)

    // Our handlers satisfy http.Handler, so we can call their ServeHTTP method
    // directly and pass in our Request and ResponseRecorder.
    handler.ServeHTTP(rr, req)

    // Check the status code is what we expect.
    if status := rr.Code; status != http.StatusOK {
        t.Errorf("handler returned wrong status code: got %v want %v",
            status, http.StatusOK)
    }

    // Check the response body is what we expect.
    expected := `{"alive": true}`
    if rr.Body.String() != expected {
        t.Errorf("handler returned unexpected body: got %v want %v",
            rr.Body.String(), expected)
    }
}
```

----------------------------------------

TITLE: Inspecting Container Details with Docker API
DESCRIPTION: Makes an HTTP GET request to retrieve detailed information about a specific container by its ID or name. This endpoint provides comprehensive data about the container's configuration, state, network settings, and mounted volumes.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_12

LANGUAGE: HTTP
CODE:
```
GET /v1.24/containers/4fa6e0f0c678/json HTTP/1.1
```

----------------------------------------

TITLE: Connect Container to Network API Request/Response
DESCRIPTION: POST endpoint to connect a container to a network with optional endpoint configuration including IP address settings.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_85

LANGUAGE: json
CODE:
```
POST /v1.24/networks/22be93d5babb089c5aab8dbc369042fad48ff791584ca2da2100db837a1c7c30/connect HTTP/1.1
Content-Type: application/json
Content-Length: 12345

{
  "Container":"3613f73ba0e4",
  "EndpointConfig": {
    "IPAMConfig": {
        "IPv4Address":"172.24.56.89",
        "IPv6Address":"2001:db8::5689"
    }
  }
}
```

----------------------------------------

TITLE: Defining Routes with Variables in Go using Gorilla Mux
DESCRIPTION: Shows how to define routes with variables, including regular expression patterns for more specific matching.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gorilla/mux/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
r := mux.NewRouter()
r.HandleFunc("/products/{key}", ProductHandler)
r.HandleFunc("/articles/{category}/", ArticlesCategoryHandler)
r.HandleFunc("/articles/{category}/{id:[0-9]+}", ArticleHandler)
```

----------------------------------------

TITLE: Loading Images from Tarball via HTTP POST Request
DESCRIPTION: This snippet shows how to load a set of images and tags into a Docker repository using a POST request to the /images/load endpoint. It includes the request format with Content-Type and an example of the chunked response for both verbose and quiet modes.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_71

LANGUAGE: http
CODE:
```
POST /v1.24/images/load
Content-Type: application/x-tar
Content-Length: 12345

Tarball in body
```

----------------------------------------

TITLE: Building and Running Development Container
DESCRIPTION: Use make to build a development environment image and run it in a container, binding the current directory.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/set-up-dev-env.md#2025-04-10_snippet_7

LANGUAGE: bash
CODE:
```
$ make BIND_DIR=. shell
```

----------------------------------------

TITLE: Running Integration Tests with Debugger Support
DESCRIPTION: Command to run specific integration tests with debugging enabled, allowing for debugger attachment before test execution begins.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/debug.md#2025-04-10_snippet_3

LANGUAGE: bash
CODE:
```
$ TEST_INTEGRATION_DIR=./integration/networking \
    TESTFLAGS='-test.run TestBridgeICC' \
    ./hack/make.sh dynbinary test-integration
```

----------------------------------------

TITLE: Creating Docker Service API Request/Response
DESCRIPTION: Example of creating a new Docker service using the POST /services/create endpoint. Shows the request body structure with service configuration and the response format.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_101

LANGUAGE: http
CODE:
```
POST /v1.24/services/create HTTP/1.1
Content-Type: application/json
Content-Length: 12345

{
  "Name": "web",
  "TaskTemplate": {
    "ContainerSpec": {
      "Image": "nginx:alpine",
      "Mounts": [
        {
          "ReadOnly": true,
          "Source": "web-data",
          "Target": "/usr/share/nginx/html",
          "Type": "volume",
          "VolumeOptions": {
            "DriverConfig": {
            },
            "Labels": {
              "com.example.something": "something-value"
            }
          }
        }
      ],
      "User": "33"
    },
    "Networks": [
        {
          "Target": "overlay1"
        }
    ],
    "LogDriver": {
      "Name": "json-file",
      "Options": {
        "max-file": "3",
        "max-size": "10M"
      }
    },
    "Placement": {
      "Constraints": [
        "node.role == worker"
      ]
    },
    "Resources": {
      "Limits": {
        "MemoryBytes": 104857600
      },
      "Reservations": {
      }
    },
    "RestartPolicy": {
      "Condition": "on-failure",
      "Delay": 10000000000,
      "MaxAttempts": 10
    }
  },
  "Mode": {
    "Replicated": {
      "Replicas": 4
    }
  },
  "UpdateConfig": {
    "Delay": 30000000000,
    "Parallelism": 2,
    "FailureAction": "pause"
  },
  "EndpointSpec": {
    "Ports": [
      {
        "Protocol": "tcp",
        "PublishedPort": 8080,
        "TargetPort": 80
      }
    ]
  },
  "Labels": {
    "foo": "bar"
  }
}
```

LANGUAGE: http
CODE:
```
HTTP/1.1 201 Created
Content-Type: application/json

{
  "ID":"ak7w3gjqoa3kuz8xcpnyy0pvl"
}
```

----------------------------------------

TITLE: Rebuilding and Installing Modified Binary
DESCRIPTION: Rebuild the Docker daemon binary with changes and install it in the development container.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/set-up-dev-env.md#2025-04-10_snippet_15

LANGUAGE: bash
CODE:
```
hack/make.sh binary install-binary
```

----------------------------------------

TITLE: Get Docker System Information API
DESCRIPTION: REST endpoint to retrieve system-wide Docker information including architecture, containers, resources, and configuration settings. Returns detailed JSON response with system metrics and settings.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_64

LANGUAGE: http
CODE:
```
GET /v1.24/info HTTP/1.1
```

LANGUAGE: json
CODE:
```
{
    "Architecture": "x86_64",
    "ClusterStore": "etcd://localhost:2379",
    "CgroupDriver": "cgroupfs",
    "Containers": 11,
    "ContainersRunning": 7,
    "ContainersStopped": 3,
    "ContainersPaused": 1,
    "CpuCfsPeriod": true,
    "CpuCfsQuota": true,
    "Debug": false,
    "DockerRootDir": "/var/lib/docker",
    "Driver": "btrfs",
    "DriverStatus": [[""]],
    "ExperimentalBuild": false,
    "HttpProxy": "http://test:test@localhost:8080",
    "HttpsProxy": "https://test:test@localhost:8080",
    "ID": "7TRN:IPZB:QYBB:VPBQ:UMPP:KARE:6ZNR:XE6T:7EWV:PKF4:ZOJD:TPYS",
    "IPv4Forwarding": true,
    "Images": 16,
    "IndexServerAddress": "https://index.docker.io/v1/",
    "InitPath": "/usr/bin/docker",
    "InitSha1": "",
    "KernelMemory": true,
    "KernelVersion": "3.12.0-1-amd64",
    "Labels": ["storage=ssd"],
    "MemTotal": 2099236864,
    "MemoryLimit": true,
    "NCPU": 1,
    "NEventsListener": 0,
    "NFd": 11,
    "NGoroutines": 21,
    "Name": "prod-server-42",
    "NoProxy": "9.81.1.160",
    "OomKillDisable": true,
    "OSType": "linux",
    "OperatingSystem": "Boot2Docker",
    "Plugins": {
        "Volume": ["local"],
        "Network": ["null", "host", "bridge"]
    },
    "RegistryConfig": {
        "IndexConfigs": {
            "docker.io": {
                "Mirrors": null,
                "Name": "docker.io",
                "Official": true,
                "Secure": true
            }
        },
        "InsecureRegistryCIDRs": ["127.0.0.0/8"]
    },
    "SecurityOptions": ["apparmor", "seccomp", "selinux"],
    "ServerVersion": "1.9.0",
    "SwapLimit": false,
    "SystemStatus": [["State", "Healthy"]],
    "SystemTime": "2015-03-10T11:11:23.730591467-07:00"
}
```

----------------------------------------

TITLE: Creating a Docker Container via HTTP POST Request
DESCRIPTION: This snippet demonstrates how to create a Docker container using an HTTP POST request to the Docker API. It includes a comprehensive JSON body with various container configuration options.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_3

LANGUAGE: http
CODE:
```
POST /v1.24/containers/create HTTP/1.1
Content-Type: application/json
Content-Length: 12345

{
       "Hostname": "",
       "Domainname": "",
       "User": "",
       "AttachStdin": false,
       "AttachStdout": true,
       "AttachStderr": true,
       "Tty": false,
       "OpenStdin": false,
       "StdinOnce": false,
       "Env": [
               "FOO=bar",
               "BAZ=quux"
       ],
       "Cmd": [
               "date"
       ],
       "Entrypoint": "",
       "Image": "ubuntu",
       "Labels": {
               "com.example.vendor": "Acme",
               "com.example.license": "GPL",
               "com.example.version": "1.0"
       },
       "Volumes": {
         "/volumes/data": {}
       },
       "Healthcheck":{
          "Test": ["CMD-SHELL", "curl localhost:3000"],
          "Interval": 1000000000,
          "Timeout": 10000000000,
          "Retries": 10,
          "StartPeriod": 60000000000
       },
       "WorkingDir": "",
       "NetworkDisabled": false,
       "MacAddress": "12:34:56:78:9a:bc",
       "ExposedPorts": {
               "22/tcp": {}
       },
       "StopSignal": "SIGTERM",
       "HostConfig": {
         "Binds": ["/tmp:/tmp"],
         "Tmpfs": { "/run": "rw,noexec,nosuid,size=65536k" },
         "Links": ["redis3:redis"],
         "Memory": 0,
         "MemorySwap": 0,
         "MemoryReservation": 0,
         "KernelMemory": 0,
         "CpuPercent": 80,
         "CpuShares": 512,
         "CpuPeriod": 100000,
         "CpuQuota": 50000,
         "CpusetCpus": "0,1",
         "CpusetMems": "0,1",
         "IOMaximumBandwidth": 0,
         "IOMaximumIOps": 0,
         "BlkioWeight": 300,
         "BlkioWeightDevice": [{}],
         "BlkioDeviceReadBps": [{}],
         "BlkioDeviceReadIOps": [{}],
         "BlkioDeviceWriteBps": [{}],
         "BlkioDeviceWriteIOps": [{}],
         "MemorySwappiness": 60,
         "OomKillDisable": false,
         "OomScoreAdj": 500,
         "PidMode": "",
         "PidsLimit": -1,
         "PortBindings": { "22/tcp": [{ "HostPort": "11022" }] },
         "PublishAllPorts": false,
         "Privileged": false,
         "ReadonlyRootfs": false,
         "Dns": ["8.8.8.8"],
         "DnsOptions": [""],
         "DnsSearch": [""],
         "ExtraHosts": null,
         "VolumesFrom": ["parent", "other:ro"],
         "CapAdd": ["NET_ADMIN"],
         "CapDrop": ["MKNOD"],
         "GroupAdd": ["newgroup"],
         "RestartPolicy": { "Name": "", "MaximumRetryCount": 0 },
         "NetworkMode": "bridge",
         "Devices": [],
         "Sysctls": { "net.ipv4.ip_forward": "1" },
         "Ulimits": [{}],
         "LogConfig": { "Type": "json-file", "Config": {} },
         "SecurityOpt": [],
         "StorageOpt": {},
         "CgroupParent": "",
         "VolumeDriver": "",
         "ShmSize": 67108864
      },
      "NetworkingConfig": {
          "EndpointsConfig": {
              "isolated_nw" : {
                  "IPAMConfig": {
                      "IPv4Address":"172.20.30.33",
                      "IPv6Address":"2001:db8:abcd::3033",
                      "LinkLocalIPs":["169.254.34.68", "fe80::3468"]
                  },
                  "Links":["container_1", "container_2"],
                  "Aliases":["server_x", "server_y"]
              }
          }
      }
  }
```

----------------------------------------

TITLE: Container JSON Response Structure in Docker API
DESCRIPTION: Example of a JSON response from the container inspection endpoint. Contains detailed information including container configuration, host settings, network configuration, state, and mounted volumes.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_13

LANGUAGE: JSON
CODE:
```
{
	"AppArmorProfile": "",
	"Args": [
		"-c",
		"exit 9"
	],
	"Config": {
		"AttachStderr": true,
		"AttachStdin": false,
		"AttachStdout": true,
		"Cmd": [
			"/bin/sh",
			"-c",
			"exit 9"
		],
		"Domainname": "",
		"Entrypoint": null,
		"Env": [
			"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
		],
		"ExposedPorts": null,
		"Hostname": "ba033ac44011",
		"Image": "ubuntu",
		"Labels": {
			"com.example.vendor": "Acme",
			"com.example.license": "GPL",
			"com.example.version": "1.0"
		},
		"MacAddress": "",
		"NetworkDisabled": false,
		"OnBuild": null,
		"OpenStdin": false,
		"StdinOnce": false,
		"Tty": false,
		"User": "",
		"Volumes": {
			"/volumes/data": {}
		},
		"WorkingDir": "",
		"StopSignal": "SIGTERM"
	},
	"Created": "2015-01-06T15:47:31.485331387Z",
	"Driver": "overlay2",
	"ExecIDs": null,
	"HostConfig": {
		"Binds": null,
		"IOMaximumBandwidth": 0,
		"IOMaximumIOps": 0,
		"BlkioWeight": 0,
		"BlkioWeightDevice": [{}],
		"BlkioDeviceReadBps": [{}],
		"BlkioDeviceWriteBps": [{}],
		"BlkioDeviceReadIOps": [{}],
		"BlkioDeviceWriteIOps": [{}],
		"CapAdd": null,
		"CapDrop": null,
		"ContainerIDFile": "",
		"CpusetCpus": "",
		"CpusetMems": "",
		"CpuPercent": 80,
		"CpuShares": 0,
		"CpuPeriod": 100000,
		"Devices": [],
		"Dns": null,
		"DnsOptions": null,
		"DnsSearch": null,
		"ExtraHosts": null,
		"IpcMode": "",
		"Links": null,
		"Memory": 0,
		"MemorySwap": 0,
		"MemoryReservation": 0,
		"KernelMemory": 0,
		"OomKillDisable": false,
		"OomScoreAdj": 500,
		"NetworkMode": "bridge",
		"PidMode": "",
		"PortBindings": {},
		"Privileged": false,
		"ReadonlyRootfs": false,
		"PublishAllPorts": false,
		"RestartPolicy": {
			"MaximumRetryCount": 2,
			"Name": "on-failure"
		},
		"LogConfig": {
			"Config": null,
			"Type": "json-file"
		},
		"SecurityOpt": null,
		"Sysctls": {
		        "net.ipv4.ip_forward": "1"
		},
		"StorageOpt": null,
		"VolumesFrom": null,
		"Ulimits": [{}],
		"VolumeDriver": "",
		"ShmSize": 67108864
	},
	"HostnamePath": "/var/lib/docker/containers/ba033ac4401106a3b513bc9d639eee123ad78ca3616b921167cd74b20e25ed39/hostname",
	"HostsPath": "/var/lib/docker/containers/ba033ac4401106a3b513bc9d639eee123ad78ca3616b921167cd74b20e25ed39/hosts",
	"LogPath": "/var/lib/docker/containers/1eb5fabf5a03807136561b3c00adcd2992b535d624d5e18b6cdc6a6844d9767b/1eb5fabf5a03807136561b3c00adcd2992b535d624d5e18b6cdc6a6844d9767b-json.log",
	"Id": "ba033ac4401106a3b513bc9d639eee123ad78ca3616b921167cd74b20e25ed39",
	"Image": "04c5d3b7b0656168630d3ba35d8889bd0e9caafcaeb3004d2bfbc47e7c5d35d2",
	"MountLabel": "",
	"Name": "/boring_euclid",
	"NetworkSettings": {
		"Bridge": "",
		"SandboxID": "",
		"HairpinMode": false,
		"LinkLocalIPv6Address": "",
		"LinkLocalIPv6PrefixLen": 0,
		"Ports": null,
		"SandboxKey": "",
		"SecondaryIPAddresses": null,
		"SecondaryIPv6Addresses": null,
		"EndpointID": "",
		"Gateway": "",
		"GlobalIPv6Address": "",
		"GlobalIPv6PrefixLen": 0,
		"IPAddress": "",
		"IPPrefixLen": 0,
		"IPv6Gateway": "",
		"MacAddress": "",
		"Networks": {
			"bridge": {
				"NetworkID": "7ea29fc1412292a2d7bba362f9253545fecdfa8ce9a6e37dd10ba8bee7129812",
				"EndpointID": "7587b82f0dada3656fda26588aee72630c6fab1536d36e394b2bfbcf898c971d",
				"Gateway": "172.17.0.1",
				"IPAddress": "172.17.0.2",
				"IPPrefixLen": 16,
				"IPv6Gateway": "",
				"GlobalIPv6Address": "",
				"GlobalIPv6PrefixLen": 0,
				"MacAddress": "02:42:ac:12:00:02"
			}
		}
	},
	"Path": "/bin/sh",
	"ProcessLabel": "",
	"ResolvConfPath": "/var/lib/docker/containers/ba033ac4401106a3b513bc9d639eee123ad78ca3616b921167cd74b20e25ed39/resolv.conf",
	"RestartCount": 1,
	"State": {
		"Error": "",
		"ExitCode": 9,
		"FinishedAt": "2015-01-06T15:47:32.080254511Z",
		"OOMKilled": false,
		"Dead": false,
		"Paused": false,
		"Pid": 0,
		"Restarting": false,
		"Running": true,
		"StartedAt": "2015-01-06T15:47:32.072697474Z",
		"Status": "running"
	},
	"Mounts": [
		{
			"Name": "fac362...80535",
			"Source": "/data",
			"Destination": "/data",
			"Driver": "local",
			"Mode": "ro,Z",
			"RW": false,
			"Propagation": ""
		}
	]
}
```

----------------------------------------

TITLE: Retrieving Image Tarball via HTTP GET Request
DESCRIPTION: This snippet demonstrates how to retrieve a tarball containing all images in a repository using a GET request to the /images/(name)/get endpoint. It shows the request format and expected response type.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_70

LANGUAGE: http
CODE:
```
GET /v1.24/images/ubuntu/get
```

----------------------------------------

TITLE: Building Docker Daemon with Docker Buildx Commands
DESCRIPTION: This snippet shows various Docker Buildx bake commands for building the Docker daemon and related tools with different configurations. It covers building for the current host platform, cross-compilation, dynamic linking, complete builds including dependencies, and packaging binaries into images for distribution.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/ctn-build.md#2025-04-10_snippet_0

LANGUAGE: shell
CODE:
```
# build binaries for the current host platform
# output to ./bundles/binary-daemon by default
docker buildx bake
# or
docker buildx bake binary

# build binaries for the current host platform
# output to ./bin
DESTDIR=./bin docker buildx bake

# build dynamically linked binaries
# output to ./bundles/dynbinary-daemon by default
DOCKER_STATIC=0 docker buildx bake
# or
docker buildx bake dynbinary

# build binaries for all supported platforms
docker buildx bake binary-cross

# build binaries for a specific platform
docker buildx bake --set *.platform=linux/arm64

# build "complete" binaries (including containerd, runc, vpnkit, etc.)
docker buildx bake all

# build "complete" binaries for all supported platforms
docker buildx bake all-cross

# build non-runnable image wrapping "complete" binaries
# useful for use with undock and sharing via a registry
docker buildx bake bin-image

# build non-runnable image wrapping "complete" binaries, with custom tag
docker buildx bake bin-image --set "*.tags=foo/moby-bin:latest"

# build non-runnable image wrapping "complete" binaries for all supported platforms
# multi-platform images must be directly pushed to a registry
docker buildx bake bin-image-cross --set "*.tags=foo/moby-bin:latest" --push
```

----------------------------------------

TITLE: Launching Development Container with Debugging Support
DESCRIPTION: Command to start a development container with debugging enabled. It disables build optimizations and exposes the Delve debugger port.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/debug.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
$ make BIND_DIR=. DOCKER_DEBUG=1 DELVE_PORT=127.0.0.1:2345:2345 shell
```

----------------------------------------

TITLE: Create Network API Request/Response
DESCRIPTION: POST endpoint to create a new network with specified configuration including name, driver, IPAM settings and options.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_84

LANGUAGE: json
CODE:
```
POST /v1.24/networks/create HTTP/1.1
Content-Type: application/json
Content-Length: 12345

{
  "Name":"isolated_nw",
  "CheckDuplicate":true,
  "Driver":"bridge",
  "EnableIPv6": true,
  "IPAM":{
    "Driver": "default",
    "Config":[
      {
        "Subnet":"172.20.0.0/16",
        "IPRange":"172.20.10.0/24",
        "Gateway":"172.20.10.11"
      },
      {
        "Subnet":"2001:db8:abcd::/64",
        "Gateway":"2001:db8:abcd::1011"
      }
    ],
    "Options": {
      "foo": "bar"
    }
  },
  "Internal":true,
  "Options": {
    "com.docker.network.bridge.default_bridge": "true",
    "com.docker.network.bridge.enable_icc": "true",
    "com.docker.network.bridge.enable_ip_masquerade": "true",
    "com.docker.network.bridge.host_binding_ipv4": "0.0.0.0",
    "com.docker.network.bridge.name": "docker0",
    "com.docker.network.driver.mtu": "1500"
  },
  "Labels": {
    "com.example.some-label": "some-value",
    "com.example.some-other-label": "some-other-value"
  }
}
```

LANGUAGE: json
CODE:
```
HTTP/1.1 201 Created
Content-Type: application/json

{
  "Id": "22be93d5babb089c5aab8dbc369042fad48ff791584ca2da2100db837a1c7c30",
  "Warning": ""
}
```

----------------------------------------

TITLE: Inspect Node API Request/Response
DESCRIPTION: HTTP GET endpoint to retrieve detailed information about a specific node by ID or name. Returns the complete node object including version, specs, description, status and manager status.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_92

LANGUAGE: HTTP
CODE:
```
GET /v1.24/nodes/24ifsmvkjbyhk HTTP/1.1
```

LANGUAGE: JSON
CODE:
```
HTTP/1.1 200 OK
Content-Type: application/json

{
  "ID": "24ifsmvkjbyhk",
  "Version": {
    "Index": 8
  },
  "CreatedAt": "2016-06-07T20:31:11.853781916Z",
  "UpdatedAt": "2016-06-07T20:31:11.999868824Z",
  "Spec": {
    "Name": "my-node",
    "Role": "manager",
    "Availability": "active"
    "Labels": {
        "foo": "bar"
    }
  },
  "Description": {
    "Hostname": "bf3067039e47",
    "Platform": {
      "Architecture": "x86_64",
      "OS": "linux"
    },
    "Resources": {
      "NanoCPUs": 4000000000,
      "MemoryBytes": 8272408576
    },
    "Engine": {
      "EngineVersion": "1.12.0",
      "Labels": {
          "foo": "bar",
      }
      "Plugins": [
        {
          "Type": "Volume",
          "Name": "local"
        },
        {
          "Type": "Network",
          "Name": "bridge"
        }
        {
          "Type": "Network",
          "Name": "null"
        }
        {
          "Type": "Network",
          "Name": "overlay"
        }
      ]
    }
  },
  "Status": {
    "State": "ready"
  },
  "ManagerStatus": {
    "Leader": true,
    "Reachability": "reachable",
    "Addr": "172.17.0.2:2377""
  }
}
```

----------------------------------------

TITLE: Defining Service Message Type in Protocol Buffers for Docker Swarmkit
DESCRIPTION: This snippet defines the Service message type, representing a service in the Swarm. It includes fields for service identification, specifications, endpoints, and update status.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_78

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "Service"
  field {
    name: "id"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "id"
  }
  field {
    name: "meta"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Meta"
    options {
      65001: 0
    }
    json_name: "meta"
  }
  field {
    name: "spec"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.ServiceSpec"
    options {
      65001: 0
    }
    json_name: "spec"
  }
  field {
    name: "spec_version"
    number: 10
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Version"
    json_name: "specVersion"
  }
  field {
    name: "previous_spec"
    number: 6
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.ServiceSpec"
    json_name: "previousSpec"
  }
  field {
    name: "previous_spec_version"
    number: 11
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Version"
    json_name: "previousSpecVersion"
  }
  field {
    name: "endpoint"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Endpoint"
    json_name: "endpoint"
  }
  field {
    name: "update_status"
    number: 5
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.UpdateStatus"
    json_name: "updateStatus"
  }
  field {
    name: "job_status"
    number: 12
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.JobStatus"
    json_name: "jobStatus"
  }
  field {
    name: "pending_delete"
    number: 7
    label: LABEL_OPTIONAL
    type: TYPE_BOOL
    json_name: "pendingDelete"
  }
  options {
    70001 {
      1 {
        1: 1
        2: 1
        3: 1
        4: 1
        5: 1
        6: 1
      }
    }
  }
}
```

----------------------------------------

TITLE: Getting Container Stats via HTTP Request
DESCRIPTION: Example HTTP GET request to retrieve statistics about resource usage for a container named 'redis1'.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_24

LANGUAGE: http
CODE:
```
GET /v1.24/containers/redis1/stats HTTP/1.1
```

----------------------------------------

TITLE: Container Stats Response in JSON
DESCRIPTION: Example JSON response from the container stats endpoint, showing detailed statistics about container resource usage including CPU, memory, network, and block I/O statistics.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_25

LANGUAGE: http
CODE:
```
HTTP/1.1 200 OK
Content-Type: application/json
```

LANGUAGE: json
CODE:
```
{
   "read" : "2015-01-08T22:57:31.547920715Z",
   "pids_stats": {
      "current": 3
   },
   "networks": {
           "eth0": {
               "rx_bytes": 5338,
               "rx_dropped": 0,
               "rx_errors": 0,
               "rx_packets": 36,
               "tx_bytes": 648,
               "tx_dropped": 0,
               "tx_errors": 0,
               "tx_packets": 8
           },
           "eth5": {
               "rx_bytes": 4641,
               "rx_dropped": 0,
               "rx_errors": 0,
               "rx_packets": 26,
               "tx_bytes": 690,
               "tx_dropped": 0,
               "tx_errors": 0,
               "tx_packets": 9
           }
   },
   "memory_stats" : {
      "stats" : {
         "total_pgmajfault" : 0,
         "cache" : 0,
         "mapped_file" : 0,
         "total_inactive_file" : 0,
         "pgpgout" : 414,
         "rss" : 6537216,
         "total_mapped_file" : 0,
         "writeback" : 0,
         "unevictable" : 0,
         "pgpgin" : 477,
         "total_unevictable" : 0,
         "pgmajfault" : 0,
         "total_rss" : 6537216,
         "total_rss_huge" : 6291456,
         "total_writeback" : 0,
         "total_inactive_anon" : 0,
         "rss_huge" : 6291456,
         "hierarchical_memory_limit" : 67108864,
         "total_pgfault" : 964,
         "total_active_file" : 0,
         "active_anon" : 6537216,
         "total_active_anon" : 6537216,
         "total_pgpgout" : 414,
         "total_cache" : 0,
         "inactive_anon" : 0,
         "active_file" : 0,
         "pgfault" : 964,
         "inactive_file" : 0,
         "total_pgpgin" : 477
      },
      "max_usage" : 6651904,
      "usage" : 6537216,
      "failcnt" : 0,
      "limit" : 67108864
   },
   "blkio_stats" : {},
   "cpu_stats" : {
      "cpu_usage" : {
         "percpu_usage" : [
            8646879,
            24472255,
            36438778,
            30657443
         ],
         "usage_in_usermode" : 50000000,
         "total_usage" : 100215355,
         "usage_in_kernelmode" : 30000000
      },
      "system_cpu_usage" : 739306590000000,
      "throttling_data" : {"periods":0,"throttled_periods":0,"throttled_time":0}
   },
   "precpu_stats" : {
      "cpu_usage" : {
         "percpu_usage" : [
            8646879,
            24350896,
            36438778,
            30657443
         ],
         "usage_in_usermode" : 50000000,
         "total_usage" : 100093996,
         "usage_in_kernelmode" : 30000000
      },
      "system_cpu_usage" : 9492140000000,
      "throttling_data" : {"periods":0,"throttled_periods":0,"throttled_time":0}
   }
}
```

----------------------------------------

TITLE: Build Docker Image from Dockerfile API
DESCRIPTION: POST endpoint to build a Docker image from a Dockerfile within a tar archive. Supports multiple build parameters and returns a stream of build status messages.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_51

LANGUAGE: http
CODE:
```
POST /v1.24/build HTTP/1.1
Content-Type: application/x-tar

{{ TAR STREAM }}
```

LANGUAGE: json
CODE:
```
{"stream": "Step 1/5..."}
{"stream": "..."}
{"error": "Error...", "errorDetail": {"code": 123, "message": "Error..."}}
```

----------------------------------------

TITLE: Comprehensive Set Operations Example in Go
DESCRIPTION: Demonstrates creating various sets and performing set operations including union, intersection, difference, and contains. Shows how to initialize sets with different elements and manage class categories.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/deckarep/golang-set/v2/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
package main

import (
  "fmt"
  mapset "github.com/deckarep/golang-set/v2"
)

func main() {
  // Create a string-based set of required classes.
  required := mapset.NewSet[string]()
  required.Add("cooking")
  required.Add("english")
  required.Add("math")
  required.Add("biology")

  // Create a string-based set of science classes.
  sciences := mapset.NewSet[string]()
  sciences.Add("biology")
  sciences.Add("chemistry")
  
  // Create a string-based set of electives.
  electives := mapset.NewSet[string]()
  electives.Add("welding")
  electives.Add("music")
  electives.Add("automotive")

  // Create a string-based set of bonus programming classes.
  bonus := mapset.NewSet[string]()
  bonus.Add("beginner go")
  bonus.Add("python for dummies")
}
```

----------------------------------------

TITLE: Running Build Scripts via make.sh in Moby Project
DESCRIPTION: Examples of how to use the make.sh script to build specific bundles or run all default bundles. The script should be called from the parent directory with bundle names as arguments.
SOURCE: https://github.com/moby/moby/blob/master/hack/make/README.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
./hack/make.sh binary ubuntu

# Or to run all default bundles:
./hack/make.sh
```

----------------------------------------

TITLE: Building Docker Daemon Binary
DESCRIPTION: Compile the Docker daemon binary within the development container.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/set-up-dev-env.md#2025-04-10_snippet_8

LANGUAGE: bash
CODE:
```
# hack/make.sh binary
```

----------------------------------------

TITLE: Monitoring Docker Events via HTTP GET Request
DESCRIPTION: This snippet demonstrates how to monitor Docker events in real-time using a GET request to the /events endpoint. It includes query parameters for filtering events and shows an example response with various event types.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_68

LANGUAGE: http
CODE:
```
GET /v1.24/events?since=1374067924
```

----------------------------------------

TITLE: Authenticating Docker Registry with HTTP POST Request
DESCRIPTION: Sends a POST request to validate credentials for a Docker registry and obtain an identity token. The request body includes the username, password, and server address.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_62

LANGUAGE: http
CODE:
```
POST /v1.24/auth HTTP/1.1
Content-Type: application/json
Content-Length: 12345

{
     "username": "hannibal",
     "password": "xxxx",
     "serveraddress": "https://index.docker.io/v1/"
}
```

----------------------------------------

TITLE: Get Docker Version Information API
DESCRIPTION: REST endpoint to retrieve Docker version information including OS, kernel version, Go version, and build details. Returns JSON response with version-related data.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_65

LANGUAGE: http
CODE:
```
GET /v1.24/version HTTP/1.1
```

LANGUAGE: json
CODE:
```
{
     "Version": "1.12.0",
     "Os": "linux",
     "KernelVersion": "3.19.0-23-generic",
     "GoVersion": "go1.6.3",
     "GitCommit": "deadbee",
     "Arch": "amd64",
     "ApiVersion": "1.24",
     "BuildTime": "2016-06-14T07:09:13.444803460+00:00",
     "Experimental": true
}
```

----------------------------------------

TITLE: Updating a Docker Swarm Service via HTTP POST
DESCRIPTION: This snippet illustrates how to update a Docker Swarm service using the POST HTTP method. It includes the request format with a JSON body containing the updated service configuration.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_104

LANGUAGE: HTTP
CODE:
```
POST /v1.24/services/1cb4dnqcyx6m66g2t538x3rxha/update?version=23 HTTP/1.1
Content-Type: application/json
Content-Length: 12345

{
  "Name": "top",
  "TaskTemplate": {
    "ContainerSpec": {
      "Image": "busybox",
      "Args": [
        "top"
      ]
    },
    "Resources": {
      "Limits": {},
      "Reservations": {}
    },
    "RestartPolicy": {
      "Condition": "any",
      "MaxAttempts": 0
    },
    "Placement": {}
  },
  "Mode": {
    "Replicated": {
      "Replicas": 1
    }
  },
  "UpdateConfig": {
    "Parallelism": 1
  },
  "EndpointSpec": {
    "Mode": "vip"
  }
}
```

----------------------------------------

TITLE: Update Node API Request/Response
DESCRIPTION: HTTP POST endpoint to update a node's specifications. Requires version parameter to avoid conflicts. Can update availability, name, role and labels.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_94

LANGUAGE: HTTP
CODE:
```
POST /v1.24/nodes/24ifsmvkjbyhk/update?version=8 HTTP/1.1
Content-Type: application/json
Content-Length: 12345

{
  "Availability": "active",
  "Name": "node-name",
  "Role": "manager",
  "Labels": {
    "foo": "bar"
  }
}

HTTP/1.1 200 OK
Content-Length: 0
Content-Type: text/plain; charset=utf-8
```

----------------------------------------

TITLE: Basic Memberlist Implementation in Go
DESCRIPTION: Example code showing how to create a memberlist instance, join an existing cluster, and access member information. This demonstrates the core functionality of initializing the memberlist with a default configuration, connecting to a cluster, and retrieving membership data.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/hashicorp/memberlist/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
/* Create the initial memberlist from a safe configuration.
   Please reference the godoc for other default config types.
   http://godoc.org/github.com/hashicorp/memberlist#Config
*/
list, err := memberlist.Create(memberlist.DefaultLocalConfig())
if err != nil {
	panic("Failed to create memberlist: " + err.Error())
}

// Join an existing cluster by specifying at least one known member.
n, err := list.Join([]string{"1.2.3.4"})
if err != nil {
	panic("Failed to join cluster: " + err.Error())
}

// Ask for members of the cluster
for _, member := range list.Members() {
	fmt.Printf("Member: %s %s\n", member.Name, member.Addr)
}

// Continue doing whatever you need, memberlist will maintain membership
// information in the background. Delegates can be used for receiving
// events when members join or leave.
```

----------------------------------------

TITLE: Docker Image Inspection JSON Response
DESCRIPTION: Example JSON response for a Docker image inspection request. It includes detailed information about the image, such as its ID, container configuration, labels, and filesystem layers.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_54

LANGUAGE: json
CODE:
```
{
   "Id" : "sha256:85f05633ddc1c50679be2b16a0479ab6f7637f8884e0cfe0f4d20e1ebb3d6e7c",
   "Container" : "cb91e48a60d01f1e27028b4fc6819f4f290b3cf12496c8176ec714d0d390984a",
   "Comment" : "",
   "Os" : "linux",
   "Architecture" : "amd64",
   "Parent" : "sha256:91e54dfb11794fad694460162bf0cb0a4fa710cfa3f60979c177d920813e267c",
   "ContainerConfig" : {
      "Tty" : false,
      "Hostname" : "e611e15f9c9d",
      "Volumes" : null,
      "Domainname" : "",
      "AttachStdout" : false,
      "PublishService" : "",
      "AttachStdin" : false,
      "OpenStdin" : false,
      "StdinOnce" : false,
      "NetworkDisabled" : false,
      "OnBuild" : [],
      "Image" : "91e54dfb11794fad694460162bf0cb0a4fa710cfa3f60979c177d920813e267c",
      "User" : "",
      "WorkingDir" : "",
      "Entrypoint" : null,
      "MacAddress" : "",
      "AttachStderr" : false,
      "Labels" : {
         "com.example.license" : "GPL",
         "com.example.version" : "1.0",
         "com.example.vendor" : "Acme"
      },
      "Env" : [
         "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      ],
      "ExposedPorts" : null,
      "Cmd" : [
         "/bin/sh",
         "-c",
         "#(nop) LABEL com.example.vendor=Acme com.example.license=GPL com.example.version=1.0"
      ]
   },
   "DockerVersion" : "1.9.0-dev",
   "VirtualSize" : 188359297,
   "Size" : 0,
   "Author" : "",
   "Created" : "2015-09-10T08:30:53.26995814Z",
   "GraphDriver" : {
      "Name" : "aufs",
      "Data" : null
   },
   "RepoDigests" : [
      "localhost:5000/test/busybox/example@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf"
   ],
   "RepoTags" : [
      "example:1.0",
      "example:latest",
      "example:stable"
   ],
   "Config" : {
      "Image" : "91e54dfb11794fad694460162bf0cb0a4fa710cfa3f60979c177d920813e267c",
      "NetworkDisabled" : false,
      "OnBuild" : [],
      "StdinOnce" : false,
      "PublishService" : "",
      "AttachStdin" : false,
      "OpenStdin" : false,
      "Domainname" : "",
      "AttachStdout" : false,
      "Tty" : false,
      "Hostname" : "e611e15f9c9d",
      "Volumes" : null,
      "Cmd" : [
         "/bin/bash"
      ],
      "ExposedPorts" : null,
      "Env" : [
         "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      ],
      "Labels" : {
         "com.example.vendor" : "Acme",
         "com.example.version" : "1.0",
         "com.example.license" : "GPL"
      },
      "Entrypoint" : null,
      "MacAddress" : "",
      "AttachStderr" : false,
      "WorkingDir" : "",
      "User" : ""
   },
   "RootFS": {
       "Type": "layers",
       "Layers": [
           "sha256:1834950e52ce4d5a88a1bbd131c537f4d0e56d10ff0dd69e66be3b7dfa9df7e6",
           "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
       ]
   }
}
```

----------------------------------------

TITLE: Exporting Container Contents with Docker API
DESCRIPTION: Makes an HTTP GET request to export a container's filesystem as a tar archive. This endpoint allows downloading the entire contents of a container which can be used for backup or migration purposes.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_23

LANGUAGE: HTTP
CODE:
```
GET /v1.24/containers/4fa6e0f0c678/export HTTP/1.1
```

----------------------------------------

TITLE: Creating Docker Volume via HTTP POST
DESCRIPTION: HTTP POST request to create a new Docker volume, specifying the volume name, labels, and driver.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_80

LANGUAGE: http
CODE:
```
POST /v1.24/volumes/create HTTP/1.1
Content-Type: application/json
Content-Length: 12345

{
  "Name": "tardis",
  "Labels": {
    "com.example.some-label": "some-value",
    "com.example.some-other-label": "some-other-value"
  },
  "Driver": "custom"
}
```

----------------------------------------

TITLE: Matching Routes Based on Domain in Go using Gorilla Mux
DESCRIPTION: Shows how to restrict routes to specific domains or subdomains, including the use of variables in host patterns.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gorilla/mux/README.md#2025-04-10_snippet_4

LANGUAGE: go
CODE:
```
r := mux.NewRouter()
// Only matches if domain is "www.example.com".
r.Host("www.example.com")
// Matches a dynamic subdomain.
r.Host("{subdomain:[a-z]+}.example.com")
```

----------------------------------------

TITLE: List Networks API Request/Response
DESCRIPTION: GET endpoint to list all networks with optional filters. Returns array of network objects with details like name, ID, scope, driver and configuration.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_82

LANGUAGE: http
CODE:
```
GET /v1.24/networks?filters={"type":{"custom":true}} HTTP/1.1
```

LANGUAGE: json
CODE:
```
HTTP/1.1 200 OK
Content-Type: application/json

[
  {
    "Name": "bridge",
    "Id": "f2de39df4171b0dc801e8002d1d999b77256983dfc63041c0f34030aa3977566",
    "Scope": "local",
    "Driver": "bridge",
    "EnableIPv6": false,
    "Internal": false,
    "IPAM": {
      "Driver": "default",
      "Config": [
        {
          "Subnet": "172.17.0.0/16"
        }
      ]
    },
    "Containers": {
      "39b69226f9d79f5634485fb236a23b2fe4e96a0a94128390a7fbbcc167065867": {
        "EndpointID": "ed2419a97c1d9954d05b46e462e7002ea552f216e9b136b80a7db8d98b442eda",
        "MacAddress": "02:42:ac:11:00:02",
        "IPv4Address": "172.17.0.2/16",
        "IPv6Address": ""
      }
    },
    "Options": {
      "com.docker.network.bridge.default_bridge": "true",
      "com.docker.network.bridge.enable_icc": "true",
      "com.docker.network.bridge.enable_ip_masquerade": "true",
      "com.docker.network.bridge.host_binding_ipv4": "0.0.0.0",
      "com.docker.network.bridge.name": "docker0",
      "com.docker.network.driver.mtu": "1500"
    }
  }
]
```

----------------------------------------

TITLE: Running All Moby Tests and Build on Windows
DESCRIPTION: These Docker commands run all Moby tests and build processes in a container on Windows, with options for Hyper-V containers.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/software-req-win.md#2025-04-10_snippet_9

LANGUAGE: powershell
CODE:
```
docker run nativebuildimage hack\make.ps1 -All
docker run -m 2GB nativebuildimage hack\make.ps1 -All  # (if using Hyper-V containers)
```

----------------------------------------

TITLE: Markdown Navigation Links for Moby Setup
DESCRIPTION: A structured list of markdown links to various Moby development setup documentation pages, including initial setup, software requirements, IDE configuration, Git setup, testing, and debugging guides.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
### Get set up for Moby development

 * [README first](who-written-for.md)
 * [Get the required software](software-required.md)
 * [Set up for development on Windows](software-req-win.md)
 * (Optional) [Configure project for IDE](set-up-ide.md)
 * [Configure Git for contributing](set-up-git.md)
 * [Work with a development container](set-up-dev-env.md)
 * [Containerized build and cross compilation](ctn-build.md)
 * [Run tests and test documentation](test.md)
 * [Debugging the daemon](debug.md)
```

----------------------------------------

TITLE: SwarmKit Service Method Definitions
DESCRIPTION: Defines the gRPC service methods for Docker SwarmKit API, including operations for managing various swarm resources. Each method specifies its input and output message types along with swarm manager options.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_95

LANGUAGE: protobuf
CODE:
```
method {
  name: "ListServiceStatuses"
  input_type: ".docker.swarmkit.v1.ListServiceStatusesRequest"
  output_type: ".docker.swarmkit.v1.ListServiceStatusesResponse"
  options {
    73626345 {
      1: "swarm-manager"
    }
  }
}
```

----------------------------------------

TITLE: Defining cgroups v2 Resource Metrics Protocol Buffers
DESCRIPTION: Protocol buffer schema defining message types for collecting cgroup v2 metrics. Includes definitions for process, CPU, memory, RDMA, IO statistics and other resource usage data. Each message type contains specific fields for different metric categories with appropriate data types and labels.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/cgroup2/stats/metrics.pb.txt#2025-04-10_snippet_0

LANGUAGE: protobuf
CODE:
```
file {
  name: "github.com/containerd/cgroups/cgroup2/stats/metrics.proto"
  package: "io.containerd.cgroups.v2"
  message_type {
    name: "Metrics"
    field {
      name: "pids"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".io.containerd.cgroups.v2.PidsStat"
      json_name: "pids"
    }
    field {
      name: "cpu"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".io.containerd.cgroups.v2.CPUStat"
      json_name: "cpu"
    }
    field {
      name: "memory"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".io.containerd.cgroups.v2.MemoryStat"
      json_name: "memory"
    }
    field {
      name: "rdma"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".io.containerd.cgroups.v2.RdmaStat"
      json_name: "rdma"
    }
    field {
      name: "io"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".io.containerd.cgroups.v2.IOStat"
      json_name: "io"
    }
    field {
      name: "hugetlb"
      number: 7
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".io.containerd.cgroups.v2.HugeTlbStat"
      json_name: "hugetlb"
    }
    field {
      name: "memory_events"
      number: 8
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".io.containerd.cgroups.v2.MemoryEvents"
      json_name: "memoryEvents"
    }
  }
}
```

----------------------------------------

TITLE: List Nodes API Request/Response
DESCRIPTION: HTTP GET endpoint to list all nodes in the swarm. Supports filtering by node ID, label, membership, name and role. Returns detailed information about each node including specs, description, status and manager status.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_91

LANGUAGE: HTTP
CODE:
```
GET /v1.24/nodes HTTP/1.1
```

LANGUAGE: JSON
CODE:
```
HTTP/1.1 200 OK
Content-Type: application/json

[
  {
    "ID": "24ifsmvkjbyhk",
    "Version": {
      "Index": 8
    },
    "CreatedAt": "2016-06-07T20:31:11.853781916Z",
    "UpdatedAt": "2016-06-07T20:31:11.999868824Z",
    "Spec": {
      "Name": "my-node",
      "Role": "manager",
      "Availability": "active"
      "Labels": {
          "foo": "bar"
      }
    },
    "Description": {
      "Hostname": "bf3067039e47",
      "Platform": {
        "Architecture": "x86_64",
        "OS": "linux"
      },
      "Resources": {
        "NanoCPUs": 4000000000,
        "MemoryBytes": 8272408576
      },
      "Engine": {
        "EngineVersion": "1.12.0",
        "Labels": {
            "foo": "bar",
        }
        "Plugins": [
          {
            "Type": "Volume",
            "Name": "local"
          },
          {
            "Type": "Network",
            "Name": "bridge"
          }
          {
            "Type": "Network",
            "Name": "null"
          }
          {
            "Type": "Network",
            "Name": "overlay"
          }
        ]
      }
    },
    "Status": {
      "State": "ready"
    },
    "ManagerStatus": {
      "Leader": true,
      "Reachability": "reachable",
      "Addr": "172.17.0.2:2377""
    }
  }
]
```

----------------------------------------

TITLE: Joining an Existing Docker Swarm
DESCRIPTION: POST request to /swarm/join endpoint to join an existing swarm. Includes parameters for listen address, advertise address, remote addresses, and join token.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_97

LANGUAGE: HTTP
CODE:
```
POST /v1.24/swarm/join HTTP/1.1
Content-Type: application/json

{
  "ListenAddr": "0.0.0.0:2377",
  "AdvertiseAddr": "192.168.1.1:2377",
  "RemoteAddrs": ["node1:2377"],
  "JoinToken": "SWMTKN-1-3pu6hszjas19xyp7ghgosyx9k8atbfcr8p2is99znpy26u2lkl-7p73s1dx5in4tatdymyhg9hu2"
}
```

----------------------------------------

TITLE: Remove Node API Request/Response
DESCRIPTION: HTTP DELETE endpoint to remove a node from the swarm. Optional force parameter to forcefully remove the node. Returns empty response on success.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_93

LANGUAGE: HTTP
CODE:
```
DELETE /v1.24/nodes/24ifsmvkjbyhk HTTP/1.1

HTTP/1.1 200 OK
Content-Length: 0
Content-Type: text/plain; charset=utf-8
```

----------------------------------------

TITLE: Defining VolumeAssignment Message in Protocol Buffers
DESCRIPTION: Specifies the VolumeAssignment message type with fields for volume identification, driver information, context, and access mode. This structure is used to assign volumes in Docker Swarm.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_59

LANGUAGE: protobuf
CODE:
```
message VolumeAssignment {
  string id = 1;
  string volume_id = 2;
  Driver driver = 3;
  repeated VolumeContextEntry volume_context = 4;
  repeated PublishContextEntry publish_context = 5;
  VolumeAccessMode access_mode = 6;
  repeated VolumeSecret secrets = 7;

  message VolumeContextEntry {
    string key = 1;
    string value = 2;
  }

  message PublishContextEntry {
    string key = 1;
    string value = 2;
  }
}
```

----------------------------------------

TITLE: Docker Image History JSON Response
DESCRIPTION: Example JSON response for a Docker image history request. It includes a list of image layers with their IDs, creation timestamps, and associated commands.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_56

LANGUAGE: json
CODE:
```
[
    {
        "Id": "3db9c44f45209632d6050b35958829c3a2aa256d81b9a7be45b362ff85c54710",
        "Created": 1398108230,
        "CreatedBy": "/bin/sh -c #(nop) ADD file:eb15dbd63394e063b805a3c32ca7bf0266ef64676d5a6fab4801f2e81e2a5148 in /",
        "Tags": [
            "ubuntu:lucid",
            "ubuntu:10.04"
        ],
        "Size": 182964289,
        "Comment": ""
    },
    {
        "Id": "6cfa4d1f33fb861d4d114f43b25abd0ac737509268065cdfd69d544a59c85ab8",
        "Created": 1398108222,
        "CreatedBy": "/bin/sh -c #(nop) MAINTAINER Tianon Gravi <admwiggin@gmail.com> - mkimage-debootstrap.sh -i iproute,iputils-ping,ubuntu-minimal -t lucid.tar.xz lucid http://archive.ubuntu.com/ubuntu/",
        "Tags": null,
        "Size": 0,
        "Comment": ""
    },
    {
        "Id": "511136ea3c5a64f264b78b5433614aec563103b4d4702f3ba7d4d2698e22c158",
        "Created": 1371157430,
        "CreatedBy": "",
        "Tags": [
            "scratch12:latest",
            "scratch:latest"
        ],
        "Size": 0,
        "Comment": "Imported from -"
    }
]
```

----------------------------------------

TITLE: Accessing Route Variables in Go Handler Functions
DESCRIPTION: Demonstrates how to retrieve and use variables from the URL in a handler function using mux.Vars().
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gorilla/mux/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
func ArticlesCategoryHandler(w http.ResponseWriter, r *http.Request) {
    vars := mux.Vars(r)
    w.WriteHeader(http.StatusOK)
    fmt.Fprintf(w, "Category: %v\n", vars["category"])
}
```

----------------------------------------

TITLE: Listing Container Processes with Docker API
DESCRIPTION: Makes an HTTP GET request to list processes running inside a container. This endpoint uses the 'ps' command on Unix systems to provide process information and is not supported on Windows.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_16

LANGUAGE: HTTP
CODE:
```
GET /v1.24/containers/4fa6e0f0c678/top HTTP/1.1
```

----------------------------------------

TITLE: Response for Successful Exec Instance Inspection in Docker
DESCRIPTION: HTTP response containing detailed information about an exec instance in a Docker container, including its status, configuration, and exit code.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_77

LANGUAGE: json
CODE:
```
{
  "CanRemove": false,
  "ContainerID": "b53ee82b53a40c7dca428523e34f741f3abc51d9f297a14ff874bf761b995126",
  "DetachKeys": "",
  "ExitCode": 2,
  "ID": "f33bbfb39f5b142420f4759b2348913bd4a8d1a6d7fd56499cb41a1bb91d7b3b",
  "OpenStderr": true,
  "OpenStdin": true,
  "OpenStdout": true,
  "ProcessConfig": {
    "arguments": [
      "-c",
      "exit 2"
    ],
    "entrypoint": "sh",
    "privileged": false,
    "tty": true,
    "user": "1000"
  },
  "Running": false
}
```

----------------------------------------

TITLE: Using Subrouters in Go with Gorilla Mux
DESCRIPTION: Demonstrates the use of subrouters to group routes with shared attributes and create domain or path namespaces.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gorilla/mux/README.md#2025-04-10_snippet_7

LANGUAGE: go
CODE:
```
r := mux.NewRouter()
s := r.Host("www.example.com").Subrouter()

s.HandleFunc("/products/", ProductsHandler)
s.HandleFunc("/products/{key}", ProductHandler)
s.HandleFunc("/articles/{category}/{id:[0-9]+}", ArticleHandler)
```

----------------------------------------

TITLE: Creating Exec Instance in Docker Container via HTTP POST
DESCRIPTION: HTTP POST request to create an exec instance in a running Docker container, specifying parameters like AttachStdin, Cmd, and User.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_73

LANGUAGE: http
CODE:
```
POST /v1.24/containers/e90e34656806/exec HTTP/1.1
Content-Type: application/json
Content-Length: 12345

{
  "AttachStdin": true,
  "AttachStdout": true,
  "AttachStderr": true,
  "Cmd": ["sh"],
  "DetachKeys": "ctrl-p,ctrl-q",
  "Privileged": true,
  "Tty": true,
  "User": "123:456"
}
```

----------------------------------------

TITLE: Copying Moby Binaries from Docker Container
DESCRIPTION: These Docker commands copy the built Moby binaries from the container to the host system.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/software-req-win.md#2025-04-10_snippet_5

LANGUAGE: powershell
CODE:
```
docker cp binaries:C:\gopath\src\github.com\docker\docker\bundles\docker.exe docker.exe
docker cp binaries:C:\gopath\src\github.com\docker\docker\bundles\dockerd.exe dockerd.exe
```

----------------------------------------

TITLE: Defining Protocol Buffer Message Types for Docker Swarmkit API
DESCRIPTION: This Protocol Buffer (protobuf) definition file contains message type specifications for Docker Swarmkit's API. It defines data structures used for service, network, and cluster management operations including creation, retrieval, listing, and removal.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_91

LANGUAGE: protobuf
CODE:
```
  message_type {
    name: "UpdateServiceResponse"
    field {
      name: "service"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".docker.swarmkit.v1.Service"
      json_name: "service"
    }
  }
  message_type {
    name: "RemoveServiceRequest"
    field {
      name: "service_id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "serviceId"
    }
  }
  message_type {
    name: "RemoveServiceResponse"
  }
  message_type {
    name: "ListServicesRequest"
    field {
      name: "filters"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".docker.swarmkit.v1.ListServicesRequest.Filters"
      json_name: "filters"
    }
    nested_type {
      name: "Filters"
      field {
        name: "names"
        number: 1
        label: LABEL_REPEATED
        type: TYPE_STRING
        json_name: "names"
      }
      field {
        name: "id_prefixes"
        number: 2
        label: LABEL_REPEATED
        type: TYPE_STRING
        json_name: "idPrefixes"
      }
      field {
        name: "labels"
        number: 3
        label: LABEL_REPEATED
        type: TYPE_MESSAGE
        type_name: ".docker.swarmkit.v1.ListServicesRequest.Filters.LabelsEntry"
        json_name: "labels"
      }
      field {
        name: "name_prefixes"
        number: 4
        label: LABEL_REPEATED
        type: TYPE_STRING
        json_name: "namePrefixes"
      }
      field {
        name: "runtimes"
        number: 5
        label: LABEL_REPEATED
        type: TYPE_STRING
        json_name: "runtimes"
      }
      nested_type {
        name: "LabelsEntry"
        field {
          name: "key"
          number: 1
          label: LABEL_OPTIONAL
          type: TYPE_STRING
          json_name: "key"
        }
        field {
          name: "value"
          number: 2
          label: LABEL_OPTIONAL
          type: TYPE_STRING
          json_name: "value"
        }
        options {
          map_entry: true
        }
      }
    }
  }
  message_type {
    name: "ListServicesResponse"
    field {
      name: "services"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".docker.swarmkit.v1.Service"
      json_name: "services"
    }
  }
  message_type {
    name: "ListServiceStatusesRequest"
    field {
      name: "services"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_STRING
      json_name: "services"
    }
  }
  message_type {
    name: "ListServiceStatusesResponse"
    field {
      name: "statuses"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".docker.swarmkit.v1.ListServiceStatusesResponse.ServiceStatus"
      json_name: "statuses"
    }
    nested_type {
      name: "ServiceStatus"
      field {
        name: "service_id"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "serviceId"
      }
      field {
        name: "desired_tasks"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_UINT64
        json_name: "desiredTasks"
      }
      field {
        name: "running_tasks"
        number: 3
        label: LABEL_OPTIONAL
        type: TYPE_UINT64
        json_name: "runningTasks"
      }
      field {
        name: "completed_tasks"
        number: 4
        label: LABEL_OPTIONAL
        type: TYPE_UINT64
        json_name: "completedTasks"
      }
    }
  }
  message_type {
    name: "CreateNetworkRequest"
    field {
      name: "spec"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".docker.swarmkit.v1.NetworkSpec"
      json_name: "spec"
    }
  }
  message_type {
    name: "CreateNetworkResponse"
    field {
      name: "network"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".docker.swarmkit.v1.Network"
      json_name: "network"
    }
  }
  message_type {
    name: "GetNetworkRequest"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "network_id"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "networkId"
    }
  }
  message_type {
    name: "GetNetworkResponse"
    field {
      name: "network"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".docker.swarmkit.v1.Network"
      json_name: "network"
    }
  }
  message_type {
    name: "RemoveNetworkRequest"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "network_id"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "networkId"
    }
  }
  message_type {
    name: "RemoveNetworkResponse"
  }
  message_type {
    name: "ListNetworksRequest"
    field {
      name: "filters"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".docker.swarmkit.v1.ListNetworksRequest.Filters"
      json_name: "filters"
    }
    nested_type {
      name: "Filters"
      field {
        name: "names"
        number: 1
        label: LABEL_REPEATED
        type: TYPE_STRING
        json_name: "names"
      }
      field {
        name: "id_prefixes"
        number: 2
        label: LABEL_REPEATED
        type: TYPE_STRING
        json_name: "idPrefixes"
      }
      field {
        name: "labels"
        number: 3
        label: LABEL_REPEATED
        type: TYPE_MESSAGE
        type_name: ".docker.swarmkit.v1.ListNetworksRequest.Filters.LabelsEntry"
        json_name: "labels"
      }
      field {
        name: "name_prefixes"
        number: 4
        label: LABEL_REPEATED
        type: TYPE_STRING
        json_name: "namePrefixes"
      }
      nested_type {
        name: "LabelsEntry"
        field {
          name: "key"
          number: 1
          label: LABEL_OPTIONAL
          type: TYPE_STRING
          json_name: "key"
        }
        field {
          name: "value"
          number: 2
          label: LABEL_OPTIONAL
          type: TYPE_STRING
          json_name: "value"
        }
        options {
          map_entry: true
        }
      }
    }
  }
  message_type {
    name: "ListNetworksResponse"
    field {
      name: "networks"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".docker.swarmkit.v1.Network"
      json_name: "networks"
    }
  }
  message_type {
    name: "GetClusterRequest"
    field {
      name: "cluster_id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "clusterId"
    }
  }
  message_type {
    name: "GetClusterResponse"
    field {
      name: "cluster"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".docker.swarmkit.v1.Cluster"
      json_name: "cluster"
    }
  }
  message_type {
    name: "ListClustersRequest"
    field {
      name: "filters"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".docker.swarmkit.v1.ListClustersRequest.Filters"
      json_name: "filters"
    }
    nested_type {
      name: "Filters"
      field {
        name: "names"
        number: 1
        label: LABEL_REPEATED
        type: TYPE_STRING
        json_name: "names"
      }
      field {
        name: "id_prefixes"
        number: 2
        label: LABEL_REPEATED
        type: TYPE_STRING
        json_name: "idPrefixes"
      }
      field {
        name: "labels"
        number: 3
        label: LABEL_REPEATED
        type: TYPE_MESSAGE
        type_name: ".docker.swarmkit.v1.ListClustersRequest.Filters.LabelsEntry"
        json_name: "labels"
      }
      field {
        name: "name_prefixes"
        number: 4
        label: LABEL_REPEATED
        type: TYPE_STRING
        json_name: "namePrefixes"
      }
      nested_type {
        name: "LabelsEntry"
        field {
          name: "key"
          number: 1
          label: LABEL_OPTIONAL
          type: TYPE_STRING
          json_name: "key"
        }
        field {
          name: "value"
          number: 2
          label: LABEL_OPTIONAL
          type: TYPE_STRING
          json_name: "value"
        }
        options {
          map_entry: true
        }
      }
    }
  }
  message_type {
    name: "ListClustersResponse"
    field {
      name: "clusters"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".docker.swarmkit.v1.Cluster"
      json_name: "clusters"
    }
  }
  message_type {
    name: "KeyRotation"
    field {
      name: "worker_join_token"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "workerJoinToken"
    }
    field {
      name: "manager_join_token"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "managerJoinToken"
    }
    field {
      name: "manager_unlock_key"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "managerUnlockKey"
    }
  }
  message_type {
    name: "UpdateClusterRequest"
    field {
      name: "cluster_id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "clusterId"
    }
    field {
      name: "cluster_version"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".docker.swarmkit.v1.Version"
      json_name: "clusterVersion"
    }
    field {
      name: "spec"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".docker.swarmkit.v1.ClusterSpec"
      json_name: "spec"
    }
    field {
      name: "rotation"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".docker.swarmkit.v1.KeyRotation"
      options {
        65001: 0
      }
      json_name: "rotation"
    }
  }
```

----------------------------------------

TITLE: Listing Docker Services API Request/Response
DESCRIPTION: Example of listing Docker services using the GET /services endpoint. Shows the structure of the response including service details like ID, version, specifications, and endpoint configurations.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_100

LANGUAGE: http
CODE:
```
GET /v1.24/services HTTP/1.1
```

LANGUAGE: http
CODE:
```
HTTP/1.1 200 OK
Content-Type: application/json

[
  {
    "ID": "9mnpnzenvg8p8tdbtq4wvbkcz",
    "Version": {
      "Index": 19
    },
    "CreatedAt": "2016-06-07T21:05:51.880065305Z",
    "UpdatedAt": "2016-06-07T21:07:29.962229872Z",
    "Spec": {
      "Name": "hopeful_cori",
      "TaskTemplate": {
        "ContainerSpec": {
          "Image": "redis"
        },
        "Resources": {
          "Limits": {},
          "Reservations": {}
        },
        "RestartPolicy": {
          "Condition": "any",
          "MaxAttempts": 0
        },
        "Placement": {
          "Constraints": [
            "node.role == worker"
          ]
        }
      },
      "Mode": {
        "Replicated": {
          "Replicas": 1
        }
      },
      "UpdateConfig": {
        "Parallelism": 1,
        "FailureAction": "pause"
      },
      "EndpointSpec": {
        "Mode": "vip",
        "Ports": [
          {
            "Protocol": "tcp",
            "TargetPort": 6379,
            "PublishedPort": 30001
          }
        ]
      }
    },
    "Endpoint": {
      "Spec": {
        "Mode": "vip",
        "Ports": [
          {
            "Protocol": "tcp",
            "TargetPort": 6379,
            "PublishedPort": 30001
          }
        ]
      },
      "Ports": [
        {
          "Protocol": "tcp",
          "TargetPort": 6379,
          "PublishedPort": 30001
        }
      ],
      "VirtualIPs": [
        {
          "NetworkID": "4qvuz4ko70xaltuqbt8956gd1",
          "Addr": "10.255.0.2/16"
        },
        {
          "NetworkID": "4qvuz4ko70xaltuqbt8956gd1",
          "Addr": "10.255.0.3/16"
        }
      ]
    }
  }
]
```

----------------------------------------

TITLE: Inspect Swarm API Request/Response
DESCRIPTION: HTTP GET endpoint to inspect the swarm configuration. Returns detailed information about the swarm including specifications, join tokens, ID and version.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_95

LANGUAGE: HTTP
CODE:
```
GET /swarm
```

LANGUAGE: JSON
CODE:
```
HTTP/1.1 200 OK
Content-Type: application/json

{
  "CreatedAt" : "2016-08-15T16:00:20.349727406Z",
  "Spec" : {
    "Dispatcher" : {
      "HeartbeatPeriod" : 5000000000
    },
    "Orchestration" : {
     "TaskHistoryRetentionLimit" : 10
    },
    "CAConfig" : {
      "NodeCertExpiry" : 7776000000000000
    },
    "Raft" : {
      "LogEntriesForSlowFollowers" : 500,
      "HeartbeatTick" : 1,
      "SnapshotInterval" : 10000,
      "ElectionTick" : 3
    },
    "TaskDefaults" : {},
    "Name" : "default"
  },
 "JoinTokens" : {
    "Worker" : "SWMTKN-1-1h8aps2yszaiqmz2l3oc5392pgk8e49qhx2aj3nyv0ui0hez2a-6qmn92w6bu3jdvnglku58u11a",
    "Manager" : "SWMTKN-1-1h8aps2yszaiqmz2l3oc5392pgk8e49qhx2aj3nyv0ui0hez2a-8llk83c4wm9lwioey2s316r9l"
 },
 "ID" : "70ilmkj2f6sp2137c753w2nmt",
 "UpdatedAt" : "2016-08-15T16:32:09.623207604Z",
 "Version" : {
   "Index" : 51
}
}
```

----------------------------------------

TITLE: Listing Tasks with Docker API
DESCRIPTION: Example of listing tasks using GET /tasks endpoint with filters support. Returns an array of task objects with detailed information about their state, specifications, and network attachments.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_105

LANGUAGE: HTTP
CODE:
```
GET /v1.24/tasks HTTP/1.1
```

LANGUAGE: JSON
CODE:
```
[
  {
    "ID": "0kzzo1i0y4jz6027t0k7aezc7",
    "Version": {
      "Index": 71
    },
    "CreatedAt": "2016-06-07T21:07:31.171892745Z",
    "UpdatedAt": "2016-06-07T21:07:31.376370513Z",
    "Spec": {
      "ContainerSpec": {
        "Image": "redis"
      },
      "Resources": {
        "Limits": {},
        "Reservations": {}
      },
      "RestartPolicy": {
        "Condition": "any",
        "MaxAttempts": 0
      },
      "Placement": {}
    },
    "ServiceID": "9mnpnzenvg8p8tdbtq4wvbkcz",
    "Slot": 1,
    "NodeID": "60gvrl6tm78dmak4yl7srz94v",
    "Status": {
      "Timestamp": "2016-06-07T21:07:31.290032978Z",
      "State": "running",
      "Message": "started",
      "ContainerStatus": {
        "ContainerID": "e5d62702a1b48d01c3e02ca1e0212a250801fa8d67caca0b6f35919ebc12f035",
        "PID": 677
      }
    },
    "DesiredState": "running"
  }
]
```

----------------------------------------

TITLE: Defining NetworkOptionIpam Function for IPAM Configuration in Go
DESCRIPTION: Function signature for configuring IPAM options when creating a network. It specifies the IPAM driver, address space, IPv4/IPv6 configurations, and additional options.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/ipam.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
func NetworkOptionIpam(ipamDriver string, addrSpace string, ipV4 []*IpamConf, ipV6 []*IpamConf, opts map[string]string) NetworkOption
```

----------------------------------------

TITLE: Route Walking Implementation
DESCRIPTION: Demonstrates how to walk through all registered routes and inspect their properties including path templates, regular expressions, and methods.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gorilla/mux/README.md#2025-04-10_snippet_12

LANGUAGE: go
CODE:
```
package main

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

func handler(w http.ResponseWriter, r *http.Request) {
	return
}

func main() {
	r := mux.NewRouter()
	r.HandleFunc("/", handler)
	r.HandleFunc("/products", handler).Methods("POST")
	r.HandleFunc("/articles", handler).Methods("GET")
	r.HandleFunc("/articles/{id}", handler).Methods("GET", "PUT")
	r.HandleFunc("/authors", handler).Queries("surname", "{surname}")
	err := r.Walk(func(route *mux.Route, router *mux.Router, ancestors []*mux.Route) error {
		pathTemplate, err := route.GetPathTemplate()
		if err == nil {
			fmt.Println("ROUTE:", pathTemplate)
		}
		pathRegexp, err := route.GetPathRegexp()
		if err == nil {
			fmt.Println("Path regexp:", pathRegexp)
		}
		queriesTemplates, err := route.GetQueriesTemplates()
		if err == nil {
			fmt.Println("Queries templates:", strings.Join(queriesTemplates, ","))
		}
		queriesRegexps, err := route.GetQueriesRegexp()
		if err == nil {
			fmt.Println("Queries regexps:", strings.Join(queriesRegexps, ","))
		}
		methods, err := route.GetMethods()
		if err == nil {
			fmt.Println("Methods:", strings.Join(methods, ","))
		}
		fmt.Println()
		return nil
	})
```

----------------------------------------

TITLE: Using Logrus Logging Levels in Go
DESCRIPTION: This snippet showcases the seven logging levels available in Logrus: Trace, Debug, Info, Warning, Error, Fatal, and Panic. It demonstrates how to use each level and explains their severity.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/sirupsen/logrus/README.md#2025-04-10_snippet_6

LANGUAGE: go
CODE:
```
log.Trace("Something very low level.")
log.Debug("Useful debugging information.")
log.Info("Something noteworthy happened!")
log.Warn("You should probably take a look at this.")
log.Error("Something failed but I'm not quitting.")
// Calls os.Exit(1) after logging
log.Fatal("Bye.")
// Calls panic() after logging
log.Panic("I'm bailing.")
```

----------------------------------------

TITLE: Listing Docker Volumes via HTTP GET
DESCRIPTION: HTTP GET request to retrieve a list of Docker volumes, including their names, drivers, and mountpoints.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_78

LANGUAGE: http
CODE:
```
GET /v1.24/volumes HTTP/1.1
```

----------------------------------------

TITLE: Leaving a Docker Swarm
DESCRIPTION: POST request to /swarm/leave endpoint to leave a swarm. Includes an optional force parameter to leave even if it's the last manager.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_98

LANGUAGE: HTTP
CODE:
```
POST /v1.24/swarm/leave HTTP/1.1
```

----------------------------------------

TITLE: Inspecting Individual Task
DESCRIPTION: Example of inspecting a specific task by ID using GET /tasks/(id) endpoint. Returns detailed information about a single task including its specifications, state, and network configuration.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_106

LANGUAGE: HTTP
CODE:
```
GET /v1.24/tasks/0kzzo1i0y4jz6027t0k7aezc7 HTTP/1.1
```

LANGUAGE: JSON
CODE:
```
{
  "ID": "0kzzo1i0y4jz6027t0k7aezc7",
  "Version": {
    "Index": 71
  },
  "CreatedAt": "2016-06-07T21:07:31.171892745Z",
  "UpdatedAt": "2016-06-07T21:07:31.376370513Z",
  "Spec": {
    "ContainerSpec": {
      "Image": "redis"
    },
    "Resources": {
      "Limits": {},
      "Reservations": {}
    },
    "RestartPolicy": {
      "Condition": "any",
      "MaxAttempts": 0
    },
    "Placement": {}
  },
  "ServiceID": "9mnpnzenvg8p8tdbtq4wvbkcz",
  "Slot": 1,
  "NodeID": "60gvrl6tm78dmak4yl7srz94v",
  "Status": {
    "Timestamp": "2016-06-07T21:07:31.290032978Z",
    "State": "running",
    "Message": "started",
    "ContainerStatus": {
      "ContainerID": "e5d62702a1b48d01c3e02ca1e0212a250801fa8d67caca0b6f35919ebc12f035",
      "PID": 677
    }
  },
  "DesiredState": "running"
}
```

----------------------------------------

TITLE: Defining Volume Message Structure in Protobuf
DESCRIPTION: Definition of a Volume message type with fields for ID, metadata, specifications, publish status, volume info, and pending delete status. Used for managing persistent storage volumes in Docker Swarm.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_89

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "Volume"
  field {
    name: "id"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "id"
  }
  field {
    name: "meta"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Meta"
    options {
      65001: 0
    }
    json_name: "meta"
  }
  field {
    name: "spec"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.VolumeSpec"
    options {
      65001: 0
    }
    json_name: "spec"
  }
  field {
    name: "publish_status"
    number: 4
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.VolumePublishStatus"
    json_name: "publishStatus"
  }
  field {
    name: "volume_info"
    number: 5
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.VolumeInfo"
    json_name: "volumeInfo"
  }
  field {
    name: "pending_delete"
    number: 6
    label: LABEL_OPTIONAL
    type: TYPE_BOOL
    json_name: "pendingDelete"
  }
  options {
    70001 {
      1 {
        1: 1
        2: 1
```

----------------------------------------

TITLE: Listing Container Processes with Custom Parameters
DESCRIPTION: Makes an HTTP GET request to list container processes with custom 'ps' arguments. The ps_args parameter allows specifying alternative options to the 'ps' command for customizing the output format.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_18

LANGUAGE: HTTP
CODE:
```
GET /v1.24/containers/4fa6e0f0c678/top?ps_args=aux HTTP/1.1
```

----------------------------------------

TITLE: Resizing Container TTY via HTTP Request
DESCRIPTION: Example HTTP POST request to resize the TTY for a container with ID '4fa6e0f0c678'. The query parameters specify the height (h) and width (w) in characters.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_26

LANGUAGE: http
CODE:
```
POST /v1.24/containers/4fa6e0f0c678/resize?h=40&w=80 HTTP/1.1
```

----------------------------------------

TITLE: Docker Events API Response Example
DESCRIPTION: This snippet shows an example response from the Docker Events API. It includes multiple events such as image pulls, container creation, network connections, and container lifecycle events. Each event is represented as a JSON object with details like status, type, and timestamp.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_69

LANGUAGE: json
CODE:
```
{
  "status": "pull",
  "id": "alpine:latest",
  "Type": "image",
  "Action": "pull",
  "Actor": {
    "ID": "alpine:latest",
    "Attributes": {
      "name": "alpine"
    }
  },
  "time": 1461943101,
  "timeNano": 1461943101301854122
}
```

----------------------------------------

TITLE: Initializing Procfs and Reading System Statistics in Go
DESCRIPTION: Demonstrates how to initialize the procfs filesystem with a mount point and read system statistics from /proc/stat. This is the basic pattern for accessing proc filesystem data.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/prometheus/procfs/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
fs, err := procfs.NewFS("/proc")
stats, err := fs.Stat()
```

----------------------------------------

TITLE: Checking Docker Version on macOS/Windows
DESCRIPTION: Command to verify Docker installation and check its version on macOS or Windows systems.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/software-required.md#2025-04-10_snippet_3

LANGUAGE: bash
CODE:
```
$ docker --version
Docker version 17.10.0-ce, build f4ffd25
```

----------------------------------------

TITLE: Configuring Docker Runtimes with JSON Configuration
DESCRIPTION: Example of registering multiple runtimes via the Docker daemon configuration file. This shows how to set a default runtime (runc) and define a custom runtime with additional arguments.
SOURCE: https://github.com/moby/moby/blob/master/man/dockerd.8.md#2025-04-10_snippet_1

LANGUAGE: json
CODE:
```
{
	"default-runtime": "runc",
	"runtimes": {
		"runc": {
			"path": "runc"
		},
		"custom": {
			"path": "/usr/local/bin/my-runc-replacement",
			"runtimeArgs": [
				"--debug"
			]
		}
	}
}
```

----------------------------------------

TITLE: Defining Mount Message in Protocol Buffers
DESCRIPTION: This complex message type defines volume mounting options for containers in Docker Swarm, including mount type, source, target, and read-only status, plus specialized options for bind mounts, volumes, and tmpfs mounts.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_29

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "Mount"
  field {
    name: "type"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.Mount.Type"
    json_name: "type"
  }
  field {
    name: "source"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "source"
  }
  field {
    name: "target"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "target"
  }
  field {
    name: "readonly"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_BOOL
    options {
      65004: "ReadOnly"
    }
    json_name: "readonly"
  }
  field {
    name: "consistency"
    number: 8
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.Mount.Consistency"
    json_name: "consistency"
  }
  field {
    name: "bind_options"
    number: 5
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Mount.BindOptions"
    json_name: "bindOptions"
  }
  field {
    name: "volume_options"
    number: 6
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Mount.VolumeOptions"
    json_name: "volumeOptions"
  }
  field {
    name: "tmpfs_options"
    number: 7
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Mount.TmpfsOptions"
    json_name: "tmpfsOptions"
  }
```

----------------------------------------

TITLE: Creating a user-defined Docker network and running a container with port mapping
DESCRIPTION: Commands to create a custom Docker bridge network named 'bridge1' with a specific subnet and gateway, then running a container on that network with port 8080 mapped to container port 80.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/templates/usernet-portmap.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
docker network create \
  -o com.docker.network.bridge.name=bridge1 \
  --subnet 192.0.2.0/24 --gateway 192.0.2.1 bridge1
docker run --network bridge1 -p 8080:80 --name c1 busybox
```

----------------------------------------

TITLE: Create/Pull Docker Image API
DESCRIPTION: POST endpoint to create a Docker image either by pulling from a registry or importing from a source. Supports authentication and various image source parameters.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_52

LANGUAGE: http
CODE:
```
POST /v1.24/images/create?fromImage=busybox&tag=latest HTTP/1.1
```

LANGUAGE: json
CODE:
```
{"status": "Pulling..."}
{"status": "Pulling", "progress": "1 B/ 100 B", "progressDetail": {"current": 1, "total": 100}}
{"error": "Invalid..."}
```

----------------------------------------

TITLE: Performing Database Backups in BoltDB with Go
DESCRIPTION: This code demonstrates how to perform a hot backup of a BoltDB database over HTTP. It uses the Tx.WriteTo() function to write a consistent view of the database to an HTTP response writer.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_18

LANGUAGE: go
CODE:
```
func BackupHandleFunc(w http.ResponseWriter, req *http.Request) {
	err := db.View(func(tx *bolt.Tx) error {
		w.Header().Set("Content-Type", "application/octet-stream")
		w.Header().Set("Content-Disposition", `attachment; filename="my.db"`)
		w.Header().Set("Content-Length", strconv.Itoa(int(tx.Size())))
		_, err := tx.WriteTo(w)
		return err
	})
	if err != nil {
		http.Error(w, err.Error(), http.StatusInternalServerError)
	}
}
```

----------------------------------------

TITLE: Fetching Container Logs with Docker API
DESCRIPTION: Makes an HTTP GET request to retrieve container logs. This request includes query parameters for specifying which output streams to include, timestamp preferences, and limiting the output to specific lines or time ranges.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_20

LANGUAGE: HTTP
CODE:
```
GET /v1.24/containers/4fa6e0f0c678/logs?stderr=1&stdout=1&timestamps=1&follow=1&tail=10&since=1428990821 HTTP/1.1
```

----------------------------------------

TITLE: Interactive Shell Implementation with PTY in Go
DESCRIPTION: Advanced example implementing an interactive shell with PTY, featuring terminal raw mode, window size handling, and bidirectional data copying. Includes signal handling for terminal resize events and proper cleanup.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/creack/pty/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
package main

import (
        "io"
        "log"
        "os"
        "os/exec"
        "os/signal"
        "syscall"

        "github.com/creack/pty"
        "golang.org/x/term"
)

func test() error {
        // Create arbitrary command.
        c := exec.Command("bash")

        // Start the command with a pty.
        ptmx, err := pty.Start(c)
        if err != nil {
                return err
        }
        // Make sure to close the pty at the end.
        defer func() { _ = ptmx.Close() }() // Best effort.

        // Handle pty size.
        ch := make(chan os.Signal, 1)
        signal.Notify(ch, syscall.SIGWINCH)
        go func() {
                for range ch {
                        if err := pty.InheritSize(os.Stdin, ptmx); err != nil {
                                log.Printf("error resizing pty: %s", err)
                        }
                }
        }()
        ch <- syscall.SIGWINCH // Initial resize.
        defer func() { signal.Stop(ch); close(ch) }() // Cleanup signals when done.

        // Set stdin in raw mode.
        oldState, err := term.MakeRaw(int(os.Stdin.Fd()))
        if err != nil {
                panic(err)
        }
        defer func() { _ = term.Restore(int(os.Stdin.Fd()), oldState) }() // Best effort.

        // Copy stdin to the pty and the pty to stdout.
        // NOTE: The goroutine will keep reading until the next keystroke before returning.
        go func() { _, _ = io.Copy(ptmx, os.Stdin) }()
        _, _ = io.Copy(os.Stdout, ptmx)

        return nil
}

func main() {
        if err := test(); err != nil {
                log.Fatal(err)
        }
}
```

----------------------------------------

TITLE: List Containers Response
DESCRIPTION: Example HTTP response containing a JSON array of container objects. Each container object includes detailed information about the container's configuration, network settings, and mount points.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_2

LANGUAGE: http
CODE:
```
HTTP/1.1 200 OK
Content-Type: application/json
```

LANGUAGE: json
CODE:
```
[
         {
                 "Id": "8dfafdbc3a40",
                 "Names":["/boring_feynman"],
                 "Image": "ubuntu:latest",
                 "ImageID": "d74508fb6632491cea586a1fd7d748dfc5274cd6fdfedee309ecdcbc2bf5cb82",
                 "Command": "echo 1",
                 "Created": 1367854155,
                 "State": "exited",
                 "Status": "Exit 0",
                 "Ports": [{"PrivatePort": 2222, "PublicPort": 3333, "Type": "tcp"}],
                 "Labels": {
                         "com.example.vendor": "Acme",
                         "com.example.license": "GPL",
                         "com.example.version": "1.0"
                 },
                 "SizeRw": 12288,
                 "SizeRootFs": 0,
                 "HostConfig": {
                         "NetworkMode": "default"
                 },
                 "NetworkSettings": {
                         "Networks": {
                                 "bridge": {
                                          "IPAMConfig": null,
                                          "Links": null,
                                          "Aliases": null,
                                          "NetworkID": "7ea29fc1412292a2d7bba362f9253545fecdfa8ce9a6e37dd10ba8bee7129812",
                                          "EndpointID": "2cdc4edb1ded3631c81f57966563e5c8525b81121bb3706a9a9a3ae102711f3f",
                                          "Gateway": "172.17.0.1",
                                          "IPAddress": "172.17.0.2",
                                          "IPPrefixLen": 16,
                                          "IPv6Gateway": "",
                                          "GlobalIPv6Address": "",
                                          "GlobalIPv6PrefixLen": 0,
                                          "MacAddress": "02:42:ac:11:00:02"
                                  }
                         }
                 },
                 "Mounts": [
                         {
                                  "Name": "fac362...80535",
                                  "Source": "/data",
                                  "Destination": "/data",
                                  "Driver": "local",
                                  "Mode": "ro,Z",
                                  "RW": false,
                                  "Propagation": ""
                         }
                 ]
         }]
```

----------------------------------------

TITLE: Container Rename Response
DESCRIPTION: Example HTTP response for a successful container rename operation, showing a 204 No Content status code.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_39

LANGUAGE: http
CODE:
```
HTTP/1.1 204 No Content
```

----------------------------------------

TITLE: Configuring Git User Information
DESCRIPTION: Commands to configure Git username and email for the repository
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/set-up-git.md#2025-04-10_snippet_3

LANGUAGE: bash
CODE:
```
$ git config --local user.name "FirstName LastName"
$ git config --local user.email "emailname@mycompany.com"
```

----------------------------------------

TITLE: Using SugaredLogger for Convenient Structured Logging in Go
DESCRIPTION: Demonstrates how to use Zap's SugaredLogger for convenient structured logging with both key-value pairs and printf-style formatting. The SugaredLogger offers a balance between performance and ease of use.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.uber.org/zap/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
logger, _ := zap.NewProduction()
defer logger.Sync() // flushes buffer, if any
sugar := logger.Sugar()
sugar.Infow("failed to fetch URL",
  // Structured context as loosely typed key-value pairs.
  "url", url,
  "attempt", 3,
  "backoff", time.Second,
)
sugar.Infof("Failed to fetch URL: %s", url)
```

----------------------------------------

TITLE: Serving Single Page Applications with Go and Gorilla Mux
DESCRIPTION: Provides a complete example of serving a Single Page Application (SPA) alongside API endpoints using Gorilla Mux, including custom SPA handler implementation.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gorilla/mux/README.md#2025-04-10_snippet_9

LANGUAGE: go
CODE:
```
package main

import (
	"encoding/json"
	"log"
	"net/http"
	"os"
	"path/filepath"
	"time"

	"github.com/gorilla/mux"
)

// spaHandler implements the http.Handler interface, so we can use it
// to respond to HTTP requests. The path to the static directory and
// path to the index file within that static directory are used to
// serve the SPA in the given static directory.
type spaHandler struct {
	staticPath string
	indexPath  string
}

// ServeHTTP inspects the URL path to locate a file within the static dir
// on the SPA handler. If a file is found, it will be served. If not, the
// file located at the index path on the SPA handler will be served. This
// is suitable behavior for serving an SPA (single page application).
func (h spaHandler) ServeHTTP(w http.ResponseWriter, r *http.Request) {
	// Join internally call path.Clean to prevent directory traversal
	path := filepath.Join(h.staticPath, r.URL.Path)

	// check whether a file exists or is a directory at the given path
	fi, err := os.Stat(path)
	if os.IsNotExist(err) || fi.IsDir() {
		// file does not exist or path is a directory, serve index.html
		http.ServeFile(w, r, filepath.Join(h.staticPath, h.indexPath))
		return
	}

	if err != nil {
		// if we got an error (that wasn't that the file doesn't exist) stating the
		// file, return a 500 internal server error and stop
		http.Error(w, err.Error(), http.StatusInternalServerError)
        return
	}

	// otherwise, use http.FileServer to serve the static file
	http.FileServer(http.Dir(h.staticPath)).ServeHTTP(w, r)
}

func main() {
	router := mux.NewRouter()

	router.HandleFunc("/api/health", func(w http.ResponseWriter, r *http.Request) {
		// an example API handler
		json.NewEncoder(w).Encode(map[string]bool{"ok": true})
	})

	spa := spaHandler{staticPath: "build", indexPath: "index.html"}
	router.PathPrefix("/").Handler(spa)

	srv := &http.Server{
		Handler: router,
		Addr:    "127.0.0.1:8000",
		// Good practice: enforce timeouts for servers you create!
		WriteTimeout: 15 * time.Second,
		ReadTimeout:  15 * time.Second,
	}

	log.Fatal(srv.ListenAndServe())
}
```

----------------------------------------

TITLE: Compressing a Buffer using Zstandard in Go
DESCRIPTION: This snippet shows how to compress a byte slice using a reusable Zstandard encoder. It creates a cached writer and uses the EncodeAll method to compress the input buffer, which can be called concurrently and runs without allocations after a warmup period.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/klauspost/compress/zstd/README.md#2025-04-10_snippet_1

LANGUAGE: Go
CODE:
```
import "github.com/klauspost/compress/zstd"

// Create a writer that caches compressors.
// For this operation type we supply a nil Reader.
var encoder, _ = zstd.NewWriter(nil)

// Compress a buffer. 
// If you have a destination buffer, the allocation in the call can also be eliminated.
func Compress(src []byte) []byte {
    return encoder.EncodeAll(src, make([]byte, 0, len(src)))
}
```

----------------------------------------

TITLE: Opening a bbolt Database in Go
DESCRIPTION: Go code demonstrating how to open a bbolt database file, create it if it doesn't exist, and handle errors.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_4

LANGUAGE: go
CODE:
```
package main

import (
	"log"

	bolt "go.etcd.io/bbolt"
)

func main() {
	// Open the my.db data file in your current directory.
	// It will be created if it doesn't exist.
	db, err := bolt.Open("my.db", 0600, nil)
	if err != nil {
		log.Fatal(err)
	}
	defer db.Close()

	...
}
```

----------------------------------------

TITLE: Custom Flag Value Implementation
DESCRIPTION: Example of creating custom flags using the Value interface.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/spf13/pflag/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
flag.Var(&flagVal, "name", "help message for flagname")
```

----------------------------------------

TITLE: Creating Macvlan Network with Inferred Gateways and IP Range Restrictions in Docker
DESCRIPTION: This example shows how to create a Macvlan network with inferred gateways, IP range restrictions, and reserved addresses. It demonstrates the use of --ip-range and --aux-address options in network creation.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/macvlan.md#2025-04-10_snippet_11

LANGUAGE: bash
CODE:
```
docker network create -d macvlan \
  --subnet=192.168.136.0/24 \
  --subnet=192.168.138.0/24 \
  --ipv6 --subnet=fd11::/64 \
  --ip-range=192.168.136.0/25 \
  --ip-range=192.168.138.0/25 \
  --aux-address="reserved1=fd11::2" \
  --aux-address="reserved2=192.168.136.2" \
  --aux-address="reserved3=192.168.138.2" \
  -o parent=eth0 mcv0

docker run --net=mcv0 -it --rm alpine /bin/sh
```

----------------------------------------

TITLE: Allowing Service Traffic on Host Forwarding Chain
DESCRIPTION: These iptables rules in the host namespace's filter FORWARD chain allow incoming traffic to the service's published port (30000) and the related established connections for return traffic.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/network.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
ACCEPT  tcp  --  anywhere anywhere tcp dpt:30000
```

LANGUAGE: bash
CODE:
```
ACCEPT tcp  --  anywhere anywhere state RELATED,ESTABLISHED tcp spt:30000
```

----------------------------------------

TITLE: Combining Multiple Matchers in Go using Gorilla Mux
DESCRIPTION: Shows how to combine multiple matchers in a single route for more specific matching.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gorilla/mux/README.md#2025-04-10_snippet_6

LANGUAGE: go
CODE:
```
r.HandleFunc("/products", ProductsHandler).
  Host("www.example.com").
  Methods("GET").
  Schemes("http")
```

----------------------------------------

TITLE: Container Filesystem Changes Response
DESCRIPTION: JSON response showing changes to a container's filesystem. Each entry includes the path that was modified and a 'Kind' value indicating whether the file was modified (0), added (1), or deleted (2).
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_22

LANGUAGE: JSON
CODE:
```
[
     {
             "Path": "/dev",
             "Kind": 0
     },
     {
             "Path": "/dev/kmsg",
             "Kind": 1
     },
     {
             "Path": "/test",
             "Kind": 1
     }
]
```

----------------------------------------

TITLE: Configuring Port Bindings for Docker Containers
DESCRIPTION: Maps exposed container ports to host ports, allowing network traffic to reach the container. The configuration specifies which host port should be mapped to which container port and protocol.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_7

LANGUAGE: json
CODE:
```
{ <port>/<protocol>: [{ "HostPort": "<port>" }] }
```

----------------------------------------

TITLE: Creating Macvlan Network with VLAN ID 60 and Explicit Bridge Mode
DESCRIPTION: Creates a Macvlan network with VLAN ID 60 using the parent interface eth0.60 and explicitly setting macvlan_mode to bridge. This configures the network with subnet 192.168.60.0/24.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/macvlan.md#2025-04-10_snippet_7

LANGUAGE: bash
CODE:
```
# now add networks and hosts as you would normally by attaching to the master (sub)interface that is tagged.
docker network create -d macvlan \
    --subnet=192.168.60.0/24 \
    --gateway=192.168.60.1 \
    -o parent=eth0.60 -o \
    -o macvlan_mode=bridge macvlan60

# In two separate terminals, start a Docker container and the containers can now ping one another.
docker run --net=macvlan60 -it --name macvlan_test7 --rm alpine /bin/sh
docker run --net=macvlan60 -it --name macvlan_test8 --rm alpine /bin/sh
```

----------------------------------------

TITLE: Using deadlock.RWMutex in Go code
DESCRIPTION: Example of how to use the deadlock.RWMutex as a drop-in replacement for sync.RWMutex. This demonstrates read locking and unlocking operations with deadlock detection.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/sasha-s/go-deadlock/Readme.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
var rw deadlock.RWMutex
rw.RLock()
defer rw.RUnlock()
```

----------------------------------------

TITLE: Creating a Bridge and Adding an Interface in Go with Netlink
DESCRIPTION: This example demonstrates how to create a new network bridge named 'foo' and add an existing interface 'eth1' to it using the netlink library. It uses LinkAdd to create the bridge and LinkSetMaster to add the interface to the bridge.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/vishvananda/netlink/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
package main

import (
    "fmt"
    "github.com/vishvananda/netlink"
)

func main() {
    la := netlink.NewLinkAttrs()
    la.Name = "foo"
    mybridge := &netlink.Bridge{LinkAttrs: la}
    err := netlink.LinkAdd(mybridge)
    if err != nil  {
        fmt.Printf("could not add %s: %v\n", la.Name, err)
    }
    eth1, _ := netlink.LinkByName("eth1")
    netlink.LinkSetMaster(eth1, mybridge)
}
```

----------------------------------------

TITLE: Executing Read-Write Transaction in bbolt
DESCRIPTION: Go code demonstrating how to start and execute a read-write transaction in bbolt using DB.Update().
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_6

LANGUAGE: go
CODE:
```
err := db.Update(func(tx *bolt.Tx) error {
	...
	return nil
})
```

----------------------------------------

TITLE: Viewing Container Network Details in Docker Macvlan Network
DESCRIPTION: This snippet shows how to view network details from within a container in a Macvlan network, including IP addresses, routes, and interface information for both IPv4 and IPv6.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/macvlan.md#2025-04-10_snippet_10

LANGUAGE: bash
CODE:
```
docker run --net=macvlan216 --ip=192.168.216.11 -it --rm alpine /bin/sh

root@526f3060d759:/# ip a show eth0
25: eth0@if19: <BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN> mtu 1500 qdisc noqueue state UNKNOWN
    link/ether 02:42:c0:a8:d8:0b brd ff:ff:ff:ff:ff:ff
    inet 192.168.216.11/24 scope global eth0
       valid_lft forever preferred_lft forever
    inet6 2001:db8:abc8::1/64 scope link
       valid_lft forever preferred_lft forever

# The default gateway is a network gateway external to the Docker host
$ ip route
default via 192.168.216.1 dev eth0
192.168.216.0/24 dev eth0  src 192.168.216.11

# Specified v6 gateway of 2001:db8:abc8::10
$ ip -6 route
  2001:db8:abc4::/64 dev eth0  proto kernel  metric 256
  2001:db8:abc8::/64 dev eth0  proto kernel  metric 256
  default via 2001:db8:abc8::10 dev eth0  metric 1024

#Containers can have both v4 and v6 addresses assigned to their interfaces or
# Both v4 and v6 addresses can be assigned to the container's interface
docker run --net=macvlan216 --ip=192.168.216.50  --ip6=2001:db8:abc8::50 -it --rm alpine /bin/sh

# View the details of the dual stack eth0 interface from inside of the container
$ ip a show eth0
95: eth0@if91: <BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN> mtu 1500 qdisc noqueue state UNKNOWN
    link/ether 02:42:c0:a8:d8:32 brd ff:ff:ff:ff:ff:ff
    inet 192.168.216.50/24 scope global eth0
       valid_lft forever preferred_lft forever
    inet6 2001:db8:abc8::50/64 scope global flags 02
       valid_lft forever preferred_lft forever
```

----------------------------------------

TITLE: Creating and Managing Test Branch
DESCRIPTION: Commands for creating, checking out, and verifying branch creation
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/set-up-git.md#2025-04-10_snippet_5

LANGUAGE: bash
CODE:
```
$ git checkout -b dry-run-test
$ git branch
```

----------------------------------------

TITLE: Basic Logrus Usage Example in Go
DESCRIPTION: Demonstrates the simplest way to use Logrus with package-level logger and field-based logging.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/sirupsen/logrus/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
package main

import (
  log "github.com/sirupsen/logrus"
)

func main() {
  log.WithFields(log.Fields{
    "animal": "walrus",
  }).Info("A walrus appears")
}
```

----------------------------------------

TITLE: Defining ConfChangeType Enum in Protobuf for Raft
DESCRIPTION: Protocol Buffer definition for the ConfChangeType enum used in Raft consensus algorithm. This enumeration defines types of configuration changes, including adding and removing nodes, updating nodes, and adding learner nodes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_116

LANGUAGE: protobuf
CODE:
```
enum_type {
  name: "ConfChangeType"
  value {
    name: "ConfChangeAddNode"
    number: 0
  }
  value {
    name: "ConfChangeRemoveNode"
    number: 1
  }
  value {
    name: "ConfChangeUpdateNode"
    number: 2
  }
  value {
    name: "ConfChangeAddLearnerNode"
    number: 3
  }
}
```

----------------------------------------

TITLE: Defining TaskSpec Message in Protocol Buffers
DESCRIPTION: Defines the TaskSpec message type, which includes fields for task runtime options, resource requirements, restart policies, placement constraints, logging, networking, and update behaviors. This structure is used to configure individual tasks within a service in a Docker Swarm cluster.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_64

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "TaskSpec"
  field {
    name: "attachment"
    number: 8
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.NetworkAttachmentSpec"
    oneof_index: 0
    json_name: "attachment"
  }
  field {
    name: "container"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.ContainerSpec"
    oneof_index: 0
    json_name: "container"
  }
  field {
    name: "generic"
    number: 10
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.GenericRuntimeSpec"
    oneof_index: 0
    json_name: "generic"
  }
  field {
    name: "resources"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.ResourceRequirements"
    json_name: "resources"
  }
  field {
    name: "restart"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.RestartPolicy"
    json_name: "restart"
  }
  field {
    name: "placement"
    number: 5
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Placement"
    json_name: "placement"
  }
  field {
    name: "log_driver"
    number: 6
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Driver"
    json_name: "logDriver"
  }
  field {
    name: "networks"
    number: 7
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.NetworkAttachmentConfig"
    json_name: "networks"
  }
  field {
    name: "force_update"
    number: 9
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    json_name: "forceUpdate"
  }
  field {
    name: "resource_references"
    number: 11
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.ResourceReference"
    options {
      65001: 0
    }
    json_name: "resourceReferences"
  }
  oneof_decl {
    name: "runtime"
  }
}
```

----------------------------------------

TITLE: Complete Gorilla Mux Server Example
DESCRIPTION: Minimal working example of a Gorilla Mux-based web server. This code sets up a router with a single route that responds with a text message.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gorilla/mux/README.md#2025-04-10_snippet_23

LANGUAGE: go
CODE:
```
package main

import (
    "net/http"
    "log"
    "github.com/gorilla/mux"
)

func YourHandler(w http.ResponseWriter, r *http.Request) {
    w.Write([]byte("Gorilla!\n"))
}

func main() {
    r := mux.NewRouter()
    // Routes consist of a path and a handler function.
    r.HandleFunc("/", YourHandler)

    // Bind to a port and pass our router in
    log.Fatal(http.ListenAndServe(":8000", r))
}
```

----------------------------------------

TITLE: Docker SwarmKit Control API Protocol Buffer Definition
DESCRIPTION: Protocol Buffer schema defining the control API for Docker SwarmKit. Includes message definitions for node management, task handling, and service operations with their associated request and response structures. Dependencies include specs.proto, objects.proto, types.proto and other core protobuf definitions.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_90

LANGUAGE: protobuf
CODE:
```
syntax: "proto3"

file {
  name: "github.com/docker/swarmkit/api/control.proto"
  package: "docker.swarmkit.v1"
  dependency: "github.com/docker/swarmkit/api/specs.proto"
  dependency: "github.com/docker/swarmkit/api/objects.proto"
  dependency: "github.com/docker/swarmkit/api/types.proto"
  dependency: "gogoproto/gogo.proto"
  dependency: "google/protobuf/any.proto"
  dependency: "github.com/docker/swarmkit/protobuf/plugin/plugin.proto"
  
  message_type {
    name: "GetNodeRequest"
    field {
      name: "node_id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "nodeId"
    }
  }
  // Additional message definitions follow...
}
```

----------------------------------------

TITLE: Defining Cluster Message Structure in Protobuf
DESCRIPTION: Definition of a Cluster message type with fields for ID, metadata, specifications, root CA, network bootstrap keys, and other cluster-related properties. Includes a nested BlacklistedCertificatesEntry type and indexing options.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_84

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "Cluster"
  field {
    name: "id"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "id"
  }
  field {
    name: "meta"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Meta"
    options {
      65001: 0
    }
    json_name: "meta"
  }
  field {
    name: "spec"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.ClusterSpec"
    options {
      65001: 0
    }
    json_name: "spec"
  }
  field {
    name: "root_ca"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.RootCA"
    options {
      65001: 0
      65004: "RootCA"
    }
    json_name: "rootCa"
  }
  field {
    name: "network_bootstrap_keys"
    number: 5
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.EncryptionKey"
    json_name: "networkBootstrapKeys"
  }
  field {
    name: "encryption_key_lamport_clock"
    number: 6
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    json_name: "encryptionKeyLamportClock"
  }
  field {
    name: "blacklisted_certificates"
    number: 8
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Cluster.BlacklistedCertificatesEntry"
    json_name: "blacklistedCertificates"
  }
  field {
    name: "unlock_keys"
    number: 9
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.EncryptionKey"
    json_name: "unlockKeys"
  }
  field {
    name: "fips"
    number: 10
    label: LABEL_OPTIONAL
    type: TYPE_BOOL
    options {
      65004: "FIPS"
    }
    json_name: "fips"
  }
  field {
    name: "defaultAddressPool"
    number: 11
    label: LABEL_REPEATED
    type: TYPE_STRING
    json_name: "defaultAddressPool"
  }
  field {
    name: "subnetSize"
    number: 12
    label: LABEL_OPTIONAL
    type: TYPE_UINT32
    json_name: "subnetSize"
  }
  field {
    name: "VXLANUDPPort"
    number: 13
    label: LABEL_OPTIONAL
    type: TYPE_UINT32
    json_name: "VXLANUDPPort"
  }
  nested_type {
    name: "BlacklistedCertificatesEntry"
    field {
      name: "key"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "key"
    }
    field {
      name: "value"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".docker.swarmkit.v1.BlacklistedCertificate"
      json_name: "value"
    }
    options {
      map_entry: true
    }
  }
  options {
    70001 {
      1 {
        1: 1
        2: 1
        3: 1
        4: 1
        5: 1
        6: 1
      }
    }
  }
}
```

----------------------------------------

TITLE: Configuring Azure Blob SDK Generation Settings
DESCRIPTION: Core configuration settings for generating the Azure Blob Storage SDK including version, input specifications, and code generation parameters.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-10_snippet_0

LANGUAGE: yaml
CODE:
```
go: true
clear-output-folder: false
version: "^3.0.0"
license-header: MICROSOFT_MIT_NO_VERSION
input-file: "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/f6f50c6388fd5836fa142384641b8353a99874ef/specification/storage/data-plane/Microsoft.BlobStorage/stable/2024-08-04/blob.json"
credential-scope: "https://storage.azure.com/.default"
output-folder: ../generated
file-prefix: "zz_"
openapi-type: "data-plane"
verbose: true
security: AzureKey
modelerfour:
  group-parameters: false
  seal-single-value-enum-by-default: true
  lenient-model-deduplication: true
export-clients: true
use: "@autorest/go@4.0.0-preview.65"
```

----------------------------------------

TITLE: Default Filter Table IPTables Configuration
DESCRIPTION: Shows the initial filter table configuration with chains INPUT, FORWARD, OUTPUT, DOCKER, DOCKER-BRIDGE, DOCKER-CT, DOCKER-FORWARD, DOCKER-ISOLATION stages, and DOCKER-USER. Includes packet counts, bytes, and rule specifications.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/new-daemon.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
Chain INPUT (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         

Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DOCKER-USER  0    --  *      *       0.0.0.0/0            0.0.0.0/0           
2        0     0 DOCKER-FORWARD  0    --  *      *       0.0.0.0/0            0.0.0.0/0           
[...continued chain definitions...]
```

----------------------------------------

TITLE: Displaying PkgGoDev Badge for OpenTelemetry Baggage Package in Markdown
DESCRIPTION: Markdown code that creates a badge with a link to the OpenTelemetry baggage package documentation on pkg.go.dev. This provides users with easy access to the official Go package documentation.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/baggage/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/baggage)](https://pkg.go.dev/go.opentelemetry.io/otel/baggage)
```

----------------------------------------

TITLE: Starting a Container via HTTP Request
DESCRIPTION: Example HTTP POST request to start a container with ID 'e90e34656806'.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_28

LANGUAGE: http
CODE:
```
POST /v1.24/containers/e90e34656806/start HTTP/1.1
```

----------------------------------------

TITLE: Defining ClusterSpec Message in Protocol Buffers for Docker Swarmkit v1
DESCRIPTION: This snippet defines the ClusterSpec message type, which includes fields for cluster configuration such as orchestration settings, Raft configuration, dispatcher settings, CA configuration, and encryption options in a Docker Swarm.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_69

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "ClusterSpec"
  field {
    name: "annotations"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Annotations"
    options {
      65001: 0
    }
    json_name: "annotations"
  }
  // ... (additional fields omitted for brevity)
}
```

----------------------------------------

TITLE: Docker Container Creation API Response
DESCRIPTION: This snippet shows the expected HTTP response after successfully creating a Docker container. It includes the container ID and any warnings.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_4

LANGUAGE: http
CODE:
```
HTTP/1.1 201 Created
Content-Type: application/json

{
     "Id":"e90e34656806",
     "Warnings":[]
}
```

----------------------------------------

TITLE: Creating and Using Macvlan Network
DESCRIPTION: Commands to create a Macvlan network and run containers using it, including network creation with specific subnet and gateway settings, and container deployment with IP assignment
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/macvlan.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
# Macvlan  (-o macvlan_mode= Defaults to Bridge mode if not specified)
docker network create -d macvlan \
    --subnet=172.16.86.0/24 \
    --gateway=172.16.86.1  \
    -o parent=eth0 pub_net

# Run a container on the new network specifying the --ip address.
docker  run --net=pub_net --ip=172.16.86.10 -itd alpine /bin/sh

# Start a second container and ping the first
docker  run --net=pub_net -it --rm alpine /bin/sh
ping -c 4 172.16.86.10
```

----------------------------------------

TITLE: Implementing Basic File System Watcher in Go
DESCRIPTION: This snippet demonstrates how to create a basic file system watcher using the fsnotify library. It shows how to create a new watcher, start listening for events, add a path to watch, and handle events and errors.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/fsnotify/fsnotify/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
package main

import (
    "log"

    "github.com/fsnotify/fsnotify"
)

func main() {
    // Create new watcher.
    watcher, err := fsnotify.NewWatcher()
    if err != nil {
        log.Fatal(err)
    }
    defer watcher.Close()

    // Start listening for events.
    go func() {
        for {
            select {
            case event, ok := <-watcher.Events:
                if !ok {
                    return
                }
                log.Println("event:", event)
                if event.Has(fsnotify.Write) {
                    log.Println("modified file:", event.Name)
                }
            case err, ok := <-watcher.Errors:
                if !ok {
                    return
                }
                log.Println("error:", err)
            }
        }
    }()

    // Add a path.
    err = watcher.Add("/tmp")
    if err != nil {
        log.Fatal(err)
    }

    // Block main goroutine forever.
    <-make(chan struct{})
}
```

----------------------------------------

TITLE: Network Driver Join Response Format
DESCRIPTION: Response format for the Join endpoint specifying interface details, gateway addresses and static routes. Includes interface naming and route configuration options.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/remote.md#2025-04-10_snippet_12

LANGUAGE: json
CODE:
```
{
    "InterfaceName": {
        SrcName: string,
        DstPrefix: string
    },
    "Gateway": string,
    "GatewayIPv6": string,
    "StaticRoutes": [{
        "Destination": string,
        "RouteType": int,
        "NextHop": string,
    }, ...]
}
```

----------------------------------------

TITLE: Running Docker-in-Docker with Privileged Mode in Bash
DESCRIPTION: The dind.sh script allows running Docker inside a Docker container. It requires the container to be run with privileged mode enabled.
SOURCE: https://github.com/moby/moby/blob/master/hack/README.md#2025-04-10_snippet_0

LANGUAGE: Bash
CODE:
```
## DinD (dind.sh)

DinD is a wrapper script which allows Docker to be run inside a Docker
container. DinD requires the container to
be run with privileged mode enabled.
```

----------------------------------------

TITLE: Restarting Raft Node from Previous State in Go
DESCRIPTION: Shows how to recover a Raft node from persistent storage by applying snapshot, state, and entries before restarting.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/etcd/raft/v3/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
  storage := raft.NewMemoryStorage()

  // Recover the in-memory storage from persistent snapshot, state and entries.
  storage.ApplySnapshot(snapshot)
  storage.SetHardState(state)
  storage.Append(entries)

  c := &raft.Config{
    ID:              0x01,
    ElectionTick:    10,
    HeartbeatTick:   1,
    Storage:         storage,
    MaxSizePerMsg:   4096,
    MaxInflightMsgs: 256,
  }

  // Restart raft without peer information.
  // Peer information is already included in the storage.
  n := raft.RestartNode(c)
```

----------------------------------------

TITLE: Running Registry with Default Configuration
DESCRIPTION: Starts the registry service using the example configuration file provided in the source repository. Shows the registry starting up and listening on port 5000.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/distribution/BUILDING.md#2025-04-10_snippet_3

LANGUAGE: bash
CODE:
```
$ $GOPATH/bin/registry serve $GOPATH/src/github.com/docker/distribution/cmd/registry/config-example.yml
INFO[0000] endpoint local-5003 disabled, skipping        app.id=34bbec38-a91a-494a-9a3f-b72f9010081f version=v2.0.0-alpha.1+unknown
INFO[0000] endpoint local-8083 disabled, skipping        app.id=34bbec38-a91a-494a-9a3f-b72f9010081f version=v2.0.0-alpha.1+unknown
INFO[0000] listening on :5000                            app.id=34bbec38-a91a-494a-9a3f-b72f9010081f version=v2.0.0-alpha.1+unknown
INFO[0000] debug server listening localhost:5001
```

----------------------------------------

TITLE: Using ns.Do() Method for Network Namespace Operations in Go
DESCRIPTION: Example of how to safely execute network operations within a specific network namespace using the ns.Do() method. This code demonstrates creating a dummy network interface in the target namespace while handling the namespace switching correctly.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containernetworking/plugins/pkg/ns/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
err = targetNs.Do(func(hostNs ns.NetNS) error {
	linkAttrs := netlink.NewLinkAttrs()
	linkAttrs.Name = "dummy0"
	dummy := &netlink.Dummy{
		LinkAttrs: linkAttrs,
	}
	return netlink.LinkAdd(dummy)
})
```

----------------------------------------

TITLE: Updating a Container via HTTP Request
DESCRIPTION: Example HTTP POST request to update configuration of a container with ID 'e90e34656806', including resource constraints and restart policy.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_36

LANGUAGE: http
CODE:
```
POST /v1.24/containers/e90e34656806/update HTTP/1.1
Content-Type: application/json
Content-Length: 12345
```

LANGUAGE: json
CODE:
```
{
  "BlkioWeight": 300,
  "CpuShares": 512,
  "CpuPeriod": 100000,
  "CpuQuota": 50000,
  "CpusetCpus": "0,1",
  "CpusetMems": "0",
  "Memory": 314572800,
  "MemorySwap": 514288000,
  "MemoryReservation": 209715200,
  "KernelMemory": 52428800,
  "RestartPolicy": {
    "MaximumRetryCount": 4,
    "Name": "on-failure"
  }
}
```

----------------------------------------

TITLE: Implementing Functional Options in Go
DESCRIPTION: Creates a functional option implementation using function types, allowing for more complex configuration logic in the apply method.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-10_snippet_11

LANGUAGE: go
CODE:
```
type optionFunc func(config) config

func (fn optionFunc) apply(c config) config {
	return fn(c)
}

// WithMyType sets t as MyType.
func WithMyType(t MyType) Option {
	return optionFunc(func(c config) config {
		c.MyType = t
        return c
	})
}
```

----------------------------------------

TITLE: Implementing Server-side gRPC Prometheus Interceptors in Go
DESCRIPTION: Configuration of server-side gRPC interceptors for Prometheus monitoring. Includes initialization of the gRPC server with stream and unary interceptors, service registration, and metrics handler setup.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/grpc-ecosystem/go-grpc-prometheus/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
import "github.com/grpc-ecosystem/go-grpc-prometheus"
...
    // Initialize your gRPC server's interceptor.
    myServer := grpc.NewServer(
        grpc.StreamInterceptor(grpc_prometheus.StreamServerInterceptor),
        grpc.UnaryInterceptor(grpc_prometheus.UnaryServerInterceptor),
    )
    // Register your gRPC service implementations.
    myservice.RegisterMyServiceServer(s.server, &myServiceImpl{})
    // After all your registrations, make sure all of the Prometheus metrics are initialized.
    grpc_prometheus.Register(myServer)
    // Register Prometheus metrics handler.    
    http.Handle("/metrics", promhttp.Handler())
```

----------------------------------------

TITLE: Disconnect Container from Network API Request/Response
DESCRIPTION: POST endpoint to disconnect a container from a network with optional force parameter.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_86

LANGUAGE: json
CODE:
```
POST /v1.24/networks/22be93d5babb089c5aab8dbc369042fad48ff791584ca2da2100db837a1c7c30/disconnect HTTP/1.1
Content-Type: application/json
Content-Length: 12345

{
  "Container":"3613f73ba0e4",
  "Force":false
}
```

----------------------------------------

TITLE: Creating Macvlan Network with VLAN ID 50
DESCRIPTION: Creates a Macvlan network with VLAN ID 50 using the parent interface eth0.50. This configures the network with subnet 192.168.50.0/24 and demonstrates container connectivity on this VLAN.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/macvlan.md#2025-04-10_snippet_6

LANGUAGE: bash
CODE:
```
# now add networks and hosts as you would normally by attaching to the master (sub)interface that is tagged
docker network create -d macvlan \
    --subnet=192.168.50.0/24 \
    --gateway=192.168.50.1 \
    -o parent=eth0.50 macvlan50

# In two separate terminals, start a Docker container and the containers can now ping one another.
docker run --net=macvlan50 -it --name macvlan_test5 --rm alpine /bin/sh
docker run --net=macvlan50 -it --name macvlan_test6 --rm alpine /bin/sh
```

----------------------------------------

TITLE: Filter Table Rules for Docker Internal Networks
DESCRIPTION: This snippet shows the iptables filter table rules for Docker internal networks. It includes rules for the DOCKER-FORWARD chain, DOCKER-ISOLATION-STAGE-1, and highlights the differences between networks with and without inter-container communication.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/templates/usernet-internal.md#2025-04-10_snippet_1

LANGUAGE: iptables
CODE:
```
{{index . "LFilter4"}}
```

LANGUAGE: iptables
CODE:
```
{{index . "SFilter4"}}
```

----------------------------------------

TITLE: Event Check Comparison in Go
DESCRIPTION: Code comparison showing the old and new ways of checking fsnotify events using Has() method introduced in v1.6.0.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/fsnotify/fsnotify/CHANGELOG.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
// Old way
if event.Op&Write == Write && !(event.Op&Remove == Remove) {
}

// New way
if event.Has(Write) && !event.Has(Remove) {
}
```

----------------------------------------

TITLE: Stopping a Container via HTTP Request
DESCRIPTION: Example HTTP POST request to stop a container with ID 'e90e34656806'. The query parameter 't' specifies the number of seconds to wait before killing the container.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_30

LANGUAGE: http
CODE:
```
POST /v1.24/containers/e90e34656806/stop?t=5 HTTP/1.1
```

----------------------------------------

TITLE: Configuring StorageOpt in Docker Container Configuration
DESCRIPTION: Specifies storage driver options for a container. This example sets a size limit of 120GB for the container's storage.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_10

LANGUAGE: json
CODE:
```
{"size":"120G"}
```

----------------------------------------

TITLE: Creating Macvlan Network with Custom IP Range in Docker
DESCRIPTION: Creates a Macvlan network with a specific IP range allocation. This example configures the network to allocate container addresses starting from 192.168.32.128 within a broader subnet of 192.168.32.0/24.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/macvlan.md#2025-04-10_snippet_4

LANGUAGE: bash
CODE:
```
docker network create -d macvlan  \
    --subnet=192.168.32.0/24  \
    --ip-range=192.168.32.128/25 \
    --gateway=192.168.32.254  \
    -o parent=eth0 macnet32

# Start a container and verify the address is 192.168.32.128
docker run --net=macnet32 -it --rm alpine /bin/sh
```

----------------------------------------

TITLE: Initializing Three-Node Raft Cluster in Go
DESCRIPTION: Demonstrates how to initialize a three-node Raft cluster by configuring storage and cluster settings. Sets up the first node with connections to two peer nodes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/etcd/raft/v3/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
  storage := raft.NewMemoryStorage()
  c := &raft.Config{
    ID:              0x01,
    ElectionTick:    10,
    HeartbeatTick:   1,
    Storage:         storage,
    MaxSizePerMsg:   4096,
    MaxInflightMsgs: 256,
  }
  // Set peer list to the other nodes in the cluster.
  // Note that they need to be started separately as well.
  n := raft.StartNode(c, []raft.Peer{{ID: 0x02}, {ID: 0x03}})
```

----------------------------------------

TITLE: Creating a Subcgroup (v1)
DESCRIPTION: Creates a child cgroup under an existing parent cgroup with specified resources, allowing hierarchical organization of process groups.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/README.md#2025-04-10_snippet_10

LANGUAGE: go
CODE:
```
subCgroup, err := control.New("child", resources)
```

----------------------------------------

TITLE: Detecting Swarm Status from Docker API Ping Endpoint
DESCRIPTION: The GET /_ping and HEAD /_ping endpoints now return a 'Swarm' header, allowing clients to detect if Swarm is enabled on the daemon without additional API calls. The header can contain values such as 'inactive', 'pending', 'error', 'locked', 'active/worker', or 'active/manager'.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/version-history.md#2025-04-10_snippet_8

LANGUAGE: markdown
CODE:
```
* `GET /_ping` and `HEAD /_ping` now return a `Swarm` header, which allows a
  client to detect if Swarm is enabled on the daemon, without having to call
  additional endpoints.
  This change is not versioned, and affects all API versions if the daemon has
  this patch. Clients must consider this header "optional", and fall back to
  using other endpoints to get this information if the header is not present.

  The `Swarm` header can contain one of the following values:

    - "inactive"
    - "pending"
    - "error"
    - "locked"
    - "active/worker"
    - "active/manager"
```

----------------------------------------

TITLE: Implementing Raft State Machine Loop in Go
DESCRIPTION: Demonstrates the main event loop for handling Raft state machine updates, including processing Ready channel updates, saving state, and handling configuration changes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/etcd/raft/v3/README.md#2025-04-10_snippet_5

LANGUAGE: go
CODE:
```
  for {
    select {
    case <-s.Ticker:
      n.Tick()
    case rd := <-s.Node.Ready():
      saveToStorage(rd.HardState, rd.Entries, rd.Snapshot)
      send(rd.Messages)
      if !raft.IsEmptySnap(rd.Snapshot) {
        processSnapshot(rd.Snapshot)
      }
      for _, entry := range rd.CommittedEntries {
        process(entry)
        if entry.Type == raftpb.EntryConfChange {
          var cc raftpb.ConfChange
          cc.Unmarshal(entry.Data)
          s.Node.ApplyConfChange(cc)
        }
      }
      s.Node.Advance()
    case <-s.done:
      return
    }
  }
```

----------------------------------------

TITLE: Implementing HTTP Sink in Go
DESCRIPTION: Example implementation of an HTTP sink that sends events as JSON POST requests. The sink writes events by marshaling them to JSON and sending them to a configured URL, returning an error on failure.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/go-events/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
func (h *httpSink) Write(event Event) error {
	p, err := json.Marshal(event)
	if err != nil {
		return err
	}
	body := bytes.NewReader(p)
	resp, err := h.client.Post(h.url, "application/json", body)
	if err != nil {
		return err
	}
	defer resp.Body.Close()
	
	if resp.Status != 200 {
		return errors.New("unexpected status")
	}

	return nil
}
```

----------------------------------------

TITLE: Using Core Logger for High-Performance Structured Logging in Go
DESCRIPTION: Shows how to use Zap's core Logger for maximum performance and type safety. This approach is faster than SugaredLogger but only supports structured logging with strongly typed Field values.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.uber.org/zap/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
logger, _ := zap.NewProduction()
defer logger.Sync()
logger.Info("failed to fetch URL",
  // Structured context as strongly typed Field values.
  zap.String("url", url),
  zap.Int("attempt", 3),
  zap.Duration("backoff", time.Second),
)
```

----------------------------------------

TITLE: Verifying Code Changes
DESCRIPTION: Run the Docker daemon help command to verify the changes made to the help message.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/set-up-dev-env.md#2025-04-10_snippet_16

LANGUAGE: bash
CODE:
```
# dockerd --help
```

----------------------------------------

TITLE: Defining SecretSpec Message in Protocol Buffers for Docker Swarmkit v1
DESCRIPTION: This snippet defines the SecretSpec message type, which includes fields for secret configuration such as annotations, data, templating, and driver options in a Docker Swarm.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_70

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "SecretSpec"
  field {
    name: "annotations"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Annotations"
    options {
      65001: 0
    }
    json_name: "annotations"
  }
  // ... (additional fields omitted for brevity)
}
```

----------------------------------------

TITLE: Killing All Processes in a cgroup (v2)
DESCRIPTION: Terminates all processes belonging to a specific cgroup in the v2 hierarchy, which is useful for cleanup or resource reclamation.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/README.md#2025-04-10_snippet_18

LANGUAGE: go
CODE:
```
m, err := cgroup2.LoadSystemd("/", "my-cgroup-abc.slice")
if err != nil {
	return err
}
err = m.Kill()
if err != nil {
	return err
}
```

----------------------------------------

TITLE: Buffer Decompression Implementation in Go
DESCRIPTION: Example of decompressing buffer data using the zstd package. Creates a cached decoder for efficient multiple buffer decompression operations.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/klauspost/compress/zstd/README.md#2025-04-10_snippet_3

LANGUAGE: Go
CODE:
```
import "github.com/klauspost/compress/zstd"

// Create a reader that caches decompressors.
// For this operation type we supply a nil Reader.
var decoder, _ = zstd.NewReader(nil, zstd.WithDecoderConcurrency(0))

// Decompress a buffer. We don't supply a destination buffer,
// so it will be allocated by the decoder.
func Decompress(src []byte) ([]byte, error) {
    return decoder.DecodeAll(src, nil)
}
```

----------------------------------------

TITLE: Moving Processes Between cgroups (v1)
DESCRIPTION: Moves all processes from one cgroup to another destination cgroup, useful for reorganizing process hierarchies.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/README.md#2025-04-10_snippet_9

LANGUAGE: go
CODE:
```
err := control.MoveTo(destination)
```

----------------------------------------

TITLE: Set Difference Operation in Go
DESCRIPTION: Shows how to use the Difference operation to create a new set containing elements that exist in one set but not in another. The example finds all classes that are not science classes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/deckarep/golang-set/v2/README.md#2025-04-10_snippet_4

LANGUAGE: go
CODE:
```
notScience := all.Difference(sciences)
fmt.Println(notScience)
```

----------------------------------------

TITLE: Iptables NAT Table Configuration
DESCRIPTION: The NAT table configuration for Docker networking, showing rules for port mapping and network address translation that enable container connectivity to the outside world.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap.md#2025-04-10_snippet_3

LANGUAGE: text
CODE:
```
Chain PREROUTING (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DOCKER     0    --  *      *       0.0.0.0/0            0.0.0.0/0            ADDRTYPE match dst-type LOCAL

Chain INPUT (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         

Chain OUTPUT (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DOCKER     0    --  *      *       0.0.0.0/0           !127.0.0.0/8          ADDRTYPE match dst-type LOCAL

Chain POSTROUTING (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 MASQUERADE  0    --  *      !bridge1  192.0.2.0/24         0.0.0.0/0           
2        0     0 MASQUERADE  0    --  *      !docker0  172.17.0.0/16        0.0.0.0/0           

Chain DOCKER (2 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 RETURN     0    --  bridge1 *       0.0.0.0/0            0.0.0.0/0           
2        0     0 RETURN     0    --  docker0 *       0.0.0.0/0            0.0.0.0/0           
3        0     0 DNAT       6    --  !bridge1 *       0.0.0.0/0            0.0.0.0/0            tcp dpt:8080 to:192.0.2.2:80
```

----------------------------------------

TITLE: Developer Certificate of Origin for Docker Contributions
DESCRIPTION: The complete text of the Developer Certificate of Origin (DCO) version 1.1 that contributors must certify to when making contributions to Docker projects. This certificate ensures contributors have the right to submit their code under the project's open source license.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/go-events/CONTRIBUTING.md#2025-04-10_snippet_0

LANGUAGE: text
CODE:
```
Developer Certificate of Origin
Version 1.1

Copyright (C) 2004, 2006 The Linux Foundation and its contributors.
660 York Street, Suite 102,
San Francisco, CA 94110 USA

Everyone is permitted to copy and distribute verbatim copies of this
license document, but changing it is not allowed.

Developer's Certificate of Origin 1.1

By making a contribution to this project, I certify that:

(a) The contribution was created in whole or in part by me and I
    have the right to submit it under the open source license
    indicated in the file; or

(b) The contribution is based upon previous work that, to the best
    of my knowledge, is covered under an appropriate open source
    license and I have the right under that license to submit that
    work with modifications, whether created in whole or in part
    by me, under the same open source license (unless I am
    permitted to submit under a different license), as indicated
    in the file; or

(c) The contribution was provided directly to me by some other
    person who certified (a), (b) or (c) and I have not modified
    it.

(d) I understand and agree that this project and the contribution
    are public and that a record of the contribution (including all
    personal information I submit with it, including my sign-off) is
    maintained indefinitely and may be redistributed consistent with
    this project or the open source license(s) involved.
```

----------------------------------------

TITLE: Restarting a Container via HTTP Request
DESCRIPTION: Example HTTP POST request to restart a container with ID 'e90e34656806'. The query parameter 't' specifies the number of seconds to wait before killing the container.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_32

LANGUAGE: http
CODE:
```
POST /v1.24/containers/e90e34656806/restart?t=5 HTTP/1.1
```

----------------------------------------

TITLE: Instance-based Logrus Logger Configuration
DESCRIPTION: Demonstrates how to create and configure a new instance of Logrus logger for advanced usage scenarios like multi-destination logging.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/sirupsen/logrus/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
package main

import (
  "os"
  "github.com/sirupsen/logrus"
)

// Create a new instance of the logger. You can have any number of instances.
var log = logrus.New()

func main() {
  // The API for setting attributes is a little different than the package level
  // exported logger. See Godoc.
  log.Out = os.Stdout

  log.WithFields(logrus.Fields{
    "animal": "walrus",
    "size":   10,
  }).Info("A group of walrus emerges from the ocean")
}
```

----------------------------------------

TITLE: Initializing IPVS Connection in Go
DESCRIPTION: Demonstrates how to establish a connection to the IPVS kernel module and retrieve services. The code shows basic error handling and service listing functionality using the ipvs package.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/ipvs/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
import (
	"log"

	"github.com/moby/ipvs"
)

func main() {
	handle, err := ipvs.New("")
	if err != nil {
		log.Fatalf("ipvs.New: %s", err)
	}
	svcs, err := handle.GetServices()
	if err != nil {
		log.Fatalf("handle.GetServices: %s", err)
	}
}
```

----------------------------------------

TITLE: Removing a Docker Network
DESCRIPTION: Demonstrates how to delete a previously created Docker network using the network name or ID.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/macvlan.md#2025-04-10_snippet_5

LANGUAGE: bash
CODE:
```
docker network rm <network_name or id>
```

----------------------------------------

TITLE: Creating Generic Sets in Go
DESCRIPTION: Demonstrates syntax for creating generic sets with different types in Go using the mapset package. Shows examples with int, string, custom struct, and interface{} types.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/deckarep/golang-set/v2/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
// Syntax example, doesn't compile.
mySet := mapset.NewSet[T]() // where T is some concrete comparable type.

// Therefore this code creates an int set
mySet := mapset.NewSet[int]()

// Or perhaps you want a string set
mySet := mapset.NewSet[string]()

type myStruct {
  name string
  age uint8
}

// Alternatively a set of structs
mySet := mapset.NewSet[myStruct]()

// Lastly a set that can hold anything using the any or empty interface keyword: interface{}. This is effectively removes type safety.
mySet := mapset.NewSet[any]()
```

----------------------------------------

TITLE: Iterating Over Keys in BoltDB with Go
DESCRIPTION: This snippet demonstrates how to iterate over keys in a bucket using a Cursor in BoltDB. It shows how to move through the keys sequentially and print both the key and value.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_15

LANGUAGE: go
CODE:
```
db.View(func(tx *bolt.Tx) error {
	b := tx.Bucket([]byte("MyBucket"))
	c := b.Cursor()
	for k, v := c.First(); k != nil; k, v = c.Next() {
		fmt.Printf("key=%s, value=%s\n", k, v)
	}
	return nil
})
```

----------------------------------------

TITLE: Performing Prefix Scans in BoltDB with Go
DESCRIPTION: This code shows how to perform a prefix scan on keys in BoltDB. It uses a combination of Seek() and bytes.HasPrefix() to iterate over keys with a specific prefix.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_16

LANGUAGE: go
CODE:
```
db.View(func(tx *bolt.Tx) error {
	c := tx.Bucket([]byte("MyBucket")).Cursor()
	prefix := []byte("1234")
	for k, v := c.Seek(prefix); k != nil && bytes.HasPrefix(k, prefix); k, v = c.Next() {
		fmt.Printf("key=%s, value=%s\n", k, v)
	}
	return nil
})
```

----------------------------------------

TITLE: Retrieving Builder Version from Docker API Ping Endpoint
DESCRIPTION: The GET /_ping and HEAD /_ping endpoints now return a 'Builder-Version' header by default, indicating the recommended builder version to use. The default on Linux is '2' (BuildKit), while Windows uses '1' (classic builder).
SOURCE: https://github.com/moby/moby/blob/master/docs/api/version-history.md#2025-04-10_snippet_7

LANGUAGE: markdown
CODE:
```
* `GET /_ping` and `HEAD /_ping` now return `Builder-Version` by default.
  This header contains the default builder to use, and is a recommendation as
  advertised by the daemon. However, it is up to the client to choose which builder
  to use.

  The default value on Linux is version "2" (BuildKit), but the daemon can be
  configured to recommend version "1" (classic Builder). Windows does not yet
  support BuildKit for native Windows images, and uses "1" (classic builder) as
  a default.

  This change is not versioned, and affects all API versions if the daemon has
  this patch.
```

----------------------------------------

TITLE: Converting Between YAML and JSON in Go
DESCRIPTION: Demonstrates using the YAMLToJSON and JSONToYAML functions to convert between JSON and YAML formats. The example shows how object representation is preserved during conversion.
SOURCE: https://github.com/moby/moby/blob/master/vendor/sigs.k8s.io/yaml/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
package main

import (
	"fmt"

	"sigs.k8s.io/yaml"
)

func main() {
	j := []byte(`{"name": "John", "age": 30}`)
	y, err := yaml.JSONToYAML(j)
	if err != nil {
		fmt.Printf("err: %v\n", err)
		return
	}
	fmt.Println(string(y))
	/* Output:
	age: 30
	name: John
	*/
	j2, err := yaml.YAMLToJSON(y)
	if err != nil {
		fmt.Printf("err: %v\n", err)
		return
	}
	fmt.Println(string(j2))
	/* Output:
	{"age":30,"name":"John"}
	*/
}
```

----------------------------------------

TITLE: Basic PTY Command Execution in Go
DESCRIPTION: Example showing how to execute a grep command through a pseudo-terminal, writing input and copying output to stdout. Demonstrates basic pty.Start() usage with command execution.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/creack/pty/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
package main

import (
	"io"
	"os"
	"os/exec"

	"github.com/creack/pty"
)

func main() {
	c := exec.Command("grep", "--color=auto", "bar")
	f, err := pty.Start(c)
	if err != nil {
		panic(err)
	}

	go func() {
		f.Write([]byte("foo\n"))
		f.Write([]byte("bar\n"))
		f.Write([]byte("baz\n"))
		f.Write([]byte{4}) // EOT
	}()
	io.Copy(os.Stdout, f)
}
```

----------------------------------------

TITLE: Creating Content Identifier with Digest in Go
DESCRIPTION: Demonstrates how to create a content identifier using the digest package. This snippet shows how to generate a unique identifier for a byte slice, which can be used in content-addressable storage systems.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/opencontainers/go-digest/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
id := digest.FromBytes([]byte("my content"))
```

----------------------------------------

TITLE: Adding Enabled Method to Logger Interface
DESCRIPTION: Adds Enabled method to the Logger interface to notify users if a log record will be emitted.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_4

LANGUAGE: Go
CODE:
```
Enabled method is added to the Logger interface in go.opentelemetry.io/otel/log
```

----------------------------------------

TITLE: Defining Service Descriptor in Protocol Buffers
DESCRIPTION: This snippet defines the structure of a service descriptor in Protocol Buffers. It includes fields for name, methods, and options.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_7

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "ServiceDescriptorProto"
  field {
    name: "name"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "name"
  }
  field {
    name: "method"
    number: 2
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".google.protobuf.MethodDescriptorProto"
    json_name: "method"
  }
  field {
    name: "options"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".google.protobuf.ServiceOptions"
    json_name: "options"
  }
}
```

----------------------------------------

TITLE: Defining NodeStatus Message in Protocol Buffers
DESCRIPTION: This message type defines the operational status of a node in the Docker Swarm cluster, including its state (UNKNOWN, DOWN, READY, DISCONNECTED), status message, and network address.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_27

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "NodeStatus"
  field {
    name: "state"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.NodeStatus.State"
    json_name: "state"
  }
  field {
    name: "message"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "message"
  }
  field {
    name: "addr"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "addr"
  }
  enum_type {
    name: "State"
    value {
      name: "UNKNOWN"
      number: 0
    }
    value {
      name: "DOWN"
      number: 1
    }
    value {
      name: "READY"
      number: 2
    }
    value {
      name: "DISCONNECTED"
      number: 3
    }
  }
}
```

----------------------------------------

TITLE: Defining Task Message Type in Protocol Buffers for Docker Swarmkit
DESCRIPTION: This snippet defines the Task message type, representing a unit of work in the Swarm. It includes fields for task identification, specifications, status, and related service and node information.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_80

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "Task"
  field {
    name: "id"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "id"
  }
  field {
    name: "meta"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Meta"
    options {
      65001: 0
    }
    json_name: "meta"
  }
  field {
    name: "spec"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.TaskSpec"
    options {
      65001: 0
    }
    json_name: "spec"
  }
  field {
    name: "spec_version"
    number: 14
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Version"
    json_name: "specVersion"
  }
  field {
    name: "service_id"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "serviceId"
  }
  field {
    name: "slot"
    number: 5
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    json_name: "slot"
  }
  field {
    name: "node_id"
    number: 6
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "nodeId"
  }
  field {
    name: "annotations"
    number: 7
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Annotations"
    options {
      65001: 0
    }
    json_name: "annotations"
  }
  field {
    name: "service_annotations"
    number: 8
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Annotations"
    options {
      65001: 0
    }
    json_name: "serviceAnnotations"
  }
  field {
    name: "status"
    number: 9
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.TaskStatus"
    options {
      65001: 0
    }
    json_name: "status"
  }
  field {
    name: "desired_state"
    number: 10
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.TaskState"
    json_name: "desiredState"
  }
  field {
    name: "networks"
    number: 11
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.NetworkAttachment"
    json_name: "networks"
  }
  field {
    name: "endpoint"
    number: 12
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Endpoint"
    json_name: "endpoint"
  }
  field {
    name: "log_driver"
    number: 13
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Driver"
    json_name: "logDriver"
  }
  field {
    name: "assigned_generic_resources"
    number: 15
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.GenericResource"
    json_name: "assignedGenericResources"
  }
  field {
    name: "job_iteration"
    number: 16
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Version"
    json_name: "jobIteration"
  }
  field {
    name: "volumes"
    number: 17
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.VolumeAttachment"
    json_name: "volumes"
  }
  options {
    70001 {
      1 {
        1: 1
        2: 1
        3: 1
        4: 1
        5: 1
        6: 1
        7: 1
        8: 1
        9: 1
        10: 1
      }
    }
  }
}
```

----------------------------------------

TITLE: Remove Network API Request/Response
DESCRIPTION: DELETE endpoint to remove a network by ID or name.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_87

LANGUAGE: http
CODE:
```
DELETE /v1.24/networks/22be93d5babb089c5aab8dbc369042fad48ff791584ca2da2100db837a1c7c30 HTTP/1.1
```

----------------------------------------

TITLE: Implementing a Factory Function with Options in Go
DESCRIPTION: Shows how to use the options pattern in a factory function that creates new instances of a type T with configurable options.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-10_snippet_12

LANGUAGE: go
CODE:
```
func NewT(options ...Option) T {…}
```

----------------------------------------

TITLE: Renaming a Container via HTTP Request
DESCRIPTION: Example HTTP POST request to rename a container with ID 'e90e34656806' to 'new_name'.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_38

LANGUAGE: http
CODE:
```
POST /v1.24/containers/e90e34656806/rename?name=new_name HTTP/1.1
```

----------------------------------------

TITLE: Using Terminal Detection and Window Size in Go
DESCRIPTION: Example code demonstrating how to use the moby/term package to check if input is coming from a terminal and retrieve its window size. The snippet shows terminal detection with IsTerminal() and window size retrieval with GetWinsize().
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/term/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
package main

import (
	"log"
	"os"

	"github.com/moby/term"
)

func main() {
	fd := os.Stdin.Fd()
	if term.IsTerminal(fd) {
		ws, err := term.GetWinsize(fd)
		if err != nil {
			log.Fatalf("term.GetWinsize: %s", err)
		}
		log.Printf("%d:%d\n", ws.Height, ws.Width)
	}
}
```

----------------------------------------

TITLE: Running Container in Custom Overlay Network
DESCRIPTION: Start a container in the newly created 'foobar' overlay network using the --publish-service option.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/vagrant.md#2025-04-10_snippet_5

LANGUAGE: bash
CODE:
```
$ docker run -it --rm --publish-service=bar.foobar.overlay ubuntu:14.04 bash
```

----------------------------------------

TITLE: Inspecting Docker Image with HTTP GET Request
DESCRIPTION: Sends a GET request to retrieve low-level information about a Docker image. The response includes details such as image ID, container configuration, and filesystem layers.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_53

LANGUAGE: http
CODE:
```
GET /v1.24/images/example/json HTTP/1.1
```

----------------------------------------

TITLE: Compressing Input Stream to Output Stream using Zstandard in Go
DESCRIPTION: This function demonstrates how to compress data from an input stream to an output stream using the Zstandard compression algorithm. It creates a new writer, copies data from input to the encoder, and closes the encoder to finish writing.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/klauspost/compress/zstd/README.md#2025-04-10_snippet_0

LANGUAGE: Go
CODE:
```
// Compress input to output.
func Compress(in io.Reader, out io.Writer) error {
    enc, err := zstd.NewWriter(out)
    if err != nil {
        return err
    }
    _, err = io.Copy(enc, in)
    if err != nil {
        enc.Close()
        return err
    }
    return enc.Close()
}
```

----------------------------------------

TITLE: URL Construction with Route Parameters
DESCRIPTION: Shows how to build URLs using named routes and parameter substitution including host, path and query parameters.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gorilla/mux/README.md#2025-04-10_snippet_11

LANGUAGE: go
CODE:
```
r := mux.NewRouter()
r.Host("{subdomain}.example.com").
  Path("/articles/{category}/{id:[0-9]+}").
  Queries("filter", "{filter}").
  HandlerFunc(ArticleHandler).
  Name("article")

// url.String() will be "http://news.example.com/articles/technology/42?filter=gorilla"
url, err := r.Get("article").URL("subdomain", "news",
                                 "category", "technology",
                                 "id", "42",
                                 "filter", "gorilla")
```

----------------------------------------

TITLE: Querying System Disk Usage with Type Filter in Docker API
DESCRIPTION: The GET /system/df endpoint now accepts a 'type' query parameter to filter results by object type. Multiple types can be specified, and supported values are 'container', 'image', 'volume', and 'build-cache'.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/version-history.md#2025-04-10_snippet_5

LANGUAGE: markdown
CODE:
```
* `GET /system/df` now accepts query parameter `type`. When set,
  computes and returns data only for the specified object type.
  The parameter can be specified multiple times to select several object types.
  Supported values are: `container`, `image`, `volume`, `build-cache`.
```

----------------------------------------

TITLE: Marshaling and Unmarshaling YAML with Go Structs
DESCRIPTION: Demonstrates basic usage of the yaml package for marshaling a struct to YAML and unmarshaling YAML back into a struct. The example shows how JSON struct tags affect YAML field names.
SOURCE: https://github.com/moby/moby/blob/master/vendor/sigs.k8s.io/yaml/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
package main

import (
	"fmt"

	"sigs.k8s.io/yaml"
)

type Person struct {
	Name string `json:"name"` // Affects YAML field names too.
	Age  int    `json:"age"`
}

func main() {
	// Marshal a Person struct to YAML.
	p := Person{"John", 30}
	y, err := yaml.Marshal(p)
	if err != nil {
		fmt.Printf("err: %v\n", err)
		return
	}
	fmt.Println(string(y))
	/* Output:
	age: 30
	name: John
	*/

	// Unmarshal the YAML back into a Person struct.
	var p2 Person
	err = yaml.Unmarshal(y, &p2)
	if err != nil {
		fmt.Printf("err: %v\n", err)
		return
	}
	fmt.Println(p2)
	/* Output:
	{John 30}
	*/
}
```

----------------------------------------

TITLE: BitSet Deserialization Example in Go
DESCRIPTION: Demonstrates how to read a serialized BitSet back from a byte buffer.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/bits-and-blooms/bitset/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
// Read back from buf
	bs = bitset.New()
	n, err = bs.ReadFrom(&buf)
	if err != nil {
		// error
	}
	// n is the number of bytes read
```

----------------------------------------

TITLE: Using Default Client When HTTP Client is Nil in Compute Metadata
DESCRIPTION: Change to the compute/metadata package that uses the default client when http.Client is nil, providing a fallback mechanism for metadata requests.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_8

LANGUAGE: markdown
CODE:
```
- compute/metadata:
  - use defaultClient when http.Client is nil
  - remove subscribeClient
```

----------------------------------------

TITLE: Setting Ulimits in Docker Container Configuration
DESCRIPTION: Configures resource limits for processes within a container. This example sets the maximum number of open file descriptors (nofile) with both soft and hard limits.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_8

LANGUAGE: json
CODE:
```
Ulimits: { "Name": "nofile", "Soft": 1024, "Hard": 2048 }
```

----------------------------------------

TITLE: Basic Logging Middleware Implementation
DESCRIPTION: Demonstrates how to create a simple logging middleware that logs request URIs.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gorilla/mux/README.md#2025-04-10_snippet_14

LANGUAGE: go
CODE:
```
func loggingMiddleware(next http.Handler) http.Handler {
    return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
        // Do stuff here
        log.Println(r.RequestURI)
        // Call the next handler, which can be another middleware in the chain, or the final handler.
        next.ServeHTTP(w, r)
    })
}
```

----------------------------------------

TITLE: Querying TOML Data
DESCRIPTION: Shows how to use the query feature to search for specific elements within a TOML document without traversing the entire tree.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/pelletier/go-toml/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
// use a query to gather elements without walking the tree
q, _ := query.Compile("$..[user,password]")
results := q.Execute(config)
for ii, item := range results.Values() {
    fmt.Printf("Query result %d: %v\n", ii, item)
}
```

----------------------------------------

TITLE: Creating and Managing ZFS Filesystems, Snapshots, and Clones in Go
DESCRIPTION: This example demonstrates how to create a ZFS filesystem, take a snapshot, clone the snapshot, and then destroy all created resources. It shows the basic workflow of ZFS operations using this Go wrapper library.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/mistifyio/go-zfs/v3/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
//assuming a zpool named test
//error handling omitted


f, err := zfs.CreateFilesystem("test/snapshot-test", nil)
ok(t, err)

s, err := f.Snapshot("test", nil)
ok(t, err)

// snapshot is named "test/snapshot-test@test"

c, err := s.Clone("test/clone-test", nil)

err := c.Destroy()
err := s.Destroy()
err := f.Destroy()
```

----------------------------------------

TITLE: Passing Logger to Application Object in Go
DESCRIPTION: Demonstrates how to pass the logger to application objects and structures for use throughout the application.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/go-logr/logr/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
    app := createTheAppObject(logger)
    app.Run()
```

----------------------------------------

TITLE: Unmarshaling TOML to Struct
DESCRIPTION: Demonstrates how to unmarshal TOML data into Go structs using struct tags and the Unmarshal function.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/pelletier/go-toml/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
type Postgres struct {
    User     string
    Password string
}
type Config struct {
    Postgres Postgres
}

doc := []byte(`
[Postgres]
User = "pelletier"
Password = "mypassword"`)

config := Config{}
toml.Unmarshal(doc, &config)
fmt.Println("user=", config.Postgres.User)
```

----------------------------------------

TITLE: Inspect Plugin API Response
DESCRIPTION: Example JSON response from the GET /plugins/(plugin name) endpoint showing detailed information about a specific installed plugin.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_90

LANGUAGE: json
CODE:
```
{
  "Id": "5724e2c8652da337ab2eedd19fc6fc0ec908e4bd907c7421bf6a8dfc70c4c078",
  "Name": "tiborvass/no-remove",
  "Tag": "latest",
  "Active": false,
  "Config": {
    "Mounts": [
      {
        "Name": "",
        "Description": "",
        "Settable": null,
        "Source": "/data",
        "Destination": "/data",
        "Type": "bind",
        "Options": [
          "shared",
          "rbind"
        ]
      },
      {
        "Name": "",
        "Description": "",
        "Settable": null,
        "Source": null,
        "Destination": "/foobar",
        "Type": "tmpfs",
        "Options": null
      }
    ],
    "Env": [
      "DEBUG=1"
    ],
    "Args": null,
    "Devices": null
  },
  "Manifest": {...}
}
```

----------------------------------------

TITLE: Registering OpenCensus View
DESCRIPTION: Example of registering a view with distribution aggregation for collecting video size metrics
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opencensus.io/README.md#2025-04-10_snippet_4

LANGUAGE: go
CODE:
```
if err := view.Register(&view.View{
	Name:        "example.com/video_size_distribution",
	Description: "distribution of processed video size over time",
	Measure:     videoSize,
	Aggregation: view.Distribution(1<<32, 2<<32, 3<<32),
}); err != nil {
	log.Fatalf("Failed to register view: %v", err)
}
```

----------------------------------------

TITLE: Enabling the Network Diagnostic Port in Docker Daemon Configuration
DESCRIPTION: JSON configuration snippet for enabling the network diagnostic tool by setting the network-diagnostic-port in the Docker daemon configuration file.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/cmd/diagnostic/README.md#2025-04-10_snippet_0

LANGUAGE: json
CODE:
```
"network-diagnostic-port": <port>
```

----------------------------------------

TITLE: Cleaning Up OTEL Environment Variable
DESCRIPTION: Removes the OTLP endpoint environment variable from the current shell environment.
SOURCE: https://github.com/moby/moby/blob/master/contrib/otel/README.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
unset OTEL_EXPORTER_OTLP_ENDPOINT
```

----------------------------------------

TITLE: Container Pause Response
DESCRIPTION: Example HTTP response for a successful container pause operation, showing a 204 No Content status code.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_41

LANGUAGE: http
CODE:
```
HTTP/1.1 204 No Content
```

----------------------------------------

TITLE: Defining UpdateConfig Message in Protocol Buffers for Docker SwarmKit
DESCRIPTION: This snippet defines a message 'UpdateConfig' for Docker SwarmKit, including fields for parallelism, delay, failure action, monitor, max failure ratio, and order. It also includes enums for FailureAction and UpdateOrder.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_36

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "UpdateConfig"
  field {
    name: "parallelism"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    json_name: "parallelism"
  }
  field {
    name: "delay"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".google.protobuf.Duration"
    options {
      65011: 1
      65001: 0
    }
    json_name: "delay"
  }
  field {
    name: "failure_action"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.UpdateConfig.FailureAction"
    json_name: "failureAction"
  }
  field {
    name: "monitor"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".google.protobuf.Duration"
    json_name: "monitor"
  }
  field {
    name: "max_failure_ratio"
    number: 5
    label: LABEL_OPTIONAL
    type: TYPE_FLOAT
    json_name: "maxFailureRatio"
  }
  field {
    name: "order"
    number: 6
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.UpdateConfig.UpdateOrder"
    json_name: "order"
  }
  enum_type {
    name: "FailureAction"
    value {
      name: "PAUSE"
      number: 0
    }
    value {
      name: "CONTINUE"
      number: 1
    }
    value {
      name: "ROLLBACK"
      number: 2
    }
  }
  enum_type {
    name: "UpdateOrder"
    value {
      name: "STOP_FIRST"
      number: 0
    }
    value {
      name: "START_FIRST"
      number: 1
    }
  }
}
```

----------------------------------------

TITLE: Running Hello World Container
DESCRIPTION: Test the Docker installation by running the hello-world image.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/set-up-dev-env.md#2025-04-10_snippet_12

LANGUAGE: bash
CODE:
```
# docker run hello-world
```

----------------------------------------

TITLE: Creating Docker Network and Running Container with Loopback Port Mapping
DESCRIPTION: Commands to create a user-defined Docker network 'bridge1' with specific subnet configuration and run a container with port 80 mapped to loopback address 127.0.0.1:8080.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/templates/usernet-portmap-lo.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
docker network create \
  -o com.docker.network.bridge.name=bridge1 \
  --subnet 192.0.2.0/24 --gateway 192.0.2.1 bridge1
docker run --network bridge1 -p 127.0.0.1:8080:80 --name c1 busybox
```

----------------------------------------

TITLE: Saving Key/Value Pairs in BoltDB with Go
DESCRIPTION: This code shows how to save a key/value pair to a bucket in BoltDB. It uses the Bucket.Put() function to set the value of the 'answer' key to '42' in the 'MyBucket' bucket.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_12

LANGUAGE: go
CODE:
```
db.Update(func(tx *bolt.Tx) error {
	b := tx.Bucket([]byte("MyBucket"))
	err := b.Put([]byte("answer"), []byte("42"))
	return err
})
```

----------------------------------------

TITLE: Illustrating Docker Release Cycle Timeline
DESCRIPTION: This ASCII diagram illustrates the Docker release cycle timeline, showing the development phase (6 weeks), freeze phase (3 weeks), and the release point at the end of the 9th week.
SOURCE: https://github.com/moby/moby/blob/master/project/RELEASE-PROCESS.md#2025-04-10_snippet_0

LANGUAGE: plaintext
CODE:
```
                                        Codebase              Release
Start of                                is frozen             (end of the
the Cycle                               (7th week)            9th week)
+---------------------------------------+---------------------+
|                                       |                     |
|           Development phase           |    Freeze phase     |
|                                       |                     |
+---------------------------------------+---------------------+
                   6 weeks                      3 weeks
<---------------------------------------><-------------------->
```

----------------------------------------

TITLE: Creating a Config Factory Function in Go
DESCRIPTION: Implements a newConfig function that handles setting defaults and applying options to create a configured config instance. This function is typically unexported.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-10_snippet_6

LANGUAGE: go
CODE:
```
// newConfig returns an appropriately configured config.
func newConfig(options ...Option) config {
	// Set default values for config.
	config := config{/* […] */}
	for _, option := range options {
		config = option.apply(config)
	}
	// Perform any validation here.
	return config
}
```

----------------------------------------

TITLE: Configuring Docker Authorization Plugins
DESCRIPTION: Example of starting Docker daemon with multiple authorization plugins. These plugins control access to Docker daemon operations, and each plugin must allow a request for it to complete.
SOURCE: https://github.com/moby/moby/blob/master/man/dockerd.8.md#2025-04-10_snippet_3

LANGUAGE: bash
CODE:
```
dockerd --authorization-plugin=plugin1 --authorization-plugin=plugin2,...
```

----------------------------------------

TITLE: Fuzzing Simple Struct Example
DESCRIPTION: Demonstrates how to fuzz a simple struct with string and integer fields
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/AdaLogics/go-fuzz-headers/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
type Person struct {
    Name string
    Age  int
}
p := Person{}
// Fill p with values based on the data provided by the fuzzing engine:
err := f.GenerateStruct(&p)
```

----------------------------------------

TITLE: Defining Endpoint Message Type in Protocol Buffers for Docker Swarmkit
DESCRIPTION: This snippet defines the Endpoint message type, which represents network endpoints for services. It includes fields for endpoint specifications, ports, and virtual IPs.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_79

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "Endpoint"
  field {
    name: "spec"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.EndpointSpec"
    json_name: "spec"
  }
  field {
    name: "ports"
    number: 2
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.PortConfig"
    json_name: "ports"
  }
  field {
    name: "virtual_ips"
    number: 3
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Endpoint.VirtualIP"
    options {
      65004: "VirtualIPs"
    }
    json_name: "virtualIps"
  }
  nested_type {
    name: "VirtualIP"
    field {
      name: "network_id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "networkId"
    }
    field {
      name: "addr"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "addr"
    }
  }
}
```

----------------------------------------

TITLE: Defining RaftMembership Service in Docker SwarmKit API
DESCRIPTION: Protocol buffer definition for the RaftMembership service that manages the membership of nodes in the Docker SwarmKit cluster. It includes Join and Leave methods for nodes to enter or exit the cluster.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_126

LANGUAGE: protobuf
CODE:
```
service {
  name: "RaftMembership"
  method {
    name: "Join"
    input_type: ".docker.swarmkit.v1.JoinRequest"
    output_type: ".docker.swarmkit.v1.JoinResponse"
    options {
      73626345 {
        1: "swarm-manager"
      }
    }
  }
  method {
    name: "Leave"
    input_type: ".docker.swarmkit.v1.LeaveRequest"
    output_type: ".docker.swarmkit.v1.LeaveResponse"
    options {
      73626345 {
        1: "swarm-manager"
      }
    }
  }
}
```

----------------------------------------

TITLE: Benchmarking File Sync Methods in Go
DESCRIPTION: Comprehensive benchmark results comparing different file synchronization methods including CopyWithTar, CPA, DiffCopy, Rsync and GNU Tar implementations. Tests are run with varying file sizes (10-10000) to measure performance in nanoseconds per operation.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/tonistiigi/fsutil/readme.md#2025-04-10_snippet_0

LANGUAGE: plaintext
CODE:
```
BENCH_FILE_SIZE=10000 ./bench.test --test.bench .
BenchmarkCopyWithTar10-4                	    2000	    995242 ns/op
BenchmarkCopyWithTar50-4                	     300	   4710021 ns/op
BenchmarkCopyWithTar200-4               	     100	  16627260 ns/op
BenchmarkCopyWithTar1000-4              	      20	  60031459 ns/op
BenchmarkCPA10-4                        	    1000	   1678367 ns/op
BenchmarkCPA50-4                        	     500	   3690306 ns/op
BenchmarkCPA200-4                       	     200	   9495066 ns/op
BenchmarkCPA1000-4                      	      50	  29769289 ns/op
BenchmarkDiffCopy10-4                   	    2000	    943889 ns/op
BenchmarkDiffCopy50-4                   	     500	   3285950 ns/op
BenchmarkDiffCopy200-4                  	     200	   8563792 ns/op
BenchmarkDiffCopy1000-4                 	      50	  29511340 ns/op
BenchmarkDiffCopyProto10-4              	    2000	    944615 ns/op
BenchmarkDiffCopyProto50-4              	     500	   3334940 ns/op
BenchmarkDiffCopyProto200-4             	     200	   9420038 ns/op
BenchmarkDiffCopyProto1000-4            	      50	  30632429 ns/op
BenchmarkIncrementalDiffCopy10-4        	    2000	    691993 ns/op
BenchmarkIncrementalDiffCopy50-4        	    1000	   1304253 ns/op
BenchmarkIncrementalDiffCopy200-4       	     500	   3306519 ns/op
BenchmarkIncrementalDiffCopy1000-4      	     200	  10211343 ns/op
BenchmarkIncrementalDiffCopy5000-4      	      20	  55194427 ns/op
BenchmarkIncrementalDiffCopy10000-4     	      20	  91759289 ns/op
BenchmarkIncrementalCopyWithTar10-4     	    2000	   1020258 ns/op
BenchmarkIncrementalCopyWithTar50-4     	     300	   5348786 ns/op
BenchmarkIncrementalCopyWithTar200-4    	     100	  19495000 ns/op
BenchmarkIncrementalCopyWithTar1000-4   	      20	  70338507 ns/op
BenchmarkIncrementalRsync10-4           	      30	  45215754 ns/op
BenchmarkIncrementalRsync50-4           	      30	  45837260 ns/op
BenchmarkIncrementalRsync200-4          	      30	  48780614 ns/op
BenchmarkIncrementalRsync1000-4         	      20	  54801892 ns/op
BenchmarkIncrementalRsync5000-4         	      20	  84782542 ns/op
BenchmarkIncrementalRsync10000-4        	      10	 103355108 ns/op
BenchmarkRsync10-4                      	      30	  46776470 ns/op
BenchmarkRsync50-4                      	      30	  48601555 ns/op
BenchmarkRsync200-4                     	      20	  59642691 ns/op
BenchmarkRsync1000-4                    	      20	 101343010 ns/op
BenchmarkGnuTar10-4                     	     500	   3171448 ns/op
BenchmarkGnuTar50-4                     	     300	   5030296 ns/op
BenchmarkGnuTar200-4                    	     100	  10464313 ns/op
BenchmarkGnuTar1000-4                   	      50	  30375257 ns/op
```

----------------------------------------

TITLE: Adding an IP Address to Loopback Interface in Go with Netlink
DESCRIPTION: This example shows how to add a new IP address (169.254.169.254/32) to the loopback interface using the netlink library. It retrieves the loopback interface with LinkByName, parses the IP address, and then adds it to the interface using AddrAdd.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/vishvananda/netlink/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
package main

import (
    "github.com/vishvananda/netlink"
)

func main() {
    lo, _ := netlink.LinkByName("lo")
    addr, _ := netlink.ParseAddr("169.254.169.254/32")
    netlink.AddrAdd(lo, addr)
}
```

----------------------------------------

TITLE: Retrieving Docker Image History with HTTP GET Request
DESCRIPTION: Sends a GET request to retrieve the history of a Docker image. The response includes a list of layers with their creation details and sizes.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_55

LANGUAGE: http
CODE:
```
GET /v1.24/images/ubuntu/history HTTP/1.1
```

----------------------------------------

TITLE: Implementing YAML Marshaling and Unmarshaling in Go
DESCRIPTION: Demonstrates how to use the yaml.v3 package to marshal and unmarshal YAML data in Go, showing both struct and map implementations. The example includes custom struct tags and handles both simple and nested data structures.
SOURCE: https://github.com/moby/moby/blob/master/vendor/gopkg.in/yaml.v3/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
package main

import (
        "fmt"
        "log"

        "gopkg.in/yaml.v3"
)

var data = `
a: Easy!
b:
  c: 2
  d: [3, 4]
`

// Note: struct fields must be public in order for unmarshal to
// correctly populate the data.
type T struct {
        A string
        B struct {
                RenamedC int   `yaml:"c"`
                D        []int `yaml:",flow"`
        }
}

func main() {
        t := T{}
    
        err := yaml.Unmarshal([]byte(data), &t)
        if err != nil {
                log.Fatalf("error: %v", err)
        }
        fmt.Printf("--- t:\n%v\n\n", t)
    
        d, err := yaml.Marshal(&t)
        if err != nil {
                log.Fatalf("error: %v", err)
        }
        fmt.Printf("--- t dump:\n%s\n\n", string(d))
    
        m := make(map[interface{}]interface{})
    
        err = yaml.Unmarshal([]byte(data), &m)
        if err != nil {
                log.Fatalf("error: %v", err)
        }
        fmt.Printf("--- m:\n%v\n\n", m)
    
        d, err = yaml.Marshal(&m)
        if err != nil {
                log.Fatalf("error: %v", err)
        }
        fmt.Printf("--- m dump:\n%s\n\n", string(d))
}
```

LANGUAGE: text
CODE:
```
--- t:
{Easy! {2 [3 4]}}

--- t dump:
a: Easy!
b:
  c: 2
  d: [3, 4]


--- m:
map[a:Easy! b:map[c:2 d:[3 4]]]

--- m dump:
a: Easy!
b:
  c: 2
  d:
  - 3
  - 4
```

----------------------------------------

TITLE: Example of properly formatted commit message in Moby
DESCRIPTION: Demonstrates the expected format for commit messages in the Moby project, showing a specific example that includes the subsystem, what changed, and the rationale for the change.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/godbus/dbus/v5/CONTRIBUTING.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
scripts: add the test-cluster command

this uses tmux to setup a test cluster that you can easily kill and
start for debugging.

Fixes #38
```

----------------------------------------

TITLE: Unpausing a Container via HTTP Request
DESCRIPTION: Example HTTP POST request to unpause a container with ID 'e90e34656806'.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_42

LANGUAGE: http
CODE:
```
POST /v1.24/containers/e90e34656806/unpause HTTP/1.1
```

----------------------------------------

TITLE: Removing Dangling Docker Images
DESCRIPTION: Command to remove dangling Docker images (images not tagged and not referenced by any container). It uses docker images to list all dangling images and pipes them to docker rmi to forcibly remove them.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/set-up-dev-env.md#2025-04-10_snippet_4

LANGUAGE: bash
CODE:
```
$ docker rmi -f $(docker images -q -a -f dangling=true)
```

----------------------------------------

TITLE: Iptables NAT Table Configuration for NAT-Unprotected Network
DESCRIPTION: The iptables nat table configuration showing various chains and rules for the Docker network in nat-unprotected mode.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap-natunprot.md#2025-04-10_snippet_3

LANGUAGE: plaintext
CODE:
```
Chain PREROUTING (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DOCKER     0    --  *      *       0.0.0.0/0            0.0.0.0/0            ADDRTYPE match dst-type LOCAL

Chain INPUT (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         

Chain OUTPUT (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DOCKER     0    --  *      *       0.0.0.0/0           !127.0.0.0/8          ADDRTYPE match dst-type LOCAL

Chain POSTROUTING (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 MASQUERADE  0    --  *      !bridge1  192.0.2.0/24         0.0.0.0/0           
2        0     0 MASQUERADE  0    --  *      !docker0  172.17.0.0/16        0.0.0.0/0           

Chain DOCKER (2 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 RETURN     0    --  bridge1 *       0.0.0.0/0            0.0.0.0/0           
2        0     0 RETURN     0    --  docker0 *       0.0.0.0/0            0.0.0.0/0           
3        0     0 DNAT       6    --  !bridge1 *       0.0.0.0/0            0.0.0.0/0            tcp dpt:8080 to:192.0.2.2:80
```

----------------------------------------

TITLE: Implementing Custom Logrus Formatter in Go
DESCRIPTION: This snippet shows how to create a custom formatter for Logrus by implementing the Formatter interface. It creates a MyJSONFormatter that marshals the entry data to JSON.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/sirupsen/logrus/README.md#2025-04-10_snippet_9

LANGUAGE: go
CODE:
```
type MyJSONFormatter struct {
}

log.SetFormatter(new(MyJSONFormatter))

func (f *MyJSONFormatter) Format(entry *Entry) ([]byte, error) {
  // Note this doesn't include Time, Level and Message which are available on
  // the Entry. Consult `godoc` on information about those fields or read the
  // source of the official loggers.
  serialized, err := json.Marshal(entry.Data)
    if err != nil {
      return nil, fmt.Errorf("Failed to marshal fields to JSON, %w", err)
    }
  return append(serialized, '\n'), nil
}
```

----------------------------------------

TITLE: Using errwrap with Custom Types in Go
DESCRIPTION: Demonstrates how to use errwrap's ContainsType function with a custom error type that implements the Wrapper interface.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/hashicorp/errwrap/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
err := &AppError{Err: fmt.Errorf("an error")}
if errwrap.ContainsType(err, fmt.Errorf("")) {
	// This will work!
}
```

----------------------------------------

TITLE: Streaming Decompression Implementation in Go
DESCRIPTION: Example of how to decompress streaming data using the zstd package. Creates a reader and copies content to output writer. Includes proper cleanup with deferred Close() call.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/klauspost/compress/zstd/README.md#2025-04-10_snippet_2

LANGUAGE: Go
CODE:
```
import "github.com/klauspost/compress/zstd"

func Decompress(in io.Reader, out io.Writer) error {
    d, err := zstd.NewReader(in)
    if err != nil {
        return err
    }
    defer d.Close()
    
    // Copy content...
    _, err = io.Copy(out, d)
    return err
}
```

----------------------------------------

TITLE: Docker Daemon CORS Configuration
DESCRIPTION: Example of configuring CORS headers for the Docker Engine API by setting the --api-cors-header flag when running the Docker daemon.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_107

LANGUAGE: Bash
CODE:
```
dockerd -H="192.168.1.9:2375" --api-cors-header="http://foo.bar"
```

----------------------------------------

TITLE: Error Wrapping with Context in Go
DESCRIPTION: Shows how to use errors.Wrap to add contextual information to an error while preserving the original error value.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/pkg/errors/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
_, err := ioutil.ReadAll(r)
if err != nil {
        return errors.Wrap(err, "read failed")
}
```

----------------------------------------

TITLE: Instrumenting HTTP Handler with Metrics in Go
DESCRIPTION: Example of how to wrap an HTTP handler with metrics instrumentation using the go-metrics library.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/go-metrics/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
namespace := metrics.NewNamespace("docker_distribution", "http", metrics.Labels{"handler": "your_http_handler_name"})
httpMetrics := namespace.NewDefaultHttpMetrics()
metrics.Register(namespace)
instrumentedHandler = metrics.InstrumentHandler(httpMetrics, unInstrumentedHandler)
```

----------------------------------------

TITLE: Creating and Managing Trace Spans
DESCRIPTION: Demonstrates how to create and manage trace spans using StartSpan and End methods
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opencensus.io/README.md#2025-04-10_snippet_5

LANGUAGE: go
CODE:
```
ctx, span := trace.StartSpan(ctx, "cache.Get")
defer span.End()

// Do work to get from cache.
```

----------------------------------------

TITLE: Accept Header Structure Definition
DESCRIPTION: Defines a structure to represent individual clauses in an HTTP Accept header, including type, subtype, quality factor, and parameters.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/munnerz/goautoneg/README.txt#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
type Accept struct {
    Type, SubType string
    Q             float32
    Params        map[string]string
}
```

----------------------------------------

TITLE: Monitoring BoltDB Statistics in Go
DESCRIPTION: Demonstrates how to collect and log database statistics every 10 seconds using a goroutine. The code captures initial stats, compares them with current stats, and outputs the difference as JSON to stderr.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_19

LANGUAGE: go
CODE:
```
go func() {
	// Grab the initial stats.
	prev := db.Stats()

	for {
		// Wait for 10s.
		time.Sleep(10 * time.Second)

		// Grab the current stats and diff them.
		stats := db.Stats()
		diff := stats.Sub(&prev)

		// Encode stats to JSON and print to STDERR.
		json.NewEncoder(os.Stderr).Encode(diff)

		// Save stats for the next loop.
		prev = stats
	}
}()
```

----------------------------------------

TITLE: Causer Interface Definition in Go
DESCRIPTION: Defines the causer interface used for retrieving the original cause of an error in the error chain.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/pkg/errors/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
type causer interface {
        Cause() error
}
```

----------------------------------------

TITLE: Using Atomic Operations in Go
DESCRIPTION: This code snippet demonstrates the usage of the 'atomic' package in Go. It shows how to create an atomic Uint32 variable, store a value, subtract from it, and perform a Compare-And-Swap (CAS) operation.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.uber.org/atomic/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
var atom atomic.Uint32
atom.Store(42)
atom.Sub(2)
atom.CAS(40, 11)
```

----------------------------------------

TITLE: Defining Log Broker Messages in SwarmKit Protobuf
DESCRIPTION: Defines message types for the log broker system in SwarmKit. Includes LogSubscriptionOptions for configuring log subscriptions, LogSelector for filtering logs by service/node/task, and LogContext for providing context information.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_106

LANGUAGE: protobuf
CODE:
```
name: "LogSubscriptionOptions"
field {
  name: "streams"
  number: 1
  label: LABEL_REPEATED
  type: TYPE_ENUM
  type_name: ".docker.swarmkit.v1.LogStream"
  options {
    packed: false
  }
  json_name: "streams"
}
field {
  name: "follow"
  number: 2
  label: LABEL_OPTIONAL
  type: TYPE_BOOL
  json_name: "follow"
}
field {
  name: "tail"
  number: 3
  label: LABEL_OPTIONAL
  type: TYPE_INT64
  json_name: "tail"
}
field {
  name: "since"
  number: 4
  label: LABEL_OPTIONAL
  type: TYPE_MESSAGE
  type_name: ".google.protobuf.Timestamp"
  json_name: "since"
}
}
message_type {
  name: "LogSelector"
  field {
    name: "service_ids"
    number: 1
    label: LABEL_REPEATED
    type: TYPE_STRING
    json_name: "serviceIds"
  }
  field {
    name: "node_ids"
    number: 2
    label: LABEL_REPEATED
    type: TYPE_STRING
    json_name: "nodeIds"
  }
  field {
    name: "task_ids"
    number: 3
    label: LABEL_REPEATED
    type: TYPE_STRING
    json_name: "taskIds"
  }
}
message_type {
  name: "LogContext"
  field {
    name: "service_id"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "serviceId"
  }
  field {
    name: "node_id"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "nodeId"
  }
  field {
    name: "task_id"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "taskId"
  }
}
message_type {
  name: "LogAttr"
  field {
    name: "key"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "key"
  }
  field {
    name: "value"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_STRING
```

----------------------------------------

TITLE: Basic Usage of Immutable Radix Tree in Go
DESCRIPTION: Demonstrates how to create an immutable radix tree, insert key-value pairs, and find the longest prefix match for a query string.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/hashicorp/go-immutable-radix/v2/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
// Create a tree
r := iradix.New[int]()
r, _, _ = r.Insert([]byte("foo"), 1)
r, _, _ = r.Insert([]byte("bar"), 2)
r, _, _ = r.Insert([]byte("foobar"), 2)

// Find the longest prefix match
m, _, _ := r.Root().LongestPrefix([]byte("foozip"))
if string(m) != "foo" {
    panic("should be foo")
}
```

----------------------------------------

TITLE: Running Specific Unit Test in Moby Project
DESCRIPTION: This command shows how to run a specific unit test (TestValidateIPAddress) in the Moby project using the TESTFLAGS environment variable.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/test.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
$ TESTFLAGS='-test.run ^TestValidateIPAddress$' make test-unit
```

----------------------------------------

TITLE: Container Attach API Response
DESCRIPTION: HTTP response for successful container attachment showing upgrade to raw stream.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_45

LANGUAGE: http
CODE:
```
HTTP/1.1 101 UPGRADED
Content-Type: application/vnd.docker.raw-stream
Connection: Upgrade
Upgrade: tcp
```

----------------------------------------

TITLE: Defining NodeSpec Membership and Availability Enums in Protocol Buffers
DESCRIPTION: Defines enums for node membership status (PENDING, ACCEPTED) and availability (ACTIVE, PAUSE, DRAIN) within the NodeSpec message. These enums are used to represent the state and availability of nodes in a Docker Swarm cluster.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_62

LANGUAGE: Protocol Buffers
CODE:
```
enum_type {
  name: "Membership"
  value {
    name: "PENDING"
    number: 0
    options {
      66001: "NodeMembershipPending"
    }
  }
  value {
    name: "ACCEPTED"
    number: 1
    options {
      66001: "NodeMembershipAccepted"
    }
  }
  options {
    62001: 0
  }
}
enum_type {
  name: "Availability"
  value {
    name: "ACTIVE"
    number: 0
    options {
      66001: "NodeAvailabilityActive"
    }
  }
  value {
    name: "PAUSE"
    number: 1
    options {
      66001: "NodeAvailabilityPause"
    }
  }
  value {
    name: "DRAIN"
    number: 2
    options {
      66001: "NodeAvailabilityDrain"
    }
  }
  options {
    62001: 0
  }
}
```

----------------------------------------

TITLE: Defining RequestAddress Function Signature for IPAM Driver in Go
DESCRIPTION: Function signature for reserving an IP address from a specified pool. It handles specific IP requests or allocates available addresses and returns network configuration.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/ipam.md#2025-04-10_snippet_4

LANGUAGE: go
CODE:
```
RequestAddress(string, net.IP, map[string]string) (*net.IPNet, map[string]string, error)
```

----------------------------------------

TITLE: IPVS Load Balancer Configuration for Service Traffic
DESCRIPTION: This IPVS configuration in the ingress_sbox namespace defines a round-robin load balancing policy for marked traffic (FWM 256). It distributes connections to multiple container instances that back the service.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/network.md#2025-04-10_snippet_6

LANGUAGE: bash
CODE:
```
FWM  256 rr
  -> 10.255.0.5:0                 Masq    1      0          0         
  -> 10.255.0.7:0                 Masq    1      0          0         
  -> 10.255.0.8:0                 Masq    1      0          0        
```

----------------------------------------

TITLE: Measuring 99th Percentile Latency of Unary Requests for gRPC Services using Prometheus
DESCRIPTION: This query estimates the 99th percentile of handling time for unary RPCs per gRPC service using a 5-minute rolling window. It utilizes the histogram_quantile function on the 'grpc_server_handling_seconds_bucket' metric for accurate latency estimation.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/grpc-ecosystem/go-grpc-prometheus/README.md#2025-04-10_snippet_7

LANGUAGE: jsoniq
CODE:
```
histogram_quantile(0.99, 
  sum(rate(grpc_server_handling_seconds_bucket{job="foo",grpc_type="unary"}[5m])) by (grpc_service,le)
)
```

----------------------------------------

TITLE: Running Unit Tests for Specific Package in Moby
DESCRIPTION: This command demonstrates how to run unit tests for a single package in the Moby project using the TESTDIRS environment variable.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/test.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
$ TESTDIRS='github.com/docker/docker/opts' make test-unit
```

----------------------------------------

TITLE: Docker SwarmKit Service API Definitions
DESCRIPTION: Comprehensive Protocol Buffer message type definitions for Docker SwarmKit v1 API including operations for managing clusters, secrets, configs, extensions and resources. Defines request/response message structures with fields for IDs, specifications, filters and other metadata.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_92

LANGUAGE: protobuf
CODE:
```
message_type {
    name: "UpdateClusterResponse"
    field {
      name: "cluster"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".docker.swarmkit.v1.Cluster"
      json_name: "cluster"
    }
  }
  message_type {
    name: "GetSecretRequest"
    field {
      name: "secret_id"
      number: 1 
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "secretId"
    }
  }
  # Additional message type definitions...
```

----------------------------------------

TITLE: Defining Repository in Image Tarball JSON Format
DESCRIPTION: JSON structure for defining a repository in an image tarball, mapping repository and tag names to layer IDs.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_72

LANGUAGE: json
CODE:
```
{
"hello-world":
    {"latest": "565a9d68a73f6706862bfe8409a7f659776d4d60a8d096eb4a3cbce6999cc2a1"}
}
```

----------------------------------------

TITLE: Synchronous Log Entry Writing in Go
DESCRIPTION: Shows how to write critical log entries synchronously to Cloud Logging. This ensures immediate ingestion but may impact performance.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/logging/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
logger := client.Logger("my-log")
logger.LogSync(context.Background(), logging.Entry{Payload: "something happened!"})
```

----------------------------------------

TITLE: Defining Network Message Structure in Protobuf
DESCRIPTION: Definition of a Network message type with fields for ID, metadata, specifications, driver state, IPAM options, and pending delete status. Includes options for field indexing.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_83

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "Network"
  field {
    name: "id"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "id"
  }
  field {
    name: "meta"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Meta"
    options {
      65001: 0
    }
    json_name: "meta"
  }
  field {
    name: "spec"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.NetworkSpec"
    options {
      65001: 0
    }
    json_name: "spec"
  }
  field {
    name: "driver_state"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Driver"
    json_name: "driverState"
  }
  field {
    name: "ipam"
    number: 5
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.IPAMOptions"
    options {
      65004: "IPAM"
    }
    json_name: "ipam"
  }
  field {
    name: "pending_delete"
    number: 6
    label: LABEL_OPTIONAL
    type: TYPE_BOOL
    json_name: "pendingDelete"
  }
  options {
    70001 {
      1 {
        1: 1
        2: 1
        3: 1
        4: 1
        5: 1
        6: 1
      }
    }
  }
}
```

----------------------------------------

TITLE: Defining Task-Related Message Types in SwarmKit Protobuf
DESCRIPTION: Defines several protocol buffer messages related to task management in SwarmKit, including TasksRequest for requesting task information and TasksMessage for delivering task data from the server.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_100

LANGUAGE: protobuf
CODE:
```
name: "TasksRequest"
field {
  name: "session_id"
  number: 1
  label: LABEL_OPTIONAL
  type: TYPE_STRING
  json_name: "sessionId"
}
}
message_type {
  name: "TasksMessage"
  field {
    name: "tasks"
    number: 1
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Task"
    json_name: "tasks"
  }
}
```

----------------------------------------

TITLE: IPTables NAT4 Configuration View
DESCRIPTION: Displays the contents of the nat table that Docker creates for network address translation in IPv4.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/templates/new-daemon.md#2025-04-10_snippet_2

LANGUAGE: shell
CODE:
```
{{index . "LNat4"}}
```

----------------------------------------

TITLE: Using Logrus Logger as io.Writer in Go
DESCRIPTION: This snippet demonstrates how to use a Logrus logger as an io.Writer. It shows how to create a writer from the logger and use it with an http.Server's ErrorLog.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/sirupsen/logrus/README.md#2025-04-10_snippet_10

LANGUAGE: go
CODE:
```
w := logger.Writer()
defer w.Close()

srv := http.Server{
    // create a stdlib log.Logger that writes to
    // logrus.Logger.
    ErrorLog: log.New(w, "", 0),
}
```

----------------------------------------

TITLE: Defining TaskState Enum in Protocol Buffers
DESCRIPTION: Enumerates the various states a task can be in within the Docker Swarm ecosystem. This enum includes states from NEW to ORPHANED, with associated numeric values and options.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_61

LANGUAGE: protobuf
CODE:
```
enum TaskState {
  NEW = 0 [(gogoproto.enumvalue_customname) = "TaskStateNew"];
  PENDING = 64 [(gogoproto.enumvalue_customname) = "TaskStatePending"];
  ASSIGNED = 192 [(gogoproto.enumvalue_customname) = "TaskStateAssigned"];
  ACCEPTED = 256 [(gogoproto.enumvalue_customname) = "TaskStateAccepted"];
  PREPARING = 320 [(gogoproto.enumvalue_customname) = "TaskStatePreparing"];
  READY = 384 [(gogoproto.enumvalue_customname) = "TaskStateReady"];
  STARTING = 448 [(gogoproto.enumvalue_customname) = "TaskStateStarting"];
  RUNNING = 512 [(gogoproto.enumvalue_customname) = "TaskStateRunning"];
  COMPLETE = 576 [(gogoproto.enumvalue_customname) = "TaskStateCompleted"];
  SHUTDOWN = 640 [(gogoproto.enumvalue_customname) = "TaskStateShutdown"];
  FAILED = 704 [(gogoproto.enumvalue_customname) = "TaskStateFailed"];
  REJECTED = 768 [(gogoproto.enumvalue_customname) = "TaskStateRejected"];
  REMOVE = 800 [(gogoproto.enumvalue_customname) = "TaskStateRemove"];
  ORPHANED = 832 [(gogoproto.enumvalue_customname) = "TaskStateOrphaned"];

  option (gogoproto.enum_customname) = "TaskState";
  option (gogoproto.enumdecl) = false;
}
```

----------------------------------------

TITLE: Defining Config Message Structure in Protobuf
DESCRIPTION: Definition of a Config message type with fields for ID, metadata, and specifications. Includes indexing options for efficient retrieval.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_86

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "Config"
  field {
    name: "id"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "id"
  }
  field {
    name: "meta"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Meta"
    options {
      65001: 0
    }
    json_name: "meta"
  }
  field {
    name: "spec"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.ConfigSpec"
    options {
      65001: 0
    }
    json_name: "spec"
  }
  options {
    70001 {
      1 {
        1: 1
        2: 1
        3: 1
        4: 1
        5: 1
        6: 1
      }
    }
  }
}
```

----------------------------------------

TITLE: Using Logger in Go Application Object
DESCRIPTION: Shows how to integrate and use the logger within an application object structure and its methods.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/go-logr/logr/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
    type appObject struct {
        // ... other fields ...
        logger logr.Logger
        // ... other fields ...
    }

    func (app *appObject) Run() {
        app.logger.Info("starting up", "timestamp", time.Now())

        // ... app code ...
```

----------------------------------------

TITLE: Implementing Routes with Variables in Go
DESCRIPTION: Example of setting up a router with path variables using Gorilla Mux. This snippet shows how to define a route with a dynamic 'type' parameter.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gorilla/mux/README.md#2025-04-10_snippet_21

LANGUAGE: go
CODE:
```
// endpoints.go
func main() {
    r := mux.NewRouter()
    // A route with a route variable:
    r.HandleFunc("/metrics/{type}", MetricsHandler)

    log.Fatal(http.ListenAndServe("localhost:8080", r))
}
```

----------------------------------------

TITLE: Adding SeverityUndefined Constant
DESCRIPTION: Adds SeverityUndefined constant to represent an unset severity level in logging.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_5

LANGUAGE: Go
CODE:
```
SeverityUndefined const to go.opentelemetry.io/otel/log
```

----------------------------------------

TITLE: Setting BlkioDeviceReadIOps in Docker Container Configuration
DESCRIPTION: Configures block IO read rate limits (IO operations per second) for a specific device. This setting allows limiting the read IOPS for a container to prevent it from consuming too many system resources.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_5

LANGUAGE: json
CODE:
```
"BlkioDeviceReadIOps": [{"Path": "/dev/sda", "Rate": "1000"}]
```

----------------------------------------

TITLE: Endpoint Operational Info Request in Remote Driver Protocol
DESCRIPTION: LibNetwork requests operational info for an endpoint, providing network ID and endpoint ID.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/remote.md#2025-04-10_snippet_8

LANGUAGE: JSON
CODE:
```
{
		"NetworkID": string,
		"EndpointID": string
    }
```

----------------------------------------

TITLE: Filter Table IPTables Commands
DESCRIPTION: The actual iptables commands used to create the filter table configuration, including chain creation, policy setting, and rule definition.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/new-daemon.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
-P INPUT ACCEPT
-P FORWARD ACCEPT
-P OUTPUT ACCEPT
-N DOCKER
-N DOCKER-BRIDGE
-N DOCKER-CT
-N DOCKER-FORWARD
-N DOCKER-ISOLATION-STAGE-1
-N DOCKER-ISOLATION-STAGE-2
-N DOCKER-USER
-A FORWARD -j DOCKER-USER
-A FORWARD -j DOCKER-FORWARD
-A DOCKER ! -i docker0 -o docker0 -j DROP
-A DOCKER-BRIDGE -o docker0 -j DOCKER
-A DOCKER-CT -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A DOCKER-FORWARD -j DOCKER-CT
-A DOCKER-FORWARD -j DOCKER-ISOLATION-STAGE-1
-A DOCKER-FORWARD -j DOCKER-BRIDGE
-A DOCKER-FORWARD -i docker0 -j ACCEPT
-A DOCKER-ISOLATION-STAGE-1 -i docker0 ! -o docker0 -j DOCKER-ISOLATION-STAGE-2
-A DOCKER-ISOLATION-STAGE-2 -o docker0 -j DROP
-A DOCKER-USER -j RETURN
```

----------------------------------------

TITLE: Marshaling Go struct to TOML
DESCRIPTION: Shows how to marshal a Go struct into a TOML document using the go-toml v2 library.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/pelletier/go-toml/v2/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
cfg := MyConfig{
	Version: 2,
	Name:    "go-toml",
	Tags:    []string{"go", "toml"},
}

b, err := toml.Marshal(cfg)
if err != nil {
	panic(err)
}
fmt.Println(string(b))
```

----------------------------------------

TITLE: Creating Nested Buckets in BoltDB with Go
DESCRIPTION: This snippet demonstrates how to create and use nested buckets in BoltDB. It shows the creation of a user within an account bucket structure.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_17

LANGUAGE: go
CODE:
```
func createUser(accountID int, u *User) error {
    tx, err := db.Begin(true)
    if err != nil {
        return err
    }
    defer tx.Rollback()

    root := tx.Bucket([]byte(strconv.FormatUint(accountID, 10)))
    bkt, err := root.CreateBucketIfNotExists([]byte("USERS"))
    if err != nil {
        return err
    }

    userID, err := bkt.NextSequence()
    if err != nil {
        return err
    }
    u.ID = userID

    if buf, err := json.Marshal(u); err != nil {
        return err
    } else if err := bkt.Put([]byte(strconv.FormatUint(u.ID, 10)), buf); err != nil {
        return err
    }

    if err := tx.Commit(); err != nil {
        return err
    }

    return nil
}
```

----------------------------------------

TITLE: Network Driver Node Discovery Format
DESCRIPTION: Specific format for node discovery notifications, including node address and self-identification flag.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/remote.md#2025-04-10_snippet_15

LANGUAGE: json
CODE:
```
{
    "DiscoveryType": int,
    "DiscoveryData": {
        "Address" : string,
        "self" : bool
    }
}
```

----------------------------------------

TITLE: Create Docker Image from Container API
DESCRIPTION: REST endpoint to create a new Docker image from a container's changes. Accepts container configuration and commit parameters. Returns ID of newly created image.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_67

LANGUAGE: http
CODE:
```
POST /v1.24/commit?container=44c004db4b17&comment=message&repo=myrepo HTTP/1.1
```

LANGUAGE: json
CODE:
```
{
     "Hostname": "",
     "Domainname": "",
     "User": "",
     "AttachStdin": false,
     "AttachStdout": true,
     "AttachStderr": true,
     "Tty": false,
     "OpenStdin": false,
     "StdinOnce": false,
     "Env": null,
     "Cmd": [
             "date"
     ],
     "Mounts": [
       {
         "Source": "/data",
         "Destination": "/data",
         "Mode": "ro,Z",
         "RW": false
       }
     ],
     "Labels": {
             "key1": "value1",
             "key2": "value2"
      },
     "WorkingDir": "",
     "NetworkDisabled": false,
     "ExposedPorts": {
             "22/tcp": {}
     }
}
```

----------------------------------------

TITLE: Asynchronous Log Entry Writing in Go
DESCRIPTION: Demonstrates adding log entries to a buffer for asynchronous flushing to Cloud Logging service. This is the recommended approach for non-critical logging.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/logging/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
logger := client.Logger("my-log")
logger.Log(logging.Entry{Payload: "something happened!"})
```

----------------------------------------

TITLE: JSON Key File Authorization
DESCRIPTION: Creates a new client using a JSON key file for authentication credentials
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
client, err := storage.NewClient(ctx, option.WithCredentialsFile("path/to/keyfile.json"))
```

----------------------------------------

TITLE: Defining NetworkAttachment Message Structure in Protobuf
DESCRIPTION: Definition of a NetworkAttachment message type with fields for ID, aliases, and driver attachment options. Includes a nested message type for driver attachment options map entries.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_82

LANGUAGE: protobuf
CODE:
```
field {
  name: "aliases"
  number: 3
  label: LABEL_REPEATED
  type: TYPE_STRING
  json_name: "aliases"
}
field {
  name: "driver_attachment_opts"
  number: 4
  label: LABEL_REPEATED
  type: TYPE_MESSAGE
  type_name: ".docker.swarmkit.v1.NetworkAttachment.DriverAttachmentOptsEntry"
  json_name: "driverAttachmentOpts"
}
nested_type {
  name: "DriverAttachmentOptsEntry"
  field {
    name: "key"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "key"
  }
  field {
    name: "value"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "value"
  }
  options {
    map_entry: true
  }
}
```

----------------------------------------

TITLE: Building Named Routes with Gorilla Mux
DESCRIPTION: Demonstrates how to create and name routes in Gorilla Mux, allowing for URL construction using named parameters.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gorilla/mux/README.md#2025-04-10_snippet_10

LANGUAGE: go
CODE:
```
r := mux.NewRouter()
r.HandleFunc("/articles/{category}/{id:[0-9]+}", ArticleHandler).
  Name("article")
```

----------------------------------------

TITLE: Defining Raft Entry Structure in Protobuf
DESCRIPTION: Defines the structure of a Raft Entry in Protocol Buffers, including fields for term, index, type, and data.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_109

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "Entry"
  field {
    name: "Term"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    options {
      65001: 0
    }
    json_name: "Term"
  }
  field {
    name: "Index"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    options {
      65001: 0
    }
    json_name: "Index"
  }
  field {
    name: "Type"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".raftpb.EntryType"
    options {
      65001: 0
    }
    json_name: "Type"
  }
  field {
    name: "Data"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_BYTES
    json_name: "Data"
  }
}
```

----------------------------------------

TITLE: Creating Docker Network and Running Container with Published Port
DESCRIPTION: Commands to create a custom Docker network (bridge1) with specific subnet configuration and run a container on that network with port mapping from host port 8080 to container port 80.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
docker network create \
  -o com.docker.network.bridge.name=bridge1 \
  --subnet 192.0.2.0/24 --gateway 192.0.2.1 bridge1
docker run --network bridge1 -p 8080:80 --name c1 busybox
```

----------------------------------------

TITLE: Defining Resource Message Structure in Protobuf
DESCRIPTION: Definition of a Resource message type with fields for ID, metadata, annotations, kind, and payload. Supports generic resources through the use of google.protobuf.Any for payload.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_87

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "Resource"
  field {
    name: "id"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    options {
      65004: "ID"
    }
    json_name: "id"
  }
  field {
    name: "meta"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Meta"
    options {
      65001: 0
    }
    json_name: "meta"
  }
  field {
    name: "annotations"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Annotations"
    options {
      65001: 0
    }
    json_name: "annotations"
  }
  field {
    name: "kind"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "kind"
  }
  field {
    name: "payload"
    number: 5
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".google.protobuf.Any"
    json_name: "payload"
  }
  options {
    70001 {
      1 {
        1: 1
        2: 1
        3: 1
        4: 1
        5: 1
        6: 1
        13: 1
      }
    }
  }
}
```

----------------------------------------

TITLE: Connecting to Remote Syslog via TCP
DESCRIPTION: Demonstrates how to establish a connection to a remote syslog server using unencrypted TCP. This creates a writer for sending log messages to the specified TCP endpoint with the given priority and tag.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/RackSec/srslog/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
w, err := syslog.Dial("tcp", "192.168.0.51:514", syslog.LOG_ERR, "testtag")
```

----------------------------------------

TITLE: Install Plugin API Response
DESCRIPTION: Example JSON response from the POST /plugins/pull endpoint showing the plugin configuration options that were applied during installation.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_89

LANGUAGE: json
CODE:
```
[
  {
    "Name": "network",
    "Description": "",
    "Value": [
      "host"
    ]
  },
  {
    "Name": "mount",
    "Description": "",
    "Value": [
      "/data"
    ]
  },
  {
    "Name": "device",
    "Description": "",
    "Value": [
      "/dev/cpu_dma_latency"
    ]
  }
]
```

----------------------------------------

TITLE: Using tar2go to Manipulate Tar Files in Go
DESCRIPTION: This snippet demonstrates how to use tar2go to open a tar file, access its fs.FS implementation, modify the in-memory representation, and create a new tar with updated content. It covers opening files, replacing content, deleting files, and updating the tar.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/cpuguy83/tar2go/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
  f, _ := os.Open(p)
  defer f.Close()
  
  // Entrypoint into this library
  idx := NewIndex(f)
  
  // Get the `fs.FS` implementation
  goFS := idx.FS()
  // Do stuff with your fs
  // ...
  
  
  // Add or replace a file in the index
  _ := idx.Replace("foo", strings.NewReader("random stuff")
  data, _ := fs.ReadFile(goFS, "foo")
  if string(data) != "random stuff") {
    panic("unexpected data")
  }
  
  // Delete a file in the index
  _ := idx.Replace("foo", nil)
  if _, err := fs.ReadFile(goFS, "foo"); !errors.Is(err, fs.ErrNotExist) {
    panic(err)
  }
  
  // Create a new tar with updated content
  // First we need to create an `io.Writer`, which is where the updated tar stream will be written to.
  f, _ := os.CreateTemp("", "updated")
  idx.Update(f, func(name string, rdr ReaderAtSized) (ReaderAtSized, bool, error) {
    // Update calls this function for every file in the tar
    // The returned `ReaderAtSized` is used instead of the content passed in (rdr).
    // To make no changes just return the same rdr back.
    // Return true for the bool value if the content is changed.
  })
```

----------------------------------------

TITLE: Defining Extension Message Structure in Protobuf
DESCRIPTION: Definition of an Extension message type with fields for ID, metadata, annotations, and description. Used to define extensions to the SwarmKit functionality.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_88

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "Extension"
  field {
    name: "id"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    options {
      65004: "ID"
    }
    json_name: "id"
  }
  field {
    name: "meta"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Meta"
    options {
      65001: 0
    }
    json_name: "meta"
  }
  field {
    name: "annotations"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Annotations"
    options {
      65001: 0
    }
    json_name: "annotations"
  }
  field {
    name: "description"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "description"
  }
  options {
    70001 {
      1 {
        1: 1
        2: 1
        3: 1
        4: 1
        5: 1
        6: 1
      }
    }
  }
}
```

----------------------------------------

TITLE: Setting BlkioDeviceWriteIOps in Docker Container Configuration
DESCRIPTION: Configures block IO write rate limits (IO operations per second) for a specific device. This setting allows limiting the write IOPS for a container to prevent it from consuming too many system resources.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_6

LANGUAGE: json
CODE:
```
"BlkioDeviceWriteIOps": [{"Path": "/dev/sda", "Rate": "1000"}]
```

----------------------------------------

TITLE: JSON Response Structure for API Errors in Docker Engine API v1.24
DESCRIPTION: This snippet demonstrates the standard JSON format used for error responses in the Docker Engine API. It includes a 'message' field containing the error description.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_0

LANGUAGE: json
CODE:
```
{
    "message": "page not found"
}
```

----------------------------------------

TITLE: Implementing Event Broadcasting in Go
DESCRIPTION: Shows how to set up event broadcasting to multiple queues, allowing events to be distributed to multiple listeners without blocking.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/go-events/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
var broadcast = NewBroadcaster() // make it available somewhere in your application.
broadcast.Add(queue) // add your queue!
broadcast.Add(queue2) // and another!
```

----------------------------------------

TITLE: Responding to Handshake in Remote Driver Protocol
DESCRIPTION: When loaded, a remote driver process must respond to a POST request on /Plugin.Activate with a manifest indicating it implements the NetworkDriver interface.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/remote.md#2025-04-10_snippet_0

LANGUAGE: JSON
CODE:
```
{
		"Implements": ["NetworkDriver"]
    }
```

----------------------------------------

TITLE: Tagging Docker Image with HTTP POST Request
DESCRIPTION: Sends a POST request to tag a Docker image into a repository. The request includes query parameters for the repository name and tag.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_58

LANGUAGE: http
CODE:
```
POST /v1.24/images/test/tag?repo=myrepo&tag=v42 HTTP/1.1
```

----------------------------------------

TITLE: Defining Labeled Timer Metrics in Go
DESCRIPTION: Shows how to create a labeled timer metric for tracking container actions with specific action labels.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/go-metrics/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
containerActions = ns.NewLabeledTimer("container_actions", "The number of milliseconds it takes to process each container action", "action")
```

----------------------------------------

TITLE: Setting Up an In-Memory Sink with Signal Handler in go-metrics
DESCRIPTION: This example shows how to configure an in-memory metrics sink with a signal handler for debugging. It demonstrates various metric types including gauges, counters, and samples, which can be dumped to stderr when a signal is received.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/armon/go-metrics/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
// Setup the inmem sink and signal handler
inm := metrics.NewInmemSink(10*time.Second, time.Minute)
sig := metrics.DefaultInmemSignal(inm)
metrics.NewGlobal(metrics.DefaultConfig("service-name"), inm)

// Run some code
inm.SetGauge([]string{"foo"}, 42)
inm.EmitKey([]string{"bar"}, 30)

inm.IncrCounter([]string{"baz"}, 42)
inm.IncrCounter([]string{"baz"}, 1)
inm.IncrCounter([]string{"baz"}, 80)

inm.AddSample([]string{"method", "wow"}, 42)
inm.AddSample([]string{"method", "wow"}, 100)
inm.AddSample([]string{"method", "wow"}, 22)

....
```

----------------------------------------

TITLE: Destination NAT for Service Traffic in Host Namespace
DESCRIPTION: This iptables DNAT rule in the host namespace's nat PREROUTING chain redirects service requests to the ingress_sbox namespace's interface. It translates the destination address while preserving the port.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/network.md#2025-04-10_snippet_3

LANGUAGE: bash
CODE:
```
DNAT tcp  --  anywhere anywhere  tcp dpt:30000 to:172.18.0.2:30000
```

----------------------------------------

TITLE: Basic Logging with glog in Go
DESCRIPTION: Demonstrates basic logging functionality using the original glog package, including Info and Fatal level logs.
SOURCE: https://github.com/moby/moby/blob/master/vendor/k8s.io/klog/v2/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
glog.Info("Prepare to repel boarders")

glog.Fatalf("Initialization failed: %s", err)
```

----------------------------------------

TITLE: Creating Metrics Namespace in Go
DESCRIPTION: Demonstrates how to create a new metrics namespace for the Docker engine daemon with version and commit labels attached.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/go-metrics/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
ns := metrics.NewNamespace("engine", "daemon", metrics.Labels{
        "version": dockerversion.Version,
        "commit":  dockerversion.GitCommit,
})
```

----------------------------------------

TITLE: Array Bounds Handling in TOML Unmarshaling - Go
DESCRIPTION: Demonstrates the difference in array bounds handling between v1 and v2 when unmarshaling TOML data. V1 returns an error for out-of-bounds elements while v2 silently ignores them to match encoding/json behavior.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/pelletier/go-toml/v2/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
type doc struct {
	A [2]string
}
d := doc{}
err := toml.Unmarshal([]byte(`A = ["one", "two", "many"]`), &d)
fmt.Println(err)

// (1, 1): unmarshal: TOML array length (3) exceeds destination array length (2)
```

----------------------------------------

TITLE: Adding Global Logger Provider Package
DESCRIPTION: Adds a new package to manage the global LoggerProvider, which will eventually be migrated to the main otel package.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_7

LANGUAGE: Go
CODE:
```
go.opentelemetry.io/otel/log/global to manage the global LoggerProvider
```

----------------------------------------

TITLE: Using Stateless Compression with Gzip in Go
DESCRIPTION: Demonstrates how to use stateless compression with gzip, including setting up a buffered writer to control write sizes. This approach is useful for scenarios with many concurrent compressors but little activity.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/klauspost/compress/README.md#2025-04-10_snippet_3

LANGUAGE: Go
CODE:
```
// replace 'ioutil.Discard' with your output.
gzw, err := gzip.NewWriterLevel(ioutil.Discard, gzip.StatelessCompression)
if err != nil {
    return err
}
defer gzw.Close()

w := bufio.NewWriterSize(gzw, 4096)
defer w.Flush()

// Write to 'w'
```

----------------------------------------

TITLE: Searching Docker Images with HTTP GET Request
DESCRIPTION: Sends a GET request to search for Docker images on Docker Hub. The request includes a query parameter for the search term.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_60

LANGUAGE: http
CODE:
```
GET /v1.24/images/search?term=sshd HTTP/1.1
```

----------------------------------------

TITLE: Basic Error Handling Pattern in Go
DESCRIPTION: Demonstrates the traditional error handling idiom in Go, showing the basic nil check pattern.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/pkg/errors/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
if err != nil {
        return err
}
```

----------------------------------------

TITLE: Calculating Percentage of Slow Unary Queries for gRPC Services with Prometheus
DESCRIPTION: This query computes the percentage of unary requests that took longer than 250ms to process for each gRPC service. It uses the 'grpc_server_handling_seconds_bucket' and 'grpc_server_handling_seconds_count' metrics over a 5-minute window to calculate the slow query percentage.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/grpc-ecosystem/go-grpc-prometheus/README.md#2025-04-10_snippet_8

LANGUAGE: jsoniq
CODE:
```
100.0 - (
sum(rate(grpc_server_handling_seconds_bucket{job="foo",grpc_type="unary",le="0.25"}[5m])) by (grpc_service)
 / 
sum(rate(grpc_server_handling_seconds_count{job="foo",grpc_type="unary"}[5m])) by (grpc_service)
) * 100.0
```

----------------------------------------

TITLE: Adding Replace Directive for Legacy Import Path in Go Modules
DESCRIPTION: This command adds a replace directive to the go.mod file, downgrading the legacy import path to an older version. This is necessary if you're unable to migrate to the new import path or if your dependencies are still using the old one.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.uber.org/atomic/README.md#2025-04-10_snippet_1

LANGUAGE: shell
CODE:
```
$ go mod edit -replace github.com/uber-go/atomic=github.com/uber-go/atomic@v1.4.0
```

----------------------------------------

TITLE: Container Start Response
DESCRIPTION: Example HTTP response for a successful container start operation, showing a 204 No Content status code.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_29

LANGUAGE: http
CODE:
```
HTTP/1.1 204 No Content
```

----------------------------------------

TITLE: Setting Cgroup Driver for Docker Runtime
DESCRIPTION: Example of configuring Docker daemon to use systemd as the cgroup driver. This setting applies to all containers launched by the daemon and affects how container cgroups are managed.
SOURCE: https://github.com/moby/moby/blob/master/man/dockerd.8.md#2025-04-10_snippet_4

LANGUAGE: bash
CODE:
```
$ sudo dockerd --exec-opt native.cgroupdriver=systemd
```

----------------------------------------

TITLE: Network Driver Join Request Format
DESCRIPTION: Format for the POST request to NetworkDriver.Join endpoint when a sandbox is given an endpoint. Includes network, endpoint and sandbox identifiers along with options.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/remote.md#2025-04-10_snippet_11

LANGUAGE: json
CODE:
```
{
    "NetworkID": string,
    "EndpointID": string,
    "SandboxKey": string,
    "Options": { ... }
}
```

----------------------------------------

TITLE: Parsing PackageURL from String in Go
DESCRIPTION: Example demonstrating how to parse a PackageURL from its string representation, handling any potential errors that might occur during parsing.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/package-url/packageurl-go/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
package main

import (
	"fmt"

	"github.com/package-url/packageurl-go"
)

func main() {
	instance, err := packageurl.FromString("test:ok/name@version")
	if err != nil {
		panic(err)
	}
	fmt.Printf("%#v", instance)
}
```

----------------------------------------

TITLE: Updating a Docker Swarm Configuration
DESCRIPTION: POST request to /swarm/update endpoint to update swarm configurations. Includes parameters for orchestration, Raft, dispatcher, CA config, and join tokens.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_99

LANGUAGE: HTTP
CODE:
```
POST /v1.24/swarm/update HTTP/1.1
Content-Length: 12345

{
  "Name": "default",
  "Orchestration": {
    "TaskHistoryRetentionLimit": 10
  },
  "Raft": {
    "SnapshotInterval": 10000,
    "LogEntriesForSlowFollowers": 500,
    "HeartbeatTick": 1,
    "ElectionTick": 3
  },
  "Dispatcher": {
    "HeartbeatPeriod": 5000000000
  },
  "CAConfig": {
    "NodeCertExpiry": 7776000000000000
  },
  "JoinTokens": {
    "Worker": "SWMTKN-1-3pu6hszjas19xyp7ghgosyx9k8atbfcr8p2is99znpy26u2lkl-1awxwuwd3z9j1z3puu7rcgdbx",
    "Manager": "SWMTKN-1-3pu6hszjas19xyp7ghgosyx9k8atbfcr8p2is99znpy26u2lkl-7p73s1dx5in4tatdymyhg9hu2"
  }
}
```

----------------------------------------

TITLE: Defining Mount Consistency Enum in Protocol Buffers for Docker SwarmKit
DESCRIPTION: This snippet defines an enum 'Consistency' for mount consistency types in Docker SwarmKit, including DEFAULT, CONSISTENT, CACHED, and DELEGATED. Each value is associated with a specific consistency option.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_34

LANGUAGE: protobuf
CODE:
```
enum_type {
  name: "Consistency"
  value {
    name: "DEFAULT"
    number: 0
    options {
      66001: "MountConsistencyDefault"
    }
  }
  value {
    name: "CONSISTENT"
    number: 1
    options {
      66001: "MountConsistencyFull"
    }
  }
  value {
    name: "CACHED"
    number: 2
    options {
      66001: "MountConsistencyCached"
    }
  }
  value {
    name: "DELEGATED"
    number: 3
    options {
      66001: "MountConsistencyDelegated"
    }
  }
  options {
    62001: 0
    62023: "MountConsistency"
  }
}
```

----------------------------------------

TITLE: Redirecting Container Published Port to Target Port in Container Namespace
DESCRIPTION: This iptables REDIRECT rule in the container namespace's nat PREROUTING chain redirects traffic from the published port (30000) to the actual target port (80) that the application inside the container is listening on.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/network.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
REDIRECT   tcp  --  anywhere  10.255.0.11  tcp dpt:30000 redir ports 80
```

----------------------------------------

TITLE: Setting Logrus Logging Level in Go
DESCRIPTION: This snippet shows how to set the logging level for a Logrus Logger. It sets the level to InfoLevel, which will log anything that is info or above (warn, error, fatal, panic).
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/sirupsen/logrus/README.md#2025-04-10_snippet_7

LANGUAGE: go
CODE:
```
// Will log anything that is info or above (warn, error, fatal, panic). Default.
log.SetLevel(log.InfoLevel)
```

----------------------------------------

TITLE: Defining Mount.TmpfsOptions Message in Protocol Buffers
DESCRIPTION: This nested message type defines options for tmpfs (in-memory temporary filesystem) mounts in Docker containers, including size in bytes and permission mode, allowing for volatile container storage.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_32

LANGUAGE: protobuf
CODE:
```
nested_type {
  name: "TmpfsOptions"
  field {
    name: "size_bytes"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_INT64
    json_name: "sizeBytes"
  }
  field {
    name: "mode"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_UINT32
    options {
```

----------------------------------------

TITLE: Documenting Version 1.2.0 Release in Markdown
DESCRIPTION: This snippet documents the changes for version 1.2.0 of the go-grpc-prometheus project, including the release date and GitHub tag link.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/grpc-ecosystem/go-grpc-prometheus/CHANGELOG.md#2025-04-10_snippet_1

LANGUAGE: markdown
CODE:
```
## [1.2.0](https://github.com/grpc-ecosystem/go-grpc-prometheus/releases/tag/v1.2.0) - 2018-06-04
```

----------------------------------------

TITLE: Defining Object Type for Watching in Docker SwarmKit
DESCRIPTION: Protocol buffer definition for the Object message type in Docker SwarmKit that serves as a container for different object types (Node, Service, Network, etc.) that can be monitored via the watch API.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_131

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "Object"
  field {
    name: "node"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Node"
    oneof_index: 0
    json_name: "node"
  }
  field {
    name: "service"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Service"
    oneof_index: 0
    json_name: "service"
  }
  field {
    name: "network"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Network"
    oneof_index: 0
    json_name: "network"
  }
  field {
    name: "task"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Task"
    oneof_index: 0
    json_name: "task"
  }
  field {
    name: "cluster"
    number: 5
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Cluster"
    oneof_index: 0
    json_name: "cluster"
  }
  field {
    name: "secret"
    number: 6
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Secret"
    oneof_index: 0
    json_name: "secret"
  }
  field {
    name: "resource"
    number: 7
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Resource"
    oneof_index: 0
    json_name: "resource"
  }
  field {
    name: "extension"
    number: 8
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Extension"
    oneof_index: 0
    json_name: "extension"
  }
  field {
    name: "config"
    number: 9
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Config"
    oneof_index: 0
    json_name: "config"
  }
  field {
    name: "volume"
    number: 10
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Volume"
    oneof_index: 0
    json_name: "volume"
  }
  oneof_decl {
    name: "Object"
  }
}
```

----------------------------------------

TITLE: Generating Semantic Conventions with Docker
DESCRIPTION: Shell commands to generate new semantic convention packages using the semconvgen Docker image. Requires setting the release tag version and path to the semantic conventions repository.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/RELEASING.md#2025-04-10_snippet_0

LANGUAGE: sh
CODE:
```
export TAG="v1.21.0" # Change to the release version you are generating.
export OTEL_SEMCONV_REPO="/absolute/path/to/opentelemetry/semantic-conventions"
docker pull otel/semconvgen:latest
make semconv-generate # Uses the exported TAG and OTEL_SEMCONV_REPO.
```

----------------------------------------

TITLE: Defining RdmaStat Message Type in Protocol Buffers
DESCRIPTION: Defines the RdmaStat message type with fields for current and limit RDMA entries. Each entry is represented by the RdmaEntry message type.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/cgroup2/stats/metrics.pb.txt#2025-04-10_snippet_1

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "RdmaStat"
  field {
    name: "current"
    number: 1
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".io.containerd.cgroups.v2.RdmaEntry"
    json_name: "current"
  }
  field {
    name: "limit"
    number: 2
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".io.containerd.cgroups.v2.RdmaEntry"
    json_name: "limit"
  }
}
```

----------------------------------------

TITLE: Inspecting Exec Instance in Docker via HTTP GET
DESCRIPTION: HTTP GET request to retrieve low-level information about an exec command in a Docker container, including ContainerID, ExitCode, and ProcessConfig.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_76

LANGUAGE: http
CODE:
```
GET /v1.24/exec/11fb006128e8ceb3942e7c58d77750f24210e35f879dd204ac975c184b820b39/json HTTP/1.1
```

----------------------------------------

TITLE: Defining IOStat Message Type in Protocol Buffers
DESCRIPTION: Defines the IOStat message type with fields for I/O usage and PSI (Pressure Stall Information) stats. The usage field is a repeated IOEntry message, while psi is an optional PSIStats message.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/cgroup2/stats/metrics.pb.txt#2025-04-10_snippet_3

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "IOStat"
  field {
    name: "usage"
    number: 1
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".io.containerd.cgroups.v2.IOEntry"
    json_name: "usage"
  }
  field {
    name: "psi"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".io.containerd.cgroups.v2.PSIStats"
    json_name: "psi"
  }
}
```

----------------------------------------

TITLE: Error Comparison Using errors.Is in Go
DESCRIPTION: Demonstrates how to check for specific error values within a multierror using the standard library errors.Is function.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/hashicorp/go-multierror/README.md#2025-04-10_snippet_4

LANGUAGE: go
CODE:
```
// Assume err is a multierror value
err := somefunc()
if errors.Is(err, os.ErrNotExist) {
	// err contains os.ErrNotExist
}
```

----------------------------------------

TITLE: Updating BigQuery Table Listing Pattern
DESCRIPTION: New iterator-based pattern for listing tables in a dataset, replacing the direct ListTables method.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_26

LANGUAGE: go
CODE:
```
tables, err := ds.ListTables(ctx)
```

LANGUAGE: go
CODE:
```
it := ds.Tables(ctx)
for {
    table, err := it.Next()
    if err == iterator.Done {
        break
    }
    if err != nil {
        // TODO: Handle error.
    }
    // TODO: use table.
}
```

----------------------------------------

TITLE: Defining ContainerSpec Message in Protocol Buffers
DESCRIPTION: Defines the ContainerSpec message type, which includes fields for container configuration such as image, labels, commands, environment variables, user, privileges, mounts, and runtime options. This structure is used to configure containers within tasks in a Docker Swarm cluster.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_65

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "ContainerSpec"
  field {
    name: "image"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "image"
  }
  field {
    name: "labels"
    number: 2
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.ContainerSpec.LabelsEntry"
    json_name: "labels"
  }
  field {
    name: "command"
    number: 3
    label: LABEL_REPEATED
    type: TYPE_STRING
    json_name: "command"
  }
  field {
    name: "args"
    number: 4
    label: LABEL_REPEATED
    type: TYPE_STRING
    json_name: "args"
  }
  field {
    name: "hostname"
    number: 14
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "hostname"
  }
  field {
    name: "env"
    number: 5
    label: LABEL_REPEATED
    type: TYPE_STRING
    json_name: "env"
  }
  field {
    name: "dir"
    number: 6
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "dir"
  }
  field {
    name: "user"
    number: 7
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "user"
  }
  field {
    name: "groups"
    number: 11
    label: LABEL_REPEATED
    type: TYPE_STRING
    json_name: "groups"
  }
  field {
    name: "privileges"
    number: 22
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Privileges"
    json_name: "privileges"
  }
  field {
    name: "init"
    number: 23
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".google.protobuf.BoolValue"
    json_name: "init"
  }
  field {
    name: "tty"
    number: 13
    label: LABEL_OPTIONAL
    type: TYPE_BOOL
    options {
      65004: "TTY"
    }
    json_name: "tty"
  }
  field {
    name: "open_stdin"
    number: 18
    label: LABEL_OPTIONAL
    type: TYPE_BOOL
    json_name: "openStdin"
  }
  field {
    name: "read_only"
    number: 19
    label: LABEL_OPTIONAL
    type: TYPE_BOOL
    json_name: "readOnly"
  }
  field {
    name: "stop_signal"
    number: 20
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "stopSignal"
  }
  field {
    name: "mounts"
    number: 8
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Mount"
    options {
      65001: 0
    }
    json_name: "mounts"
  }
  field {
    name: "stop_grace_period"
    number: 9
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".google.protobuf.Duration"
    json_name: "stopGracePeriod"
  }
  field {
    name: "pull_options"
    number: 10
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.ContainerSpec.PullOptions"
    json_name: "pullOptions"
  }
  field {
    name: "secrets"
    number: 12
```

----------------------------------------

TITLE: Opening bbolt Database with Timeout in Go
DESCRIPTION: Go code showing how to open a bbolt database with a timeout option to prevent indefinite waits.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_5

LANGUAGE: go
CODE:
```
db, err := bolt.Open("my.db", 0600, &bolt.Options{Timeout: 1 * time.Second})
```

----------------------------------------

TITLE: Configuring Docker Runtimes with Command Line Arguments
DESCRIPTION: Example of registering multiple runtimes via the Docker daemon command line. This method doesn't support defining runtime arguments, unlike the configuration file approach.
SOURCE: https://github.com/moby/moby/blob/master/man/dockerd.8.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
$ sudo dockerd --add-runtime runc=runc --add-runtime custom=/usr/local/bin/my-runc-replacement
```

----------------------------------------

TITLE: Defining ClusterSnapshot and Snapshot Types in Docker SwarmKit
DESCRIPTION: Protocol buffer definitions for ClusterSnapshot and Snapshot message types that represent the complete state of a Docker SwarmKit cluster, including membership information and stored objects.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_130

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "ClusterSnapshot"
  field {
    name: "members"
    number: 1
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.RaftMember"
    json_name: "members"
  }
  field {
    name: "removed"
    number: 2
    label: LABEL_REPEATED
    type: TYPE_UINT64
    options {
      packed: false
    }
    json_name: "removed"
  }
}
message_type {
  name: "Snapshot"
  field {
    name: "version"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.Snapshot.Version"
    json_name: "version"
  }
  field {
    name: "membership"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.ClusterSnapshot"
    options {
      65001: 0
    }
    json_name: "membership"
  }
  field {
    name: "store"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.StoreSnapshot"
    options {
      65001: 0
    }
    json_name: "store"
  }
  enum_type {
    name: "Version"
    value {
      name: "V0"
      number: 0
    }
  }
}
```

----------------------------------------

TITLE: Context Support for slog in Go
DESCRIPTION: This snippet introduces functions for storing and retrieving slog.Logger pointers in a context.Context. It explains how these functions interoperate with logr.Logger and provide efficient contextual logging.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/go-logr/logr/README.md#2025-04-10_snippet_4

LANGUAGE: go
CODE:
```
// Example usage:
NewContextWithSlogLogger(ctx, slogLogger)
FromContextAsSlogLogger(ctx)
```

----------------------------------------

TITLE: Updating Span Error Recording in Go
DESCRIPTION: Changes the behavior of RecordError to comply with semantic conventions by recording an 'exception' event.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_33

LANGUAGE: Go
CODE:
```
Span `RecordError` now records an `exception` event to comply with the semantic convention specification.
```

----------------------------------------

TITLE: Shell Script for Testing Gitignore Behavior
DESCRIPTION: This shell script creates a test directory structure, initializes a git repository, and sets up a .gitignore file to demonstrate the expected behavior of excluding 'parse.go' files globally. It's used to compare the behavior of go-pathspec with git's native implementation.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/shibumi/go-pathspec/README.md#2025-04-10_snippet_1

LANGUAGE: shell
CODE:
```
mkdir -p /tmp/test/internal/util
touch /tmp/test/internal/util/parse.go
cd /tmp/test/
git init
echo "parse.go" > .gitignore
```

----------------------------------------

TITLE: Configuring SNAT and Redirection to IPVS in Ingress_sbox Namespace
DESCRIPTION: This iptables rule in the ingress_sbox namespace's nat PREROUTING chain redirects service requests to IPVS for load balancing. It performs Source NAT for any traffic destined to the overlay network (10.255.0.0/16).
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/network.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
SNAT  all  --  anywhere 10.255.0.0/16  ipvs to:10.255.0.2
```

----------------------------------------

TITLE: Proposing Raft Configuration Changes in Go
DESCRIPTION: Demonstrates how to propose configuration changes to add or remove nodes from the cluster.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/etcd/raft/v3/README.md#2025-04-10_snippet_7

LANGUAGE: go
CODE:
```
	n.ProposeConfChange(ctx, cc)
```

----------------------------------------

TITLE: Memory OOM Control Message Definition in Protobuf
DESCRIPTION: Defines the structure for memory out-of-memory control metrics including OOM kill disable status, under OOM state, and OOM kill count.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/cgroup1/stats/metrics.pb.txt#2025-04-10_snippet_1

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "MemoryOomControl"
  field {
    name: "oom_kill_disable"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    json_name: "oomKillDisable"
  }
  field {
    name: "under_oom"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    json_name: "underOom"
  }
  field {
    name: "oom_kill"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    json_name: "oomKill"
  }
}
```

----------------------------------------

TITLE: Migrating to Trace Client Server Interceptor in Go
DESCRIPTION: Updates the implementation of the gRPC server interceptor to use a method from the trace.Client instance instead of a global function.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_21

LANGUAGE: go
CODE:
```
s := grpc.NewServer(grpc.UnaryInterceptor(trace.GRPCServerInterceptor(tc)))
```

LANGUAGE: go
CODE:
```
s := grpc.NewServer(grpc.UnaryInterceptor(tc.GRPCServerInterceptor()))
```

----------------------------------------

TITLE: Container Process List Response in Docker API
DESCRIPTION: JSON response showing processes running inside a container. The response includes column titles and process details including user ID, PID, command, and other process information.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_17

LANGUAGE: JSON
CODE:
```
{
   "Titles" : [
     "UID", "PID", "PPID", "C", "STIME", "TTY", "TIME", "CMD"
   ],
   "Processes" : [
     [
       "root", "13642", "882", "0", "17:03", "pts/0", "00:00:00", "/bin/bash"
     ],
     [
       "root", "13735", "13642", "0", "17:06", "pts/0", "00:00:00", "sleep 10"
     ]
   ]
}
```

----------------------------------------

TITLE: Running BuildKit with Containerd Exporter
DESCRIPTION: Example showing how to build and export an image to containerd using buildctl with the image exporter option.
SOURCE: https://github.com/moby/moby/blob/master/reports/builder/2017-07-17.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
go run ./examples/buildkit2/buildkit.go | buildctl build --exporter image --exporter-opt name=docker.io/moby/buildkit:dev
```

----------------------------------------

TITLE: Running the aliasfix Migration Tool for Go-Genproto to Google-Cloud-Go
DESCRIPTION: Commands to run the aliasfix migration tool which automatically updates import statements for the migration from go-genproto to google-cloud-go. The tool scans the current directory and updates import paths, followed by a go mod tidy to clean up dependencies.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/migration.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
go run cloud.google.com/go/internal/aliasfix/cmd/aliasfix@latest .
go mod tidy
```

----------------------------------------

TITLE: Implementing DPanic Logging in Go
DESCRIPTION: Example of code that could be replaced with Zap's DPanic level for logging errors that shouldn't occur in production without crashing.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.uber.org/zap/FAQ.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
if err != nil {
  panic(fmt.Sprintf("shouldn't ever get here: %v", err))
}
```

----------------------------------------

TITLE: Accessing Block Device Information Using Both /proc and /sys in Go
DESCRIPTION: Shows how to initialize a filesystem that requires both proc and sys mountpoints for gathering block device statistics. This example specifically demonstrates accessing disk statistics.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/prometheus/procfs/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
    fs, err := blockdevice.NewFS("/proc", "/sys")
    stats, err := fs.ProcDiskstats()
```

----------------------------------------

TITLE: Running Docker Daemon with Debugger Attached
DESCRIPTION: Command to run the Docker daemon through a script, which will pause execution and wait for a debugger to attach.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/debug.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
$ ./hack/make.sh run
```

----------------------------------------

TITLE: Defining ConfigSpec Message in Protocol Buffers for Docker Swarmkit v1
DESCRIPTION: This snippet defines the ConfigSpec message type, which includes fields for configuration data such as annotations and binary data in a Docker Swarm.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_71

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "ConfigSpec"
  field {
    name: "annotations"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Annotations"
    options {
      65001: 0
    }
    json_name: "annotations"
  }
  field {
    name: "data"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_BYTES
    json_name: "data"
  }
}
```

----------------------------------------

TITLE: Creating a New Systemd cgroup (v2)
DESCRIPTION: Creates a new systemd v2 cgroup slice with path 'my.slice/my-cgroup.slice/my-cgroup-abc.slice'. Uses a dummy PID of -1 for creating a general slice as a parent cgroup.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/README.md#2025-04-10_snippet_15

LANGUAGE: go
CODE:
```
import (
    "github.com/containerd/cgroups/v3/cgroup2"
    specs "github.com/opencontainers/runtime-spec/specs-go"
)

res := cgroup2.Resources{}
// dummy PID of -1 is used for creating a "general slice" to be used as a parent cgroup.
// see https://github.com/containerd/cgroups/blob/1df78138f1e1e6ee593db155c6b369466f577651/v2/manager.go#L732-L735
m, err := cgroup2.NewSystemd("/", "my-cgroup-abc.slice", -1, &res)
if err != nil {
	return err
}
```

----------------------------------------

TITLE: Defining Snapshot Types in Docker SwarmKit
DESCRIPTION: Protocol buffer definitions for snapshot-related message types in Docker SwarmKit. These types are used to store and manage the state of the cluster, including all nodes, services, tasks, and other resources.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_129

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "StoreSnapshot"
  field {
    name: "nodes"
    number: 1
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Node"
    json_name: "nodes"
  }
  field {
    name: "services"
    number: 2
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Service"
    json_name: "services"
  }
  field {
    name: "networks"
    number: 3
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Network"
    json_name: "networks"
  }
  field {
    name: "tasks"
    number: 4
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Task"
    json_name: "tasks"
  }
  field {
    name: "clusters"
    number: 5
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Cluster"
    json_name: "clusters"
  }
  field {
    name: "secrets"
    number: 6
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Secret"
    json_name: "secrets"
  }
  field {
    name: "resources"
    number: 7
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Resource"
    json_name: "resources"
  }
  field {
    name: "extensions"
    number: 8
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Extension"
    json_name: "extensions"
  }
  field {
    name: "configs"
    number: 9
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Config"
    json_name: "configs"
  }
  field {
    name: "volumes"
    number: 10
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Volume"
    json_name: "volumes"
  }
}
```

----------------------------------------

TITLE: Recording Stats Measurements
DESCRIPTION: Shows how to record measurements with OpenCensus stats using the Record method
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opencensus.io/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
stats.Record(ctx, videoSize.M(102478))
```

----------------------------------------

TITLE: Create Network Request in Remote Driver Protocol
DESCRIPTION: LibNetwork sends a request to create a network, including network ID, IP addressing data, and options.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/remote.md#2025-04-10_snippet_4

LANGUAGE: JSON
CODE:
```
{
		"NetworkID": string,
		"IPv4Data" : [
		{
			"AddressSpace": string,
			"Pool": ipv4-cidr-string,
			"Gateway" : ipv4-cidr-string,
			"AuxAddresses": {
				"<identifier1>" : "<ipv4-address1>",
				"<identifier2>" : "<ipv4-address2>",
				...
			}
		},
		],
		"IPv6Data" : [
		{
			"AddressSpace": string,
			"Pool": ipv6-cidr-string,
			"Gateway" : ipv6-cidr-string,
			"AuxAddresses": {
				"<identifier1>" : "<ipv6-address1>",
				"<identifier2>" : "<ipv6-address2>",
				...
			}
		},
		],
		"Options": {
			...
		}
    }
```

----------------------------------------

TITLE: Verifying Content with Digest in Go
DESCRIPTION: Shows how to verify content using a previously created digest. This snippet compares the digest of new content with an existing identifier to check if the content has changed.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/opencontainers/go-digest/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
if id != digest.FromBytes([]byte("my content")) {
  return errors.New("the content has changed!")
}
```

----------------------------------------

TITLE: Creating Interactive Docker Containers with Macvlan Network
DESCRIPTION: Launches two Docker containers with Alpine Linux that connect to a Macvlan network named 'macvlan40', allowing container-to-container communication.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/macvlan.md#2025-04-10_snippet_14

LANGUAGE: bash
CODE:
```
docker run --net=macvlan40 -it --name mcv_test5 --rm alpine /bin/sh
docker run --net=macvlan40 -it --name mcv_test6 --rm alpine /bin/sh
```

----------------------------------------

TITLE: Adding New Node to Existing Raft Cluster in Go
DESCRIPTION: Demonstrates how to start a new node that will join an existing cluster. The node is started with an empty peer list after being added via ProposeConfChange.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/etcd/raft/v3/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
  // Create storage and config as shown above.
  n := raft.StartNode(c, nil)
```

----------------------------------------

TITLE: Delete Network Request in Remote Driver Protocol
DESCRIPTION: LibNetwork sends a request to delete a network, providing the network ID.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/remote.md#2025-04-10_snippet_5

LANGUAGE: JSON
CODE:
```
{
		"NetworkID": string
    }
```

----------------------------------------

TITLE: Creating a Routed-Mode Network and Running a Container with Published Port
DESCRIPTION: Commands to create a Docker network in routed gateway mode with a specific subnet and gateway, then run a container on this network with a port mapping from host port 8080 to container port 80.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/templates/usernet-portmap-routed.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
docker network create \
  -o com.docker.network.bridge.name=bridge1 \
  -o com.docker.network.bridge.gateway_mode_ipv4=routed \
  --subnet 192.0.2.0/24 --gateway 192.0.2.1 bridge1
docker run --network bridge1 -p 8080:80 --name c1 busybox
```

----------------------------------------

TITLE: Container Process List with Custom Format Response
DESCRIPTION: JSON response for a process list using custom 'ps' arguments. This example shows processes with the 'aux' format, which includes additional columns like CPU and memory usage percentages.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_19

LANGUAGE: JSON
CODE:
```
{
  "Titles" : [
    "USER","PID","%CPU","%MEM","VSZ","RSS","TTY","STAT","START","TIME","COMMAND"
  ]
  "Processes" : [
    [
      "root","13642","0.0","0.1","18172","3184","pts/0","Ss","17:03","0:00","/bin/bash"
    ],
    [
      "root","13895","0.0","0.0","4348","692","pts/0","S+","17:15","0:00","sleep 10"
    ]
  ],
}
```

----------------------------------------

TITLE: Checking Set Membership in Go
DESCRIPTION: Demonstrates using the Contains method to check if a specific element exists in a set. The example checks if "cooking" is considered a science class.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/deckarep/golang-set/v2/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
result := sciences.Contains("cooking")
fmt.Println(result)
```

----------------------------------------

TITLE: Defining NetworkSpec Message in Protocol Buffers for Docker Swarmkit v1
DESCRIPTION: This snippet defines the NetworkSpec message type, which includes fields for network configuration such as driver settings, IPv6 enablement, IPAM options, and network attachability in a Docker Swarm.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_68

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "NetworkSpec"
  field {
    name: "annotations"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Annotations"
    options {
      65001: 0
    }
    json_name: "annotations"
  }
  // ... (additional fields omitted for brevity)
}
```

----------------------------------------

TITLE: Defining IOEntry Message Type in Protocol Buffers
DESCRIPTION: Defines the IOEntry message type with fields for major and minor device numbers, read and write bytes, and read and write I/O operations. This structure represents detailed I/O statistics for a device.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/cgroup2/stats/metrics.pb.txt#2025-04-10_snippet_4

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "IOEntry"
  field {
    name: "major"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    json_name: "major"
  }
  field {
    name: "minor"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    json_name: "minor"
  }
  field {
    name: "rbytes"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    json_name: "rbytes"
  }
  field {
    name: "wbytes"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    json_name: "wbytes"
  }
  field {
    name: "rios"
    number: 5
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    json_name: "rios"
  }
  field {
    name: "wios"
    number: 6
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    json_name: "wios"
  }
}
```

----------------------------------------

TITLE: Initializing klog Flags in Go
DESCRIPTION: Demonstrates how to initialize klog flags explicitly, which is required as klog no longer uses init() to register flags.
SOURCE: https://github.com/moby/moby/blob/master/vendor/k8s.io/klog/v2/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
klog.InitFlags(nil)
```

----------------------------------------

TITLE: Connecting to Local Syslog with srslog
DESCRIPTION: Demonstrates how to establish a connection to a local syslog server using the srslog library. This creates a writer for logging to the local syslog daemon with the specified priority and tag.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/RackSec/srslog/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
w, err := syslog.Dial("", "", syslog.LOG_ERR, "testtag")
```

----------------------------------------

TITLE: Converting Markdown to Manpage Using Shell Redirection
DESCRIPTION: Example showing how to convert a markdown file to a manpage using shell input/output redirection.
SOURCE: https://github.com/moby/moby/blob/master/man/vendor/github.com/cpuguy83/go-md2man/v2/go-md2man.1.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
go-md2man < go-md2man.1.md > go-md2man.1
```

----------------------------------------

TITLE: Defining CAConfig Message in Protocol Buffers
DESCRIPTION: Defines a message type 'CAConfig' with fields for node certificate expiry, external CAs, signing CA certificate and key, and force rotate. This is used for Certificate Authority configuration in Docker SwarmKit.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_51

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "CAConfig"
  field {
    name: "node_cert_expiry"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".google.protobuf.Duration"
    json_name: "nodeCertExpiry"
  }
  field {
    name: "external_cas"
    number: 2
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.ExternalCA"
    options {
      65004: "ExternalCAs"
    }
    json_name: "externalCas"
  }
  field {
    name: "signing_ca_cert"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_BYTES
    options {
      65004: "SigningCACert"
    }
    json_name: "signingCaCert"
  }
  field {
    name: "signing_ca_key"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_BYTES
    options {
      65004: "SigningCAKey"
    }
    json_name: "signingCaKey"
  }
  field {
    name: "force_rotate"
    number: 5
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    json_name: "forceRotate"
  }
}
```

----------------------------------------

TITLE: Defining Network Attachment Message Types in Docker SwarmKit
DESCRIPTION: Protocol buffer definitions for message types used in network attachment operations within Docker SwarmKit. These types handle the attachment and detachment of containers to networks in the swarm.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_127

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "AttachNetworkRequest"
  field {
    name: "config"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.NetworkAttachmentConfig"
    json_name: "config"
  }
  field {
    name: "container_id"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "containerId"
  }
}
message_type {
  name: "AttachNetworkResponse"
  field {
    name: "attachment_id"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "attachmentId"
  }
}
message_type {
  name: "DetachNetworkRequest"
  field {
    name: "attachment_id"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "attachmentId"
  }
}
message_type {
  name: "DetachNetworkResponse"
}
```

----------------------------------------

TITLE: Compressing Data with Huff0 in Go
DESCRIPTION: This snippet demonstrates how to compress data using the Huff0 package. It shows the two main compression functions, Compress1X and Compress4X, and explains the possible error values that can be returned.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/klauspost/compress/huff0/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
Compress1X(input []byte) ([]byte, error)
Compress4X(input []byte) ([]byte, error)

// Possible error values:
// nil: Everything ok, output is returned
// ErrIncompressible: Input is judged to be too hard to compress
// ErrUseRLE: Input is a single byte value repeated
// ErrTooBig: Input block exceeds the maximum allowed size (128 Kib)
// (error): An internal error occurred
```

----------------------------------------

TITLE: Defining WatchRequest Message in Docker SwarmKit Protobuf
DESCRIPTION: Defines a WatchRequest message type used for subscribing to object changes in Docker SwarmKit. It includes fields for specifying which entries to watch, version information for resuming, and optional flags for including old object state.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_134

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "WatchRequest"
  field {
    name: "entries"
    number: 1
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.WatchRequest.WatchEntry"
    json_name: "entries"
  }
  field {
    name: "resume_from"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Version"
    json_name: "resumeFrom"
  }
  field {
    name: "include_old_object"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_BOOL
    json_name: "includeOldObject"
  }
  nested_type {
    name: "WatchEntry"
    field {
      name: "kind"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "kind"
    }
    field {
      name: "action"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".docker.swarmkit.v1.WatchActionKind"
      json_name: "action"
    }
    field {
      name: "filters"
      number: 3
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".docker.swarmkit.v1.SelectBy"
      json_name: "filters"
    }
  }
}
```

----------------------------------------

TITLE: Demonstrating Set Union Operation in Go
DESCRIPTION: Shows how to create a union of multiple sets to combine all unique classes across different categories. Demonstrates automatic deduplication of set elements.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/deckarep/golang-set/v2/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
  all := required
    .Union(sciences)
    .Union(electives)
    .Union(bonus)
  
  fmt.Println(all)
```

----------------------------------------

TITLE: Defining ServiceSpec Message in Protocol Buffers
DESCRIPTION: Defines the ServiceSpec message type, which includes fields for service annotations, task specifications, service mode (replicated, global, job), update and rollback configurations, and endpoint specifications. This structure is used to configure and manage services in a Docker Swarm cluster.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_63

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "ServiceSpec"
  field {
    name: "annotations"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Annotations"
    options {
      65001: 0
    }
    json_name: "annotations"
  }
  field {
    name: "task"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.TaskSpec"
    options {
      65001: 0
    }
    json_name: "task"
  }
  field {
    name: "replicated"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.ReplicatedService"
    oneof_index: 0
    json_name: "replicated"
  }
  field {
    name: "global"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.GlobalService"
    oneof_index: 0
    json_name: "global"
  }
  field {
    name: "replicated_job"
    number: 10
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.ReplicatedJob"
    oneof_index: 0
    json_name: "replicatedJob"
  }
  field {
    name: "global_job"
    number: 11
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.GlobalJob"
    oneof_index: 0
    json_name: "globalJob"
  }
  field {
    name: "update"
    number: 6
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.UpdateConfig"
    json_name: "update"
  }
  field {
    name: "rollback"
    number: 9
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.UpdateConfig"
    json_name: "rollback"
  }
  field {
    name: "networks"
    number: 7
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.NetworkAttachmentConfig"
    options {
      deprecated: true
    }
    json_name: "networks"
  }
  field {
    name: "endpoint"
    number: 8
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.EndpointSpec"
    json_name: "endpoint"
  }
  oneof_decl {
    name: "mode"
  }
}
```

----------------------------------------

TITLE: Manually Creating and Using VLAN Sub-interfaces for Docker Macvlan Networks
DESCRIPTION: This example shows how to manually create VLAN sub-interfaces and use them with Docker Macvlan networks. It covers creating interfaces with standard and custom naming conventions.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/macvlan.md#2025-04-10_snippet_13

LANGUAGE: bash
CODE:
```
# create a new sub-interface tied to dot1q vlan 40
ip link add link eth0 name eth0.40 type vlan id 40

# enable the new sub-interface
ip link set eth0.40 up

# now add networks and hosts as you would normally by attaching to the master (sub)interface that is tagged
docker network create -d macvlan \
   --subnet=192.168.40.0/24 \
   --gateway=192.168.40.1 \
   -o parent=eth0.40 macvlan40

# in two separate terminals, start a Docker container and the containers can now ping one another.
docker run --net=macvlan40 -it --name mcv_test5 --rm alpine /bin/sh
docker run --net=macvlan40 -it --name mcv_test6 --rm alpine /bin/sh

# create a new sub interface tied to dot1q vlan 40
ip link add link eth0 name foo type vlan id 40

# enable the new sub-interface
ip link set foo up

# now add networks and hosts as you would normally by attaching to the master (sub)interface that is tagged
docker network create -d macvlan \
    --subnet=192.168.40.0/24 --gateway=192.168.40.1 \
    -o parent=foo macvlan40
```

----------------------------------------

TITLE: Inspect Network API Request/Response
DESCRIPTION: GET endpoint to inspect a specific network by ID or name. Returns detailed network configuration including IPAM, containers, and options.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_83

LANGUAGE: http
CODE:
```
GET /v1.24/networks/7d86d31b1478e7cca9ebed7e73aa0fdeec46c5ca29497431d3007d2d9e15ed99 HTTP/1.1
```

LANGUAGE: json
CODE:
```
HTTP/1.1 200 OK
Content-Type: application/json

{
  "Name": "net01",
  "Id": "7d86d31b1478e7cca9ebed7e73aa0fdeec46c5ca29497431d3007d2d9e15ed99",
  "Scope": "local",
  "Driver": "bridge",
  "EnableIPv6": false,
  "IPAM": {
    "Driver": "default",
    "Config": [
      {
        "Subnet": "172.19.0.0/16",
        "Gateway": "172.19.0.1"
      }
    ],
    "Options": {
        "foo": "bar"
    }
  },
  "Internal": false,
  "Containers": {
    "19a4d5d687db25203351ed79d478946f861258f018fe384f229f2efa4b23513c": {
      "Name": "test",
      "EndpointID": "628cadb8bcb92de107b2a1e516cbffe463e321f548feb37697cce00ad694f21a",
      "MacAddress": "02:42:ac:13:00:02",
      "IPv4Address": "172.19.0.2/16",
      "IPv6Address": ""
    }
  },
  "Options": {
    "com.docker.network.bridge.default_bridge": "true",
    "com.docker.network.bridge.enable_icc": "true",
    "com.docker.network.bridge.enable_ip_masquerade": "true",
    "com.docker.network.bridge.host_binding_ipv4": "0.0.0.0",
    "com.docker.network.bridge.name": "docker0",
    "com.docker.network.driver.mtu": "1500"
  },
  "Labels": {
    "com.example.some-label": "some-value",
    "com.example.some-other-label": "some-other-value"
  }
}
```

----------------------------------------

TITLE: Response for Successful Docker Volumes Listing
DESCRIPTION: HTTP response containing a list of Docker volumes, including details such as Name, Driver, Mountpoint, and Scope for each volume.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_79

LANGUAGE: json
CODE:
```
{
  "Volumes": [
    {
      "Name": "tardis",
      "Driver": "local",
      "Mountpoint": "/var/lib/docker/volumes/tardis",
      "Labels": null,
      "Scope": "local"
    }
  ],
  "Warnings": []
}
```

----------------------------------------

TITLE: Creating Tags in OpenCensus
DESCRIPTION: Example showing how to create new tags in the current context using tag.New() with Insert and Upsert operations
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opencensus.io/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
ctx, err := tag.New(ctx,
	tag.Insert(osKey, "macOS-10.12.5"),
	tag.Upsert(userIDKey, "cde36753ed"),
)
if err != nil {
	log.Fatal(err)
}
```

----------------------------------------

TITLE: Modifying BatchSpanProcessor Behavior in Go OpenTelemetry SDK
DESCRIPTION: Updates ForceFlush method to abort after timeout or cancellation.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_37

LANGUAGE: Go
CODE:
```
Modify `BatchSpanProcessor.ForceFlush` to abort after timeout/cancellation.
```

----------------------------------------

TITLE: Creating a Conversion Chain for Go Structs
DESCRIPTION: Shows how to create a conversion chain to transform between struct versions. The chain specifies the order of transformations from V1 to V2 to V3.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/anchore/go-struct-converter/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
chain := converter.NewChain(V1{}, V2{}, V3{})
```

----------------------------------------

TITLE: Performing a Range Scan on an Immutable Radix Tree in Go
DESCRIPTION: This example illustrates how to perform a range scan on an immutable radix tree. It creates a tree with several key-value pairs and then iterates over a specific range of keys, demonstrating the ordered iteration capability of the radix tree.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/hashicorp/go-immutable-radix/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
// Create a tree
r := iradix.New()
r, _, _ = r.Insert([]byte("001"), 1)
r, _, _ = r.Insert([]byte("002"), 2)
r, _, _ = r.Insert([]byte("005"), 5)
r, _, _ = r.Insert([]byte("010"), 10)
r, _, _ = r.Insert([]byte("100"), 10)

// Range scan over the keys that sort lexicographically between [003, 050)
it := r.Root().Iterator()
it.SeekLowerBound([]byte("003"))
for key, _, ok := it.Next(); ok; key, _, ok = it.Next() {
  if key >= "050" {
      break
  }
  fmt.Println(key)
}
// Output:
//  005
//  010
```

----------------------------------------

TITLE: Testing TranslateText with Fake Server in Go
DESCRIPTION: This test function sets up a fake translation server, creates a client connected to the fake server, and tests the TranslateTextWithConcreteClient function. It demonstrates how to use a fake gRPC server for testing purposes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/testing.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
import (
        "context"
        "net"
        "testing"

        translate "cloud.google.com/go/translate/apiv3"
        "google.golang.org/api/option"
        translatepb "google.golang.org/genproto/googleapis/cloud/translate/v3"
        "google.golang.org/grpc"
)

func TestTranslateTextWithConcreteClient(t *testing.T) {
        ctx := context.Background()

        // Setup the fake server.
        fakeTranslationServer := &fakeTranslationServer{}
        l, err := net.Listen("tcp", "localhost:0")
        if err != nil {
                t.Fatal(err)
        }
        gsrv := grpc.NewServer()
        translatepb.RegisterTranslationServiceServer(gsrv, fakeTranslationServer)
        fakeServerAddr := l.Addr().String()
        go func() {
                if err := gsrv.Serve(l); err != nil {
                        panic(err)
                }
        }()

        // Create a client.
        client, err := translate.NewTranslationClient(ctx,
                option.WithEndpoint(fakeServerAddr),
                option.WithoutAuthentication(),
                option.WithGRPCDialOption(grpc.WithInsecure()),
        )
        if err != nil {
                t.Fatal(err)
        }

        // Run the test.
        text, err := TranslateTextWithConcreteClient(client, "Hola Mundo", "en-US")
        if err != nil {
                t.Fatal(err)
        }
        if text != "Hello World" {
                t.Fatalf("got %q, want Hello World", text)
        }
}
```

----------------------------------------

TITLE: Demonstrating duplicate lock acquisition in Go
DESCRIPTION: Code snippet showing how taking the same lock twice in a goroutine can lead to deadlocks. This is another common source of deadlocks that the library can detect.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/sasha-s/go-deadlock/Readme.md#2025-04-10_snippet_4

LANGUAGE: go
CODE:
```
A.Rlock() or lock()

A.lock() or A.RLock()
```

----------------------------------------

TITLE: Updating Storage Object Listing
DESCRIPTION: New iterator-based pattern for listing objects in a bucket, replacing the direct List method.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_28

LANGUAGE: go
CODE:
```
for query != nil {
    objs, err := bucket.List(d.ctx, query)
    if err != nil { ... }
    query = objs.Next
    for _, obj := range objs.Results {
        fmt.Println(obj)
    }
}
```

LANGUAGE: go
CODE:
```
iter := bucket.Objects(d.ctx, query)
for {
    obj, err := iter.Next()
    if err == iterator.Done {
        break
    }
    if err != nil { ... }
    fmt.Println(obj)
}
```

----------------------------------------

TITLE: Defining ContainerStatus Message in Protocol Buffers for Docker SwarmKit
DESCRIPTION: This snippet defines a message 'ContainerStatus' for Docker SwarmKit, including fields for container_id, pid, and exit_code. The pid field is annotated with a PID option.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_38

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "ContainerStatus"
  field {
    name: "container_id"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "containerId"
  }
  field {
    name: "pid"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_INT32
    options {
      65004: "PID"
    }
    json_name: "pid"
  }
  field {
    name: "exit_code"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_INT32
    json_name: "exitCode"
  }
}
```

----------------------------------------

TITLE: Range Scanning with Immutable Radix Tree in Go
DESCRIPTION: Shows how to perform a range scan over lexicographically ordered keys in an immutable radix tree, using an iterator with lower bound seeking.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/hashicorp/go-immutable-radix/v2/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
// Create a tree
r := iradix.New[int]()
r, _, _ = r.Insert([]byte("001"), 1)
r, _, _ = r.Insert([]byte("002"), 2)
r, _, _ = r.Insert([]byte("005"), 5)
r, _, _ = r.Insert([]byte("010"), 10)
r, _, _ = r.Insert([]byte("100"), 10)

// Range scan over the keys that sort lexicographically between [003, 050)
it := r.Root().Iterator()
it.SeekLowerBound([]byte("003"))
for key, _, ok := it.Next(); ok; key, _, ok = it.Next() {
  if string(key) >= "050" {
      break
  }
  fmt.Println(string(key))
}
// Output:
//  005
//  010
```

----------------------------------------

TITLE: Defining WatchMessage Message in Docker SwarmKit Protobuf
DESCRIPTION: Defines a WatchMessage message type that contains event data sent in response to a watch request. It includes a list of events (with action types and object data) and version information for tracking changes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_135

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "WatchMessage"
  field {
    name: "events"
    number: 1
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.WatchMessage.Event"
    json_name: "events"
  }
  field {
    name: "version"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Version"
    json_name: "version"
  }
  nested_type {
    name: "Event"
    field {
      name: "action"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".docker.swarmkit.v1.WatchActionKind"
      json_name: "action"
    }
    field {
      name: "object"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".docker.swarmkit.v1.Object"
      json_name: "object"
    }
    field {
      name: "old_object"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".docker.swarmkit.v1.Object"
      json_name: "oldObject"
    }
  }
}
```

----------------------------------------

TITLE: Regenerating Protocol Buffer and Mock Files
DESCRIPTION: Command for regenerating protocol buffer implementations and mock files using go generate. Requires protoc version 3.12.4 and various Go tools to be installed.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/google/certificate-transparency-go/README.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
go generate -x ./...
```

----------------------------------------

TITLE: Dockerfile Commands Feature Proposals
DESCRIPTION: Proposed new Dockerfile commands including IMPORT/EXPORT and environment-specific ARGs like DOCKEROS/DOCKERARCH. Also includes mount support and build context features.
SOURCE: https://github.com/moby/moby/blob/master/reports/2017-06-12.md#2025-04-10_snippet_0

LANGUAGE: dockerfile
CODE:
```
IMPORT
EXPORT
DOCKEROS
DOCKERARCH
RUN --mount
```

----------------------------------------

TITLE: Viewing Network Details from Container in Macvlan Network with Inferred Gateways
DESCRIPTION: This snippet demonstrates how to view network details, including IP addresses and routing tables, from within a container running on a Macvlan network with inferred gateways.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/macvlan.md#2025-04-10_snippet_12

LANGUAGE: plaintext
CODE:
```
# Container eth0 output (the fe80::42:c0ff:fea8:8803/64 address is the local link addr)
ip address show eth0
100: eth0@if2: <BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN> mtu 1500 qdisc noqueue state UNKNOWN
    link/ether 02:42:c0:a8:88:03 brd ff:ff:ff:ff:ff:ff
    inet 192.168.136.3/24 scope global eth0
       valid_lft forever preferred_lft forever
    inet6 fd11::3/64 scope global flags 02
       valid_lft forever preferred_lft forever
    inet6 fe80::42:c0ff:fea8:8803/64 scope link
       valid_lft forever preferred_lft forever

# IPv4 routing table from within the container
$ ip route
default via 192.168.136.1 dev eth0
192.168.136.0/24 dev eth0  src 192.168.136.3

# IPv6 routing table from within the container (the second v6 addresses is the local link addr)
$ ip -6 route
fd11::/64 dev eth0  metric 256
fe80::/64 dev eth0  metric 256
default via fd11::1 dev eth0  metric 1024
```

----------------------------------------

TITLE: Implementing YAML Marshaling and Unmarshaling in Go
DESCRIPTION: Demonstrates how to use the yaml.v2 package to marshal and unmarshal YAML data in Go. Shows both struct-based and map-based approaches with proper error handling. Includes examples of custom struct tags and flow style arrays.
SOURCE: https://github.com/moby/moby/blob/master/vendor/sigs.k8s.io/yaml/goyaml.v2/README.md#2025-04-10_snippet_0

LANGUAGE: Go
CODE:
```
package main

import (
        "fmt"
        "log"

        "gopkg.in/yaml.v2"
)

var data = `
a: Easy!
b:
  c: 2
  d: [3, 4]
`

// Note: struct fields must be public in order for unmarshal to
// correctly populate the data.
type T struct {
        A string
        B struct {
                RenamedC int   `yaml:"c"`
                D        []int `yaml:",flow"`
        }
}

func main() {
        t := T{}
    
        err := yaml.Unmarshal([]byte(data), &t)
        if err != nil {
                log.Fatalf("error: %v", err)
        }
        fmt.Printf("--- t:\n%v\n\n", t)
    
        d, err := yaml.Marshal(&t)
        if err != nil {
                log.Fatalf("error: %v", err)
        }
        fmt.Printf("--- t dump:\n%s\n\n", string(d))
    
        m := make(map[interface{}]interface{})
    
        err = yaml.Unmarshal([]byte(data), &m)
        if err != nil {
                log.Fatalf("error: %v", err)
        }
        fmt.Printf("--- m:\n%v\n\n", m)
    
        d, err = yaml.Marshal(&m)
        if err != nil {
                log.Fatalf("error: %v", err)
        }
        fmt.Printf("--- m dump:\n%s\n\n", string(d))
}
```

LANGUAGE: plaintext
CODE:
```
--- t:
{Easy! {2 [3 4]}}

--- t dump:
a: Easy!
b:
  c: 2
  d: [3, 4]


--- m:
map[a:Easy! b:map[c:2 d:[3 4]]]

--- m dump:
a: Easy!
b:
  c: 2
  d:
  - 3
  - 4
```

----------------------------------------

TITLE: Network Optimization Tasks in Markdown
DESCRIPTION: A markdown formatted list detailing planned network optimization tasks including dynamic RTT discovery with improved ping/ack measurements and dynamic MTU discovery for better update handling.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/hashicorp/memberlist/todo.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
# TODO
* Dynamic RTT discovery
    * Compute 99th percentile for ping/ack
    * Better lower bound for ping/ack, faster failure detection
* Dynamic MTU discovery
    * Prevent lost updates, increases efficiency
```

----------------------------------------

TITLE: Marking Service Traffic in Ingress_sbox Namespace
DESCRIPTION: This iptables rule in the ingress_sbox namespace's mangle PREROUTING chain marks specific service traffic with a hexadecimal identifier. This mark is used later by IPVS for load balancing decisions.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/network.md#2025-04-10_snippet_4

LANGUAGE: bash
CODE:
```
MARK  tcp  --  anywhere anywhere  tcp dpt:30000 MARK set 0x100
```

----------------------------------------

TITLE: Container Archive Path Info
DESCRIPTION: JSON structure containing filesystem information about an archived resource in a container.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_49

LANGUAGE: json
CODE:
```
{
    "name": "root",
    "size": 4096,
    "mode": 2147484096,
    "mtime": "2014-02-27T20:51:23Z",
    "linkTarget": ""
}
```

----------------------------------------

TITLE: Killing a Container via HTTP Request
DESCRIPTION: Example HTTP POST request to kill a container with ID 'e90e34656806'.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_34

LANGUAGE: http
CODE:
```
POST /v1.24/containers/e90e34656806/kill HTTP/1.1
```

----------------------------------------

TITLE: Response for Successful Exec Instance Creation in Docker
DESCRIPTION: HTTP response for a successful creation of an exec instance in a Docker container, returning the instance ID.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_74

LANGUAGE: http
CODE:
```
HTTP/1.1 201 Created
Content-Type: application/json

{
     "Id": "f90e34656806",
     "Warnings":[]
}
```

----------------------------------------

TITLE: SNAT for Load Balancing in Ingress_sbox Namespace
DESCRIPTION: This iptables rule in the ingress_sbox namespace's nat POSTROUTING chain performs source NAT for service requests bound for the overlay network and forwards traffic to IPVS for load balancing.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/network.md#2025-04-10_snippet_5

LANGUAGE: bash
CODE:
```
SNAT all  --  0.0.0.0/0  10.255.0.0/16 ipvs to:10.255.0.2
```

----------------------------------------

TITLE: Importing Hash Implementations in Go
DESCRIPTION: Shows how to import necessary hash implementations to avoid panics when using the digest package. This snippet should be included in the main function or another entry point of the application.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/opencontainers/go-digest/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
import (
    _ "crypto/sha256"
    _ "crypto/sha512"
)
```

----------------------------------------

TITLE: Defining IpamConf Struct for Network IPAM Configuration in Go
DESCRIPTION: Struct definition for IPAM configuration that includes preferred pool, subnet configuration, gateway, and auxiliary addresses. This structure is used when configuring networks with specific IP address requirements.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/ipam.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
// IpamConf contains all the ipam related configurations for a network
type IpamConf struct {
	// The master address pool for containers and network interfaces
	PreferredPool string
	// A subset of the master pool. If specified,
	// this becomes the container pool
	SubPool string
	// Input options for IPAM Driver (optional)
	Options map[string]string
	// Preferred Network Gateway address (optional)
	Gateway string
	// Auxiliary addresses for network driver. Must be within the master pool.
	// libnetwork will reserve them if they fall into the container pool
	AuxAddresses map[string]string
}
```

----------------------------------------

TITLE: Create Endpoint Response in Remote Driver Protocol
DESCRIPTION: The remote driver responds to the create endpoint request with interface details.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/remote.md#2025-04-10_snippet_7

LANGUAGE: JSON
CODE:
```
{
		"Interface": {
			"Address": string,
			"AddressIPv6": string,
			"MacAddress": string
		}
    }
```

----------------------------------------

TITLE: Creating and Using an In-Memory Database with Go-memdb
DESCRIPTION: This example demonstrates the complete workflow of using go-memdb. It shows how to define a data structure, create a schema with indexes, initialize the database, perform write transactions to insert data, and execute various read operations including exact lookups, full scans, and range queries.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/hashicorp/go-memdb/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
// Create a sample struct
type Person struct {
	Email string
	Name  string
	Age   int
}

// Create the DB schema
schema := &memdb.DBSchema{
	Tables: map[string]*memdb.TableSchema{
		"person": &memdb.TableSchema{
			Name: "person",
			Indexes: map[string]*memdb.IndexSchema{
				"id": &memdb.IndexSchema{
					Name:    "id",
					Unique:  true,
					Indexer: &memdb.StringFieldIndex{Field: "Email"},
				},
				"age": &memdb.IndexSchema{
					Name:    "age",
					Unique:  false,
					Indexer: &memdb.IntFieldIndex{Field: "Age"},
				},
			},
		},
	},
}

// Create a new data base
db, err := memdb.NewMemDB(schema)
if err != nil {
	panic(err)
}

// Create a write transaction
txn := db.Txn(true)

// Insert some people
people := []*Person{
	&Person{"joe@aol.com", "Joe", 30},
	&Person{"lucy@aol.com", "Lucy", 35},
	&Person{"tariq@aol.com", "Tariq", 21},
	&Person{"dorothy@aol.com", "Dorothy", 53},
}
for _, p := range people {
	if err := txn.Insert("person", p); err != nil {
		panic(err)
	}
}

// Commit the transaction
txn.Commit()

// Create read-only transaction
txn = db.Txn(false)
defer txn.Abort()

// Lookup by email
raw, err := txn.First("person", "id", "joe@aol.com")
if err != nil {
	panic(err)
}

// Say hi!
fmt.Printf("Hello %s!\n", raw.(*Person).Name)

// List all the people
it, err := txn.Get("person", "id")
if err != nil {
	panic(err)
}

fmt.Println("All the people:")
for obj := it.Next(); obj != nil; obj = it.Next() {
	p := obj.(*Person)
	fmt.Printf("  %s\n", p.Name)
}

// Range scan over people with ages between 25 and 35 inclusive
it, err = txn.LowerBound("person", "age", 25)
if err != nil {
	panic(err)
}

fmt.Println("People aged 25 - 35:")
for obj := it.Next(); obj != nil; obj = it.Next() {
	p := obj.(*Person)
	if p.Age > 35 {
		break
	}
	fmt.Printf("  %s is aged %d\n", p.Name, p.Age)
}
// Output:
// Hello Joe!
// All the people:
//   Dorothy
//   Joe
//   Lucy
//   Tariq
// People aged 25 - 35:
//   Joe is aged 30
//   Lucy is aged 35
```

----------------------------------------

TITLE: Defining StoreActionKind Enum in SwarmKit Protobuf
DESCRIPTION: Protocol Buffer definition for the StoreActionKind enum in Docker SwarmKit. This enumeration defines the kinds of actions that can be performed on the distributed store, starting with UNKNOWN and STORE_ACTION_CREATE.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_124

LANGUAGE: protobuf
CODE:
```
enum_type {
  name: "StoreActionKind"
  value {
    name: "UNKNOWN"
    number: 0
    options {
      66001: "StoreActionKindUnknown"
    }
  }
  value {
    name: "STORE_ACTION_CREATE"
    number: 1
  }
}
```

----------------------------------------

TITLE: Unmarshaling TOML to Go struct
DESCRIPTION: Demonstrates how to unmarshal a TOML document into a Go struct using the go-toml v2 library.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/pelletier/go-toml/v2/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
doc := `
version = 2
name = "go-toml"
tags = ["go", "toml"]
`

var cfg MyConfig
err := toml.Unmarshal([]byte(doc), &cfg)
if err != nil {
	panic(err)
}
fmt.Println("version:", cfg.Version)
fmt.Println("name:", cfg.Name)
fmt.Println("tags:", cfg.Tags)
```

----------------------------------------

TITLE: Defining RestartPolicy Message in Protocol Buffers for Docker SwarmKit
DESCRIPTION: This snippet defines a message 'RestartPolicy' for Docker SwarmKit, including fields for condition, delay, max attempts, and window. It also includes an enum 'RestartCondition' for specifying restart conditions.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_35

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "RestartPolicy"
  field {
    name: "condition"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.RestartPolicy.RestartCondition"
    json_name: "condition"
  }
  field {
    name: "delay"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".google.protobuf.Duration"
    json_name: "delay"
  }
  field {
    name: "max_attempts"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    json_name: "maxAttempts"
  }
  field {
    name: "window"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".google.protobuf.Duration"
    json_name: "window"
  }
  enum_type {
    name: "RestartCondition"
    value {
      name: "NONE"
      number: 0
      options {
        66001: "RestartOnNone"
      }
    }
    value {
      name: "ON_FAILURE"
      number: 1
      options {
        66001: "RestartOnFailure"
      }
    }
    value {
      name: "ANY"
      number: 2
      options {
        66001: "RestartOnAny"
      }
    }
    options {
      62001: 0
      62023: "RestartCondition"
    }
  }
}
```

----------------------------------------

TITLE: Basic Struct Merging in Go
DESCRIPTION: Simple example demonstrating how to merge two structs using Mergo, where zero-value fields in the destination are populated from the source.
SOURCE: https://github.com/moby/moby/blob/master/vendor/dario.cat/mergo/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
package main

import (
	"fmt"
	"dario.cat/mergo"
)

type Foo struct {
	A string
	B int64
}

func main() {
	src := Foo{
		A: "one",
		B: 2,
	}
	dest := Foo{
		A: "two",
	}
	mergo.Merge(&dest, src)
	fmt.Println(dest)
	// Will print
	// {two 2}
}
```

----------------------------------------

TITLE: Modifying Docker Daemon Help Message
DESCRIPTION: Edit the help message for the Docker daemon in the source code.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/set-up-dev-env.md#2025-04-10_snippet_14

LANGUAGE: go
CODE:
```
Short:         "A self-sufficient and really fun runtime for containers.",
```

----------------------------------------

TITLE: Defining WatchSelectors Message in SwarmKit Protobuf
DESCRIPTION: This snippet defines the WatchSelectors message type used for specifying watch criteria in SwarmKit's protobuf. It includes fields for various selectors like ID, name, service ID, node ID, and others.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_73

LANGUAGE: protobuf
CODE:
```
message WatchSelectors {
  bool id = 1;
  bool id_prefix = 2;
  bool name = 3;
  bool name_prefix = 4;
  bool custom = 5;
  bool custom_prefix = 6;
  bool service_id = 7;
  bool node_id = 8;
  bool slot = 9;
  bool desired_state = 10;
  bool role = 11;
  bool membership = 12;
  bool kind = 13;
}
```

----------------------------------------

TITLE: Creating Multi-Subnet Macvlan Network with 802.1q Trunking
DESCRIPTION: Creates a Macvlan network with multiple subnets (10.1.20.0/24 and 10.1.10.0/24) using VLAN ID 101. This example demonstrates creating, testing connectivity between containers on different subnets, and cleaning up containers and networks.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/macvlan.md#2025-04-10_snippet_8

LANGUAGE: bash
CODE:
```
docker network create -d macvlan \
    --subnet=10.1.20.0/24 --subnet=10.1.10.0/24 \
    --gateway=10.1.20.1 --gateway=10.1.10.1 \
    -o parent=eth0.101 mcv101

# View Links after to network create `ip link`
$ ip link

# Test 10.1.20.10.0/24 connectivity
docker run --net=mcv101 --ip=10.1.20.9 -itd alpine /bin/sh
docker run --net=mcv101 --ip=10.1.20.10 -it --rm alpine ping -c 4 10.1.20.10

# Test 10.1.10.10.0/24 connectivity
docker run --net=mcv101 --ip=10.1.10.10 -itd alpine /bin/sh
docker run --net=mcv101 --ip=10.1.10.9 -it --rm alpine ping -c 4 10.1.10.10

# Delete All Containers
docker rm -f `docker ps -qa`

# Delete all Networks
docker network rm $(docker network ls -q)

# Run ip links again and verify the links are cleaned up
ip link
```

----------------------------------------

TITLE: Accessing BuildKit Images via Containerd
DESCRIPTION: Commands demonstrating how to list, unpack, and run images built with BuildKit using the containerd CLI (ctr).
SOURCE: https://github.com/moby/moby/blob/master/reports/builder/2017-07-17.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
ctr --namespace buildkit images ls
ctr --namespace buildkit rootfs unpack <manifest-sha>
ctr --namespace buildkit run -t docker.io/moby/buildkit:dev id ash
```

----------------------------------------

TITLE: Decompressing Huff0 Data in Go
DESCRIPTION: This snippet shows how to decompress Huff0 encoded data. It involves initializing the decoding table with ReadTable and then using either Decompress1X or Decompress4X functions for decompression.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/klauspost/compress/huff0/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
ReadTable(input []byte) ([]byte, error)
Decompress1X(input []byte) ([]byte, error)
Decompress4X(input []byte) ([]byte, error)
```

----------------------------------------

TITLE: Getting Stats with Ignored Missing Files (v1)
DESCRIPTION: Retrieves cgroup statistics while ignoring non-existent metrics files, which is useful when some cgroup features are disabled in the kernel.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/README.md#2025-04-10_snippet_8

LANGUAGE: go
CODE:
```
stats, err := control.Stat(cgroup1.IgnoreNotExist)
```

----------------------------------------

TITLE: Updated Claims Interface Implementation in Go
DESCRIPTION: New Claims interface definition showing the restructured getter methods for JWT claims validation. This interface replaces the previous Valid() error implementation with specific getters for standard JWT claims.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/golang-jwt/jwt/v5/MIGRATION_GUIDE.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
type Claims interface {
	GetExpirationTime() (*NumericDate, error)
	GetIssuedAt() (*NumericDate, error)
	GetNotBefore() (*NumericDate, error)
	GetIssuer() (string, error)
	GetSubject() (string, error)
	GetAudience() (ClaimStrings, error)
}
```

----------------------------------------

TITLE: Running the Docker Daemon
DESCRIPTION: Basic command for running the Docker daemon (dockerd) as a service. The daemon should generally be run as root, with additional configuration placed in the daemon.json file.
SOURCE: https://github.com/moby/moby/blob/master/project/PACKAGERS.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
dockerd
```

----------------------------------------

TITLE: Creating a cgroup with Systemd Slice Support (v1)
DESCRIPTION: Creates a new cgroup integrated with systemd using slices, which provides better integration with the systemd service manager.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
control, err := cgroup1.New(cgroup1.Systemd, cgroup1.Slice("system.slice", "runc-test"), &specs.LinuxResources{
    CPU: &specs.CPU{
        Shares: &shares,
    },
})
```

----------------------------------------

TITLE: Importing Optimized Compression Packages in Go
DESCRIPTION: Example of how to replace standard library imports with optimized versions from the compression library. This shows the mapping between old and new import paths for gzip, zlib, zip, and flate packages.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/klauspost/compress/README.md#2025-04-10_snippet_2

LANGUAGE: Go
CODE:
```
| old import       | new import                            |
|------------------|---------------------------------------|
| `compress/gzip`  | `github.com/klauspost/compress/gzip`  |
| `compress/zlib`  | `github.com/klauspost/compress/zlib`  |
| `archive/zip`    | `github.com/klauspost/compress/zip`   |
| `compress/flate` | `github.com/klauspost/compress/flate` |
```

----------------------------------------

TITLE: Installing copystructure Go Library using go get
DESCRIPTION: This command installs the copystructure library from GitHub using the standard go get command. It allows developers to add the library to their Go project for deep copying of values.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/mitchellh/copystructure/README.md#2025-04-10_snippet_0

LANGUAGE: shell
CODE:
```
$ go get github.com/mitchellh/copystructure
```

----------------------------------------

TITLE: Defining StoreAction Message in SwarmKit Protobuf
DESCRIPTION: Protocol Buffer definition for the StoreAction message in Docker SwarmKit. This message represents an action to be performed on the distributed store, with an action type and various possible target objects including nodes, services, tasks, networks, etc.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_123

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "StoreAction"
  field {
    name: "action"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.StoreActionKind"
    json_name: "action"
  }
  field {
    name: "node"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Node"
    oneof_index: 0
    json_name: "node"
  }
  field {
    name: "service"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Service"
    oneof_index: 0
    json_name: "service"
  }
  field {
    name: "task"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Task"
    oneof_index: 0
    json_name: "task"
  }
  field {
    name: "network"
    number: 5
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Network"
    oneof_index: 0
    json_name: "network"
  }
  field {
    name: "cluster"
    number: 6
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Cluster"
    oneof_index: 0
    json_name: "cluster"
  }
  field {
    name: "secret"
    number: 7
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Secret"
    oneof_index: 0
    json_name: "secret"
  }
  field {
    name: "resource"
    number: 8
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Resource"
    oneof_index: 0
    json_name: "resource"
  }
  field {
    name: "extension"
    number: 9
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Extension"
    oneof_index: 0
    json_name: "extension"
  }
  field {
    name: "config"
    number: 10
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Config"
    oneof_index: 0
    json_name: "config"
  }
  field {
    name: "volume"
    number: 11
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Volume"
    oneof_index: 0
    json_name: "volume"
  }
  oneof_decl {
    name: "target"
  }
}
```

----------------------------------------

TITLE: Examining Network Namespaces and Interfaces
DESCRIPTION: Commands to inspect network namespaces, create symlinks, and examine network interfaces within containers and overlay networks.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/vagrant.md#2025-04-10_snippet_6

LANGUAGE: bash
CODE:
```
$ docker inspect -f '{{ .NetworkSettings.SandboxKey}}' 6635a3822135
$ sudo su
root@net-2:/var/run# ln -s /var/run/docker/netns netns
root@net-2:/var/run# ip netns show
root@net-2:/var/run/docker# ip netns exec 6635a3822135 ip addr show eth0
root@net-2:/var/run/docker# ip netns exec 8805e22ad6e2 ip -d link show
```

----------------------------------------

TITLE: Implementing CORS Middleware with Gorilla Mux in Go
DESCRIPTION: Example of using CORSMethodMiddleware to handle cross-origin requests with proper headers. The code sets up a router with CORS support for multiple HTTP methods and demonstrates a handler that sets the Access-Control-Allow-Origin header.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gorilla/mux/README.md#2025-04-10_snippet_16

LANGUAGE: go
CODE:
```
package main

import (
	"net/http"
	"github.com/gorilla/mux"
)

func main() {
    r := mux.NewRouter()

    // IMPORTANT: you must specify an OPTIONS method matcher for the middleware to set CORS headers
    r.HandleFunc("/foo", fooHandler).Methods(http.MethodGet, http.MethodPut, http.MethodPatch, http.MethodOptions)
    r.Use(mux.CORSMethodMiddleware(r))
    
    http.ListenAndServe(":8080", r)
}

func fooHandler(w http.ResponseWriter, r *http.Request) {
    w.Header().Set("Access-Control-Allow-Origin", "*")
    if r.Method == http.MethodOptions {
        return
    }

    w.Write([]byte("foo"))
}
```

----------------------------------------

TITLE: Basic BitSet Usage Example in Go
DESCRIPTION: Demonstrates core BitSet functionality including setting/clearing bits, chaining operations, and intersection testing using a card game example.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/bits-and-blooms/bitset/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
package main

import (
	"fmt"
	"math/rand"

	"github.com/bits-and-blooms/bitset"
)

func main() {
	fmt.Printf("Hello from BitSet!\n")
	var b bitset.BitSet
	// play some Go Fish
	for i := 0; i < 100; i++ {
		card1 := uint(rand.Intn(52))
		card2 := uint(rand.Intn(52))
		b.Set(card1)
		if b.Test(card2) {
			fmt.Println("Go Fish!")
		}
		b.Clear(card1)
	}

	// Chaining
	b.Set(10).Set(11)

	for i, e := b.NextSet(0); e; i, e = b.NextSet(i + 1) {
		fmt.Println("The following bit is set:", i)
	}
	if b.Intersection(bitset.New(100).Set(10)).Count() == 1 {
		fmt.Println("Intersection works.")
	} else {
		fmt.Println("Intersection doesn't work???")
	}
}
```

----------------------------------------

TITLE: Defining RaftConfig Message in Protocol Buffers
DESCRIPTION: Defines a message type 'RaftConfig' with fields for snapshot interval and keeping old snapshots. This is used for configuring Raft consensus in Docker SwarmKit.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_55

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "RaftConfig"
  field {
    name: "snapshot_interval"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    json_name: "snapshotInterval"
  }
  field {
    name: "keep_old_snapshots"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    json_name: "keepOldSnapshots"
  }
}
```

----------------------------------------

TITLE: Updating Firestore Document in Go
DESCRIPTION: This snippet demonstrates how to update a Firestore document using the new Update method, which replaces the deprecated UpdateMap and UpdateStruct methods. It shows how to update a nested field with a new value.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_16

LANGUAGE: go
CODE:
```
docref.Update(ctx, []firestore.Update{{Path: "a.b", Value: 1}})
```

----------------------------------------

TITLE: Converting Format String Logging to Structured Logging in Go
DESCRIPTION: This snippet provides examples of how to convert traditional format string logging to structured logging using logr. It demonstrates the transformation of log messages with format specifiers into key-value pairs.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/go-logr/logr/README.md#2025-04-10_snippet_5

LANGUAGE: go
CODE:
```
// Before:
klog.V(4).Infof("Client is returning errors: code %v, error %v", responseCode, err)

// After:
logger.Error(err, "client returned an error", "code", responseCode)

// Before:
klog.V(4).Infof("Got a Retry-After %ds response for attempt %d to %v", seconds, retries, url)

// After:
logger.V(4).Info("got a retry-after response when requesting url", "attempt", retries, "after seconds", seconds, "url", url)
```

----------------------------------------

TITLE: Getting Set Size in Go
DESCRIPTION: Shows how to use the Cardinality method to determine the number of elements in a set. The example counts the number of bonus classes offered.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/deckarep/golang-set/v2/README.md#2025-04-10_snippet_6

LANGUAGE: go
CODE:
```
fmt.Println(bonus.Cardinality())
```

----------------------------------------

TITLE: Inspecting Container Network Configuration
DESCRIPTION: Commands to inspect the container's network interface and routing configuration
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/macvlan.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
ip a show eth0
    eth0@if3: <BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN> mtu 1500 qdisc noqueue state UNKNOWN
    link/ether 46:b2:6b:26:2f:69 brd ff:ff:ff:ff:ff:ff
    inet 172.16.86.2/24 scope global eth0

ip route
    default via 172.16.86.1 dev eth0
    172.16.86.0/24 dev eth0  src 172.16.86.2

# NOTE: the containers can NOT ping the underlying host interfaces as
# they are intentionally filtered by Linux for additional isolation.
```

----------------------------------------

TITLE: Pointer Override Merging in Go
DESCRIPTION: Example showing how to merge structs with pointer fields using WithoutDereference option to override pointer values.
SOURCE: https://github.com/moby/moby/blob/master/vendor/dario.cat/mergo/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
package main

import (
	"fmt"
	"dario.cat/mergo"
)

type Foo struct {
	A *string
	B int64
}

func main() {
	first := "first"
	second := "second"
	src := Foo{
		A: &first,
		B: 2,
	}

	dest := Foo{
		A: &second,
		B: 1,
	}

	mergo.Merge(&dest, src, mergo.WithOverride, mergo.WithoutDereference)
}
```

----------------------------------------

TITLE: Importing go-toml v2 in Go
DESCRIPTION: Shows how to import the go-toml v2 library in a Go project.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/pelletier/go-toml/v2/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
import "github.com/pelletier/go-toml/v2"
```

----------------------------------------

TITLE: Setting Cardinality Limit in OpenTelemetry Go Metric SDK
DESCRIPTION: Examples of setting the cardinality limit using the OTEL_GO_X_CARDINALITY_LIMIT environment variable. This includes setting a specific limit, an infinite limit, and disabling the limit.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/sdk/metric/internal/x/README.md#2025-04-10_snippet_0

LANGUAGE: console
CODE:
```
export OTEL_GO_X_CARDINALITY_LIMIT=2000
```

LANGUAGE: console
CODE:
```
export OTEL_GO_X_CARDINALITY_LIMIT=-1
```

LANGUAGE: console
CODE:
```
unset OTEL_GO_X_CARDINALITY_LIMIT
```

----------------------------------------

TITLE: Flag Parsing Example
DESCRIPTION: Shows how to parse command line flags and access their values.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/spf13/pflag/README.md#2025-04-10_snippet_4

LANGUAGE: go
CODE:
```
flag.Parse()
fmt.Println("ip has value ", *ip)
fmt.Println("flagvar has value ", flagvar)
```

----------------------------------------

TITLE: Defining EndpointSpec Message in Protocol Buffers for Docker Swarmkit v1
DESCRIPTION: This snippet defines the EndpointSpec message type, which includes fields for specifying the resolution mode and ports for service endpoints in a Docker Swarm.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_67

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "EndpointSpec"
  field {
    name: "mode"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.EndpointSpec.ResolutionMode"
    json_name: "mode"
  }
  field {
    name: "ports"
    number: 2
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.PortConfig"
    json_name: "ports"
  }
  // ... (enum definition omitted for brevity)
}
```

----------------------------------------

TITLE: List Plugins API Response
DESCRIPTION: Example JSON response from the GET /plugins endpoint showing details of installed plugins including ID, name, configuration and manifest details.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_88

LANGUAGE: json
CODE:
```
[
  {
    "Id": "5724e2c8652da337ab2eedd19fc6fc0ec908e4bd907c7421bf6a8dfc70c4c078",
    "Name": "tiborvass/no-remove",
    "Tag": "latest",
    "Active": true,
    "Config": {
      "Mounts": [
        {
          "Name": "",
          "Description": "",
          "Settable": null,
          "Source": "/data",
          "Destination": "/data",
          "Type": "bind",
          "Options": [
            "shared",
            "rbind"
          ]
        },
        {
          "Name": "",
          "Description": "",
          "Settable": null,
          "Source": null,
          "Destination": "/foobar",
          "Type": "tmpfs",
          "Options": null
        }
      ],
      "Env": [
        "DEBUG=1"
      ],
      "Args": null,
      "Devices": null
    },
    "Manifest": {...}
  }
]
```

----------------------------------------

TITLE: Using Autoincrementing Integer in BoltDB with Go
DESCRIPTION: This code shows how to use an autoincrementing integer as a unique identifier for key/value pairs in BoltDB. It uses the NextSequence() function to generate a new ID for a user record.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_14

LANGUAGE: go
CODE:
```
func (s *Store) CreateUser(u *User) error {
    return s.db.Update(func(tx *bolt.Tx) error {
        b := tx.Bucket([]byte("users"))
        id, _ := b.NextSequence()
        u.ID = int(id)
        buf, err := json.Marshal(u)
        if err != nil {
            return err
        }
        return b.Put(itob(u.ID), buf)
    })
}

func itob(v int) []byte {
    b := make([]byte, 8)
    binary.BigEndian.PutUint64(b, uint64(v))
    return b
}

type User struct {
    ID int
    ...
}
```

----------------------------------------

TITLE: Registering for Memory Threshold Events (v1)
DESCRIPTION: Sets up event notification when memory usage exceeds a specified threshold (50MB in this example), with notification through an eventfd.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/README.md#2025-04-10_snippet_11

LANGUAGE: go
CODE:
```
event := cgroup1.MemoryThresholdEvent(50 * 1024 * 1024, false)
efd, err := control.RegisterMemoryEvent(event)
```

----------------------------------------

TITLE: Importing SQLx Types Package in Go
DESCRIPTION: This snippet shows the import of the SQLx types package, which extends the database/sql package with additional functionality.
SOURCE: https://github.com/moby/moby/blob/master/vendor/modules.txt#2025-04-10_snippet_4

LANGUAGE: Go
CODE:
```
github.com/jmoiron/sqlx/types
```

----------------------------------------

TITLE: Testing CORS Request with curl
DESCRIPTION: Command to test the CORS-enabled endpoint using curl, showing how to make a request to the local server.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gorilla/mux/README.md#2025-04-10_snippet_17

LANGUAGE: bash
CODE:
```
curl localhost:8080/foo -v
```

----------------------------------------

TITLE: Defining Raft Message Processing in SwarmKit Protobuf
DESCRIPTION: Protocol Buffer definitions for ProcessRaftMessageRequest/Response and StreamRaftMessageRequest/Response in Docker SwarmKit. These messages are used for processing and streaming Raft messages between nodes in the cluster.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_120

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "ProcessRaftMessageRequest"
  field {
    name: "message"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".raftpb.Message"
    json_name: "message"
  }
  options {
    70000: 0
  }
}
message_type {
  name: "ProcessRaftMessageResponse"
}
message_type {
  name: "StreamRaftMessageRequest"
  field {
    name: "message"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".raftpb.Message"
    json_name: "message"
  }
  options {
    70000: 0
  }
}
message_type {
  name: "StreamRaftMessageResponse"
}
```

----------------------------------------

TITLE: Structured Field Logging Example
DESCRIPTION: Shows the recommended approach for structured logging using fields instead of formatted strings.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/sirupsen/logrus/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
log.WithFields(log.Fields{
  "event": event,
  "topic": topic,
  "key": key,
}).Fatal("Failed to send event")
```

----------------------------------------

TITLE: Defining TaskStatus Message in Protocol Buffers for Docker SwarmKit
DESCRIPTION: This snippet defines a message 'TaskStatus' for Docker SwarmKit, including fields for timestamp, state, message, err, container, port_status, applied_by, and applied_at. It uses a oneof field for runtime_status.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_40

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "TaskStatus"
  field {
    name: "timestamp"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".google.protobuf.Timestamp"
    json_name: "timestamp"
  }
  field {
    name: "state"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.TaskState"
    json_name: "state"
  }
  field {
    name: "message"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "message"
  }
  field {
    name: "err"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "err"
  }
  field {
    name: "container"
    number: 5
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.ContainerStatus"
    oneof_index: 0
    json_name: "container"
  }
  field {
    name: "port_status"
    number: 6
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.PortStatus"
    json_name: "portStatus"
  }
  field {
    name: "applied_by"
    number: 7
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "appliedBy"
  }
  field {
    name: "applied_at"
    number: 8
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".google.protobuf.Timestamp"
    json_name: "appliedAt"
  }
  oneof_decl {
    name: "runtime_status"
  }
}
```

----------------------------------------

TITLE: List Docker Images API Request and Response
DESCRIPTION: GET endpoint to list Docker images with optional digest information. Supports query parameters for filtering results including dangling images, labels, and image timeline filters.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_50

LANGUAGE: http
CODE:
```
GET /v1.24/images/json?all=0 HTTP/1.1
```

LANGUAGE: json
CODE:
```
[
  {
     "RepoTags": [
       "ubuntu:12.04",
       "ubuntu:precise",
       "ubuntu:latest"
     ],
     "Id": "8dbd9e392a964056420e5d58ca5cc376ef18e2de93b5cc90e868a1bbc8318c1c",
     "Created": 1365714795,
     "Size": 131506275,
     "VirtualSize": 131506275,
     "Labels": {}
  }
]
```

----------------------------------------

TITLE: Container Update Response in JSON
DESCRIPTION: Example HTTP response for a successful container update operation, returning a warnings array which is empty in this case.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_37

LANGUAGE: http
CODE:
```
HTTP/1.1 200 OK
Content-Type: application/json
```

LANGUAGE: json
CODE:
```
{
    "Warnings": []
}
```

----------------------------------------

TITLE: IPTables NAT Table Commands for Docker Swarm
DESCRIPTION: Complete list of IPTables NAT table commands that enable port publishing in Docker Swarm. These rules handle address translation, including the DNAT rule that forwards traffic from port 8080 to the container.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/swarm-portmap.md#2025-04-10_snippet_2

LANGUAGE: shell
CODE:
```
-P PREROUTING ACCEPT
-P INPUT ACCEPT
-P OUTPUT ACCEPT
-P POSTROUTING ACCEPT
-N DOCKER
-N DOCKER-INGRESS
-A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER-INGRESS
-A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER
-A OUTPUT -m addrtype --dst-type LOCAL -j DOCKER-INGRESS
-A OUTPUT ! -d 127.0.0.0/8 -m addrtype --dst-type LOCAL -j DOCKER
-A POSTROUTING -o docker_gwbridge -m addrtype --src-type LOCAL -j MASQUERADE
-A POSTROUTING -s 172.18.0.0/16 ! -o docker_gwbridge -j MASQUERADE
-A POSTROUTING -s 172.17.0.0/16 ! -o docker0 -j MASQUERADE
-A DOCKER -i docker_gwbridge -j RETURN
-A DOCKER -i docker0 -j RETURN
-A DOCKER-INGRESS -p tcp -m tcp --dport 8080 -j DNAT --to-destination 172.18.0.2:8080
-A DOCKER-INGRESS -j RETURN
```

----------------------------------------

TITLE: Defining AssignmentsMessage Message in SwarmKit Protobuf
DESCRIPTION: Defines a protocol buffer message for delivering assignment information in SwarmKit. It includes a type field to distinguish between complete and incremental updates, and fields for tracking the effects of assignments.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_103

LANGUAGE: protobuf
CODE:
```
name: "AssignmentsMessage"
field {
  name: "type"
  number: 1
  label: LABEL_OPTIONAL
  type: TYPE_ENUM
  type_name: ".docker.swarmkit.v1.AssignmentsMessage.Type"
  json_name: "type"
}
field {
  name: "applies_to"
  number: 2
  label: LABEL_OPTIONAL
  type: TYPE_STRING
  json_name: "appliesTo"
}
field {
  name: "results_in"
  number: 3
  label: LABEL_OPTIONAL
  type: TYPE_STRING
  json_name: "resultsIn"
}
field {
  name: "changes"
  number: 4
  label: LABEL_REPEATED
  type: TYPE_MESSAGE
  type_name: ".docker.swarmkit.v1.AssignmentChange"
  json_name: "changes"
}
enum_type {
  name: "Type"
  value {
    name: "COMPLETE"
    number: 0
  }
  value {
    name: "INCREMENTAL"
    number: 1
  }
}
```

----------------------------------------

TITLE: Leaving a Specific Network
DESCRIPTION: Bash command to leave a specific network using its network ID. The network ID can be retrieved using 'docker network ls --no-trunc'.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/cmd/diagnostic/README.md#2025-04-10_snippet_7

LANGUAGE: bash
CODE:
```
$ curl localhost:2000/leavenetwork?nid=<network id>
```

----------------------------------------

TITLE: Ping Docker Server API
DESCRIPTION: REST endpoint to ping the Docker server and verify it is responding. Returns simple OK response if server is up.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_66

LANGUAGE: http
CODE:
```
GET /v1.24/_ping HTTP/1.1
```

----------------------------------------

TITLE: Checking Make Version on Linux/macOS
DESCRIPTION: Command to verify make installation and check its version on the system.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/software-required.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
$ make -v
```

----------------------------------------

TITLE: List Containers GET Request
DESCRIPTION: Example HTTP GET request to retrieve a list of containers with query parameters for filtering results by container age and size.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_1

LANGUAGE: http
CODE:
```
GET /v1.24/containers/json?all=1&before=8dfafdbc3a40&size=1 HTTP/1.1
```

----------------------------------------

TITLE: State Diagram for Raft Replication Progress
DESCRIPTION: ASCII diagram showing the state transitions between probe, replicate, and snapshot states in the Raft consensus algorithm. It details conditions for transitioning between states and how match/next indices are updated based on different message responses.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/etcd/raft/v3/design.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
                            +--------------------------------------------------------+          
                            |                  send snapshot                         |          
                            |                                                        |          
                  +---------+----------+                                  +----------v---------+
              +--->       probe        |                                  |      snapshot      |
              |   |  max inflight = 1  <----------------------------------+  max inflight = 0  |
              |   +---------+----------+                                  +--------------------+
              |             |            1. snapshot success                                    
              |             |               (next=snapshot.index + 1)                           
              |             |            2. snapshot failure                                    
              |             |               (no change)                                         
              |             |            3. receives msgAppResp(rej=false&&index>lastsnap.index)
              |             |               (match=m.index,next=match+1)                        
receives msgAppResp(rej=true)                                                                   
(next=match+1)|             |                                                                   
              |             |                                                                   
              |             |                                                                   
              |             |   receives msgAppResp(rej=false&&index>match)                     
              |             |   (match=m.index,next=match+1)                                    
              |             |                                                                   
              |             |                                                                   
              |             |                                                                   
              |   +---------v----------+                                                        
              |   |     replicate      |                                                        
              +---+  max inflight = n  |                                                        
                  +--------------------+                                                        
```

----------------------------------------

TITLE: Interacting with Database Tables
DESCRIPTION: Bash command to perform operations on specific database tables for a network. Tables can be endpoint_table or overlay_peer_table.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/cmd/diagnostic/README.md#2025-04-10_snippet_11

LANGUAGE: bash
CODE:
```
$ curl localhost:2000/<method>?nid=<network id>&tname=<table name>&key=<key>[&value=<value>]
```

----------------------------------------

TITLE: Running Diagnostic Client for Service Discovery Table
DESCRIPTION: Example bash command to use the diagnostic client to examine the service discovery table for a specific network.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/cmd/diagnostic/README.md#2025-04-10_snippet_15

LANGUAGE: bash
CODE:
```
$ diagnostiClient -t sd -v -net n8a8ie6tb3wr2e260vxj8ncy4 -a
```

----------------------------------------

TITLE: Getting and Setting cgroup Type (v2)
DESCRIPTION: Demonstrates how to get the current cgroup type and set it to 'threaded' mode, which allows for finer-grained control of thread grouping in cgroups v2.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/README.md#2025-04-10_snippet_19

LANGUAGE: go
CODE:
```
m, err := cgroup2.LoadSystemd("/", "my-cgroup-abc.slice")
if err != nil {
    return err
}

// https://www.kernel.org/doc/html/v5.0/admin-guide/cgroup-v2.html#threads
cgType, err := m.GetType()
if err != nil {
    return err
}
fmt.Println(cgType)

err = m.SetType(cgroup2.Threaded)
if err != nil {
    return err
}
```

----------------------------------------

TITLE: Docker Image Search JSON Response
DESCRIPTION: Example JSON response for a Docker image search request. It includes a list of matching images with their descriptions, official status, and star counts.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_61

LANGUAGE: json
CODE:
```
[
        {
            "description": "",
            "is_official": false,
            "is_automated": false,
            "name": "wma55/u1210sshd",
            "star_count": 0
        },
        {
            "description": "",
            "is_official": false,
            "is_automated": false,
            "name": "jdswinbank/sshd",
            "star_count": 0
        },
        {
            "description": "",
            "is_official": false,
            "is_automated": false,
            "name": "vgauthier/sshd",
            "star_count": 0
        }
]
```

----------------------------------------

TITLE: Basic Route Registration in Go using Gorilla Mux
DESCRIPTION: Demonstrates how to create a new router and register basic routes with corresponding handlers.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gorilla/mux/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
func main() {
    r := mux.NewRouter()
    r.HandleFunc("/", HomeHandler)
    r.HandleFunc("/products", ProductsHandler)
    r.HandleFunc("/articles", ArticlesHandler)
    http.Handle("/", r)
}
```

----------------------------------------

TITLE: Using go-metrics for Method Profiling and Global Configuration
DESCRIPTION: This example demonstrates how to profile a method's execution time, configure a statsite sink as the global metrics sink, and emit a key/value metric. It shows the basic usage pattern of the go-metrics library.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/armon/go-metrics/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
func SlowMethod() {
    // Profiling the runtime of a method
    defer metrics.MeasureSince([]string{"SlowMethod"}, time.Now())
}

// Configure a statsite sink as the global metrics sink
sink, _ := metrics.NewStatsiteSink("statsite:8125")
metrics.NewGlobal(metrics.DefaultConfig("service-name"), sink)

// Emit a Key/Value pair
metrics.EmitKey([]string{"questions", "meaning of life"}, 42)
```

----------------------------------------

TITLE: Defining PortConfig Message in Protocol Buffers
DESCRIPTION: Defines a message type 'PortConfig' with fields for port configuration including name, protocol, target port, published port, and publish mode. It also includes nested enum definitions for Protocol and PublishMode.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_44

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "PortConfig"
  field {
    name: "name"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "name"
  }
  field {
    name: "protocol"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.PortConfig.Protocol"
    json_name: "protocol"
  }
  field {
    name: "target_port"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_UINT32
    json_name: "targetPort"
  }
  field {
    name: "published_port"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_UINT32
    json_name: "publishedPort"
  }
  field {
    name: "publish_mode"
    number: 5
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.PortConfig.PublishMode"
    json_name: "publishMode"
  }
  enum_type {
    name: "Protocol"
    value {
      name: "TCP"
      number: 0
      options {
        66001: "ProtocolTCP"
      }
    }
    value {
      name: "UDP"
      number: 1
      options {
        66001: "ProtocolUDP"
      }
    }
    value {
      name: "SCTP"
      number: 2
      options {
        66001: "ProtocolSCTP"
      }
    }
    options {
      62001: 0
    }
  }
  enum_type {
    name: "PublishMode"
    value {
      name: "INGRESS"
      number: 0
      options {
        66001: "PublishModeIngress"
      }
    }
    value {
      name: "HOST"
      number: 1
      options {
        66001: "PublishModeHost"
      }
    }
    options {
      62023: "PublishMode"
      62001: 0
    }
  }
}
```

----------------------------------------

TITLE: Manual Transaction Management in bbolt
DESCRIPTION: Go code demonstrating how to manually start, commit, and rollback transactions in bbolt using DB.Begin().
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_10

LANGUAGE: go
CODE:
```
// Start a writable transaction.
tx, err := db.Begin(true)
if err != nil {
    return err
}
defer tx.Rollback()

// Use the transaction...
_, err := tx.CreateBucket([]byte("MyBucket"))
if err != nil {
    return err
}

// Commit the transaction and check for error.
if err := tx.Commit(); err != nil {
    return err
}
```

----------------------------------------

TITLE: Adding AddLink Method to Span Interface
DESCRIPTION: Adds AddLink method to the Span interface in the trace package to allow adding links to spans.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_3

LANGUAGE: Go
CODE:
```
AddLink method to the Span interface in go.opentelemetry.io/otel/trace
```

----------------------------------------

TITLE: NAT Table Iptables Commands
DESCRIPTION: The iptables commands that generate the NAT table rules for Docker networking, showing how Docker handles destination network address translation for container port publishing.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap.md#2025-04-10_snippet_4

LANGUAGE: bash
CODE:
```
-P PREROUTING ACCEPT
-P INPUT ACCEPT
-P OUTPUT ACCEPT
-P POSTROUTING ACCEPT
-N DOCKER
-A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER
-A OUTPUT ! -d 127.0.0.0/8 -m addrtype --dst-type LOCAL -j DOCKER
-A POSTROUTING -s 192.0.2.0/24 ! -o bridge1 -j MASQUERADE
-A POSTROUTING -s 172.17.0.0/16 ! -o docker0 -j MASQUERADE
-A DOCKER -i bridge1 -j RETURN
-A DOCKER -i docker0 -j RETURN
-A DOCKER ! -i bridge1 -p tcp -m tcp --dport 8080 -j DNAT --to-destination 192.0.2.2:80
```

----------------------------------------

TITLE: Defining Secret Message Structure in Protobuf
DESCRIPTION: Definition of a Secret message type with fields for ID, metadata, specifications, and internal flag. Includes indexing options for efficient retrieval.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_85

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "Secret"
  field {
    name: "id"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "id"
  }
  field {
    name: "meta"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Meta"
    options {
      65001: 0
    }
    json_name: "meta"
  }
  field {
    name: "spec"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.SecretSpec"
    options {
      65001: 0
    }
    json_name: "spec"
  }
  field {
    name: "internal"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_BOOL
    json_name: "internal"
  }
  options {
    70001 {
      1 {
        1: 1
        2: 1
        3: 1
        4: 1
        5: 1
        6: 1
      }
    }
  }
}
```

----------------------------------------

TITLE: Importing gRPC Package in Go
DESCRIPTION: Shows how to import the gRPC package in Go code. This import statement enables automatic fetching of necessary dependencies when running go build, go run, or go test commands.
SOURCE: https://github.com/moby/moby/blob/master/vendor/google.golang.org/grpc/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
import "google.golang.org/grpc"
```

----------------------------------------

TITLE: Installing dbus Go Library
DESCRIPTION: Command to install the dbus library using Go's package management system. This requires Go 1.12 or later.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/godbus/dbus/v5/README.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
go get github.com/godbus/dbus/v5
```

----------------------------------------

TITLE: Installing Git for Windows using PowerShell
DESCRIPTION: This PowerShell script downloads and installs Git for Windows, then adds it to the system PATH.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/software-req-win.md#2025-04-10_snippet_1

LANGUAGE: powershell
CODE:
```
Invoke-Webrequest "https://github.com/git-for-windows/git/releases/download/v2.7.2.windows.1/Git-2.7.2-64-bit.exe" -OutFile git.exe -UseBasicParsing
Start-Process git.exe -ArgumentList '/VERYSILENT /SUPPRESSMSGBOXES /CLOSEAPPLICATIONS /DIR=c:\git\' -Wait
setx /M PATH "$env:Path;c:\git\cmd"
```

----------------------------------------

TITLE: Pausing a Container via HTTP Request
DESCRIPTION: Example HTTP POST request to pause a container with ID 'e90e34656806'.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_40

LANGUAGE: http
CODE:
```
POST /v1.24/containers/e90e34656806/pause HTTP/1.1
```

----------------------------------------

TITLE: Connecting to Syslog with Custom Network Dialer
DESCRIPTION: Demonstrates how to establish a connection to a syslog server using a custom network dialer function. This provides additional control over connection attempts, including timeout settings and proxy configurations.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/RackSec/srslog/README.md#2025-04-10_snippet_7

LANGUAGE: go
CODE:
```
netDialer := &net.Dialer{Timeout: time.Second*5} // easy timeouts
realNetwork := "tcp" // real network, other vars your dail func can close over
dial := func(network, addr string) (net.Conn, error) {
    // cannot use "network" here as it'll simply be "custom" which will fail
    return tls.DialWithDialer(netDialer, realNetwork, addr, &config)
}

w, err := DialWithCustomDialer("custom", "192.168.0.52:514", syslog.LOG_ERR, "testtag", dial)
```

----------------------------------------

TITLE: System Call Interface Function Prototypes in Go
DESCRIPTION: Core system call entry point function declarations that implement system call dispatch. These functions handle different argument counts and scheduling behaviors.
SOURCE: https://github.com/moby/moby/blob/master/vendor/golang.org/x/sys/unix/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
func Syscall(trap, a1, a2, a3 uintptr) (r1, r2, err uintptr)
func Syscall6(trap, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2, err uintptr)
func RawSyscall(trap, a1, a2, a3 uintptr) (r1, r2, err uintptr)
```

----------------------------------------

TITLE: Defining Selection Types for Object Filtering in Docker SwarmKit
DESCRIPTION: Protocol buffer definitions for message types used to filter objects in Docker SwarmKit's watch API. These types allow selection of objects by slot or by custom criteria.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_132

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "SelectBySlot"
  field {
    name: "service_id"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    options {
      65004: "ServiceID"
    }
    json_name: "serviceId"
  }
  field {
    name: "slot"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    json_name: "slot"
  }
}
message_type {
  name: "SelectByCustom"
  field {
    name: "kind"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "kind"
  }
}
```

----------------------------------------

TITLE: Explaining Types Package Purpose and Interfaces
DESCRIPTION: Documentation comment explaining that the types package provides useful custom types implementing the sql.Scanner and driver.Valuer interfaces, making them suitable for use with database/sql operations.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/jmoiron/sqlx/types/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
# types

The types package provides some useful types which implement the `sql.Scanner`
and `driver.Valuer` interfaces, suitable for use as scan and value targets with
database/sql.
```

----------------------------------------

TITLE: Adding a Process to a cgroup (v1)
DESCRIPTION: Adds a process to a cgroup by specifying its PID. This places the process under the resource constraints defined by the cgroup.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
if err := control.Add(cgroup1.Process{Pid:1234}); err != nil {
}
```

----------------------------------------

TITLE: Defining Writer Struct in Go
DESCRIPTION: Declares the Writer struct type for buffered writing operations.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/philhofer/fwd/README.md#2025-04-10_snippet_4

LANGUAGE: go
CODE:
```
type Writer struct {
    // contains filtered or unexported fields
}
```

----------------------------------------

TITLE: Default Authorization Client Creation
DESCRIPTION: Creates a new client using Google Application Default Credentials for authentication
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
client, err := storage.NewClient(ctx)
```

----------------------------------------

TITLE: Container Wait API Request
DESCRIPTION: HTTP request to wait for a container to stop and return its exit code.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_46

LANGUAGE: http
CODE:
```
POST /v1.24/containers/16253994b7c4/wait HTTP/1.1
```

----------------------------------------

TITLE: Overriding Standard Library Logger with Logrus in Go
DESCRIPTION: This snippet shows how to override the standard library's logger with Logrus. It creates a new Logrus logger with JSON formatting and sets it as the output for the standard log package.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/sirupsen/logrus/README.md#2025-04-10_snippet_11

LANGUAGE: go
CODE:
```
logger := logrus.New()
logger.Formatter = &logrus.JSONFormatter{}

// Use logrus for standard log output
// Note that `log` here references stdlib's log
// Not logrus imported under the name `log`.
log.SetOutput(logger.Writer())
```

----------------------------------------

TITLE: Defining AddressFamily Enum in Protocol Buffers
DESCRIPTION: Defines an enum type 'AddressFamily' with values for unknown, IPv4, and IPv6 address types. This is likely used for network configuration in Docker SwarmKit.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_43

LANGUAGE: Protocol Buffers
CODE:
```
enum_type {
  name: "AddressFamily"
  value {
    name: "UNKNOWN"
    number: 0
  }
  value {
    name: "IPV4"
    number: 4
  }
  value {
    name: "IPV6"
    number: 6
  }
}
```

----------------------------------------

TITLE: BitSet Serialization Example in Go
DESCRIPTION: Shows how to serialize a BitSet to a byte stream and deserialize it back, with error handling.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/bits-and-blooms/bitset/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
const length = 9585
	const oneEvery = 97
	bs := bitset.New(length)
	// Add some bits
	for i := uint(0); i < length; i += oneEvery {
		bs = bs.Set(i)
	}

	var buf bytes.Buffer
	n, err := bs.WriteTo(&buf)
	if err != nil {
		// failure
	}
	// Here n == buf.Len()
```

----------------------------------------

TITLE: Defining Mount Type Enum in Protocol Buffers for Docker SwarmKit
DESCRIPTION: This snippet defines an enum 'Type' for mount types in Docker SwarmKit, including BIND, VOLUME, TMPFS, NPIPE, and CLUSTER. Each value is associated with a specific mount type option.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_33

LANGUAGE: protobuf
CODE:
```
enum_type {
  name: "Type"
  value {
    name: "BIND"
    number: 0
    options {
      66001: "MountTypeBind"
    }
  }
  value {
    name: "VOLUME"
    number: 1
    options {
      66001: "MountTypeVolume"
    }
  }
  value {
    name: "TMPFS"
    number: 2
    options {
      66001: "MountTypeTmpfs"
    }
  }
  value {
    name: "NPIPE"
    number: 3
    options {
      66001: "MountTypeNamedPipe"
    }
  }
  value {
    name: "CLUSTER"
    number: 4
    options {
      66001: "MountTypeCluster"
    }
  }
  options {
    62001: 0
    62023: "MountType"
  }
}
```

----------------------------------------

TITLE: IPTables NAT Table Commands
DESCRIPTION: The exact iptables commands used to create the NAT table rules for port forwarding. These commands show how Docker implements port publishing by creating DNAT rules that translate external ports to container ports.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap-noicc.md#2025-04-10_snippet_4

LANGUAGE: plaintext
CODE:
```
-P PREROUTING ACCEPT
-P INPUT ACCEPT
-P OUTPUT ACCEPT
-P POSTROUTING ACCEPT
-N DOCKER
-A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER
-A OUTPUT ! -d 127.0.0.0/8 -m addrtype --dst-type LOCAL -j DOCKER
-A POSTROUTING -s 192.0.2.0/24 ! -o bridge1 -j MASQUERADE
-A POSTROUTING -s 172.17.0.0/16 ! -o docker0 -j MASQUERADE
-A DOCKER -i bridge1 -j RETURN
-A DOCKER -i docker0 -j RETURN
-A DOCKER ! -i bridge1 -p tcp -m tcp --dport 8080 -j DNAT --to-destination 192.0.2.2:80
```

----------------------------------------

TITLE: Defining CapacityRange Message in Protocol Buffers
DESCRIPTION: Defines a CapacityRange message type with fields for required and limit bytes. This structure is likely used to specify storage capacity requirements in the Docker Swarmkit API.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_58

LANGUAGE: protobuf
CODE:
```
message CapacityRange {
  int64 required_bytes = 1;
  int64 limit_bytes = 2;
}
```

----------------------------------------

TITLE: Variable Binding Flag Declaration
DESCRIPTION: Shows how to bind a flag to a variable using the Var functions.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/spf13/pflag/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
var flagvar int
func init() {
    flag.IntVar(&flagvar, "flagname", 1234, "help message for flagname")
}
```

----------------------------------------

TITLE: Modifying ListBlobsInclude Parameter
DESCRIPTION: Adds 'permissions' to the enum list of ListBlobsInclude parameter.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-10_snippet_2

LANGUAGE: yaml
CODE:
```
directive:  
- from: swagger-document    
  where: $.parameters.ListBlobsInclude    
  transform: >        
    $.items.enum.push("permissions");
```

----------------------------------------

TITLE: Defining UpdateTaskStatusRequest Message in SwarmKit Protobuf
DESCRIPTION: Defines a protocol buffer message for updating task status in SwarmKit. It includes a session ID field and a repeated field for task status updates, with a nested type defining the structure of individual updates.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_98

LANGUAGE: protobuf
CODE:
```
name: "UpdateTaskStatusRequest"
field {
  name: "session_id"
  number: 1
  label: LABEL_OPTIONAL
  type: TYPE_STRING
  json_name: "sessionId"
}
field {
  name: "updates"
  number: 3
  label: LABEL_REPEATED
  type: TYPE_MESSAGE
  type_name: ".docker.swarmkit.v1.UpdateTaskStatusRequest.TaskStatusUpdate"
  json_name: "updates"
}
nested_type {
  name: "TaskStatusUpdate"
  field {
    name: "task_id"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "taskId"
  }
  field {
    name: "status"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.TaskStatus"
    json_name: "status"
  }
}
```

----------------------------------------

TITLE: Container Wait API Response
DESCRIPTION: HTTP response containing the exit status code of the stopped container.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_47

LANGUAGE: http
CODE:
```
HTTP/1.1 200 OK
Content-Type: application/json

{"StatusCode": 0}
```

----------------------------------------

TITLE: Iptables NAT Table Rules
DESCRIPTION: NAT table rules for Docker networking, including DNAT for port forwarding and MASQUERADE rules for network address translation. These rules handle the port mapping and network address translation for the container.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap-lo.md#2025-04-10_snippet_2

LANGUAGE: plaintext
CODE:
```
-P PREROUTING ACCEPT
-P INPUT ACCEPT
-P OUTPUT ACCEPT
-P POSTROUTING ACCEPT
-N DOCKER
-A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER
-A OUTPUT ! -d 127.0.0.0/8 -m addrtype --dst-type LOCAL -j DOCKER
-A POSTROUTING -s 192.0.2.0/24 ! -o bridge1 -j MASQUERADE
-A POSTROUTING -s 172.17.0.0/16 ! -o docker0 -j MASQUERADE
-A DOCKER -i bridge1 -j RETURN
-A DOCKER -i docker0 -j RETURN
-A DOCKER -d 127.0.0.1/32 ! -i bridge1 -p tcp -m tcp --dport 8080 -j DNAT --to-destination 192.0.2.2:80
```

----------------------------------------

TITLE: Image Push Platform Selection Example
DESCRIPTION: Example of pushing a specific platform manifest from a multi-platform image
SOURCE: https://github.com/moby/moby/blob/master/docs/api/version-history.md#2025-04-10_snippet_2

LANGUAGE: http
CODE:
```
POST /images/{name}/push?platform={platform}
```

----------------------------------------

TITLE: Container Attach API Request
DESCRIPTION: HTTP request to attach to a running container with specified parameters for logs and stream handling.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_44

LANGUAGE: http
CODE:
```
POST /v1.24/containers/16253994b7c4/attach?logs=1&stream=0&stdout=1 HTTP/1.1
```

----------------------------------------

TITLE: Creating Macvlan Network with IP Address Exclusion in Docker
DESCRIPTION: Creates a Macvlan network that blacklists a specific IP address from being assigned to containers by using the --aux-address flag. This example creates a network with subnet 172.16.86.0/24 and excludes the host's IP address.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/macvlan.md#2025-04-10_snippet_3

LANGUAGE: bash
CODE:
```
docker network create -d macvlan \
    --subnet=172.16.86.0/24 \
    --gateway=172.16.86.1  \
    --aux-address="exclude_host=172.16.86.250" \
    -o parent=eth0 pub_net
```

----------------------------------------

TITLE: Implementing Wrapper Interface for Custom Types in Go
DESCRIPTION: Shows how to implement the Wrapper interface for custom error types to work with errwrap's functionality. It demonstrates creating a custom AppError type and implementing the WrappedErrors method.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/hashicorp/errwrap/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
type AppError {
  Code ErrorCode
  Err  error
}

func (e *AppError) WrappedErrors() []error {
  return []error{e.Err}
}
```

----------------------------------------

TITLE: Closing Cloud Logging Client in Go
DESCRIPTION: Demonstrates proper cleanup by closing the logging client, which flushes any buffered log entries before program exit.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/logging/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
err = client.Close()
if err != nil {
   // TODO: Handle error.
}
```

----------------------------------------

TITLE: Shorthand Flag Declaration
DESCRIPTION: Shows how to create flags with single-letter shorthand alternatives.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/spf13/pflag/README.md#2025-04-10_snippet_6

LANGUAGE: go
CODE:
```
var ip = flag.IntP("flagname", "f", 1234, "help message")
var flagvar bool
func init() {
	flag.BoolVarP(&flagvar, "boolname", "b", true, "help message")
}
flag.VarP(&flagVal, "varname", "v", "help message")
```

----------------------------------------

TITLE: Defining VolumeSpec Message in SwarmKit Protobuf
DESCRIPTION: This snippet defines the VolumeSpec message type in SwarmKit's protobuf, including fields for annotations, group, driver, access mode, secrets, and other volume-related properties. It also defines an enum for VolumeAvailability.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_72

LANGUAGE: protobuf
CODE:
```
message VolumeSpec {
  Annotations annotations = 1 [(gogoproto.nullable) = false];
  string group = 2;
  Driver driver = 3;
  VolumeAccessMode access_mode = 4;
  repeated VolumeSecret secrets = 5;
  TopologyRequirement AccessibilityRequirements = 6;
  CapacityRange capacity_range = 7;
  VolumeAvailability availability = 8;

  enum VolumeAvailability {
    option (docker.protobuf.plugin.enum_use_string) = 0;
    ACTIVE = 0 [(docker.protobuf.plugin.enumvalue_stringify) = "VolumeAvailabilityActive"];
    PAUSE = 1 [(docker.protobuf.plugin.enumvalue_stringify) = "VolumeAvailabilityPause"];
    DRAIN = 2 [(docker.protobuf.plugin.enumvalue_stringify) = "VolumeAvailabilityDrain"];
  }
}
```

----------------------------------------

TITLE: iOS Integration with BoltDB
DESCRIPTION: Demonstrates BoltDB integration in iOS, including proper file path handling, cloud backup prevention, and database lifecycle management.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_23

LANGUAGE: objc
CODE:
```
- (void)demo {
    NSString* path = [NSSearchPathForDirectoriesInDomains(NSLibraryDirectory,
                                                          NSUserDomainMask,
                                                          YES) objectAtIndex:0];
	GoBoltmobiledemoBoltDB * demo = GoBoltmobiledemoNewBoltDB(path);
	[self addSkipBackupAttributeToItemAtPath:demo.path];
	//Some DB Logic would go here
	[demo close];
}

- (BOOL)addSkipBackupAttributeToItemAtPath:(NSString *) filePathString
{
    NSURL* URL= [NSURL fileURLWithPath: filePathString];
    assert([[NSFileManager defaultManager] fileExistsAtPath: [URL path]]);

    NSError *error = nil;
    BOOL success = [URL setResourceValue: [NSNumber numberWithBool: YES]
                                  forKey: NSURLIsExcludedFromBackupKey error: &error];
    if(!success){
        NSLog(@"Error excluding %@ from backup %@", [URL lastPathComponent], error);
    }
    return success;
}
```

----------------------------------------

TITLE: Error Extraction Using errors.As in Go
DESCRIPTION: Shows how to extract specific error types from a multierror using the standard library errors.As function.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/hashicorp/go-multierror/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
// Assume err is a multierror value
err := somefunc()

// We want to know if "err" has a "RichErrorType" in it and extract it.
var errRich RichErrorType
if errors.As(err, &errRich) {
	// It has it, and now errRich is populated.
}
```

----------------------------------------

TITLE: Iptables Commands for NAT Table Configuration
DESCRIPTION: The iptables commands used to set up the nat table rules for the Docker network in nat-unprotected mode.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap-natunprot.md#2025-04-10_snippet_4

LANGUAGE: bash
CODE:
```
-P PREROUTING ACCEPT
-P INPUT ACCEPT
-P OUTPUT ACCEPT
-P POSTROUTING ACCEPT
-N DOCKER
-A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER
-A OUTPUT ! -d 127.0.0.0/8 -m addrtype --dst-type LOCAL -j DOCKER
-A POSTROUTING -s 192.0.2.0/24 ! -o bridge1 -j MASQUERADE
-A POSTROUTING -s 172.17.0.0/16 ! -o docker0 -j MASQUERADE
-A DOCKER -i bridge1 -j RETURN
-A DOCKER -i docker0 -j RETURN
-A DOCKER ! -i bridge1 -p tcp -m tcp --dport 8080 -j DNAT --to-destination 192.0.2.2:80
```

----------------------------------------

TITLE: Defining LogStream Enum in Protobuf
DESCRIPTION: Defines an enumeration for LogStream types in Protocol Buffers, including unknown, stdout, and stderr streams.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_108

LANGUAGE: protobuf
CODE:
```
enum_type {
  name: "LogStream"
  value {
    name: "LOG_STREAM_UNKNOWN"
    number: 0
    options {
      66001: "LogStreamUnknown"
    }
  }
  value {
    name: "LOG_STREAM_STDOUT"
    number: 1
    options {
      66001: "LogStreamStdout"
    }
  }
  value {
    name: "LOG_STREAM_STDERR"
    number: 2
    options {
      66001: "LogStreamStderr"
    }
  }
  options {
    62001: 0
    62023: "LogStream"
  }
}
```

----------------------------------------

TITLE: Running the Containerized Diagnostic Tool
DESCRIPTION: Bash command to run the network diagnostic tool as a Docker container in privileged mode with host networking.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/cmd/diagnostic/README.md#2025-04-10_snippet_13

LANGUAGE: bash
CODE:
```
$ docker container run --name net-diagnostic -d --privileged --network host dockereng/network-diagnostic:17.12-dind
```

----------------------------------------

TITLE: CGroups Metrics Message Definitions in Protocol Buffers
DESCRIPTION: Defines the main Metrics message type and its associated submessages for collecting container resource statistics. Includes detailed fields for hugetlb, pids, CPU, memory, block IO, RDMA, and network metrics.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/cgroup1/stats/metrics.pb.txt#2025-04-10_snippet_0

LANGUAGE: protobuf
CODE:
```
file {
  name: "github.com/containerd/cgroups/cgroup1/stats/metrics.proto"
  package: "io.containerd.cgroups.v1"
  message_type {
    name: "Metrics"
    field {
      name: "hugetlb"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".io.containerd.cgroups.v1.HugetlbStat"
      json_name: "hugetlb"
    }
    field {
      name: "pids"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".io.containerd.cgroups.v1.PidsStat"
      json_name: "pids"
    }
    field {
      name: "cpu"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".io.containerd.cgroups.v1.CPUStat"
      json_name: "cpu"
    }
    field {
      name: "memory"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".io.containerd.cgroups.v1.MemoryStat"
      json_name: "memory"
    }
    field {
      name: "blkio"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".io.containerd.cgroups.v1.BlkIOStat"
      json_name: "blkio"
    }
    field {
      name: "rdma"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".io.containerd.cgroups.v1.RdmaStat"
      json_name: "rdma"
    }
    field {
      name: "network"
      number: 7
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".io.containerd.cgroups.v1.NetworkStat"
      json_name: "network"
    }
    field {
      name: "cgroup_stats"
      number: 8
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".io.containerd.cgroups.v1.CgroupStats"
      json_name: "cgroupStats"
    }
    field {
      name: "memory_oom_control"
      number: 9
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".io.containerd.cgroups.v1.MemoryOomControl"
      json_name: "memoryOomControl"
    }
  }
}
```

----------------------------------------

TITLE: Resize Container TTY Response
DESCRIPTION: Example HTTP response for a successful TTY resize operation, showing a 200 status code with empty content.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_27

LANGUAGE: http
CODE:
```
HTTP/1.1 200 OK
Content-Length: 0
Content-Type: text/plain; charset=utf-8
```

----------------------------------------

TITLE: Initializing Go-Fuzz-Headers Consumer
DESCRIPTION: Shows how to create a new Consumer instance with byte data for fuzzing
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/AdaLogics/go-fuzz-headers/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
import (
	fuzz "github.com/AdaLogics/go-fuzz-headers"
)
data := []byte{'R', 'a', 'n', 'd', 'o', 'm'}
f := fuzz.NewConsumer(data)

```

----------------------------------------

TITLE: Starting Exec Instance in Docker Container via HTTP POST
DESCRIPTION: HTTP POST request to start a previously set up exec instance in a Docker container, specifying Detach and Tty parameters.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_75

LANGUAGE: http
CODE:
```
POST /v1.24/exec/e90e34656806/start HTTP/1.1
Content-Type: application/json
Content-Length: 12345

{
 "Detach": false,
 "Tty": false
}
```

----------------------------------------

TITLE: Docker API v1.45 Changes
DESCRIPTION: Documents changes in Docker Engine API v1.45 including new volume subpath support, search functionality changes, and container configuration updates.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/version-history.md#2025-04-10_snippet_4

LANGUAGE: markdown
CODE:
```
* POST /containers/create now supports VolumeOptions.Subpath
* POST /images/search will always assume false for is-automated
* GET /images/{name}/json no longer includes Container and ContainerConfig fields
* Aliases field changes in GET /containers/{name:.*}/json response
```

----------------------------------------

TITLE: Defining Image Message in Protocol Buffers
DESCRIPTION: This simple message type defines a container image reference used in Docker Swarm services, containing only a reference field that holds the image name and tag or digest.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_28

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "Image"
  field {
    name: "reference"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "reference"
  }
}
```

----------------------------------------

TITLE: Displaying Network Interface Configuration
DESCRIPTION: Command to show the IP address configuration of eth0 interface on the Docker host
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/macvlan.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
ip addr show eth0
3: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000
    inet 172.16.86.250/24 brd 172.16.86.255 scope global eth0
```

----------------------------------------

TITLE: Creating Dual Stack IPv4/IPv6 Macvlan Network with VLAN Tagging in Docker
DESCRIPTION: This snippet demonstrates how to create a Macvlan network with multiple IPv4 and IPv6 subnets, attach it to a VLAN-tagged sub-interface, and start containers on different subnets. It also shows how to ping between containers and view network details.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/macvlan.md#2025-04-10_snippet_9

LANGUAGE: bash
CODE:
```
# Create multiple subnets w/ dual stacks:
docker network  create  -d macvlan \
    --subnet=192.168.216.0/24 --subnet=192.168.218.0/24 \
    --gateway=192.168.216.1  --gateway=192.168.218.1 \
    --ipv6 --subnet=2001:db8:abc8::/64 --gateway=2001:db8:abc8::10 \
     -o parent=eth0.218 \
     -o macvlan_mode=bridge macvlan216

# Start a container on the first subnet 192.168.216.0/24
docker run --net=macvlan216 --name=macnet216_test --ip=192.168.216.10 -itd alpine /bin/sh

# Start a container on the second subnet 192.168.218.0/24
docker run --net=macvlan216 --name=macnet218_test --ip=192.168.218.10 -itd alpine /bin/sh

# Ping the first container started on the 192.168.216.0/24 subnet
docker run --net=macvlan216 --ip=192.168.216.11 -it --rm alpine /bin/sh

# From inside the container shell ping the other host on the same subnet and then exit
$ ping -c4 192.168.216.10
$ exit

# Ping the first container started on the 192.168.218.0/24 subnet
docker run --net=macvlan216 --ip=192.168.218.11 -it --rm alpine /bin/sh

# From inside the container shell ping the other host on the same subnet and then exit
$ ping -c4 192.168.218.10
$ exit

# Start a container in the back explicitly declaring the v6 address
docker run --net=macvlan216 --ip6=2001:db8:abc8::20 -itd alpine /bin/sh

# Start another container pinging the v6 address of the previous container started in the background
docker run --net=macvlan216 -it --rm alpine /bin/sh
$ ping6 -c4 2001:db8:abc8::20
$ exit
# Or, run the ping as a explicit process
docker run --net=macvlan216 -it --rm alpine ping6 -c4 2001:db8:abc8::20
```

----------------------------------------

TITLE: Initializing Cloud Logging Client in Go
DESCRIPTION: Creates a new logging client instance for a specific Google Cloud project. The client is used to create loggers and manage the logging lifecycle.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/logging/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
ctx := context.Background()
client, err := logging.NewClient(ctx, "my-project")
if err != nil {
   // TODO: Handle error.
}
```

----------------------------------------

TITLE: Testing Logrus Logging in Go
DESCRIPTION: This snippet demonstrates how to use Logrus's built-in testing facilities. It shows how to create a test logger, log a message, and assert the presence and content of log entries.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/sirupsen/logrus/README.md#2025-04-10_snippet_12

LANGUAGE: go
CODE:
```
import(
  "github.com/sirupsen/logrus"
  "github.com/sirupsen/logrus/hooks/test"
  "github.com/stretchr/testify/assert"
  "testing"
)

func TestSomething(t*testing.T){
  logger, hook := test.NewNullLogger()
  logger.Error("Helloerror")

  assert.Equal(t, 1, len(hook.Entries))
  assert.Equal(t, logrus.ErrorLevel, hook.LastEntry().Level)
  assert.Equal(t, "Helloerror", hook.LastEntry().Message)

  hook.Reset()
  assert.Nil(t, hook.LastEntry())
}
```

----------------------------------------

TITLE: Container Kill Response
DESCRIPTION: Example HTTP response for a successful container kill operation, showing a 204 No Content status code.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_35

LANGUAGE: http
CODE:
```
HTTP/1.1 204 No Content
```

----------------------------------------

TITLE: Implementing a Health Check Handler in Go
DESCRIPTION: Example of a simple health check endpoint that returns a JSON response indicating the application is operational. The code sets up a router with a single health endpoint.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gorilla/mux/README.md#2025-04-10_snippet_19

LANGUAGE: go
CODE:
```
// endpoints.go
package main

func HealthCheckHandler(w http.ResponseWriter, r *http.Request) {
    // A very simple health check.
    w.Header().Set("Content-Type", "application/json")
    w.WriteHeader(http.StatusOK)

    // In the future we could report back on the status of our DB, or our cache
    // (e.g. Redis) by performing a simple PING, and include them in the response.
    io.WriteString(w, `{"alive": true}`)
}

func main() {
    r := mux.NewRouter()
    r.HandleFunc("/health", HealthCheckHandler)

    log.Fatal(http.ListenAndServe("localhost:8080", r))
}
```

----------------------------------------

TITLE: Defining Leave Request/Response Messages in SwarmKit Protobuf
DESCRIPTION: Protocol Buffer definitions for LeaveRequest and LeaveResponse messages in Docker SwarmKit. These messages are used when a node requests to leave the Raft cluster, providing its node information.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_119

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "LeaveRequest"
  field {
    name: "node"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.RaftMember"
    json_name: "node"
  }
}
message_type {
  name: "LeaveResponse"
}
```

----------------------------------------

TITLE: Inspecting Container Filesystem Changes
DESCRIPTION: Makes an HTTP GET request to list changes to files or directories in a container's filesystem. This endpoint shows which files were added, deleted, or modified compared to the container's base image.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_21

LANGUAGE: HTTP
CODE:
```
GET /v1.24/containers/4fa6e0f0c678/changes HTTP/1.1
```

----------------------------------------

TITLE: Configuring Unexported Fields Access
DESCRIPTION: Shows how to enable and disable fuzzing of unexported struct fields
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/AdaLogics/go-fuzz-headers/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
f.AllowUnexportedFields()
```

LANGUAGE: go
CODE:
```
f.DisallowUnexportedFields()
```

----------------------------------------

TITLE: Running Docker Daemon without Userland Proxy and Creating a Container with Published Port
DESCRIPTION: Commands to run Docker daemon with userland proxy disabled, create a custom bridge network with specific subnet configuration, and run a container on that network with a published port.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/templates/usernet-portmap-noproxy.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
dockerd --userland-proxy=false
docker network create \
  -o com.docker.network.bridge.name=bridge1 \
  --subnet 192.0.2.0/24 --gateway 192.0.2.1 bridge1
docker run --network bridge1 -p 8080:80 --name c1 busybox
```

----------------------------------------

TITLE: Docker Network Configuration Example
DESCRIPTION: Example of Docker network configuration options including IPv4/IPv6 settings and access restrictions.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/version-history.md#2025-04-10_snippet_15

LANGUAGE: markdown
CODE:
```
POST /networks/create now supports enabling ipv6 on the network by setting the `EnableIPv6` field
POST /networks/(id)/connect now allows you to set the static IPv4 and/or IPv6 address for the container
POST /networks/create now supports restricting external access to the network by setting the `Internal` field
```

----------------------------------------

TITLE: Signing Git Commits with the -s Flag
DESCRIPTION: Example of using the -s flag with git commit to create a signed commit, which is required for contributions to the Docker registry.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/distribution/CONTRIBUTING.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
git commit -s -m "My commit"
```

----------------------------------------

TITLE: Creating New Writer Instances in Go
DESCRIPTION: Functions for creating new Writer instances with different initialization options.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/philhofer/fwd/README.md#2025-04-10_snippet_5

LANGUAGE: go
CODE:
```
func NewWriter(w io.Writer) *Writer

func NewWriterBuf(w io.Writer, buf []byte) *Writer

func NewWriterSize(w io.Writer, n int) *Writer
```

----------------------------------------

TITLE: Removing a Docker Swarm Service via HTTP DELETE
DESCRIPTION: This snippet demonstrates how to remove a Docker Swarm service using the DELETE HTTP method. It includes the request format and possible response status codes.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_102

LANGUAGE: HTTP
CODE:
```
DELETE /v1.24/services/16253994b7c4 HTTP/1.1
```

----------------------------------------

TITLE: Adding Metric Semantic Conventions
DESCRIPTION: Adds metric semantic conventions to the semconv package for version 1.24.0 and future versions.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_13

LANGUAGE: Go
CODE:
```
Metric semantic conventions to go.opentelemetry.io/otel/semconv/v1.24.0
```

----------------------------------------

TITLE: IPTables Filter4 Configuration View
DESCRIPTION: Displays the contents of the filter table that Docker creates for filtering network traffic in IPv4. Shows chain structure and rule organization.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/templates/new-daemon.md#2025-04-10_snippet_0

LANGUAGE: shell
CODE:
```
{{index . "LFilter4"}}
```

----------------------------------------

TITLE: Running fsnotify Tests in Shell
DESCRIPTION: Commands for running the test suite for fsnotify. The basic command runs all tests, while the -short flag can be used to expedite stress tests.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/fsnotify/fsnotify/CONTRIBUTING.md#2025-04-10_snippet_0

LANGUAGE: shell
CODE:
```
go test ./...
```

----------------------------------------

TITLE: Applying Raft Configuration Changes in Go
DESCRIPTION: Shows how to apply committed configuration changes by unmarshaling the change data and calling ApplyConfChange.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/etcd/raft/v3/README.md#2025-04-10_snippet_8

LANGUAGE: go
CODE:
```
	var cc raftpb.ConfChange
	cc.Unmarshal(data)
	n.ApplyConfChange(cc)
```

----------------------------------------

TITLE: Defining Raft Service in Docker SwarmKit API
DESCRIPTION: Protocol buffer definition for the Raft service used in Docker SwarmKit for cluster consensus management. It includes methods for processing and streaming Raft messages, as well as resolving node addresses.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_125

LANGUAGE: protobuf
CODE:
```
service {
  name: "Raft"
  method {
    name: "ProcessRaftMessage"
    input_type: ".docker.swarmkit.v1.ProcessRaftMessageRequest"
    output_type: ".docker.swarmkit.v1.ProcessRaftMessageResponse"
    options {
      73626345 {
        1: "swarm-manager"
      }
    }
  }
  method {
    name: "StreamRaftMessage"
    input_type: ".docker.swarmkit.v1.StreamRaftMessageRequest"
    output_type: ".docker.swarmkit.v1.StreamRaftMessageResponse"
    options {
      73626345 {
        1: "swarm-manager"
      }
    }
    client_streaming: true
  }
  method {
    name: "ResolveAddress"
    input_type: ".docker.swarmkit.v1.ResolveAddressRequest"
    output_type: ".docker.swarmkit.v1.ResolveAddressResponse"
    options {
      73626345 {
        1: "swarm-manager"
      }
    }
  }
}
```

----------------------------------------

TITLE: Using slog.Handler as Backend for logr in Go
DESCRIPTION: This snippet demonstrates how to use a slog.Handler as a backend for logr. It explains the mapping of logr verbosity levels to slog levels, handling of stack unwinding, and recording of logger names.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/go-logr/logr/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
// Example usage:
logger.Error(err, "client returned an error", "code", responseCode)
```

----------------------------------------

TITLE: Basic Usage of errwrap Package in Go
DESCRIPTION: Demonstrates the basic usage of the errwrap package, including wrapping errors, checking for contained errors, and extracting specific error types. It shows how to use Contains, ContainsType, and GetType functions.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/hashicorp/errwrap/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
// A function that always returns an error, but wraps it, like a real
// function might.
func tryOpen() error {
	_, err := os.Open("/i/dont/exist")
	if err != nil {
		return errwrap.Wrapf("Doesn't exist: {{err}}", err)
	}

	return nil
}

func main() {
	err := tryOpen()

	// We can use the Contains helpers to check if an error contains
	// another error. It is safe to do this with a nil error, or with
	// an error that doesn't even use the errwrap package.
	if errwrap.Contains(err, "does not exist") {
		// Do something
	}
	if errwrap.ContainsType(err, new(os.PathError)) {
		// Do something
	}

	// Or we can use the associated `Get` functions to just extract
	// a specific error. This would return nil if that specific error doesn't
	// exist.
	perr := errwrap.GetType(err, new(os.PathError))
}
```

----------------------------------------

TITLE: Defining ExternalCA Message in Protocol Buffers
DESCRIPTION: Defines a message type 'ExternalCA' with fields for protocol, URL, options, and CA certificate. It includes a nested enum 'CAProtocol' and a nested message 'OptionsEntry' for key-value pairs.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_50

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "ExternalCA"
  field {
    name: "protocol"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.ExternalCA.CAProtocol"
    json_name: "protocol"
  }
  field {
    name: "url"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    options {
      65004: "URL"
    }
    json_name: "url"
  }
  field {
    name: "options"
    number: 3
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.ExternalCA.OptionsEntry"
    json_name: "options"
  }
  field {
    name: "ca_cert"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_BYTES
    options {
      65004: "CACert"
    }
    json_name: "caCert"
  }
  nested_type {
    name: "OptionsEntry"
    field {
      name: "key"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "key"
    }
    field {
      name: "value"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "value"
    }
    options {
      map_entry: true
    }
  }
  enum_type {
    name: "CAProtocol"
    value {
      name: "CFSSL"
      number: 0
      options {
        66001: "CAProtocolCFSSL"
      }
    }
  }
}
```

----------------------------------------

TITLE: Platform Specifier Format Definition
DESCRIPTION: Demonstrates the format pattern for platform specifiers that allows users to specify operating system, architecture, or both with an optional variant.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/platforms/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
<os>|<arch>|<os>/<arch>[/<variant>]
```

----------------------------------------

TITLE: Container Remove API Request
DESCRIPTION: HTTP request to remove a container from the filesystem.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_48

LANGUAGE: http
CODE:
```
DELETE /v1.24/containers/16253994b7c4?v=1 HTTP/1.1
```

----------------------------------------

TITLE: Verifying Load Balancer Programming on a Node with ssd
DESCRIPTION: This command runs the ssd tool to verify consistency between Docker network control-plane and kernel datapath programming for the 'ov2' overlay network. It checks the Load Balancer implementation using IPVS on a single node.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/cmd/ssd/README.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
docker run -v /var/run/docker.sock:/var/run/docker.sock -v /var/run/docker/netns:/var/run/docker/netns --privileged --net=host sanimej/ssd ov2
```

----------------------------------------

TITLE: Deprecated Config Fields in Image Inspection API
DESCRIPTION: Lists deprecated configuration fields that will be removed from the GET /images/{name}/json endpoint response. These fields are currently included but not intended to be part of the image configuration response.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/version-history.md#2025-04-10_snippet_3

LANGUAGE: markdown
CODE:
```
- Hostname
- Domainname
- AttachStdin
- AttachStdout
- AttachStderr
- Tty
- OpenStdin
- StdinOnce
- Image
- NetworkDisabled
- MacAddress
- StopTimeout
```

----------------------------------------

TITLE: Building and Installing Docker Daemon for Debugging
DESCRIPTION: Commands to build the Docker daemon with debugging symbols and install it within the development container.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/debug.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
$ ./hack/make.sh binary
$ make install
```

----------------------------------------

TITLE: Freezing and Thawing a cgroup (v1)
DESCRIPTION: Demonstrates how to freeze (suspend) and later thaw (resume) all processes in a cgroup, which is useful for migration or snapshotting.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/README.md#2025-04-10_snippet_5

LANGUAGE: go
CODE:
```
if err := control.Freeze(); err != nil {
}
if err := control.Thaw(); err != nil {
}
```

----------------------------------------

TITLE: Adding WithProxy Option in OTLP Exporters
DESCRIPTION: Adds WithProxy option to OTLP metric and trace HTTP exporters to allow configuring a proxy.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_2

LANGUAGE: Go
CODE:
```
WithProxy option in go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp
```

LANGUAGE: Go
CODE:
```
WithProxy option in go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlptracehttp
```

----------------------------------------

TITLE: Metric Export Interface
DESCRIPTION: Changed interface example showing two-level reader pattern for metric export.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_31

LANGUAGE: go
CODE:
```
"go.opentelemetry.io/otel/sdk/export/metric".CheckpointSet
"go.opentelemetry.io/otel/sdk/export/metric".InstrumentationLibraryReader
```

----------------------------------------

TITLE: Checking Docker Group Membership on Linux
DESCRIPTION: Command to check if the current user is a member of the docker group on Linux systems.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/software-required.md#2025-04-10_snippet_4

LANGUAGE: bash
CODE:
```
$ getent group docker
docker:x:999:ubuntu
```

----------------------------------------

TITLE: Defining Containerd Checkpoint Options Protocol Structure
DESCRIPTION: Protocol buffer schema defining the CheckpointOptions message type for container checkpointing configuration. Specifies options for managing container state during checkpoint operations.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/containerd/api/types/runc/options/next.pb.txt#2025-04-10_snippet_1

LANGUAGE: protobuf
CODE:
```
message CheckpointOptions {
  bool exit = 1;
  bool open_tcp = 2;
  bool external_unix_sockets = 3;
  bool terminal = 4;
  bool file_locks = 5;
  repeated string empty_namespaces = 6;
  string cgroups_mode = 7;
  string image_path = 8;
  string work_path = 9;
}
```

----------------------------------------

TITLE: Configuring Batch Span Processor with Environment Variables in Go
DESCRIPTION: Code snippet showing the environment variables used to configure the batch span processor in the OpenTelemetry Go SDK. These variables control scheduling delay, export timeout, queue size, and batch size.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_28

LANGUAGE: Go
CODE:
```
OTEL_BSP_SCHEDULE_DELAY
OTEL_BSP_EXPORT_TIMEOUT
OTEL_BSP_MAX_QUEUE_SIZE
OTEL_BSP_MAX_EXPORT_BATCH_SIZE
```

----------------------------------------

TITLE: Using Verifier with io.Reader in Go
DESCRIPTION: Demonstrates how to use the Verifier type with an io.Reader for content verification. This is useful when dealing with streaming data or large files that should not be loaded entirely into memory.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/opencontainers/go-digest/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
rd := getContent()
verifier := id.Verifier()
io.Copy(verifier, rd)

if !verifier.Verified() {
  return errors.New("the content has changed!")
}
```

----------------------------------------

TITLE: Creating Event Queue in Go
DESCRIPTION: Demonstrates creation of an unbounded event queue that processes events asynchronously, preventing blocking during event handling.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/go-events/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
queue := NewQueue(retry)
```

----------------------------------------

TITLE: Migrating OTLP Usage in Go OpenTelemetry SDK
DESCRIPTION: Updates the OTLP implementation to use the official package and switches protobuf libraries.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_34

LANGUAGE: Go
CODE:
```
Migrate from using internally built and maintained version of the OTLP to the one hosted at `go.opentelemetry.io/proto/otlp`.
Migrate from using `github.com/gogo/protobuf` to `google.golang.org/protobuf` to match `go.opentelemetry.io/proto/otlp`.
```

----------------------------------------

TITLE: Defining Join Request/Response Messages in SwarmKit Protobuf
DESCRIPTION: Protocol Buffer definitions for JoinRequest and JoinResponse messages in Docker SwarmKit. These messages are used when a node requests to join the Raft cluster, providing its address and receiving its Raft ID and cluster membership information.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_118

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "JoinRequest"
  field {
    name: "addr"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "addr"
  }
}
message_type {
  name: "JoinResponse"
  field {
    name: "raft_id"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    json_name: "raftId"
  }
  field {
    name: "members"
    number: 2
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.RaftMember"
    json_name: "members"
  }
  field {
    name: "removed_members"
    number: 3
    label: LABEL_REPEATED
    type: TYPE_UINT64
    options {
      packed: false
    }
    json_name: "removedMembers"
  }
}
```

----------------------------------------

TITLE: Accessing the Network Diagnostic Tool API Help Endpoint
DESCRIPTION: Bash command to query the help endpoint of the network diagnostic tool's API, which returns a list of available endpoints.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/cmd/diagnostic/README.md#2025-04-10_snippet_3

LANGUAGE: bash
CODE:
```
$ curl localhost:2000/help
```

----------------------------------------

TITLE: Custom Claims Implementation with Validation in Go
DESCRIPTION: Example of implementing custom claims with additional validation logic using the new ClaimsValidator interface. Shows how to extend RegisteredClaims with application-specific validation.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/golang-jwt/jwt/v5/MIGRATION_GUIDE.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
// MyCustomClaims includes all registered claims, plus Foo.
type MyCustomClaims struct {
	Foo string `json:"foo"`
	jwt.RegisteredClaims
}

// Validate can be used to execute additional application-specific claims
// validation.
func (m MyCustomClaims) Validate() error {
	if m.Foo != "bar" {
		return errors.New("must be foobar")
	}

	return nil
}
```

----------------------------------------

TITLE: Calculating Request Inbound Rate for gRPC Services using Prometheus
DESCRIPTION: This query calculates the rate of incoming requests per second for each gRPC service over a 1-minute window. It uses the 'grpc_server_started_total' metric and groups results by 'grpc_service'.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/grpc-ecosystem/go-grpc-prometheus/README.md#2025-04-10_snippet_3

LANGUAGE: jsoniq
CODE:
```
sum(rate(grpc_server_started_total{job="foo"}[1m])) by (grpc_service)
```

----------------------------------------

TITLE: Joining the Network Database Cluster
DESCRIPTION: Bash command to join the network database cluster by providing the IP addresses of swarm nodes.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/cmd/diagnostic/README.md#2025-04-10_snippet_4

LANGUAGE: bash
CODE:
```
$ curl localhost:2000/join?members=ip1,ip2,...
```

----------------------------------------

TITLE: GET Images JSON Platform Query Example
DESCRIPTION: Example of JSON encoded OCI Platform type parameter for image inspection
SOURCE: https://github.com/moby/moby/blob/master/docs/api/version-history.md#2025-04-10_snippet_0

LANGUAGE: http
CODE:
```
GET /images/{name}/json?platform={platform}
```

----------------------------------------

TITLE: Installing the PackageURL Go Library
DESCRIPTION: Commands to install the packageurl-go library using Go modules system.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/package-url/packageurl-go/README.md#2025-04-10_snippet_0

LANGUAGE: shell
CODE:
```
go get -u github.com/package-url/packageurl-go
```

----------------------------------------

TITLE: Initializing Secure Random Seed in Go
DESCRIPTION: Example code showing how to use the seed library to initialize a secure random number generator in Go. Demonstrates both MustInit() for panic-based initialization and Init() for error handling scenarios.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/sean-/seed/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
package mypackage

import (
  "github.com/sean-/seed"
)

// MustInit will panic() if it is unable to set a high-entropy random seed:
func init() {
  seed.MustInit()
}

// Or if you want to not panic() and can actually handle this error:
func init() {
  if secure, err := !seed.Init(); !secure {
    // Handle the error
    //panic(fmt.Sprintf("Unable to securely seed Go's RNG: %v", err))
  }
}
```

----------------------------------------

TITLE: Adding JSON Marshaling for Resources in Go SDK
DESCRIPTION: Adds support for JSON marshaling of Resource objects in the OpenTelemetry Go SDK.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_45

LANGUAGE: Go
CODE:
```
// New functionality
json.Marshal(resource)
```

----------------------------------------

TITLE: Defining OrchestrationConfig Message in Protocol Buffers
DESCRIPTION: Defines a message type 'OrchestrationConfig' with a field for task history retention limit. This is used for configuring task history retention in Docker SwarmKit orchestration.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_52

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "OrchestrationConfig"
  field {
    name: "task_history_retention_limit"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_INT64
    json_name: "taskHistoryRetentionLimit"
  }
}
```

----------------------------------------

TITLE: Implementing Boolean Option with Default False in Go
DESCRIPTION: Creates an option implementation for boolean values defaulting to false, with a WithOption function that enables the option.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-10_snippet_8

LANGUAGE: go
CODE:
```
type defaultFalseOption bool

func (o defaultFalseOption) apply(c config) config {
	c.Bool = bool(o)
    return c
}

// WithOption sets a T to have an option included.
func WithOption() Option {
	return defaultFalseOption(true)
}
```

----------------------------------------

TITLE: Benchmark Commands for XXHash
DESCRIPTION: Shell commands for running benchmarks comparing pure Go and assembly implementations using benchstat tool.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/cespare/xxhash/v2/README.md#2025-04-10_snippet_2

LANGUAGE: shell
CODE:
```
benchstat <(go test -tags purego -benchtime 500ms -count 15 -bench 'Sum64$')
benchstat <(go test -benchtime 500ms -count 15 -bench 'Sum64$')
```

----------------------------------------

TITLE: NAT Table IPTables Configuration
DESCRIPTION: Shows the initial NAT table configuration with chains PREROUTING, INPUT, OUTPUT, POSTROUTING, and DOCKER. Includes packet counts, bytes, and rule specifications.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/new-daemon.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
Chain PREROUTING (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DOCKER     0    --  *      *       0.0.0.0/0            0.0.0.0/0            ADDRTYPE match dst-type LOCAL
[...continued chain definitions...]
```

----------------------------------------

TITLE: Calculating Average Response Stream Size for gRPC Services with Prometheus
DESCRIPTION: This query computes the average number of messages sent per server-streaming RPC for each gRPC service over a 10-minute window. It uses the 'grpc_server_msg_sent_total' and 'grpc_server_started_total' metrics to calculate the average.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/grpc-ecosystem/go-grpc-prometheus/README.md#2025-04-10_snippet_6

LANGUAGE: jsoniq
CODE:
```
sum(rate(grpc_server_msg_sent_total{job="foo",grpc_type="server_stream"}[10m])) by (grpc_service)
 /
sum(rate(grpc_server_started_total{job="foo",grpc_type="server_stream"}[10m])) by (grpc_service)
```

----------------------------------------

TITLE: Custom Error Formatting in Go
DESCRIPTION: Shows how to customize the string representation of multiple errors by setting a custom ErrorFormat function on the multierror.Error instance.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/hashicorp/go-multierror/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
var result *multierror.Error

// ... accumulate errors here, maybe using Append

if result != nil {
	result.ErrorFormat = func([]error) string {
		return "errors!"
	}
}
```

----------------------------------------

TITLE: Restarting the Diagnostic Server in Container
DESCRIPTION: Bash command to start the diagnostic server within the diagnostic container by sending a HUP signal to the init process.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/cmd/diagnostic/README.md#2025-04-10_snippet_14

LANGUAGE: bash
CODE:
```
$ kill -HUP 1
```

----------------------------------------

TITLE: IPTables Filter Table Commands
DESCRIPTION: The exact iptables commands used to create the filter table rules for the Docker network configuration. These commands show how Docker programmatically configures iptables to enforce network isolation policies.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap-noicc.md#2025-04-10_snippet_2

LANGUAGE: plaintext
CODE:
```
-P INPUT ACCEPT
-P FORWARD ACCEPT
-P OUTPUT ACCEPT
-N DOCKER
-N DOCKER-BRIDGE
-N DOCKER-CT
-N DOCKER-FORWARD
-N DOCKER-ISOLATION-STAGE-1
-N DOCKER-ISOLATION-STAGE-2
-N DOCKER-USER
-A FORWARD -j DOCKER-USER
-A FORWARD -j DOCKER-FORWARD
-A DOCKER -d 192.0.2.2/32 ! -i bridge1 -o bridge1 -p tcp -m tcp --dport 80 -j ACCEPT
-A DOCKER ! -i docker0 -o docker0 -j DROP
-A DOCKER ! -i bridge1 -o bridge1 -j DROP
-A DOCKER-BRIDGE -o docker0 -j DOCKER
-A DOCKER-BRIDGE -o bridge1 -j DOCKER
-A DOCKER-CT -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A DOCKER-CT -o bridge1 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A DOCKER-FORWARD -j DOCKER-CT
-A DOCKER-FORWARD -j DOCKER-ISOLATION-STAGE-1
-A DOCKER-FORWARD -j DOCKER-BRIDGE
-A DOCKER-FORWARD -i docker0 -j ACCEPT
-A DOCKER-FORWARD -i bridge1 -o bridge1 -j DROP
-A DOCKER-FORWARD -i bridge1 ! -o bridge1 -j ACCEPT
-A DOCKER-ISOLATION-STAGE-1 -i docker0 ! -o docker0 -j DOCKER-ISOLATION-STAGE-2
-A DOCKER-ISOLATION-STAGE-1 -i bridge1 ! -o bridge1 -j DOCKER-ISOLATION-STAGE-2
-A DOCKER-ISOLATION-STAGE-2 -o bridge1 -j DROP
-A DOCKER-ISOLATION-STAGE-2 -o docker0 -j DROP
-A DOCKER-USER -j RETURN
```

----------------------------------------

TITLE: Building and Testing Docker on Linux using Bash
DESCRIPTION: The make.sh script is used for building and testing Docker on Linux. It can be run locally or inside a Docker development container, with different commands for various testing scenarios.
SOURCE: https://github.com/moby/moby/blob/master/hack/README.md#2025-04-10_snippet_3

LANGUAGE: Bash
CODE:
```
### make.sh

- Referenced via `make test` when running tests on a local machine,
or directly referenced when running tests inside a Docker development container.  
- When running on a local machine, `make test` to run all tests found in
`test`, `test-unit`, `test-integration`, and `test-docker-py` on
your local machine. The default timeout is set in `make.sh` to 60 minutes
(`${TIMEOUT:=60m}`), since it currently takes up to an hour to run
all of the tests.
- When running inside a Docker development container, `hack/make.sh` does
not have a single target that runs all the tests. You need to provide a
single command line with multiple targets that performs the same thing.
An example referenced from [Run targets inside a development container](https://docs.docker.com/opensource/project/test-and-docs/#run-targets-inside-a-development-container): `root@5f8630b873fe:/go/src/github.com/moby/moby# hack/make.sh dynbinary binary test-unit test-integration test-docker-py`
```

----------------------------------------

TITLE: Iptables Filter Table Configuration for NAT-Unprotected Network
DESCRIPTION: The iptables filter table configuration showing various chains and rules for the Docker network in nat-unprotected mode.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap-natunprot.md#2025-04-10_snippet_1

LANGUAGE: plaintext
CODE:
```
Chain INPUT (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         

Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DOCKER-USER  0    --  *      *       0.0.0.0/0            0.0.0.0/0           
2        0     0 DOCKER-FORWARD  0    --  *      *       0.0.0.0/0            0.0.0.0/0           

Chain OUTPUT (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         

Chain DOCKER (2 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DROP       0    --  !docker0 docker0  0.0.0.0/0            0.0.0.0/0           
2        0     0 ACCEPT     0    --  !bridge1 bridge1  0.0.0.0/0            0.0.0.0/0           

Chain DOCKER-BRIDGE (1 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DOCKER     0    --  *      docker0  0.0.0.0/0            0.0.0.0/0           
2        0     0 DOCKER     0    --  *      bridge1  0.0.0.0/0            0.0.0.0/0           

Chain DOCKER-CT (1 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 ACCEPT     0    --  *      docker0  0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED
2        0     0 ACCEPT     0    --  *      bridge1  0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED

Chain DOCKER-FORWARD (1 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DOCKER-CT  0    --  *      *       0.0.0.0/0            0.0.0.0/0           
2        0     0 DOCKER-ISOLATION-STAGE-1  0    --  *      *       0.0.0.0/0            0.0.0.0/0           
3        0     0 DOCKER-BRIDGE  0    --  *      *       0.0.0.0/0            0.0.0.0/0           
4        0     0 ACCEPT     0    --  docker0 *       0.0.0.0/0            0.0.0.0/0           
5        0     0 ACCEPT     0    --  bridge1 *       0.0.0.0/0            0.0.0.0/0           

Chain DOCKER-ISOLATION-STAGE-1 (1 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DOCKER-ISOLATION-STAGE-2  0    --  docker0 !docker0  0.0.0.0/0            0.0.0.0/0           
2        0     0 DOCKER-ISOLATION-STAGE-2  0    --  bridge1 !bridge1  0.0.0.0/0            0.0.0.0/0           

Chain DOCKER-ISOLATION-STAGE-2 (2 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DROP       0    --  *      bridge1  0.0.0.0/0            0.0.0.0/0           
2        0     0 DROP       0    --  *      docker0  0.0.0.0/0            0.0.0.0/0           

Chain DOCKER-USER (1 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 RETURN     0    --  *      *       0.0.0.0/0            0.0.0.0/0           
```

----------------------------------------

TITLE: Defining a Go interface for plugin generation
DESCRIPTION: Example of a Go interface definition that can be used as input for the Plugin RPC Generator. This volumeDriver interface defines methods for creating, removing, mounting and unmounting volumes.
SOURCE: https://github.com/moby/moby/blob/master/pkg/plugins/pluginrpc-gen/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
type volumeDriver interface {
	Create(name string, opts opts) (err error)
	Remove(name string) (err error)
	Path(name string) (mountpoint string, err error)
	Mount(name string) (mountpoint string, err error)
	Unmount(name string) (err error)
}
```

----------------------------------------

TITLE: Container Network Sysctl Configuration Example
DESCRIPTION: Example of setting per-interface sysctls using DriverOpts label
SOURCE: https://github.com/moby/moby/blob/master/docs/api/version-history.md#2025-04-10_snippet_1

LANGUAGE: text
CODE:
```
com.docker.network.endpoint.sysctls=net.ipv4.config.IFNAME.log_martians=1
```

----------------------------------------

TITLE: Setting Google Cloud SDK Environment Variables in Shell
DESCRIPTION: Shell commands to set environment variables required for Google Cloud SDK integration tests. These variables include project IDs, paths to service account key files, database names, and other configuration settings needed for testing against various Google Cloud services.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CONTRIBUTING.md#2025-04-10_snippet_3

LANGUAGE: sh
CODE:
```
# Developers Console project's ID (e.g. bamboo-shift-455) for the Bigtable project.
export GCLOUD_TESTS_GOLANG_SECONDARY_BIGTABLE_PROJECT_ID=your-bigtable-optional-secondary-project

# The path to the JSON key file of the general project's service account.
export GCLOUD_TESTS_GOLANG_KEY=~/directory/your-project-abcd1234.json

# Comma separated list of developer's Datastore databases. If not provided, 
# default database i.e. empty string is used.
export GCLOUD_TESTS_GOLANG_DATASTORE_DATABASES=your-database-1,your-database-2

# Developers Console project's ID (e.g. doorway-cliff-677) for the Firestore project.
export GCLOUD_TESTS_GOLANG_FIRESTORE_PROJECT_ID=your-firestore-project

# Comma separated list of developer's Firestore databases. If not provided, default database is used.
export GCLOUD_TESTS_GOLANG_FIRESTORE_DATABASES=your-database-1,your-database-2

# The path to the JSON key file of the Firestore project's service account.
export GCLOUD_TESTS_GOLANG_FIRESTORE_KEY=~/directory/your-firestore-project-abcd1234.json

# The full name of the keyring for the tests, in the form "projects/P/locations/L/keyRings/R".
# The creation of this is described below.
export MY_KEYRING=my-golang-sdk-test
export MY_LOCATION=global
export GCLOUD_TESTS_GOLANG_KEYRING=projects/$GCLOUD_TESTS_GOLANG_PROJECT_ID/locations/$MY_LOCATION/keyRings/$MY_KEYRING

# API key for using the Translate API.
export GCLOUD_TESTS_API_KEY=abcdefghijk123456789

# Compute Engine zone. (https://cloud.google.com/compute/docs/regions-zones)
export GCLOUD_TESTS_GOLANG_ZONE=your-chosen-region
```

----------------------------------------

TITLE: Adding SkipLineEnding Flag to EncoderConfig
DESCRIPTION: Adds a new flag EncoderConfig.SkipLineEnding to disable adding newline characters between log statements.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.uber.org/zap/CHANGELOG.md#2025-04-10_snippet_2

LANGUAGE: Markdown
CODE:
```
[#989][]: Add `EncoderConfig.SkipLineEnding` flag to disable adding newline characters between log statements.
```

----------------------------------------

TITLE: Defining TaskDefaults Message in Protocol Buffers
DESCRIPTION: Defines a message type 'TaskDefaults' with a field for log driver. This is used for specifying default task configurations in Docker SwarmKit.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_53

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "TaskDefaults"
  field {
    name: "log_driver"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Driver"
    json_name: "logDriver"
  }
}
```

----------------------------------------

TITLE: Displaying PkgGoDev Badge for SDK Trace Package in Markdown
DESCRIPTION: This snippet shows how to embed a PkgGoDev badge in a Markdown file, linking to the documentation for the SDK Trace package from the OpenTelemetry Go library.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/sdk/trace/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/sdk/trace)](https://pkg.go.dev/go.opentelemetry.io/otel/sdk/trace)
```

----------------------------------------

TITLE: Running vet script in gRPC-Go project
DESCRIPTION: Command to run the vet script which catches static analysis errors in the codebase. This is a required check before submitting a pull request.
SOURCE: https://github.com/moby/moby/blob/master/vendor/google.golang.org/grpc/CONTRIBUTING.md#2025-04-10_snippet_0

LANGUAGE: shell
CODE:
```
./scripts/vet.sh
```

----------------------------------------

TITLE: Defining Reader Struct in Go
DESCRIPTION: Declares the Reader struct type for buffered look-ahead reading operations.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/philhofer/fwd/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
type Reader struct {
    // contains filtered or unexported fields
}
```

----------------------------------------

TITLE: Environment Variable Configuration Example
DESCRIPTION: Shows configuration of metric export timing using environment variables OTEL_METRIC_EXPORT_INTERVAL and OTEL_METRIC_EXPORT_TIMEOUT.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_19

LANGUAGE: go
CODE:
```
OTEL_METRIC_EXPORT_INTERVAL="<duration>" 
OTEL_METRIC_EXPORT_TIMEOUT="<duration>"
```

----------------------------------------

TITLE: Using Labeled Timer Metrics in Go
DESCRIPTION: Demonstrates how to update a labeled timer metric with specific action values.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/go-metrics/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
containerActions.WithValues("create").UpdateSince(start)
```

----------------------------------------

TITLE: Developer Certificate of Origin Text
DESCRIPTION: The full text of the Developer Certificate of Origin v1.1 that contributors must agree to when making contributions to the project.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/go-metrics/CONTRIBUTING.md#2025-04-10_snippet_0

LANGUAGE: text
CODE:
```
Developer Certificate of Origin
Version 1.1

Copyright (C) 2004, 2006 The Linux Foundation and its contributors.
660 York Street, Suite 102,
San Francisco, CA 94110 USA

Everyone is permitted to copy and distribute verbatim copies of this
license document, but changing it is not allowed.

Developer's Certificate of Origin 1.1

By making a contribution to this project, I certify that:

(a) The contribution was created in whole or in part by me and I
    have the right to submit it under the open source license
    indicated in the file; or

(b) The contribution is based upon previous work that, to the best
    of my knowledge, is covered under an appropriate open source
    license and I have the right under that license to submit that
    work with modifications, whether created in whole or in part
    by me, under the same open source license (unless I am
    permitted to submit under a different license), as indicated
    in the file; or

(c) The contribution was provided directly to me by some other
    person who certified (a), (b) or (c) and I have not modified
    it.

(d) I understand and agree that this project and the contribution
    are public and that a record of the contribution (including all
    personal information I submit with it, including my sign-off) is
    maintained indefinitely and may be redistributed consistent with
    this project or the open source license(s) involved.
```

----------------------------------------

TITLE: Configuring CFSSL Database Connection for MySQL
DESCRIPTION: JSON configuration example for connecting CFSSL to a MySQL database. This configuration is used with the -db-config flag in CFSSL commands and includes the parseTime parameter needed for proper date handling.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/cloudflare/cfssl/certdb/README.md#2025-04-10_snippet_6

LANGUAGE: json
CODE:
```
{"driver":"mysql","data_source":"user:password@tcp(hostname:3306)/db?parseTime=true"}
```

----------------------------------------

TITLE: Defining Driver Message in Protocol Buffers
DESCRIPTION: Defines a message type 'Driver' with fields for name and options. It includes a nested message type 'OptionsEntry' for key-value pairs, likely used for driver configuration in Docker SwarmKit.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_45

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "Driver"
  field {
    name: "name"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "name"
  }
  field {
    name: "options"
    number: 2
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Driver.OptionsEntry"
    json_name: "options"
  }
  nested_type {
    name: "OptionsEntry"
    field {
      name: "key"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "key"
    }
    field {
      name: "value"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "value"
    }
    options {
      map_entry: true
    }
  }
}
```

----------------------------------------

TITLE: Buffered File Writing with BitSet in Go
DESCRIPTION: Example of using buffered I/O for improved performance when writing BitSets to files.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/bits-and-blooms/bitset/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
	f, err := os.Create("myfile")
	w := bufio.NewWriter(f)
```

----------------------------------------

TITLE: Dumping Database Tables
DESCRIPTION: Bash command to retrieve the contents of a specific database table for a network. Tables can be endpoint_table or overlay_peer_table.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/cmd/diagnostic/README.md#2025-04-10_snippet_10

LANGUAGE: bash
CODE:
```
$ curl localhost:2000/gettable?nid=<network id>&tname=<table name>
```

----------------------------------------

TITLE: Filter Table Iptables Commands
DESCRIPTION: The iptables commands that generate the filter table rules for Docker networking, showing how Docker configures connectivity, isolation, and port forwarding.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
-P INPUT ACCEPT
-P FORWARD ACCEPT
-P OUTPUT ACCEPT
-N DOCKER
-N DOCKER-BRIDGE
-N DOCKER-CT
-N DOCKER-FORWARD
-N DOCKER-ISOLATION-STAGE-1
-N DOCKER-ISOLATION-STAGE-2
-N DOCKER-USER
-A FORWARD -j DOCKER-USER
-A FORWARD -j DOCKER-FORWARD
-A DOCKER -d 192.0.2.2/32 ! -i bridge1 -o bridge1 -p tcp -m tcp --dport 80 -j ACCEPT
-A DOCKER ! -i docker0 -o docker0 -j DROP
-A DOCKER ! -i bridge1 -o bridge1 -j DROP
-A DOCKER-BRIDGE -o docker0 -j DOCKER
-A DOCKER-BRIDGE -o bridge1 -j DOCKER
-A DOCKER-CT -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A DOCKER-CT -o bridge1 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A DOCKER-FORWARD -j DOCKER-CT
-A DOCKER-FORWARD -j DOCKER-ISOLATION-STAGE-1
-A DOCKER-FORWARD -j DOCKER-BRIDGE
-A DOCKER-FORWARD -i docker0 -j ACCEPT
-A DOCKER-FORWARD -i bridge1 -j ACCEPT
-A DOCKER-ISOLATION-STAGE-1 -i docker0 ! -o docker0 -j DOCKER-ISOLATION-STAGE-2
-A DOCKER-ISOLATION-STAGE-1 -i bridge1 ! -o bridge1 -j DOCKER-ISOLATION-STAGE-2
-A DOCKER-ISOLATION-STAGE-2 -o bridge1 -j DROP
-A DOCKER-ISOLATION-STAGE-2 -o docker0 -j DROP
-A DOCKER-USER -j RETURN
```

----------------------------------------

TITLE: Configuring VSCode for golangci-lint
DESCRIPTION: JSON configuration for setting up golangci-lint in VSCode. This snippet shows how to configure VSCode to use golangci-lint as the linting tool and to lint on save for Go packages.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/Microsoft/go-winio/README.md#2025-04-10_snippet_0

LANGUAGE: json
CODE:
```
{
    "go.lintTool": "golangci-lint",
    "go.lintOnSave": "package"
}
```

----------------------------------------

TITLE: Iptables Commands for NAT-Unprotected Network Configuration
DESCRIPTION: The iptables commands used to set up the filter table rules for the Docker network in nat-unprotected mode.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap-natunprot.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
-P INPUT ACCEPT
-P FORWARD ACCEPT
-P OUTPUT ACCEPT
-N DOCKER
-N DOCKER-BRIDGE
-N DOCKER-CT
-N DOCKER-FORWARD
-N DOCKER-ISOLATION-STAGE-1
-N DOCKER-ISOLATION-STAGE-2
-N DOCKER-USER
-A FORWARD -j DOCKER-USER
-A FORWARD -j DOCKER-FORWARD
-A DOCKER ! -i docker0 -o docker0 -j DROP
-A DOCKER ! -i bridge1 -o bridge1 -j ACCEPT
-A DOCKER-BRIDGE -o docker0 -j DOCKER
-A DOCKER-BRIDGE -o bridge1 -j DOCKER
-A DOCKER-CT -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A DOCKER-CT -o bridge1 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A DOCKER-FORWARD -j DOCKER-CT
-A DOCKER-FORWARD -j DOCKER-ISOLATION-STAGE-1
-A DOCKER-FORWARD -j DOCKER-BRIDGE
-A DOCKER-FORWARD -i docker0 -j ACCEPT
-A DOCKER-FORWARD -i bridge1 -j ACCEPT
-A DOCKER-ISOLATION-STAGE-1 -i docker0 ! -o docker0 -j DOCKER-ISOLATION-STAGE-2
-A DOCKER-ISOLATION-STAGE-1 -i bridge1 ! -o bridge1 -j DOCKER-ISOLATION-STAGE-2
-A DOCKER-ISOLATION-STAGE-2 -o bridge1 -j DROP
-A DOCKER-ISOLATION-STAGE-2 -o docker0 -j DROP
-A DOCKER-USER -j RETURN
```

----------------------------------------

TITLE: Building from Local Source with BuildKit
DESCRIPTION: Command showing how to build from local source files using buildctl with the local directory mapping option.
SOURCE: https://github.com/moby/moby/blob/master/reports/builder/2017-07-17.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
go run ./examples/buildkit3/buildkit.go --local  | buildctl build --local buildkit-src=.
```

----------------------------------------

TITLE: Creating Cluster Volumes in Docker API
DESCRIPTION: The POST /volumes/create endpoint now accepts a new 'ClusterVolumeSpec' to create a cluster volume (CNI). This option is only available when the daemon is a Swarm manager. The response now includes a 'ClusterVolume' field with information about the created volume.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/version-history.md#2025-04-10_snippet_9

LANGUAGE: markdown
CODE:
```
* `POST /volumes/create` now accepts a new `ClusterVolumeSpec` to create a cluster
  volume (CNI). This option can only be used if the daemon is a Swarm manager.
  The Volume response on creation now also can contain a `ClusterVolume` field
  with information about the created volume.
```

----------------------------------------

TITLE: Running coverage check with ci.sh script
DESCRIPTION: Command to check if code changes lower coverage using the project's CI script.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/pelletier/go-toml/v2/CONTRIBUTING.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
./ci.sh coverage -d v2
```

----------------------------------------

TITLE: Displaying Go Package Badge for OpenTelemetry Codes Package
DESCRIPTION: Markdown code for displaying a PkgGoDev badge that links to the OpenTelemetry codes package documentation. The badge indicates the package is available on pkg.go.dev and provides a direct link to its documentation.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/codes/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/codes)](https://pkg.go.dev/go.opentelemetry.io/otel/codes)
```

----------------------------------------

TITLE: Defining IPAMOptions Message in Protocol Buffers
DESCRIPTION: Defines a message type 'IPAMOptions' with fields for driver and configs. This is likely used for IP Address Management configuration in Docker SwarmKit networking.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_46

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "IPAMOptions"
  field {
    name: "driver"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Driver"
    json_name: "driver"
  }
  field {
    name: "configs"
    number: 3
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.IPAMConfig"
    json_name: "configs"
  }
}
```

----------------------------------------

TITLE: Defining Meta Message Type in Protocol Buffers for Docker Swarmkit
DESCRIPTION: This snippet defines the Meta message type, which includes fields for version information and timestamps. It's used to store metadata for various Swarmkit components.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_76

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "Meta"
  field {
    name: "version"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Version"
    options {
      65001: 0
    }
    json_name: "version"
  }
  field {
    name: "created_at"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".google.protobuf.Timestamp"
    json_name: "createdAt"
  }
  field {
    name: "updated_at"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".google.protobuf.Timestamp"
    json_name: "updatedAt"
  }
}
```

----------------------------------------

TITLE: Docker Registry Authentication JSON Response
DESCRIPTION: Example JSON response for a Docker registry authentication request. It includes the login status and an identity token for accessing the registry without a password.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_63

LANGUAGE: json
CODE:
```
{
     "Status": "Login Succeeded",
     "IdentityToken": "9cbaf023786cd7..."
}
```

----------------------------------------

TITLE: Developer Certificate of Origin Text for Contributors
DESCRIPTION: The complete text of the Developer Certificate of Origin (DCO) version 1.1 that contributors must certify to when making contributions to the project. This certification ensures contributors have the right to submit their code under the project's open source license.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/go-units/CONTRIBUTING.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
Developer Certificate of Origin
Version 1.1

Copyright (C) 2004, 2006 The Linux Foundation and its contributors.
660 York Street, Suite 102,
San Francisco, CA 94110 USA

Everyone is permitted to copy and distribute verbatim copies of this
license document, but changing it is not allowed.

Developer's Certificate of Origin 1.1

By making a contribution to this project, I certify that:

(a) The contribution was created in whole or in part by me and I
    have the right to submit it under the open source license
    indicated in the file; or

(b) The contribution is based upon previous work that, to the best
    of my knowledge, is covered under an appropriate open source
    license and I have the right under that license to submit that
    work with modifications, whether created in whole or in part
    by me, under the same open source license (unless I am
    permitted to submit under a different license), as indicated
    in the file; or

(c) The contribution was provided directly to me by some other
    person who certified (a), (b) or (c) and I have not modified
    it.

(d) I understand and agree that this project and the contribution
    are public and that a record of the contribution (including all
    personal information I submit with it, including my sign-off) is
    maintained indefinitely and may be redistributed consistent with
    this project or the open source license(s) involved.
```

----------------------------------------

TITLE: Retrieving Values from BoltDB in Go
DESCRIPTION: This snippet demonstrates how to retrieve a value for a given key from a bucket in BoltDB. It uses the Bucket.Get() function to fetch the value of the 'answer' key from the 'MyBucket' bucket.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_13

LANGUAGE: go
CODE:
```
db.View(func(tx *bolt.Tx) error {
	b := tx.Bucket([]byte("MyBucket"))
	v := b.Get([]byte("answer"))
	fmt.Printf("The answer is: %s\n", v)
	return nil
})
```

----------------------------------------

TITLE: Response for Successful Docker Volume Creation
DESCRIPTION: HTTP response for a successful Docker volume creation, including details about the new volume such as Name, Driver, Mountpoint, and Labels.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_81

LANGUAGE: json
CODE:
```
{
  "Name": "tardis",
  "Driver": "custom",
  "Mountpoint": "/var/lib/docker/volumes/tardis",
  "Status": {
    "hello": "world"
  },
  "Labels": {
    "com.example.some-label": "some-value",
    "com.example.some-other-label": "some-other-value"
  },
  "Scope": "local"
}
```

----------------------------------------

TITLE: Managing SQLite Database with Goose
DESCRIPTION: Commands to set up and tear down a SQLite database using goose migrations. These commands initialize the schema needed for CFSSL certificate operations.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/cloudflare/cfssl/certdb/README.md#2025-04-10_snippet_3

LANGUAGE: bash
CODE:
```
goose -path certdb/sqlite up
```

LANGUAGE: bash
CODE:
```
goose -path certdb/sqlite down
```

----------------------------------------

TITLE: Buffered File Reading with BitSet in Go
DESCRIPTION: Example of using buffered I/O for improved performance when reading BitSets from files.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/bits-and-blooms/bitset/README.md#2025-04-10_snippet_4

LANGUAGE: go
CODE:
```
	f, err := os.Open("myfile")
	r := bufio.NewReader(f)
```

----------------------------------------

TITLE: Checking Gossip Protocol Consistency Across Cluster Nodes with ssd
DESCRIPTION: This command runs the 'gossip-consistency' subcommand of ssd to verify if the network state maintained by all nodes in a Docker swarm cluster is consistent for the 'ov2' network. It displays a hash digest of the control-plane state from each node.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/cmd/ssd/README.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
docker run -v /var/run/docker.sock:/var/run/docker.sock -v /var/run/docker/netns:/var/run/docker/netns --privileged sanimej/ssd ov2 gossip-consistency
```

----------------------------------------

TITLE: Defining Mount.BindOptions Message in Protocol Buffers
DESCRIPTION: This nested message defines bind mount options for Docker containers, including propagation type, non-recursive binding, mount point creation, and read-only flags that control how host directories are mounted into containers.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_30

LANGUAGE: protobuf
CODE:
```
nested_type {
  name: "BindOptions"
  field {
    name: "propagation"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.Mount.BindOptions.Propagation"
    json_name: "propagation"
  }
  field {
    name: "nonrecursive"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_BOOL
    options {
      65004: "NonRecursive"
    }
    json_name: "nonrecursive"
  }
  field {
    name: "createmountpoint"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_BOOL
    options {
      65004: "CreateMountpoint"
    }
    json_name: "createmountpoint"
  }
  field {
    name: "readonlynonrecursive"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_BOOL
    options {
      65004: "ReadOnlyNonRecursive"
    }
    json_name: "readonlynonrecursive"
  }
  field {
    name: "readonlyforcerecursive"
    number: 5
    label: LABEL_OPTIONAL
    type: TYPE_BOOL
    options {
      65004: "ReadOnlyForceRecursive"
    }
    json_name: "readonlyforcerecursive"
  }
  enum_type {
    name: "Propagation"
    value {
      name: "RPRIVATE"
      number: 0
      options {
        66001: "MountPropagationRPrivate"
      }
    }
    value {
      name: "PRIVATE"
      number: 1
      options {
        66001: "MountPropagationPrivate"
      }
    }
    value {
      name: "RSHARED"
      number: 2
      options {
        66001: "MountPropagationRShared"
      }
    }
    value {
      name: "SHARED"
      number: 3
      options {
        66001: "MountPropagationShared"
      }
    }
    value {
      name: "RSLAVE"
      number: 4
      options {
        66001: "MountPropagationRSlave"
      }
    }
    value {
      name: "SLAVE"
      number: 5
      options {
        66001: "MountPropagationSlave"
      }
    }
    options {
      62001: 0
      62023: "MountPropagation"
    }
  }
}
```

----------------------------------------

TITLE: Terminal Progress Bar Implementation
DESCRIPTION: Complete example showing how to create an animated progress bar using ANSI escape codes for cursor movement and colors
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/morikuni/aec/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
package main

import (
	"fmt"
	"strings"
	"time"

	"github.com/morikuni/aec"
)

func main() {
	const n = 20
	builder := aec.EmptyBuilder

	up2 := aec.Up(2)
	col := aec.Column(n + 2)
	bar := aec.Color8BitF(aec.NewRGB8Bit(64, 255, 64))
	label := builder.LightRedF().Underline().With(col).Right(1).ANSI

	// for up2
	fmt.Println()
	fmt.Println()

	for i := 0; i <= n; i++ {
		fmt.Print(up2)
		fmt.Println(label.Apply(fmt.Sprint(i, "/", n)))
		fmt.Print("[")
		fmt.Print(bar.Apply(strings.Repeat("=", i)))
		fmt.Println(col.Apply("]")
		time.Sleep(100 * time.Millisecond)
	}
}
```

----------------------------------------

TITLE: Installing bbolt using Go Get
DESCRIPTION: Command to install bbolt library using Go's package management system.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_0

LANGUAGE: sh
CODE:
```
$ go get go.etcd.io/bbolt@latest
```

----------------------------------------

TITLE: Generating Build Definition Graph with llb Client Library in Go
DESCRIPTION: The llb client package is a Go library for generating build definition graphs. It uses chained methods to describe execution steps and supports adding mounts for multiple inputs or outputs. Calling Marshal() on a leaf node generates the protobuf definition for the entire build graph.
SOURCE: https://github.com/moby/moby/blob/master/reports/builder/2017-06-26.md#2025-04-10_snippet_0

LANGUAGE: Go
CODE:
```
// Example usage of llb client library
node := llb.Image("base-image")
    .Run(llb.Shlex("apt-get update"))
    .Run(llb.Shlex("apt-get install -y package"))
    .File(llb.Mkdir("/app", 0755))
    .File(llb.Copy(llb.Local("src"), ".", "/app"))

def, err := node.Marshal()
```

----------------------------------------

TITLE: Create Endpoint Request in Remote Driver Protocol
DESCRIPTION: LibNetwork sends a request to create an endpoint, including network ID, endpoint ID, options, and interface details.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/remote.md#2025-04-10_snippet_6

LANGUAGE: JSON
CODE:
```
{
		"NetworkID": string,
		"EndpointID": string,
		"Options": {
			...
		},
		"Interface": {
			"Address": string,
			"AddressIPv6": string,
			"MacAddress": string
		}
    }
```

----------------------------------------

TITLE: Benchmark Results for Zstandard Decoder in Go
DESCRIPTION: Shows performance benchmarks for the decoder on various inputs, including streaming decodes and smaller inputs. Includes metrics for speed (MB/s), allocations, and compression ratios.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/klauspost/compress/zstd/README.md#2025-04-10_snippet_4

LANGUAGE: go
CODE:
```
BenchmarkDecoderSilesia-32    	                   5	 206878840 ns/op	1024.50 MB/s	   49808 B/op	      43 allocs/op
BenchmarkDecoderEnwik9-32                          1	1271809000 ns/op	 786.28 MB/s	   72048 B/op	      52 allocs/op

Concurrent blocks, performance:

BenchmarkDecoder_DecodeAllParallel/kppkn.gtb.zst-32         	   67356	     17857 ns/op	10321.96 MB/s	        22.48 pct	     102 B/op	       0 allocs/op
BenchmarkDecoder_DecodeAllParallel/geo.protodata.zst-32     	  266656	      4421 ns/op	26823.21 MB/s	        11.89 pct	      19 B/op	       0 allocs/op
BenchmarkDecoder_DecodeAllParallel/plrabn12.txt.zst-32      	   20992	     56842 ns/op	8477.17 MB/s	        39.90 pct	     754 B/op	       0 allocs/op
BenchmarkDecoder_DecodeAllParallel/lcet10.txt.zst-32        	   27456	     43932 ns/op	9714.01 MB/s	        33.27 pct	     524 B/op	       0 allocs/op
BenchmarkDecoder_DecodeAllParallel/asyoulik.txt.zst-32      	   78432	     15047 ns/op	8319.15 MB/s	        40.34 pct	      66 B/op	       0 allocs/op
BenchmarkDecoder_DecodeAllParallel/alice29.txt.zst-32       	   65800	     18436 ns/op	8249.63 MB/s	        37.75 pct	      88 B/op	       0 allocs/op
BenchmarkDecoder_DecodeAllParallel/html_x_4.zst-32          	  102993	     11523 ns/op	35546.09 MB/s	         3.637 pct	     143 B/op	       0 allocs/op
BenchmarkDecoder_DecodeAllParallel/paper-100k.pdf.zst-32    	 1000000	      1070 ns/op	95720.98 MB/s	        80.53 pct	       3 B/op	       0 allocs/op
BenchmarkDecoder_DecodeAllParallel/fireworks.jpeg.zst-32    	  749802	      1752 ns/op	70272.35 MB/s	       100.0 pct	       5 B/op	       0 allocs/op
BenchmarkDecoder_DecodeAllParallel/urls.10K.zst-32          	   22640	     52934 ns/op	13263.37 MB/s	        26.25 pct	    1014 B/op	       0 allocs/op
BenchmarkDecoder_DecodeAllParallel/html.zst-32              	  226412	      5232 ns/op	19572.27 MB/s	        14.49 pct	      20 B/op	       0 allocs/op
BenchmarkDecoder_DecodeAllParallel/comp-data.bin.zst-32     	  923041	      1276 ns/op	3194.71 MB/s	        31.26 pct	       0 B/op	       0 allocs/op
```

----------------------------------------

TITLE: Inspecting a Docker Swarm Service via HTTP GET
DESCRIPTION: This snippet shows how to inspect a Docker Swarm service using the GET HTTP method. It includes the request format and an example JSON response containing detailed service information.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_103

LANGUAGE: HTTP
CODE:
```
GET /v1.24/services/1cb4dnqcyx6m66g2t538x3rxha HTTP/1.1
```

LANGUAGE: JSON
CODE:
```
{
  "ID": "ak7w3gjqoa3kuz8xcpnyy0pvl",
  "Version": {
    "Index": 95
  },
  "CreatedAt": "2016-06-07T21:10:20.269723157Z",
  "UpdatedAt": "2016-06-07T21:10:20.276301259Z",
  "Spec": {
    "Name": "redis",
    "TaskTemplate": {
      "ContainerSpec": {
        "Image": "redis"
      },
      "Resources": {
        "Limits": {},
        "Reservations": {}
      },
      "RestartPolicy": {
        "Condition": "any",
        "MaxAttempts": 0
      },
      "Placement": {}
    },
    "Mode": {
      "Replicated": {
        "Replicas": 1
      }
    },
    "UpdateConfig": {
      "Parallelism": 1,
      "FailureAction": "pause"
    },
    "EndpointSpec": {
      "Mode": "vip",
      "Ports": [
        {
          "Protocol": "tcp",
          "TargetPort": 6379,
          "PublishedPort": 30001
        }
      ]
    }
  },
  "Endpoint": {
    "Spec": {
      "Mode": "vip",
      "Ports": [
        {
          "Protocol": "tcp",
          "TargetPort": 6379,
          "PublishedPort": 30001
        }
      ]
    },
    "Ports": [
      {
        "Protocol": "tcp",
        "TargetPort": 6379,
        "PublishedPort": 30001
      }
    ],
    "VirtualIPs": [
      {
        "NetworkID": "4qvuz4ko70xaltuqbt8956gd1",
        "Addr": "10.255.0.4/16"
      }
    ]
  }
}
```

----------------------------------------

TITLE: Defining Timestamp Message in Protocol Buffers
DESCRIPTION: Defines the Timestamp message type with seconds and nanos fields. Includes package options for various programming languages.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_0

LANGUAGE: Protocol Buffers
CODE:
```
file {
  name: "google/protobuf/timestamp.proto"
  package: "google.protobuf"
  message_type {
    name: "Timestamp"
    field {
      name: "seconds"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_INT64
      json_name: "seconds"
    }
    field {
      name: "nanos"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_INT32
      json_name: "nanos"
    }
  }
  options {
    java_package: "com.google.protobuf"
    java_outer_classname: "TimestampProto"
    java_multiple_files: true
    go_package: "github.com/golang/protobuf/ptypes/timestamp"
    cc_enable_arenas: true
    objc_class_prefix: "GPB"
    csharp_namespace: "Google.Protobuf.WellKnownTypes"
  }
  syntax: "proto3"
}
```

----------------------------------------

TITLE: Defining VolumeCapability Message in Protocol Buffers
DESCRIPTION: Defines the VolumeCapability message type with nested types for block and mount volumes, and access modes. This structure describes the capabilities of a volume in Docker Swarm.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_60

LANGUAGE: protobuf
CODE:
```
message VolumeCapability {
  oneof access_type {
    BlockVolume block = 1;
    MountVolume mount = 2;
  }
  AccessMode access_mode = 3;

  message BlockVolume {}

  message MountVolume {
    string fs_type = 1;
    repeated string mount_flags = 2;
  }

  message AccessMode {
    enum Mode {
      UNKNOWN = 0;
      SINGLE_NODE_WRITER = 1;
      SINGLE_NODE_READER_ONLY = 2;
      MULTI_NODE_READER_ONLY = 3;
      MULTI_NODE_SINGLE_WRITER = 4;
      MULTI_NODE_MULTI_WRITER = 5;
    }
    Mode mode = 1;
  }
}
```

----------------------------------------

TITLE: Demonstrating Platform Mismatch Warning in Container Creation
DESCRIPTION: Example of a warning message returned when creating a container with an image whose platform doesn't match the host platform and no specific platform was requested.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/version-history.md#2025-04-10_snippet_12

LANGUAGE: plaintext
CODE:
```
WARNING: The requested image's platform (linux/arm64/v8) does not
           match the detected host platform (linux/amd64) and no
           specific platform was requested
```

----------------------------------------

TITLE: Flag Name Normalization
DESCRIPTION: Examples of implementing custom flag name normalization functions.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/spf13/pflag/README.md#2025-04-10_snippet_8

LANGUAGE: go
CODE:
```
func wordSepNormalizeFunc(f *pflag.FlagSet, name string) pflag.NormalizedName {
	from := []string{"-", "_"}
	to := "."
	for _, sep := range from {
		name = strings.Replace(name, sep, to, -1)
	}
	return pflag.NormalizedName(name)
}

myFlagSet.SetNormalizeFunc(wordSepNormalizeFunc)
```

LANGUAGE: go
CODE:
```
func aliasNormalizeFunc(f *pflag.FlagSet, name string) pflag.NormalizedName {
	switch name {
	case "old-flag-name":
		name = "new-flag-name"
		break
	}
	return pflag.NormalizedName(name)
}

myFlagSet.SetNormalizeFunc(aliasNormalizeFunc)
```

----------------------------------------

TITLE: Creating a New Branch for Zap Contributions
DESCRIPTION: This snippet shows the process of creating a new branch for making changes to Zap, including updating the local master branch with the latest upstream changes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.uber.org/zap/CONTRIBUTING.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
cd $GOPATH/src/go.uber.org/zap
git checkout master
git fetch upstream
git rebase upstream/master
git checkout -b cool_new_feature
```

----------------------------------------

TITLE: Hashing Complex Struct in Go using Hashstructure
DESCRIPTION: Example demonstrating how to use the hashstructure library to generate a hash for a complex struct containing nested data types. It showcases the library's ability to handle various data types including strings, integers, maps, and slices.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/mitchellh/hashstructure/v2/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
type ComplexStruct struct {
    Name     string
    Age      uint
    Metadata map[string]interface{}
}

v := ComplexStruct{
    Name: "mitchellh",
    Age:  64,
    Metadata: map[string]interface{}{
        "car":      true,
        "location": "California",
        "siblings": []string{"Bob", "John"},
    },
}

hash, err := hashstructure.Hash(v, hashstructure.FormatV2, nil)
if err != nil {
    panic(err)
}

fmt.Printf("%d", hash)
// Output:
// 2307517237273902113
```

----------------------------------------

TITLE: Getting Stats from a cgroup (v1)
DESCRIPTION: Retrieves usage statistics from a cgroup, optionally with the IgnoreNotExist flag to handle cases like swap memory stats when swap is disabled.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/README.md#2025-04-10_snippet_7

LANGUAGE: go
CODE:
```
stats, err := control.Stat()
```

----------------------------------------

TITLE: Connecting to TLS-encrypted Syslog with Certificate Path
DESCRIPTION: Shows how to establish a secure TLS-encrypted connection to a remote syslog server using a certificate path. This creates a writer for sending encrypted log messages to the specified endpoint with the given priority and tag.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/RackSec/srslog/README.md#2025-04-10_snippet_4

LANGUAGE: go
CODE:
```
w, err := syslog.DialWithTLSCertPath("tcp+tls", "192.168.0.52:514", syslog.LOG_ERR, "testtag", "/path/to/servercert.pem")
```

----------------------------------------

TITLE: Defining Protocol Buffer SourceCodeInfo with Location
DESCRIPTION: Defines structures for source code information including path, span, and comments to represent locations in the source code.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_17

LANGUAGE: protobuf
CODE:
```
message_type {
    name: "SourceCodeInfo"
    field {
      name: "location"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.SourceCodeInfo.Location"
      json_name: "location"
    }
    nested_type {
      name: "Location"
      field {
        name: "path"
        number: 1
        label: LABEL_REPEATED
        type: TYPE_INT32
        options {
          packed: true
        }
        json_name: "path"
      }
      field {
        name: "span"
        number: 2
        label: LABEL_REPEATED
        type: TYPE_INT32
        options {
          packed: true
        }
        json_name: "span"
      }
      field {
        name: "leading_comments"
        number: 3
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "leadingComments"
      }
      field {
        name: "trailing_comments"
        number: 4
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "trailingComments"
      }
      field {
        name: "leading_detached_comments"
        number: 6
        label: LABEL_REPEATED
        type: TYPE_STRING
        json_name: "leadingDetachedComments"
      }
    }
  }
```

----------------------------------------

TITLE: Demonstrating inconsistent lock ordering in Go
DESCRIPTION: Code snippets showing how inconsistent lock ordering across goroutines can lead to potential deadlocks. This is a common source of deadlocks that the library can detect.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/sasha-s/go-deadlock/Readme.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
A.Lock() // defer A.Unlock() or similar.
...
B.Lock() // defer B.Unlock() or similar.
```

LANGUAGE: go
CODE:
```
B.Lock() // defer B.Unlock() or similar.
...
A.Lock() // defer A.Unlock() or similar.
```

----------------------------------------

TITLE: Setting Up Upstream Remote
DESCRIPTION: Commands to add and verify upstream remote for synchronizing with original repository
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/set-up-git.md#2025-04-10_snippet_4

LANGUAGE: bash
CODE:
```
$ git remote add upstream https://github.com/moby/moby.git
$ git config --local -l
$ git remote -v
```

----------------------------------------

TITLE: Using New Meter Creation Methods in Go
DESCRIPTION: This snippet demonstrates the replacement of deprecated InstrumentProvider methods with new Meter creation methods in the OpenTelemetry Go SDK.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_21

LANGUAGE: Go
CODE:
```
// Old (deprecated)
Counter := InstrumentProvider.Counter()
UpDownCounter := InstrumentProvider.UpDownCounter()
Gauge := InstrumentProvider.Gauge()

// New
Counter := Meter.Int64ObservableCounter()
UpDownCounter := Meter.Int64ObservableUpDownCounter()
Gauge := Meter.Int64ObservableGauge()
```

----------------------------------------

TITLE: Listing Docker Builder Pull Requests in Markdown
DESCRIPTION: This code snippet shows how to list Docker Builder pull requests and issues using Markdown syntax. It includes links to GitHub pull requests and issues with brief descriptions.
SOURCE: https://github.com/moby/moby/blob/master/reports/builder/2017-05-08.md#2025-04-10_snippet_0

LANGUAGE: Markdown
CODE:
```
- [Move dispatch state to a new struct](https://github.com/moby/moby/pull/32952)
- [Cleanup unnecessary mutate then revert of b.runConfig](https://github.com/moby/moby/pull/32773)

In review:
- [Refactor builder probe cache and container backend](https://github.com/moby/moby/pull/33061)
- [Expose GetImage interface for builder](https://github.com/moby/moby/pull/33054)
```

----------------------------------------

TITLE: Formatting Byte Sizes with Integer Flag in Go
DESCRIPTION: Examples of using fmt.Printf with integer flag to format byte sizes. This shows how to print values in bytes, with an option to add unit prefix using the # flag.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/tonistiigi/units/readme.md#2025-04-10_snippet_1

LANGUAGE: Go
CODE:
```
fmt.Printf("%d", 1234 * B)    => "1234"
fmt.Printf("%#d", 1234 * B)   => "1234B"
```

----------------------------------------

TITLE: Checking Registry Version
DESCRIPTION: Verifies the installed registry binary and displays its version information.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/distribution/BUILDING.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
$ $GOPATH/bin/registry --version
$GOPATH/bin/registry github.com/docker/distribution v2.0.0-alpha.1+unknown
```

----------------------------------------

TITLE: Delete Endpoint Request in Remote Driver Protocol
DESCRIPTION: LibNetwork sends a request to delete an endpoint, providing the network ID and endpoint ID.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/remote.md#2025-04-10_snippet_10

LANGUAGE: JSON
CODE:
```
{
		"NetworkID": string,
		"EndpointID": string
    }
```

----------------------------------------

TITLE: Listing Docker Images
DESCRIPTION: Command to display all Docker images present on the host system. Used to identify images that may be unnecessary or consuming disk space.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/set-up-dev-env.md#2025-04-10_snippet_3

LANGUAGE: bash
CODE:
```
$ docker images
```

----------------------------------------

TITLE: Network Driver DiscoverNew Request Format
DESCRIPTION: Format for the POST request to NetworkDriver.DiscoverNew endpoint for discovery notifications. Includes discovery type and associated data.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/remote.md#2025-04-10_snippet_14

LANGUAGE: json
CODE:
```
{
    "DiscoveryType": int,
    "DiscoveryData": {
        ...
    }
}
```

----------------------------------------

TITLE: Defining RaftMemberStatus Message in Protocol Buffers
DESCRIPTION: This message type defines the status of a Raft consensus algorithm member, including whether it's a leader, its reachability state (UNKNOWN, UNREACHABLE, REACHABLE), and status message, used for cluster management.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_26

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "RaftMemberStatus"
  field {
    name: "leader"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_BOOL
    json_name: "leader"
  }
  field {
    name: "reachability"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.RaftMemberStatus.Reachability"
    json_name: "reachability"
  }
  field {
    name: "message"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "message"
  }
  enum_type {
    name: "Reachability"
    value {
      name: "UNKNOWN"
      number: 0
    }
    value {
      name: "UNREACHABLE"
      number: 1
    }
    value {
      name: "REACHABLE"
      number: 2
    }
  }
}
```

----------------------------------------

TITLE: Bug Fix for Compute Metadata Path in Go SDK
DESCRIPTION: Commit reference showing a fix for the compute/metadata package that removes the leading slash for Get suffix, ensuring proper URL path construction when fetching metadata.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_4

LANGUAGE: markdown
CODE:
```
* **compute/metadata:** remove leading slash for Get suffix ([#2760](https://www.github.com/googleapis/google-cloud-go/issues/2760)) ([f0d605c](https://www.github.com/googleapis/google-cloud-go/commit/f0d605ccf32391a9da056a2c551158bd076c128d))
```

----------------------------------------

TITLE: Raw Table Iptables Commands
DESCRIPTION: The iptables commands that generate the raw table rules for Docker networking, specifically showing the security rule that prevents direct access to the container port.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap.md#2025-04-10_snippet_6

LANGUAGE: bash
CODE:
```
-P PREROUTING ACCEPT
-P OUTPUT ACCEPT
-A PREROUTING -d 192.0.2.2/32 ! -i bridge1 -p tcp -m tcp --dport 80 -j DROP
```

----------------------------------------

TITLE: Removing All Containers in Docker CLI (Legacy Method)
DESCRIPTION: Legacy command to remove all Docker containers on a host system. It uses docker ps to list all container IDs and pipes them to docker rm to remove them all at once.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/set-up-dev-env.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
$ docker rm $(docker ps -a -q)
```

----------------------------------------

TITLE: Using Scratch Object for Huff0 Operations in Go
DESCRIPTION: This snippet demonstrates the usage of a Scratch object to reduce allocations in successive Huff0 operations. It also shows how to set a ReusePolicy for table reuse between blocks.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/klauspost/compress/huff0/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
type Scratch struct {
    Out []byte
    // ... other fields
}

type ReusePolicy int

// Set ReusePolicy on Scratch object
scratch.ReusePolicy = SomeReusePolicy

// Access separate table and data
OutData := scratch.OutData
OutTable := scratch.OutTable
```

----------------------------------------

TITLE: Verbose Logging with glog in Go
DESCRIPTION: Shows how to use V-style logging in glog for more granular control over log verbosity levels.
SOURCE: https://github.com/moby/moby/blob/master/vendor/k8s.io/klog/v2/README.md#2025-04-10_snippet_4

LANGUAGE: go
CODE:
```
if glog.V(2) {
    glog.Info("Starting transaction...")
}

glog.V(2).Infoln("Processed", nItems, "elements")
```

----------------------------------------

TITLE: Struct Field Order in TOML Marshaling - Go
DESCRIPTION: Shows how v1 and v2 differ in handling struct field order during marshaling. V1 emits fields alphabetically by default, while v2 preserves the order as defined in the struct.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/pelletier/go-toml/v2/README.md#2025-04-10_snippet_4

LANGUAGE: go
CODE:
```
type S struct {
	B string
	A string
}

data := S{
	B: "B",
	A: "A",
}

b, _ := tomlv1.Marshal(data)
fmt.Println("v1:\n" + string(b))

b, _ = tomlv2.Marshal(data)
fmt.Println("v2:\n" + string(b))
```

----------------------------------------

TITLE: Configuring and Using Codec Encoders/Decoders in Go
DESCRIPTION: Example of creating and configuring Codec handles, and using encoders and decoders for both Binc and Msgpack formats. Includes setup for custom types and RPC usage.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/hashicorp/go-msgpack/codec/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
// create and configure Handle
var (
  bh codec.BincHandle
  mh codec.MsgpackHandle
)

mh.MapType = reflect.TypeOf(map[string]interface{}(nil))

// configure extensions
// e.g. for msgpack, define functions and enable Time support for tag 1
// mh.AddExt(reflect.TypeOf(time.Time{}), 1, myMsgpackTimeEncodeExtFn, myMsgpackTimeDecodeExtFn)

// create and use decoder/encoder
var (
  r io.Reader
  w io.Writer
  b []byte
  h = &bh // or mh to use msgpack
)

dec = codec.NewDecoder(r, h)
dec = codec.NewDecoderBytes(b, h)
err = dec.Decode(&v) 

enc = codec.NewEncoder(w, h)
enc = codec.NewEncoderBytes(&b, h)
err = enc.Encode(v)

//RPC Server
go func() {
    for {
        conn, err := listener.Accept()
        rpcCodec := codec.GoRpc.ServerCodec(conn, h)
        //OR rpcCodec := codec.MsgpackSpecRpc.ServerCodec(conn, h)
        rpc.ServeCodec(rpcCodec)
    }
}()

//RPC Communication (client side)
conn, err = net.Dial("tcp", "localhost:5555")
rpcCodec := codec.GoRpc.ClientCodec(conn, h)
//OR rpcCodec := codec.MsgpackSpecRpc.ClientCodec(conn, h)
client := rpc.NewClientWithCodec(rpcCodec)
```

----------------------------------------

TITLE: Referencing Docker Build Tool in Markdown
DESCRIPTION: Mentions the primary build tool for Docker, hack/make.sh, which is used for compiling the official binary, running the test suite, and pushing releases.
SOURCE: https://github.com/moby/moby/blob/master/project/README.md#2025-04-10_snippet_0

LANGUAGE: Markdown
CODE:
```
[hack/make.sh](../hack/make.sh) is the primary build tool for docker. It is used for compiling the official binary,
running the test suite, and pushing releases.
```

----------------------------------------

TITLE: Table Indentation in TOML Marshaling - Go
DESCRIPTION: Illustrates the differences in table indentation between v1 and v2, showing how to achieve v1-like indentation in v2 using the Encoder.SetIndentTables method.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/pelletier/go-toml/v2/README.md#2025-04-10_snippet_5

LANGUAGE: go
CODE:
```
data := map[string]interface{}{
	"table": map[string]string{
		"key": "value",
	},
}

b, _ := tomlv1.Marshal(data)
fmt.Println("v1:\n" + string(b))

b, _ = tomlv2.Marshal(data)
fmt.Println("v2:\n" + string(b))

buf := bytes.Buffer{}
enc := tomlv2.NewEncoder(&buf)
enc.SetIndentTables(true)
enc.Encode(data)
fmt.Println("v2 Encoder:\n" + string(buf.Bytes()))
```

----------------------------------------

TITLE: Installing go-deadlock library using Go modules
DESCRIPTION: Command to install the go-deadlock library using Go modules. This allows developers to add deadlock detection to their Go projects.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/sasha-s/go-deadlock/Readme.md#2025-04-10_snippet_0

LANGUAGE: sh
CODE:
```
go get github.com/sasha-s/go-deadlock/...
```

----------------------------------------

TITLE: Finding the Docker Daemon Process ID
DESCRIPTION: Bash command to retrieve the process ID of the dockerd process, which is needed to reload the Docker configuration.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/cmd/diagnostic/README.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
$ ps aux |grep dockerd | grep -v grep
```

----------------------------------------

TITLE: Deleting a cgroup (v2)
DESCRIPTION: Loads and then deletes a systemd-managed cgroup in the v2 hierarchy, removing all resource constraints and releasing all processes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/README.md#2025-04-10_snippet_17

LANGUAGE: go
CODE:
```
m, err := cgroup2.LoadSystemd("/", "my-cgroup-abc.slice")
if err != nil {
	return err
}
err = m.DeleteSystemd()
if err != nil {
	return err
}
```

----------------------------------------

TITLE: Creating New Docker Engine Man Page in Markdown
DESCRIPTION: Explains the naming convention for new man page Markdown files. Files should be named TITLE.SECTION.md, where TITLE is the man page title and SECTION is the section number.
SOURCE: https://github.com/moby/moby/blob/master/man/README.md#2025-04-10_snippet_2

LANGUAGE: markdown
CODE:
```
TITLE.SECTION.md
```

----------------------------------------

TITLE: Using Docker System Prune to Remove Unused Resources
DESCRIPTION: Command to clean up all unused Docker resources including stopped containers, networks, dangling images, and build cache using the system prune feature with the -a flag to remove all unused images, not just dangling ones.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/set-up-dev-env.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
$ docker system prune -a
```

----------------------------------------

TITLE: Starting Vagrant Environment for Docker Network Testing
DESCRIPTION: Commands to start and check the status of the Vagrant environment with three virtual machines: a Consul server and two Docker hosts.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/vagrant.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
$ vagrant up
$ vagrant status
```

----------------------------------------

TITLE: Docker SwarmKit Protobuf Schema Definition
DESCRIPTION: Comprehensive protocol buffer schema defining core Docker SwarmKit message types and services. Includes definitions for security credentials, privilege management, volume access modes, job status tracking and volume publish states.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_57

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "RootRotation"
  field {
    name: "ca_cert"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_BYTES
    options {
      65004: "CACert"
    }
    json_name: "caCert"
  }
  field {
    name: "ca_key"
    number: 2
    label: LABEL_OPTIONAL 
    type: TYPE_BYTES
    options {
      65004: "CAKey"
    }
    json_name: "caKey"
  }
  field {
    name: "cross_signed_ca_cert"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_BYTES
    options {
      65004: "CrossSignedCACert"
    }
    json_name: "crossSignedCaCert"
  }
}

message_type {
  name: "Privileges"
  // Additional fields and nested types omitted for brevity
}

message_type {
  name: "JobStatus"
  // Additional fields omitted for brevity 
}

message_type {
  name: "VolumeAccessMode"
  // Additional fields and nested types omitted for brevity
}
```

----------------------------------------

TITLE: Adding User-Agent header to OTLP exporter in Go
DESCRIPTION: Adds a default User-Agent header to OTLP exporter requests for both gRPC and HTTP exporters.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_25

LANGUAGE: Go
CODE:
```
Add default User-Agent header to OTLP exporter requests (`go.opentelemetry.io/otel/exporters/otlptrace/otlptracegrpc` and `go.opentelemetry.io/otel/exporters/otlptrace/otlptracehttp`).
```

----------------------------------------

TITLE: Checking for Running Containers in Docker CLI
DESCRIPTION: Command to list all Docker containers on a host system, including both running and stopped containers. Used to verify if there are any unnecessary containers that need to be removed.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/set-up-dev-env.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
$ docker ps -a
```

----------------------------------------

TITLE: Adding Summary Metrics Support in OTLP Exporters
DESCRIPTION: Adds support for Summary metrics in OTLP metric exporters for both HTTP and gRPC.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_8

LANGUAGE: Go
CODE:
```
Support for Summary metrics in go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp and go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc exporters
```

----------------------------------------

TITLE: Roaring Bitmap Conversion Example in Go
DESCRIPTION: Shows conversion between BitSet and Roaring bitmap formats for compressed storage.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/bits-and-blooms/bitset/README.md#2025-04-10_snippet_5

LANGUAGE: go
CODE:
```
			mybitset := roaringbitmap.ToBitSet()
			newroaringbitmap := roaring.FromBitSet(mybitset)
```

----------------------------------------

TITLE: Block I/O Statistics Message Definition in Protobuf
DESCRIPTION: Defines the structure for block I/O statistics including service bytes, queue stats, service time, wait time, and sector information.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/cgroup1/stats/metrics.pb.txt#2025-04-10_snippet_2

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "BlkIOStat"
  field {
    name: "io_service_bytes_recursive"
    number: 1
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".io.containerd.cgroups.v1.BlkIOEntry"
    json_name: "ioServiceBytesRecursive"
  }
  [...additional fields omitted for brevity...]
}
```

----------------------------------------

TITLE: Demonstrating recursive read locking deadlock in Go
DESCRIPTION: A complete Go program demonstrating how recursive read locking can lead to a deadlock. This example shows a scenario where grabbing an RLock twice from the same goroutine causes issues.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/sasha-s/go-deadlock/Readme.md#2025-04-10_snippet_5

LANGUAGE: go
CODE:
```
package main

import (
	"fmt"
	"sync"
)

func main() {
	var mu sync.RWMutex

	chrlockTwice := make(chan struct{}) // Used to control rlockTwice
	rlockTwice := func() {
		mu.RLock()
		fmt.Println("first Rlock succeeded")
		<-chrlockTwice
		<-chrlockTwice
		fmt.Println("trying to Rlock again")
		mu.RLock()
		fmt.Println("second Rlock succeeded")
		mu.RUnlock()
		mu.RUnlock()
	}

	chLock := make(chan struct{}) // Used to contol lock
	lock := func() {
		<-chLock
		fmt.Println("about to Lock")
		mu.Lock()
		fmt.Println("Lock succeeded")
		mu.Unlock()
		<-chLock
	}

	control := func() {
		chrlockTwice <- struct{}{}
		chLock <- struct{}{}

		close(chrlockTwice)
		close(chLock)
	}

	go control()
	go lock()
	rlockTwice()
}
```

----------------------------------------

TITLE: Defining MessageType Enum in Protobuf for Raft
DESCRIPTION: Protocol Buffer definition for the MessageType enum used in Raft consensus algorithm. This enumeration defines all message types used in Raft communication, including heartbeats, votes, leader election, and log replication messages.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_114

LANGUAGE: protobuf
CODE:
```
enum_type {
  name: "MessageType"
  value {
    name: "MsgHup"
    number: 0
  }
  value {
    name: "MsgBeat"
    number: 1
  }
  value {
    name: "MsgProp"
    number: 2
  }
  value {
    name: "MsgApp"
    number: 3
  }
  value {
    name: "MsgAppResp"
    number: 4
  }
  value {
    name: "MsgVote"
    number: 5
  }
  value {
    name: "MsgVoteResp"
    number: 6
  }
  value {
    name: "MsgSnap"
    number: 7
  }
  value {
    name: "MsgHeartbeat"
    number: 8
  }
  value {
    name: "MsgHeartbeatResp"
    number: 9
  }
  value {
    name: "MsgUnreachable"
    number: 10
  }
  value {
    name: "MsgSnapStatus"
    number: 11
  }
  value {
    name: "MsgCheckQuorum"
    number: 12
  }
  value {
    name: "MsgTransferLeader"
    number: 13
  }
  value {
    name: "MsgTimeoutNow"
    number: 14
  }
  value {
    name: "MsgReadIndex"
    number: 15
  }
  value {
    name: "MsgReadIndexResp"
    number: 16
  }
  value {
    name: "MsgPreVote"
    number: 17
  }
  value {
    name: "MsgPreVoteResp"
    number: 18
  }
}
```

----------------------------------------

TITLE: Connecting to TLS-encrypted Syslog with Custom TLS Configuration
DESCRIPTION: Demonstrates how to establish a secure TLS-encrypted connection to a remote syslog server with a custom TLS configuration. This allows for more control over the TLS settings used for the syslog connection.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/RackSec/srslog/README.md#2025-04-10_snippet_5

LANGUAGE: go
CODE:
```
pool := x509.NewCertPool()
serverCert, err := ioutil.ReadFile("/path/to/servercert.pem")
if err != nil {
    return nil, err
}
pool.AppendCertsFromPEM(serverCert)
config := tls.Config{
    RootCAs: pool,
}

w, err := DialWithTLSConfig(network, raddr, priority, tag, &config)
```

----------------------------------------

TITLE: Using go-generate with Plugin RPC Generator
DESCRIPTION: Example of a go-generate directive that can be placed at the top of an interface definition file to automatically generate proxy code when go generate is run.
SOURCE: https://github.com/moby/moby/blob/master/pkg/plugins/pluginrpc-gen/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
//go:generate pluginrpc-gen -i $GOFILE -o proxy.go -type volumeDriver -name VolumeDriver
```

----------------------------------------

TITLE: Creating Docker Network with Disabled Inter-Container Communication and Running Container
DESCRIPTION: Creates a custom bridge network with inter-container communication disabled, then runs a container on this network with port publishing. The commands set up a network with a specific subnet and gateway while preventing containers on the same network from communicating directly.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/templates/usernet-portmap-noicc.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
docker network create \
  -o com.docker.network.bridge.name=bridge1 \
  -o com.docker.network.bridge.enable_icc=false \
  --subnet 192.0.2.0/24 --gateway 192.0.2.1 bridge1
docker run --network bridge1 -p 8080:80 --name c1 busybox
```

----------------------------------------

TITLE: Updating Correlation Context Header in Go SDK
DESCRIPTION: Changes the correlation context header name from 'Correlation-Context' to 'otcorrelations' to align with the OpenTelemetry specification.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_42

LANGUAGE: Go
CODE:
```
// Old header name
"Correlation-Context"

// New header name
"otcorrelations"
```

----------------------------------------

TITLE: Error Handler Function Type
DESCRIPTION: Example showing the ErrorHandlerFunc type for using functions as error handlers.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_32

LANGUAGE: go
CODE:
```
"go.opentelemetry.io/otel".ErrorHandlerFunc
```

----------------------------------------

TITLE: Loading an Existing cgroup (v2)
DESCRIPTION: Loads an existing systemd-managed cgroup in the v2 hierarchy for management operations.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/README.md#2025-04-10_snippet_16

LANGUAGE: go
CODE:
```
m, err := cgroup2.LoadSystemd("/", "my-cgroup-abc.slice")
if err != nil {
	return err
}
```

----------------------------------------

TITLE: Linking to Typed Dockerfile Parsing PR in Markdown
DESCRIPTION: This snippet provides a Markdown link to the Pull Request for typed Dockerfile parsing, which enables preprocessing and reuse of Dockerfile structures.
SOURCE: https://github.com/moby/moby/blob/master/reports/builder/2017-06-12.md#2025-04-10_snippet_1

LANGUAGE: Markdown
CODE:
```
[PR](https://github.com/moby/moby/pull/33492)
```

----------------------------------------

TITLE: Running Container and Checking /etc/hosts
DESCRIPTION: Start a Ubuntu container and examine its /etc/hosts file to see network configuration.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/vagrant.md#2025-04-10_snippet_3

LANGUAGE: bash
CODE:
```
$ docker run -it --rm ubuntu:14.04 bash
root@df479e660658:/# cat /etc/hosts
```

----------------------------------------

TITLE: Defining SelectBy Message in Docker SwarmKit Protobuf
DESCRIPTION: Defines a SelectBy message type that provides various filtering options for selecting objects in Docker SwarmKit. It includes fields for filtering by ID, name, custom properties, service/node associations, and various states.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_133

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "SelectBy"
  field {
    name: "id"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    options {
      65004: "ID"
    }
    oneof_index: 0
    json_name: "id"
  }
  field {
    name: "id_prefix"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    options {
      65004: "IDPrefix"
    }
    oneof_index: 0
    json_name: "idPrefix"
  }
  field {
    name: "name"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    oneof_index: 0
    json_name: "name"
  }
  field {
    name: "name_prefix"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    oneof_index: 0
    json_name: "namePrefix"
  }
  field {
    name: "custom"
    number: 5
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.SelectByCustom"
    oneof_index: 0
    json_name: "custom"
  }
  field {
    name: "custom_prefix"
    number: 6
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.SelectByCustom"
    oneof_index: 0
    json_name: "customPrefix"
  }
  field {
    name: "service_id"
    number: 7
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    options {
      65004: "ServiceID"
    }
    oneof_index: 0
    json_name: "serviceId"
  }
  field {
    name: "node_id"
    number: 8
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    options {
      65004: "NodeID"
    }
    oneof_index: 0
    json_name: "nodeId"
  }
  field {
    name: "slot"
    number: 9
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.SelectBySlot"
    oneof_index: 0
    json_name: "slot"
  }
  field {
    name: "desired_state"
    number: 10
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.TaskState"
    oneof_index: 0
    json_name: "desiredState"
  }
  field {
    name: "role"
    number: 11
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.NodeRole"
    oneof_index: 0
    json_name: "role"
  }
  field {
    name: "membership"
    number: 12
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.NodeSpec.Membership"
    oneof_index: 0
    json_name: "membership"
  }
  field {
    name: "referenced_network_id"
    number: 13
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    options {
      65004: "ReferencedNetworkID"
    }
    oneof_index: 0
    json_name: "referencedNetworkId"
  }
  field {
    name: "referenced_secret_id"
    number: 14
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    options {
      65004: "ReferencedSecretID"
    }
    oneof_index: 0
    json_name: "referencedSecretId"
  }
  field {
    name: "referenced_config_id"
    number: 16
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    options {
      65004: "ReferencedConfigID"
    }
    oneof_index: 0
    json_name: "referencedConfigId"
  }
  field {
    name: "kind"
    number: 15
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    oneof_index: 0
    json_name: "kind"
  }
  oneof_decl {
    name: "By"
  }
}
```

----------------------------------------

TITLE: Defining InternalRaftRequest Message in SwarmKit Protobuf
DESCRIPTION: Protocol Buffer definition for the InternalRaftRequest message in Docker SwarmKit. This message represents an internal request to be processed through the Raft consensus algorithm, containing an ID and multiple store actions.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_122

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "InternalRaftRequest"
  field {
    name: "id"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    json_name: "id"
  }
  field {
    name: "action"
    number: 2
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.StoreAction"
    options {
      65001: 0
    }
    json_name: "action"
  }
}
```

----------------------------------------

TITLE: Benchmarking xxhash in Go
DESCRIPTION: Bash commands for benchmarking the performance of both pure Go and assembly implementations of the xxhash package using the Go test framework with benchstat.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/klauspost/compress/zstd/internal/xxhash/README.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
benchstat <(go test -tags purego -benchtime 500ms -count 15 -bench 'Sum64$')
benchstat <(go test -benchtime 500ms -count 15 -bench 'Sum64$')
```

----------------------------------------

TITLE: Defining IssuanceStatus Message in Protocol Buffers
DESCRIPTION: Defines a message type 'IssuanceStatus' with fields for state and error. It includes a nested enum 'State' for representing different states of certificate issuance in Docker SwarmKit.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_48

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "IssuanceStatus"
  field {
    name: "state"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.IssuanceStatus.State"
    json_name: "state"
  }
  field {
    name: "err"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "err"
  }
  enum_type {
    name: "State"
    value {
      name: "UNKNOWN"
      number: 0
      options {
        66001: "IssuanceStateUnknown"
      }
    }
    value {
      name: "RENEW"
      number: 1
      options {
        66001: "IssuanceStateRenew"
      }
    }
    value {
      name: "PENDING"
      number: 2
      options {
        66001: "IssuanceStatePending"
      }
    }
    value {
      name: "ISSUED"
      number: 3
      options {
        66001: "IssuanceStateIssued"
      }
    }
    value {
      name: "FAILED"
      number: 4
      options {
        66001: "IssuanceStateFailed"
      }
    }
    value {
      name: "ROTATE"
      number: 5
      options {
        66001: "IssuanceStateRotate"
      }
    }
    options {
      62001: 0
    }
  }
}
```

----------------------------------------

TITLE: Linking to Bridge Driver Configuration in Go
DESCRIPTION: This code snippet is a permalink to the bridge driver's configuration function in Go, which is responsible for deleting and recreating custom iptables chains during initialization.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/index.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
[100]: https://github.com/moby/moby/blob/fe09cab7fe04c3911417061f7c7ef60a8acc6bf3/libnetwork/drivers/bridge/bridge_linux.go#L508
```

----------------------------------------

TITLE: Demonstrating Module Path Versioning in Go
DESCRIPTION: This snippet illustrates how to include the major version number in module paths and import statements for Go modules with version v2 or higher. It shows examples for module declarations, import statements, and go get commands.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/VERSIONING.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
module go.opentelemetry.io/otel/v2
require go.opentelemetry.io/otel/v2 v2.0.1
import "go.opentelemetry.io/otel/v2/trace"
go get go.opentelemetry.io/otel/v2@v2.0.1
```

----------------------------------------

TITLE: Gateway Allocation Check Request in Remote Driver Protocol
DESCRIPTION: If GwAllocChecker is true, LibNetwork sends a request to check if gateway allocation should be skipped for IPv4 or IPv6.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/remote.md#2025-04-10_snippet_2

LANGUAGE: JSON
CODE:
```
{
		"Options": {
			...
		}
    }
```

----------------------------------------

TITLE: Using deadlock.Mutex in Go code
DESCRIPTION: Example of how to use the deadlock.Mutex as a drop-in replacement for sync.Mutex. This demonstrates basic locking and unlocking operations with deadlock detection.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/sasha-s/go-deadlock/Readme.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
import "github.com/sasha-s/go-deadlock"
var mu deadlock.Mutex
// Use normally, it works exactly like sync.Mutex does.
mu.Lock()

defer mu.Unlock()
```

----------------------------------------

TITLE: Writing Log Messages to Syslog
DESCRIPTION: Shows how to write log messages of different severity levels to a syslog writer. The example demonstrates error handling for connection failures and various logging methods for different priority levels.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/RackSec/srslog/README.md#2025-04-10_snippet_6

LANGUAGE: go
CODE:
```
if err != nil {
    log.Fatal("failed to connect to syslog:", err)
}
defer w.Close()

w.Alert("this is an alert")
w.Crit("this is critical")
w.Err("this is an error")
w.Warning("this is a warning")
w.Notice("this is a notice")
w.Info("this is info")
w.Debug("this is debug")
w.Write([]byte("these are some bytes"))
```

----------------------------------------

TITLE: Running Moby Unit Tests on Windows
DESCRIPTION: These Docker commands run Moby unit tests in a container on Windows, with options for Hyper-V containers.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/software-req-win.md#2025-04-10_snippet_8

LANGUAGE: powershell
CODE:
```
docker run --rm nativebuildimage hack\make.ps1 -TestUnit
docker run --rm -m 2GB nativebuildimage hack\make.ps1 -TestUnit  # (if using Hyper-V containers)
```

----------------------------------------

TITLE: Updating cgroup Resource Constraints (v1)
DESCRIPTION: Updates the resource constraints applied to a cgroup, in this example changing the CPU shares allocation from 100 to 200.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/README.md#2025-04-10_snippet_4

LANGUAGE: go
CODE:
```
shares = uint64(200)
if err := control.Update(&specs.LinuxResources{
    CPU: &specs.LinuxCPU{
        Shares: &shares,
    },
}); err != nil {
}
```

----------------------------------------

TITLE: Tallying Results Subject Template in Markdown
DESCRIPTION: This snippet shows the recommended subject template for tallying voting results on a motion. It includes the project name, status, motion description, and vote counts.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/opencontainers/cgroups/GOVERNANCE.md#2025-04-10_snippet_2

LANGUAGE: markdown
CODE:
```
> [{project} {status}]: {motion description} (+{LGTMs} -{REJECTs} #{ABSTAINs})
```

----------------------------------------

TITLE: Managing Vendor Dependencies in Bash
DESCRIPTION: The vendor.sh script is a wrapper around 'go mod vendor' for managing vendor dependencies in the Docker repository.
SOURCE: https://github.com/moby/moby/blob/master/hack/README.md#2025-04-10_snippet_4

LANGUAGE: Bash
CODE:
```
## Vendor (vendor.sh)

A shell script that is a wrapper around `go mod vendor`.
```

----------------------------------------

TITLE: Proposing Changes to Raft State Machine in Go
DESCRIPTION: Shows how to propose changes to the Raft state machine by serializing data and calling the Propose method.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/etcd/raft/v3/README.md#2025-04-10_snippet_6

LANGUAGE: go
CODE:
```
	n.Propose(ctx, data)
```

----------------------------------------

TITLE: Checking test coverage in go-toml
DESCRIPTION: Commands to generate and view test coverage reports for the go-toml project using Go's built-in coverage tools.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/pelletier/go-toml/v2/CONTRIBUTING.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
go test -covermode=atomic -coverprofile=coverage.out
go tool cover -func=coverage.out
```

----------------------------------------

TITLE: Linking to Long Running Session PR in Markdown
DESCRIPTION: This snippet provides a Markdown link to the Pull Request for long running sessions and incremental file sending in Docker builds.
SOURCE: https://github.com/moby/moby/blob/master/reports/builder/2017-06-12.md#2025-04-10_snippet_2

LANGUAGE: Markdown
CODE:
```
[PR ](https://github.com/moby/moby/pull/32677)
```

----------------------------------------

TITLE: Importing Images with Platform Specification in Docker API
DESCRIPTION: The POST /images/create endpoint now supports specifying both operating system and architecture through the 'platform' query parameter when using the 'fromSrc' option to import an image from an archive.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/version-history.md#2025-04-10_snippet_6

LANGUAGE: markdown
CODE:
```
* The `POST /images/create` now supports both the operating system and architecture
  that is passed through the `platform` query parameter when using the `fromSrc`
  option to import an image from an archive. Previously, only the operating system
  was used and the architecture was ignored. If no `platform` option is set, the
  host's operating system and architecture as used as default. This change is not
  versioned, and affects all API versions if the daemon has this patch.
```

----------------------------------------

TITLE: Defining ResourceAllocator Service in Docker SwarmKit
DESCRIPTION: Protocol buffer definition for the ResourceAllocator service that manages network resources in Docker SwarmKit. It provides methods for attaching and detaching networks, available to both worker and manager nodes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_128

LANGUAGE: protobuf
CODE:
```
service {
  name: "ResourceAllocator"
  method {
    name: "AttachNetwork"
    input_type: ".docker.swarmkit.v1.AttachNetworkRequest"
    output_type: ".docker.swarmkit.v1.AttachNetworkResponse"
    options {
      73626345 {
        1: "swarm-worker"
        1: "swarm-manager"
      }
    }
  }
  method {
    name: "DetachNetwork"
    input_type: ".docker.swarmkit.v1.DetachNetworkRequest"
    output_type: ".docker.swarmkit.v1.DetachNetworkResponse"
    options {
      73626345 {
        1: "swarm-worker"
        1: "swarm-manager"
      }
    }
  }
}
```

----------------------------------------

TITLE: Importing bbolt in Go
DESCRIPTION: Go code snippet showing how to import and use bbolt as an embedded key-value store.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
import bolt "go.etcd.io/bbolt"

db, err := bolt.Open(path, 0666, nil)
if err != nil {
  return err
}
defer db.Close()
```

----------------------------------------

TITLE: Updating Context Span Storage in Go OpenTelemetry
DESCRIPTION: Changes how spans are stored in context to unify local and remote span handling.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_35

LANGUAGE: Go
CODE:
```
The storage of a local or remote Span in a `context.Context` using its SpanContext is unified to store just the current Span.
The Span's SpanContext can now self-identify as being remote or not.
This means that `"go.opentelemetry.io/otel/trace".ContextWithRemoteSpanContext` will now overwrite any existing current Span, not just existing remote Spans, and make it the current Span in a `context.Context`.
```

----------------------------------------

TITLE: Listing Go Modules in Project
DESCRIPTION: This bash command finds all go.mod files in the project directory and extracts the module names, showing the structure of the Go modules in the project.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/RELEASING.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
$ cat `find . -name go.mod` | grep module
```

----------------------------------------

TITLE: Defining Docker Swarmkit API Types in Protocol Buffers
DESCRIPTION: Protocol Buffer definitions for core Swarmkit API types including Version, IndexEntry, Annotations, Resources, and Engine descriptions. Includes field definitions with types, labels and custom options.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_22

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "Version"
  field {
    name: "index"
    number: 1
    label: LABEL_OPTIONAL 
    type: TYPE_UINT64
    json_name: "index"
  }
}

message_type {
  name: "IndexEntry"
  field {
    name: "key"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "key"
  }
  field {
    name: "val"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "val"
  }
}
```

----------------------------------------

TITLE: Defining Protocol Buffer EnumOptions
DESCRIPTION: Defines options for protocol buffer enumeration types, including support for aliases and deprecation flags.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_12

LANGUAGE: protobuf
CODE:
```
message_type {
    name: "EnumOptions"
    field {
      name: "allow_alias"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "allowAlias"
    }
    field {
      name: "deprecated"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    extension_range {
      start: 1000
      end: 536870912
    }
    reserved_range {
      start: 5
      end: 6
    }
  }
```

----------------------------------------

TITLE: Listing Cluster Peers
DESCRIPTION: Bash command to retrieve a list of all peers in the network database cluster.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/cmd/diagnostic/README.md#2025-04-10_snippet_8

LANGUAGE: bash
CODE:
```
$ curl localhost:2000/clusterpeers
```

----------------------------------------

TITLE: Setting DOCKER_BUILDTAGS to Disable Specific Graphdrivers in Docker Build Process
DESCRIPTION: These snippets demonstrate how to configure build tags when compiling Docker to exclude specific graph drivers. Build tags can be set individually or combined with space separation.
SOURCE: https://github.com/moby/moby/blob/master/project/PACKAGERS.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
export DOCKER_BUILDTAGS='exclude_graphdriver_btrfs'
```

LANGUAGE: bash
CODE:
```
export DOCKER_BUILDTAGS='exclude_graphdriver_zfs'
```

LANGUAGE: bash
CODE:
```
export DOCKER_BUILDTAGS='exclude_graphdriver_btrfs exclude_graphdriver_zfs'
```

----------------------------------------

TITLE: Installing Docker Daemon Binary
DESCRIPTION: Install the compiled Docker daemon binary to the container's /usr/local/bin/ directory.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/set-up-dev-env.md#2025-04-10_snippet_9

LANGUAGE: bash
CODE:
```
# make install
```

----------------------------------------

TITLE: Listing Docker Builder Feature Proposals in Markdown
DESCRIPTION: This code snippet demonstrates how to list Docker Builder feature proposals using Markdown syntax. It includes links to GitHub issues with brief descriptions of proposed features.
SOURCE: https://github.com/moby/moby/blob/master/reports/builder/2017-05-08.md#2025-04-10_snippet_1

LANGUAGE: Markdown
CODE:
```
[Add IMPORT/EXPORT commands to Dockerfile](https://github.com/moby/moby/issues/32100)

[Add `DOCKEROS/DOCKERARCH` default ARG to Dockerfile](https://github.com/moby/moby/issues/32487)

[Add support for `RUN --mount`](https://github.com/moby/moby/issues/32507)

[DAG image builder](https://github.com/moby/moby/issues/32550)

[Option to export the hash of the build context](https://github.com/moby/moby/issues/32963) (new)

[Allow --cache-from=*](https://github.com/moby/moby/issues/33002#issuecomment-299041162) (new)
```

----------------------------------------

TITLE: Creating a New cgroup with Static Path (v1)
DESCRIPTION: Creates a new cgroup using a static path for all subsystems under '/test' with CPU shares as a resource constraint using the v1 implementation.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
shares := uint64(100)
control, err := cgroup1.New(cgroup1.StaticPath("/test"), &specs.LinuxResources{
    CPU: &specs.LinuxCPU{
        Shares: &shares,
    },
})
defer control.Delete()
```

----------------------------------------

TITLE: Git Commit Sign-off Format
DESCRIPTION: Example of the required sign-off line format that must be added to git commit messages. Must include real name and email.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/go-metrics/CONTRIBUTING.md#2025-04-10_snippet_1

LANGUAGE: git
CODE:
```
Signed-off-by: Joe Smith <joe.smith@email.com>
```

----------------------------------------

TITLE: Implementing a Basic Config Struct in Go
DESCRIPTION: Defines a pattern for creating config structs to hold configuration options. The config type should generally be unexported unless users need to extend it.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-10_snippet_5

LANGUAGE: go
CODE:
```
// config contains configuration options for a thing.
type config struct {
	// options ...
}
```

----------------------------------------

TITLE: Handling Raft RPC Messages in Go
DESCRIPTION: Shows how to handle incoming Raft RPC messages by passing them to the Node.Step method.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/etcd/raft/v3/README.md#2025-04-10_snippet_4

LANGUAGE: go
CODE:
```
	func recvRaftRPC(ctx context.Context, m raftpb.Message) {
		n.Step(ctx, m)
	}
```

----------------------------------------

TITLE: Content Negotiation Function Declaration
DESCRIPTION: Function signature for negotiating the most appropriate content type based on Accept header and available alternatives.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/munnerz/goautoneg/README.txt#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
func Negotiate(header string, alternatives []string) (content_type string)
```

----------------------------------------

TITLE: Example Go Spanner Emulator Configuration
DESCRIPTION: Example showing how to configure Spanner emulator host environment variable.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_15

LANGUAGE: go
CODE:
```
SPANNER_EMULATOR_HOST
```

----------------------------------------

TITLE: Applying Apache License 2.0 Boilerplate Notice
DESCRIPTION: This snippet demonstrates the boilerplate notice to be included when applying the Apache License 2.0 to a project. It includes placeholders for the year and copyright owner's name, as well as the standard license text and link to the full license.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/google/s2a-go/LICENSE.md#2025-04-10_snippet_0

LANGUAGE: Text
CODE:
```
   Copyright [yyyy] [name of copyright owner]

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
```

----------------------------------------

TITLE: Running Full Test Suite in Moby Project
DESCRIPTION: This command runs the entire Moby Engine test suite, including unit tests, integration tests, and Docker API client tests. It's executed from the root of the Docker repository.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/test.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
$ make test
```

----------------------------------------

TITLE: Checking Docker Version on Linux
DESCRIPTION: Command to verify Docker installation and check its version on Linux systems.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/software-required.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
docker --version
Docker version 17.10.0-ce, build f4ffd25
```

----------------------------------------

TITLE: Version Tag Management Commands
DESCRIPTION: Shell commands for managing version tags during the release process, including adding tags and pushing them to the upstream repository.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/RELEASING.md#2025-04-10_snippet_1

LANGUAGE: sh
CODE:
```
make add-tags MODSET=<module set> COMMIT=<commit hash>
git push upstream <new tag>
git push upstream <submodules-path/new tag>
...
```

----------------------------------------

TITLE: Defining UpdateVolumeStatusRequest Message in SwarmKit Protobuf
DESCRIPTION: Defines a protocol buffer message for updating volume status in SwarmKit. It includes a session ID field and a repeated field for volume status updates, with a nested type defining the structure of individual updates.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_99

LANGUAGE: protobuf
CODE:
```
name: "UpdateVolumeStatusRequest"
field {
  name: "session_id"
  number: 1
  label: LABEL_OPTIONAL
  type: TYPE_STRING
  json_name: "sessionId"
}
field {
  name: "updates"
  number: 2
  label: LABEL_REPEATED
  type: TYPE_MESSAGE
  type_name: ".docker.swarmkit.v1.UpdateVolumeStatusRequest.VolumeStatusUpdate"
  json_name: "updates"
}
nested_type {
  name: "VolumeStatusUpdate"
  field {
    name: "id"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "id"
  }
  field {
    name: "unpublished"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_BOOL
    json_name: "unpublished"
  }
}
```

----------------------------------------

TITLE: Defining RaftMember Message Type in SwarmKit Protobuf
DESCRIPTION: Protocol Buffer definition for the RaftMember message in Docker SwarmKit. This message represents a member in the Raft cluster with its Raft ID, node ID, address, and status information.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_117

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "RaftMember"
  field {
    name: "raft_id"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    json_name: "raftId"
  }
  field {
    name: "node_id"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "nodeId"
  }
  field {
    name: "addr"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "addr"
  }
  field {
    name: "status"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.RaftMemberStatus"
    options {
      65001: 0
    }
    json_name: "status"
  }
}
```

----------------------------------------

TITLE: Joining a Specific Network
DESCRIPTION: Bash command to join a specific network using its network ID. The network ID can be retrieved using 'docker network ls --no-trunc'.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/cmd/diagnostic/README.md#2025-04-10_snippet_6

LANGUAGE: bash
CODE:
```
$ curl localhost:2000/joinnetwork?nid=<network id>
```

----------------------------------------

TITLE: Measuring Unary Request Error Rate for gRPC Services with Prometheus
DESCRIPTION: This query calculates the rate of failed unary (1:1) RPCs for each gRPC service over a 1-minute window. It filters for non-OK status codes and unary request types using the 'grpc_server_handled_total' metric.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/grpc-ecosystem/go-grpc-prometheus/README.md#2025-04-10_snippet_4

LANGUAGE: jsoniq
CODE:
```
sum(rate(grpc_server_handled_total{job="foo",grpc_type="unary",grpc_code!="OK"}[1m])) by (grpc_service)
```

----------------------------------------

TITLE: Building from GitHub Pull Request Using Git URL
DESCRIPTION: Demonstrates how to build a Docker image from a specific GitHub pull request using the new git checkout URL feature. This allows specifying any remote ref when building from git sources.
SOURCE: https://github.com/moby/moby/blob/master/reports/builder/2017-05-15.md#2025-04-10_snippet_0

LANGUAGE: Bash
CODE:
```
docker build git://github.com/moby/moby#pull/32502/head
```

----------------------------------------

TITLE: Checking for cgroups v2 Support
DESCRIPTION: Detects whether the current system is running cgroups v2 (unified hierarchy) by checking the cgroups mode.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/README.md#2025-04-10_snippet_14

LANGUAGE: go
CODE:
```
var cgroupV2 bool
if cgroups.Mode() == cgroups.Unified {
	cgroupV2 = true
}
```

----------------------------------------

TITLE: Sample Gitignore File for Filename Pattern Matching
DESCRIPTION: This snippet demonstrates a simple .gitignore file that excludes all files named 'parse.go' globally. It showcases the global filename pattern matching capability that some alternative libraries may not support correctly.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/shibumi/go-pathspec/README.md#2025-04-10_snippet_0

LANGUAGE: gitignore
CODE:
```
# gitignore test file
parse.go
```

----------------------------------------

TITLE: Reloading Docker Configuration with HUP Signal
DESCRIPTION: Bash command to reload the Docker configuration by sending the HUP signal to the dockerd process without restarting Docker.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/cmd/diagnostic/README.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
kill -HUP <pid-of-dockerd>
```

----------------------------------------

TITLE: Starting Single-Node Raft Cluster in Go
DESCRIPTION: Shows how to initialize a single-node Raft cluster where the node acts as its own peer to become the cluster leader.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/etcd/raft/v3/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
  // Create storage and config as shown above.
  // Set peer list to itself, so this node can become the leader of this single-node cluster.
  peers := []raft.Peer{{ID: 0x01}}
  n := raft.StartNode(c, peers)
```

----------------------------------------

TITLE: Version History Markdown
DESCRIPTION: Markdown formatted changelog entries documenting version updates, features, bug fixes and other changes across multiple releases of the Google Cloud Go libraries.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
# Changes

## [0.112.0](https://github.com/googleapis/google-cloud-go/compare/v0.111.0...v0.112.0) (2024-01-11)

### Features

* **internal/trace:** Export internal/trace package constants and vars ([#9242](https://github.com/googleapis/google-cloud-go/issues/9242)) ([941c16f](https://github.com/googleapis/google-cloud-go/commit/941c16f3a2602e9bdc737b139060a7dd8318f9dd))

### Documentation

* **main:** Add telemetry discussion to debug.md ([#9074](https://github.com/googleapis/google-cloud-go/issues/9074)) ([90ed12e](https://github.com/googleapis/google-cloud-go/commit/90ed12e1dffe722b42f58556f0e17b808da9714d)), refs [#8655](https://github.com/googleapis/google-cloud-go/issues/8655)

## [0.111.0](https://github.com/googleapis/google-cloud-go/compare/v0.110.10...v0.111.0) (2023-11-29)
```

----------------------------------------

TITLE: Pushing a New klog Version Tag
DESCRIPTION: Command for pushing the newly created version tag to the git repository.
SOURCE: https://github.com/moby/moby/blob/master/vendor/k8s.io/klog/v2/RELEASE.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
git push $VERSION
```

----------------------------------------

TITLE: IPTables Filter Table Commands for Docker Swarm
DESCRIPTION: Complete list of IPTables commands for the filter table that are applied when running a Docker Swarm service with published ports. These rules handle traffic filtering and forwarding between Docker networks.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/swarm-portmap.md#2025-04-10_snippet_1

LANGUAGE: shell
CODE:
```
-P INPUT ACCEPT
-P FORWARD ACCEPT
-P OUTPUT ACCEPT
-N DOCKER
-N DOCKER-BRIDGE
-N DOCKER-CT
-N DOCKER-FORWARD
-N DOCKER-INGRESS
-N DOCKER-ISOLATION-STAGE-1
-N DOCKER-ISOLATION-STAGE-2
-N DOCKER-USER
-A FORWARD -j DOCKER-USER
-A FORWARD -j DOCKER-FORWARD
-A DOCKER ! -i docker0 -o docker0 -j DROP
-A DOCKER ! -i docker_gwbridge -o docker_gwbridge -j DROP
-A DOCKER-BRIDGE -o docker0 -j DOCKER
-A DOCKER-BRIDGE -o docker_gwbridge -j DOCKER
-A DOCKER-CT -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A DOCKER-CT -o docker_gwbridge -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A DOCKER-FORWARD -j DOCKER-INGRESS
-A DOCKER-FORWARD -j DOCKER-CT
-A DOCKER-FORWARD -j DOCKER-ISOLATION-STAGE-1
-A DOCKER-FORWARD -j DOCKER-BRIDGE
-A DOCKER-FORWARD -i docker0 -j ACCEPT
-A DOCKER-FORWARD -i docker_gwbridge -o docker_gwbridge -j DROP
-A DOCKER-FORWARD -i docker_gwbridge ! -o docker_gwbridge -j ACCEPT
-A DOCKER-INGRESS -p tcp -m tcp --dport 8080 -j ACCEPT
-A DOCKER-INGRESS -p tcp -m tcp --sport 8080 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A DOCKER-INGRESS -j RETURN
-A DOCKER-ISOLATION-STAGE-1 -i docker0 ! -o docker0 -j DOCKER-ISOLATION-STAGE-2
-A DOCKER-ISOLATION-STAGE-1 -i docker_gwbridge ! -o docker_gwbridge -j DOCKER-ISOLATION-STAGE-2
-A DOCKER-ISOLATION-STAGE-2 -o docker_gwbridge -j DROP
-A DOCKER-ISOLATION-STAGE-2 -o docker0 -j DROP
-A DOCKER-USER -j RETURN
```

----------------------------------------

TITLE: Running Tests in Moby Development Container
DESCRIPTION: These commands show how to run unit tests and integration tests inside a Moby development container using the hack/test/unit and hack/make.sh scripts.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/test.md#2025-04-10_snippet_4

LANGUAGE: bash
CODE:
```
# hack/test/unit
```

LANGUAGE: bash
CODE:
```
# hack/make.sh dynbinary binary test-integration test-docker-py
```

----------------------------------------

TITLE: Fixing Panic on Malformed URLs in Compute Metadata
DESCRIPTION: Bug fix for the compute/metadata package that addresses a panic occurring with malformed URLs and improves the InstanceName method to return the actual instance name.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_10

LANGUAGE: markdown
CODE:
```
- compute/metadata:
  - Fix panic on malformed URLs.
  - InstanceName returns actual instance name.
```

----------------------------------------

TITLE: Displaying PkgGoDev Badge for SDK Trace Test Package in Markdown
DESCRIPTION: This snippet shows how to embed a PkgGoDev badge in a markdown file, linking to the documentation for the go.opentelemetry.io/otel/sdk/trace/tracetest package.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/sdk/trace/tracetest/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/sdk/trace/tracetest)](https://pkg.go.dev/go.opentelemetry.io/otel/sdk/trace/tracetest)
```

----------------------------------------

TITLE: Installing Singleflight Package in Go
DESCRIPTION: Command to install the Singleflight package using Go's package management system. This command fetches the package from the specified repository and adds it to the current Go module.
SOURCE: https://github.com/moby/moby/blob/master/vendor/resenje.org/singleflight/README.md#2025-04-10_snippet_0

LANGUAGE: shell
CODE:
```
go get resenje.org/singleflight
```

----------------------------------------

TITLE: Defining AssignmentChange Message in SwarmKit Protobuf
DESCRIPTION: Defines a protocol buffer message for tracking changes to assignments in SwarmKit. It includes a reference to the assignment and an action enum field indicating whether the assignment is being updated or removed.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_102

LANGUAGE: protobuf
CODE:
```
name: "AssignmentChange"
field {
  name: "assignment"
  number: 1
  label: LABEL_OPTIONAL
  type: TYPE_MESSAGE
  type_name: ".docker.swarmkit.v1.Assignment"
  json_name: "assignment"
}
field {
  name: "action"
  number: 2
  label: LABEL_OPTIONAL
  type: TYPE_ENUM
  type_name: ".docker.swarmkit.v1.AssignmentChange.AssignmentAction"
  json_name: "action"
}
enum_type {
  name: "AssignmentAction"
  value {
    name: "UPDATE"
    number: 0
    options {
      66001: "AssignmentActionUpdate"
    }
  }
  value {
    name: "REMOVE"
    number: 1
    options {
      66001: "AssignmentActionRemove"
    }
  }
}
```

----------------------------------------

TITLE: Implementing Struct Definitions with Forward Migrations
DESCRIPTION: Defines three versions of a struct (V1, V2, V3) with the ConvertFrom interface implementations for forward migrations. This demonstrates how to handle renamed fields and type changes between struct versions.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/anchore/go-struct-converter/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
// --------- V1 struct definition below ---------

type V1 struct {
  Name     string
  OldField string
}

// --------- V2 struct definition below ---------

type V2 struct {
  Name     string
  NewField string // this was a renamed field
}

func (to *V2) ConvertFrom(from interface{}) error {
  if from, ok := from.(V1); ok { // forward migration
    to.NewField = from.OldField
  }
  return nil
}

// --------- V3 struct definition below ---------

type V3 struct {
  Name       []string
  FinalField []string // this field was renamed and the type was changed
}

func (to *V3) ConvertFrom(from interface{}) error {
  if from, ok := from.(V2); ok { // forward migration
    to.FinalField = []string{from.NewField}
  }
  return nil
}
```

----------------------------------------

TITLE: Listing Nodes Connected to a Network
DESCRIPTION: Bash command to retrieve a list of all nodes connected to a specific network using its network ID.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/cmd/diagnostic/README.md#2025-04-10_snippet_9

LANGUAGE: bash
CODE:
```
$ curl localhost:2000/networkpeers?nid=<network id>
```

----------------------------------------

TITLE: Demonstrating Git Commit Signing in Markdown
DESCRIPTION: This snippet shows how to add a sign-off line to a Git commit message, which is required for contributions to the Moby project.
SOURCE: https://github.com/moby/moby/blob/master/CONTRIBUTING.md#2025-04-10_snippet_1

LANGUAGE: markdown
CODE:
```
    Signed-off-by: Joe Smith <joe.smith@email.com>
```

----------------------------------------

TITLE: Starting Built Moby Daemon on Windows
DESCRIPTION: These PowerShell commands stop the system Docker daemon and start the newly built Moby daemon.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/software-req-win.md#2025-04-10_snippet_6

LANGUAGE: powershell
CODE:
```
Stop-Service Docker
.\dockerd.exe -D
```

----------------------------------------

TITLE: Tag Format Example in Semantic Versioning
DESCRIPTION: Demonstrates the semantic versioning format used for tagging releases in the Moby project. Shows examples of version numbers for regular releases, release candidates, and alpha releases.
SOURCE: https://github.com/moby/moby/blob/master/project/BRANCHES-AND-TAGS.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
vX.Y.Z[-suffix[N]]\n\n- All of `X`, `Y`, `Z` must be specified (example: `v1.0.0`)\n- First release candidate for version `1.8.0` should be tagged `v1.8.0-rc1`\n- Second alpha release of a product should be tagged `v1.0.0-alpha1`
```

----------------------------------------

TITLE: Migrating to Trace Client GRPC Client Interceptor in Go
DESCRIPTION: Changes the implementation of the gRPC client interceptor to use a method from the trace.Client instance instead of a global function.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_22

LANGUAGE: go
CODE:
```
conn, err := grpc.Dial(srv.Addr, grpc.WithUnaryInterceptor(trace.GRPCClientInterceptor()))
```

LANGUAGE: go
CODE:
```
conn, err := grpc.Dial(srv.Addr, grpc.WithUnaryInterceptor(tc.GRPCClientInterceptor()))
```

----------------------------------------

TITLE: Contributing Process Documentation in Markdown
DESCRIPTION: Comprehensive markdown documentation detailing the process for contributing to the Moby project. Includes information about the Contributor License Agreement (CLA), instructions for submitting patches, and guidelines for commit messages.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/google/certificate-transparency-go/CONTRIBUTING.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
# How to contribute #

We'd love to accept your patches and contributions to this project.  There are
a just a few small guidelines you need to follow.


## Contributor License Agreement ##

Contributions to any Google project must be accompanied by a Contributor
License Agreement.  This is not a copyright **assignment**, it simply gives
Google permission to use and redistribute your contributions as part of the
project.

  * If you are an individual writing original source code and you're sure you
    own the intellectual property, then you'll need to sign an [individual
    CLA][].

  * If you work for a company that wants to allow you to contribute your work,
    then you'll need to sign a [corporate CLA][].

You generally only need to submit a CLA once, so if you've already submitted
one (even if it was for a different project), you probably don't need to do it
again.

[individual CLA]: https://developers.google.com/open-source/cla/individual
[corporate CLA]: https://developers.google.com/open-source/cla/corporate

Once your CLA is submitted (or if you already submitted one for
another Google project), make a commit adding yourself to the
[AUTHORS][] and [CONTRIBUTORS][] files. This commit can be part
of your first [pull request][].

[AUTHORS]: AUTHORS
[CONTRIBUTORS]: CONTRIBUTORS


## Submitting a patch ##

  1. It's generally best to start by opening a new issue describing the bug or
     feature you're intending to fix.  Even if you think it's relatively minor,
     it's helpful to know what people are working on.  Mention in the initial
     issue that you are planning to work on that bug or feature so that it can
     be assigned to you.

  1. Follow the normal process of [forking][] the project, and setup a new
     branch to work in.  It's important that each group of changes be done in
     separate branches in order to ensure that a pull request only includes the
     commits related to that bug or feature.

  1. Do your best to have [well-formed commit messages][] for each change.
     This provides consistency throughout the project, and ensures that commit
     messages are able to be formatted properly by various git tools.

  1. Finally, push the commits to your fork and submit a [pull request][].

[forking]: https://help.github.com/articles/fork-a-repo
[well-formed commit messages]: http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html
[pull request]: https://help.github.com/articles/creating-a-pull-request
```

----------------------------------------

TITLE: Benchmarking Linux AMD64 Performance for CSV Parsing
DESCRIPTION: Benchmark results comparing go-csvvalue with stdlib CSV parser on Linux AMD64 platform, showing memory allocation and operation speed differences between cached and non-cached implementations.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/tonistiigi/go-csvvalue/readme.md#2025-04-10_snippet_0

LANGUAGE: text
CODE:
```
goos: linux
goarch: amd64
pkg: github.com/tonistiigi/go-csvvalue
cpu: AMD EPYC 7763 64-Core Processor                
BenchmarkFields/stdlib/withcache-4         	 1109917	      1103 ns/op	    4520 B/op	      14 allocs/op
BenchmarkFields/stdlib/nocache-4           	 1082838	      1125 ns/op	    4520 B/op	      14 allocs/op
BenchmarkFields/csvvalue/withcache-4       	28554976	        42.12 ns/op	       0 B/op	       0 allocs/op
BenchmarkFields/csvvalue/nocache-4         	13666134	        83.77 ns/op	      48 B/op	       1 allocs/op
```

----------------------------------------

TITLE: Markdown List of BoltDB Projects
DESCRIPTION: A markdown-formatted list showcasing various open source projects that use BoltDB as their database backend, including project names, descriptions, and GitHub repository links.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_25

LANGUAGE: markdown
CODE:
```
## Other Projects Using Bolt

Below is a list of public, open source projects that use Bolt:

* [Algernon](https://github.com/xyproto/algernon) - A HTTP/2 web server with built-in support for Lua. Uses BoltDB as the default database backend.
* [Bazil](https://bazil.org/) - A file system that lets your data reside where it is most convenient for it to reside.
* [bolter](https://github.com/hasit/bolter) - Command-line app for viewing BoltDB file in your terminal.
[...additional entries...]
```

----------------------------------------

TITLE: Updating BigQuery Table Creation
DESCRIPTION: Changes to table creation pattern, moving from direct client method to dataset-based creation.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_25

LANGUAGE: go
CODE:
```
client.CreateTable(ctx, "project", "dataset", "table")
```

LANGUAGE: go
CODE:
```
client.DatasetInProject("project", "dataset").Table("table").Create(ctx)
```

----------------------------------------

TITLE: Importing Klauspost Compress Package in Go
DESCRIPTION: This snippet shows the import of the Klauspost compress package and its subpackages, which provide various compression algorithms and utilities.
SOURCE: https://github.com/moby/moby/blob/master/vendor/modules.txt#2025-04-10_snippet_5

LANGUAGE: Go
CODE:
```
github.com/klauspost/compress
github.com/klauspost/compress/fse
github.com/klauspost/compress/huff0
github.com/klauspost/compress/internal/cpuinfo
github.com/klauspost/compress/internal/le
github.com/klauspost/compress/internal/snapref
github.com/klauspost/compress/zstd
github.com/klauspost/compress/zstd/internal/xxhash
```

----------------------------------------

TITLE: Executing Read-Only Transaction in bbolt
DESCRIPTION: Go code showing how to start and execute a read-only transaction in bbolt using DB.View().
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_7

LANGUAGE: go
CODE:
```
err := db.View(func(tx *bolt.Tx) error {
	...
	return nil
})
```

----------------------------------------

TITLE: IPTables NAT Table Configuration
DESCRIPTION: The NAT table configuration showing port forwarding rules. These rules enable external access to the container through port mapping (8080->80) while maintaining network isolation between containers.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap-noicc.md#2025-04-10_snippet_3

LANGUAGE: plaintext
CODE:
```
Chain PREROUTING (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DOCKER     0    --  *      *       0.0.0.0/0            0.0.0.0/0            ADDRTYPE match dst-type LOCAL

Chain INPUT (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         

Chain OUTPUT (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DOCKER     0    --  *      *       0.0.0.0/0           !127.0.0.0/8          ADDRTYPE match dst-type LOCAL

Chain POSTROUTING (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 MASQUERADE  0    --  *      !bridge1  192.0.2.0/24         0.0.0.0/0           
2        0     0 MASQUERADE  0    --  *      !docker0  172.17.0.0/16        0.0.0.0/0           

Chain DOCKER (2 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 RETURN     0    --  bridge1 *       0.0.0.0/0            0.0.0.0/0           
2        0     0 RETURN     0    --  docker0 *       0.0.0.0/0            0.0.0.0/0           
3        0     0 DNAT       6    --  !bridge1 *       0.0.0.0/0            0.0.0.0/0            tcp dpt:8080 to:192.0.2.2:80
```

----------------------------------------

TITLE: Conventional Commit Message Example
DESCRIPTION: Example of commit message following Conventional Commits Style with package scope
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CONTRIBUTING.md#2025-04-10_snippet_0

LANGUAGE: text
CODE:
```
feat(functions): add gophers codelab
```

----------------------------------------

TITLE: Implementing Trace with GRPC Client Interceptor in Go Cloud Clients
DESCRIPTION: Shows how to properly initialize Google Cloud clients with tracing enabled by using the trace client's GRPC interceptor as a dial option.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_23

LANGUAGE: go
CODE:
```
c, err := pubsub.NewClient(ctx, "project-id", option.WithGRPCDialOption(grpc.WithUnaryInterceptor(tc.GRPCClientInterceptor())))
if err != nil {
    ...
}
```

----------------------------------------

TITLE: MkdirAll Function Signatures
DESCRIPTION: Function signatures for MkdirAll and MkdirAllHandle that provide secure directory creation operations within a root directory.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/cyphar/filepath-securejoin/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
func MkdirAll(root, unsafePath string, mode int) error
func MkdirAllHandle(root *os.File, unsafePath string, mode int) (*os.File, error)
```

----------------------------------------

TITLE: SwarmKit Session Message Definitions
DESCRIPTION: Defines message types for session management including SessionRequest and SessionMessage structures. These messages handle node descriptions, session IDs, and network bootstrap information.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_96

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "SessionRequest"
  field {
    name: "description"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.NodeDescription"
    json_name: "description"
  }
  field {
    name: "session_id"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "sessionId"
  }
}
```

----------------------------------------

TITLE: Initializing Constants for Default Buffer Sizes in Go
DESCRIPTION: Defines constants for default read and write buffer sizes used in the fwd package.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/philhofer/fwd/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
const (
    // DefaultReaderSize is the default size of the read buffer
    DefaultReaderSize = 2048
)

const (
    // DefaultWriterSize is the
    // default write buffer size.
    DefaultWriterSize = 2048
)
```

----------------------------------------

TITLE: Endpoint Operational Info Response in Remote Driver Protocol
DESCRIPTION: The remote driver responds to the operational info request with an arbitrary map of values.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/remote.md#2025-04-10_snippet_9

LANGUAGE: JSON
CODE:
```
{
		"Value": { ... }
    }
```

----------------------------------------

TITLE: Defining Raft Message Structure in Protobuf
DESCRIPTION: Defines the structure of a Raft Message in Protocol Buffers, including fields for type, sender, receiver, term, log information, entries, and snapshot data.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_110

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "Message"
  field {
    name: "type"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".raftpb.MessageType"
    options {
      65001: 0
    }
    json_name: "type"
  }
  field {
    name: "to"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    options {
      65001: 0
    }
    json_name: "to"
  }
  field {
    name: "from"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    options {
      65001: 0
    }
    json_name: "from"
  }
  field {
    name: "term"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    options {
      65001: 0
    }
    json_name: "term"
  }
  field {
    name: "logTerm"
    number: 5
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    options {
      65001: 0
    }
    json_name: "logTerm"
  }
  field {
    name: "index"
    number: 6
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    options {
      65001: 0
    }
    json_name: "index"
  }
  field {
    name: "entries"
    number: 7
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".raftpb.Entry"
    options {
      65001: 0
    }
    json_name: "entries"
  }
  field {
    name: "commit"
    number: 8
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    options {
      65001: 0
    }
    json_name: "commit"
  }
  field {
    name: "snapshot"
    number: 9
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".raftpb.Snapshot"
    options {
      65001: 0
    }
    json_name: "snapshot"
  }
  field {
    name: "reject"
    number: 10
    label: LABEL_OPTIONAL
    type: TYPE_BOOL
    options {
      65001: 0
    }
    json_name: "reject"
  }
  field {
    name: "rejectHint"
    number: 11
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    options {
      65001: 0
    }
    json_name: "rejectHint"
  }
  field {
    name: "context"
    number: 12
    label: LABEL_OPTIONAL
    type: TYPE_BYTES
    json_name: "context"
  }
}
```

----------------------------------------

TITLE: Setting OTEL Exporter Environment Variable
DESCRIPTION: Exports the OTLP endpoint environment variable used to configure where traces should be sent.
SOURCE: https://github.com/moby/moby/blob/master/contrib/otel/README.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
export OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4318
```

----------------------------------------

TITLE: Configuring LogConfig in Docker Container Configuration
DESCRIPTION: Specifies the logging configuration for a container. This JSON structure defines both the logging driver to use and any driver-specific configuration options.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_11

LANGUAGE: json
CODE:
```
{ "Type": "<driver_name>", "Config": {"key1": "val1"}}
```

----------------------------------------

TITLE: Adding Exemplar Support to Prometheus Exporter
DESCRIPTION: Adds Exemplar support to the Prometheus exporter.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_12

LANGUAGE: Go
CODE:
```
Exemplar support to go.opentelemetry.io/otel/exporters/prometheus
```

----------------------------------------

TITLE: Creating a Bucket in BoltDB with Go
DESCRIPTION: This snippet demonstrates how to create a bucket in BoltDB using a transaction. It uses the Tx.CreateBucket() function to create a new bucket named 'MyBucket'.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_11

LANGUAGE: go
CODE:
```
db.Update(func(tx *bolt.Tx) error {
	b, err := tx.CreateBucket([]byte("MyBucket"))
	if err != nil {
		return fmt.Errorf("create bucket: %s", err)
	}
	return nil
})
```

----------------------------------------

TITLE: Importing klog in Go
DESCRIPTION: Shows how to import klog v2 instead of the original glog library.
SOURCE: https://github.com/moby/moby/blob/master/vendor/k8s.io/klog/v2/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
"k8s.io/klog/v2"
```

----------------------------------------

TITLE: Batch Read-Write Transactions in bbolt
DESCRIPTION: Go code demonstrating how to use DB.Batch() for combining multiple updates into larger transactions in bbolt.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_8

LANGUAGE: go
CODE:
```
err := db.Batch(func(tx *bolt.Tx) error {
	...
	return nil
})
```

----------------------------------------

TITLE: Creating Docker Internal Networks with Different ICC Settings
DESCRIPTION: These commands create two internal Docker networks: one with inter-container communication (ICC) enabled and another with ICC disabled. They also run containers on these networks.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-internal.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
docker network create \
  -o com.docker.network.bridge.name=bridgeICC \
  --internal \
  --subnet 192.0.2.0/24 --gateway 192.0.2.1 bridge1
docker run --network bridgeICC --name c1 busybox

docker network create \
  -o com.docker.network.bridge.name=bridgeNoICC \
  -o com.docker.network.bridge.enable_icc=true \
  --internal \
  --subnet 198.51.100.0/24 --gateway 198.51.100.1 bridge1
docker run --network bridgeNoICC --name c1 busybox
```

----------------------------------------

TITLE: Updating W3C Traceparent Header in Go SDK
DESCRIPTION: Changes the W3C traceparent header from 'Traceparent' to lowercase 'traceparent' to comply with the W3C specification.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_44

LANGUAGE: Go
CODE:
```
// Old
Traceparent

// New
traceparent
```

----------------------------------------

TITLE: Illustrating Unary State Diagram in ASCII Art
DESCRIPTION: Presents a state diagram for unary operations in the ttrpc protocol using ASCII art. It shows the flow of messages between client and server, including the state changes that occur during a typical unary request-response cycle.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/ttrpc/PROTOCOL.md#2025-04-10_snippet_4

LANGUAGE: markdown
CODE:
```
     +--------+                                    +--------+
     | Client |                                    | Server |
     +---+----+                                    +----+---+
         |               +---------+                    |
  local  >---------------+ Request +--------------------> remote
  closed |               +---------+                    | closed
         |                                              |
         |              +----------+                    |
finished <--------------+ Response +--------------------< finished
         |              +----------+                    |
         |                                              |
```

----------------------------------------

TITLE: Selective Stream Attachment in Docker API WebSocket
DESCRIPTION: The GET /containers/{name}/attach/ws endpoint now supports 'stdin', 'stdout', and 'stderr' query parameters to attach only to specified streams. Previous versions ignored these parameters and attached to all streams by default.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/version-history.md#2025-04-10_snippet_11

LANGUAGE: markdown
CODE:
```
* `GET /containers/{name}/attach/ws` endpoint now accepts `stdin`, `stdout` and
  `stderr` query parameters to only attach to configured streams.

  NOTE: These parameters were documented before in older API versions, but not
  actually supported. API versions before v1.42 continue to ignore these parameters
  and default to attaching to all streams. To preserve the pre-v1.42 behavior,
  set all three query parameters (`?stdin=1,stdout=1,stderr=1`).
```

----------------------------------------

TITLE: Defining Address Resolution in SwarmKit Protobuf
DESCRIPTION: Protocol Buffer definitions for ResolveAddressRequest and ResolveAddressResponse in Docker SwarmKit. These messages are used to resolve the network address of a node given its Raft ID.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_121

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "ResolveAddressRequest"
  field {
    name: "raft_id"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    json_name: "raftId"
  }
}
message_type {
  name: "ResolveAddressResponse"
  field {
    name: "addr"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "addr"
  }
}
```

----------------------------------------

TITLE: Changelog Markdown Documentation
DESCRIPTION: Markdown formatted changelog entries detailing version releases, features, improvements and bug fixes for the klauspost/compress project from 2023-2025. Organized by release date and version number.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/klauspost/compress/README.md#2025-04-10_snippet_1

LANGUAGE: markdown
CODE:
```
# changelog

* Feb 19th, 2025 - [1.18.0](https://github.com/klauspost/compress/releases/tag/v1.18.0)
  * Add unsafe little endian loaders https://github.com/klauspost/compress/pull/1036
  * fix: check `r.err != nil` but return a nil value error `err` by @alingse in https://github.com/klauspost/compress/pull/1028
  * flate: Simplify L4-6 loading https://github.com/klauspost/compress/pull/1043
  * flate: Simplify matchlen (remove asm) https://github.com/klauspost/compress/pull/1045
  * s2: Improve small block compression speed w/o asm https://github.com/klauspost/compress/pull/1048
  * flate: Fix matchlen L5+L6 https://github.com/klauspost/compress/pull/1049
  * flate: Cleanup & reduce casts https://github.com/klauspost/compress/pull/1050
```

----------------------------------------

TITLE: Setting Driver Capabilities in Remote Driver Protocol
DESCRIPTION: The remote driver responds to a POST request on /NetworkDriver.GetCapabilities with its scope, connectivity scope, and gateway allocation checker status.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/remote.md#2025-04-10_snippet_1

LANGUAGE: JSON
CODE:
```
{
		"Scope":             "local",
		"ConnectivityScope": "global",
		"GwAllocChecker":    false
	}
```

----------------------------------------

TITLE: Iptables Filter Table Configuration for Docker Internal Networks
DESCRIPTION: This iptables configuration shows the filter table rules for Docker's internal networks. It includes chains for DOCKER, DOCKER-BRIDGE, DOCKER-CT, DOCKER-FORWARD, DOCKER-ISOLATION-STAGE-1, DOCKER-ISOLATION-STAGE-2, and DOCKER-USER.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-internal.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
-P INPUT ACCEPT
-P FORWARD ACCEPT
-P OUTPUT ACCEPT
-N DOCKER
-N DOCKER-BRIDGE
-N DOCKER-CT
-N DOCKER-FORWARD
-N DOCKER-ISOLATION-STAGE-1
-N DOCKER-ISOLATION-STAGE-2
-N DOCKER-USER
-A FORWARD -j DOCKER-USER
-A FORWARD -j DOCKER-FORWARD
-A DOCKER ! -i docker0 -o docker0 -j DROP
-A DOCKER-BRIDGE -o docker0 -j DOCKER
-A DOCKER-CT -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A DOCKER-FORWARD -j DOCKER-CT
-A DOCKER-FORWARD -j DOCKER-ISOLATION-STAGE-1
-A DOCKER-FORWARD -j DOCKER-BRIDGE
-A DOCKER-FORWARD -i docker0 -j ACCEPT
-A DOCKER-FORWARD -i bridgeICC -o bridgeICC -j ACCEPT
-A DOCKER-FORWARD -i bridgeNoICC -o bridgeNoICC -j DROP
-A DOCKER-ISOLATION-STAGE-1 ! -s 198.51.100.0/24 -o bridgeNoICC -j DROP
-A DOCKER-ISOLATION-STAGE-1 ! -d 198.51.100.0/24 -i bridgeNoICC -j DROP
-A DOCKER-ISOLATION-STAGE-1 ! -s 192.0.2.0/24 -o bridgeICC -j DROP
-A DOCKER-ISOLATION-STAGE-1 ! -d 192.0.2.0/24 -i bridgeICC -j DROP
-A DOCKER-ISOLATION-STAGE-1 -i docker0 ! -o docker0 -j DOCKER-ISOLATION-STAGE-2
-A DOCKER-ISOLATION-STAGE-2 -o docker0 -j DROP
-A DOCKER-USER -j RETURN
```

----------------------------------------

TITLE: Defining ContainerSpec Message in Protocol Buffers for Docker Swarmkit v1
DESCRIPTION: This snippet defines the ContainerSpec message type, which includes fields for container configuration such as secrets, configs, hosts, DNS settings, healthcheck, isolation, and various system-level parameters.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_66

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "ContainerSpec"
  field {
    name: "secrets"
    number: 20
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.SecretReference"
    json_name: "secrets"
  }
  field {
    name: "configs"
    number: 21
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.ConfigReference"
    json_name: "configs"
  }
  // ... (additional fields omitted for brevity)
}
```

----------------------------------------

TITLE: Including Dockerfile Syntax File in System-Wide Nano Configuration
DESCRIPTION: Configuration line to add to /etc/nanorc for system-wide Dockerfile syntax highlighting. This enables the custom syntax file for all users on the system.
SOURCE: https://github.com/moby/moby/blob/master/contrib/syntax/nano/README.md#2025-04-10_snippet_1

LANGUAGE: plaintext
CODE:
```
## Dockerfile files
include "/usr/local/share/nano/Dockerfile.nanorc"
```

----------------------------------------

TITLE: Loading an Existing cgroup (v1)
DESCRIPTION: Loads an existing cgroup from a static path for management or monitoring purposes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
control, err = cgroup1.Load(cgroup1.Default, cgroups.StaticPath("/test"))
```

----------------------------------------

TITLE: NAT Table IPTables Commands
DESCRIPTION: The actual iptables commands used to create the NAT table configuration, including chain creation, policy setting, and rule definition.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/new-daemon.md#2025-04-10_snippet_3

LANGUAGE: bash
CODE:
```
-P PREROUTING ACCEPT
-P INPUT ACCEPT
-P OUTPUT ACCEPT
-P POSTROUTING ACCEPT
-N DOCKER
-A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER
-A OUTPUT ! -d 127.0.0.0/8 -m addrtype --dst-type LOCAL -j DOCKER
-A POSTROUTING -s 172.17.0.0/16 ! -o docker0 -j MASQUERADE
-A DOCKER -i docker0 -j RETURN
```

----------------------------------------

TITLE: Defining Protocol Buffer MethodOptions with IdempotencyLevel
DESCRIPTION: Defines options for protocol buffer service methods, including deprecation markers and idempotency level specification to indicate if a method has side effects.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_15

LANGUAGE: protobuf
CODE:
```
message_type {
    name: "MethodOptions"
    field {
      name: "deprecated"
      number: 33
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "idempotency_level"
      number: 34
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".google.protobuf.MethodOptions.IdempotencyLevel"
      default_value: "IDEMPOTENCY_UNKNOWN"
      json_name: "idempotencyLevel"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    enum_type {
      name: "IdempotencyLevel"
      value {
        name: "IDEMPOTENCY_UNKNOWN"
        number: 0
      }
      value {
        name: "NO_SIDE_EFFECTS"
        number: 1
      }
      value {
        name: "IDEMPOTENT"
        number: 2
      }
    }
    extension_range {
      start: 1000
      end: 536870912
    }
  }
```

----------------------------------------

TITLE: Customized Logrus Configuration Example
DESCRIPTION: Shows how to customize Logrus with JSON formatting, output redirection, and log levels with field-based logging.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/sirupsen/logrus/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
package main

import (
  "os"
  log "github.com/sirupsen/logrus"
)

func init() {
  // Log as JSON instead of the default ASCII formatter.
  log.SetFormatter(&log.JSONFormatter{})

  // Output to stdout instead of the default stderr
  // Can be any io.Writer, see below for File example
  log.SetOutput(os.Stdout)

  // Only log the warning severity or above.
  log.SetLevel(log.WarnLevel)
}

func main() {
  log.WithFields(log.Fields{
    "animal": "walrus",
    "size":   10,
  }).Info("A group of walrus emerges from the ocean")

  log.WithFields(log.Fields{
    "omg":    true,
    "number": 122,
  }).Warn("The group's number increased tremendously!")

  log.WithFields(log.Fields{
    "omg":    true,
    "number": 100,
  }).Fatal("The ice breaks!")

  // A common pattern is to re-use fields between logging statements by re-using
  // the logrus.Entry returned from WithFields()
  contextLogger := log.WithFields(log.Fields{
    "common": "this is a common field",
    "other": "I also should be logged always",
  })

  contextLogger.Info("I'll be logged with common and other field")
  contextLogger.Info("Me too")
}
```

----------------------------------------

TITLE: Changing Directory to Docker Fork Repository
DESCRIPTION: Change the current working directory to the local clone of the Docker Engine fork repository.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/set-up-dev-env.md#2025-04-10_snippet_5

LANGUAGE: bash
CODE:
```
$ cd ~/repos/moby-fork
```

----------------------------------------

TITLE: Docker API Endpoint Examples
DESCRIPTION: Collection of Docker API endpoint examples showing request formats and responses across different versions. Includes endpoints for container management, networking, volumes, and system information.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/version-history.md#2025-04-10_snippet_13

LANGUAGE: markdown
CODE:
```
GET /containers/json
GET /networks/(name)
POST /containers/(name)/update
POST /networks/create
GET /info
POST /containers/create
GET /containers/(id or name)/stats
POST /auth
GET /volumes
GET /containers/(id or name)/logs
POST /images/load
```

----------------------------------------

TITLE: Iptables NAT Table Configuration for Docker Internal Networks
DESCRIPTION: This iptables configuration shows the NAT table rules for Docker's internal networks. It includes chains for PREROUTING, INPUT, OUTPUT, POSTROUTING, and DOCKER.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-internal.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
-P PREROUTING ACCEPT
-P INPUT ACCEPT
-P OUTPUT ACCEPT
-P POSTROUTING ACCEPT
-N DOCKER
-A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER
-A OUTPUT ! -d 127.0.0.0/8 -m addrtype --dst-type LOCAL -j DOCKER
-A POSTROUTING -s 172.17.0.0/16 ! -o docker0 -j MASQUERADE
-A DOCKER -i docker0 -j RETURN
```

----------------------------------------

TITLE: Displaying Developer Certificate of Origin in Markdown
DESCRIPTION: This code block shows the full text of the Developer Certificate of Origin (DCO) version 1.1, which contributors must agree to when making contributions to the project.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/opencontainers/go-digest/CONTRIBUTING.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
```
Developer Certificate of Origin
Version 1.1

Copyright (C) 2004, 2006 The Linux Foundation and its contributors.
1 Letterman Drive
Suite D4700
San Francisco, CA, 94129

Everyone is permitted to copy and distribute verbatim copies of this
license document, but changing it is not allowed.


Developer's Certificate of Origin 1.1

By making a contribution to this project, I certify that:

(a) The contribution was created in whole or in part by me and I
    have the right to submit it under the open source license
    indicated in the file; or

(b) The contribution is based upon previous work that, to the best
    of my knowledge, is covered under an appropriate open source
    license and I have the right under that license to submit that
    work with modifications, whether created in whole or in part
    by me, under the same open source license (unless I am
    permitted to submit under a different license), as indicated
    in the file; or

(c) The contribution was provided directly to me by some other
    person who certified (a), (b) or (c) and I have not modified
    it.

(d) I understand and agree that this project and the contribution
    are public and that a record of the contribution (including all
    personal information I submit with it, including my sign-off) is
    maintained indefinitely and may be redistributed consistent with
    this project or the open source license(s) involved.
```
```

----------------------------------------

TITLE: TarSum Checksum Format Example
DESCRIPTION: Demonstrates the format and components of a TarSum checksum string, including version, cipher, and hash value components separated by delimiters.
SOURCE: https://github.com/moby/moby/blob/master/pkg/tarsum/tarsum_spec.md#2025-04-10_snippet_0

LANGUAGE: plaintext
CODE:
```
"tarsum.v1+sha256:220a60ecd4a3c32c282622a625a54db9ba0ff55b5ba9c29c7064a2bc358b6a3e"
|         |       \                                                               |
|         |        \                                                              |
|_version_|_cipher__|__                                                           |
|                      \                                                          |
|_calculation_mechanics_|______________________expected_sum_______________________|
```

----------------------------------------

TITLE: Defining Mount.VolumeOptions Message in Protocol Buffers
DESCRIPTION: This nested message type defines options for volume mounts in Docker containers, including NoCopy flag, volume labels, driver configuration, and subpath specification for accessing a specific directory within a volume.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_31

LANGUAGE: protobuf
CODE:
```
nested_type {
  name: "VolumeOptions"
  field {
    name: "nocopy"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_BOOL
    options {
      65004: "NoCopy"
    }
    json_name: "nocopy"
  }
  field {
    name: "labels"
    number: 2
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Mount.VolumeOptions.LabelsEntry"
    json_name: "labels"
  }
  field {
    name: "driver_config"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Driver"
    json_name: "driverConfig"
  }
  field {
    name: "subpath"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    options {
      65004: "Subpath"
    }
    json_name: "subpath"
  }
  nested_type {
    name: "LabelsEntry"
    field {
      name: "key"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "key"
    }
    field {
      name: "value"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "value"
    }
    options {
      map_entry: true
    }
  }
}
```

----------------------------------------

TITLE: Implementing File Locking with Flock in Go
DESCRIPTION: Example demonstrating how to use flock to implement file locking, including creating a new lock, attempting to acquire it non-blockingly, and releasing it after use. Shows error handling and basic lock operations.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gofrs/flock/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
import "github.com/gofrs/flock"

fileLock := flock.New("/var/lock/go-lock.lock")

locked, err := fileLock.TryLock()

if err != nil {
	// handle locking error
}

if locked {
	// do work
	fileLock.Unlock()
}
```

----------------------------------------

TITLE: Generating event_messages.bin using Windows Message Compiler in Debian container
DESCRIPTION: Commands to run a Debian container, install Windows cross-compilation tools, compile Windows message resources from event_messages.mc, and copy the resulting binary file to the host system. This process creates a Windows-compatible binary resource file needed for Docker's Windows components.
SOURCE: https://github.com/moby/moby/blob/master/cli/winresources/README.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
$ docker run --rm -it -v "$(pwd):/winresources" debian:bookworm-slim bash
root@9ad2260f6ebc:/# apt-get update -y && apt-get install -y binutils-mingw-w64-x86-64
root@9ad2260f6ebc:/# x86_64-w64-mingw32-windmc -v /winresources/event_messages.mc
root@9ad2260f6ebc:/# mv MSG00001.bin /winresources/event_messages.bin
```

----------------------------------------

TITLE: Defining UpdateStatus Message in Protocol Buffers for Docker SwarmKit
DESCRIPTION: This snippet defines a message 'UpdateStatus' for Docker SwarmKit, including fields for state, started_at, completed_at, and message. It also includes an enum 'UpdateState' for specifying update states.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_37

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "UpdateStatus"
  field {
    name: "state"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.UpdateStatus.UpdateState"
    json_name: "state"
  }
  field {
    name: "started_at"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".google.protobuf.Timestamp"
    json_name: "startedAt"
  }
  field {
    name: "completed_at"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".google.protobuf.Timestamp"
    json_name: "completedAt"
  }
  field {
    name: "message"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "message"
  }
  enum_type {
    name: "UpdateState"
    value {
      name: "UNKNOWN"
      number: 0
    }
    value {
      name: "UPDATING"
      number: 1
    }
    value {
      name: "PAUSED"
      number: 2
    }
    value {
      name: "COMPLETED"
      number: 3
    }
    value {
      name: "ROLLBACK_STARTED"
      number: 4
    }
    value {
      name: "ROLLBACK_PAUSED"
      number: 5
    }
    value {
      name: "ROLLBACK_COMPLETED"
      number: 6
    }
  }
}
```

----------------------------------------

TITLE: Save Cache POST Endpoint
DESCRIPTION: POST endpoint for reserving a cache key and obtaining a unique cache ID for subsequent upload operations. Request requires key and version parameters.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/tonistiigi/go-actions-cache/api.md#2025-04-10_snippet_1

LANGUAGE: http
CODE:
```
POST /caches
Content-Type: application/json

{
  "key": "cache-key",
  "version": "namespace-value"
}
```

----------------------------------------

TITLE: Installing Flock Package with Go
DESCRIPTION: Command to install the flock package using Go's package manager.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gofrs/flock/README.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
go get -u github.com/gofrs/flock
```

----------------------------------------

TITLE: Core Operations in Bolt Database
DESCRIPTION: Documentation of main entry points and core operations in Bolt database, including file operations, transactions, bucket operations, and cursor management. Details internal implementation of database operations and memory management strategies.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_24

LANGUAGE: markdown
CODE:
```
- `Open()` - Initializes the reference to the database. It's responsible for\n  creating the database if it doesn't exist, obtaining an exclusive lock on the\n  file, reading the meta pages, & memory-mapping the file.\n\n- `DB.Begin()` - Starts a read-only or read-write transaction depending on the\n  value of the `writable` argument. This requires briefly obtaining the "meta"\n  lock to keep track of open transactions. Only one read-write transaction can\n  exist at a time so the "rwlock" is acquired during the life of a read-write\n  transaction.\n\n- `Bucket.Put()` - Writes a key/value pair into a bucket. After validating the\n  arguments, a cursor is used to traverse the B+tree to the page and position\n  where they key & value will be written. Once the position is found, the bucket\n  materializes the underlying page and the page's parent pages into memory as\n  "nodes". These nodes are where mutations occur during read-write transactions.\n  These changes get flushed to disk during commit.\n\n- `Bucket.Get()` - Retrieves a key/value pair from a bucket. This uses a cursor\n  to move to the page & position of a key/value pair. During a read-only\n  transaction, the key and value data is returned as a direct reference to the\n  underlying mmap file so there's no allocation overhead. For read-write\n  transactions, this data may reference the mmap file or one of the in-memory\n  node values.\n\n- `Cursor` - This object is simply for traversing the B+tree of on-disk pages\n  or in-memory nodes. It can seek to a specific key, move to the first or last\n  value, or it can move forward or backward. The cursor handles the movement up\n  and down the B+tree transparently to the end user.\n\n- `Tx.Commit()` - Converts the in-memory dirty nodes and the list of free pages\n  into pages to be written to disk. Writing to disk then occurs in two phases.\n  First, the dirty pages are written to disk and an `fsync()` occurs. Second, a\n  new meta page with an incremented transaction ID is written and another\n  `fsync()` occurs. This two phase write ensures that partially written data\n  pages are ignored in the event of a crash since the meta page pointing to them\n  is never written. Partially written meta pages are invalidated because they\n  are written with a checksum.
```

----------------------------------------

TITLE: Creating a new release tag for go-toml
DESCRIPTION: Git commands for checking out, tagging, and pushing a new version release.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/pelletier/go-toml/v2/CONTRIBUTING.md#2025-04-10_snippet_5

LANGUAGE: bash
CODE:
```
git checkout v2
git pull
git tag v2.2.0
git push --tags
```

----------------------------------------

TITLE: Creating and Querying an Immutable Radix Tree in Go
DESCRIPTION: This snippet demonstrates how to create an immutable radix tree, insert key-value pairs, and perform a longest prefix match query. It showcases the basic operations of the iradix package.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/hashicorp/go-immutable-radix/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
// Create a tree
r := iradix.New()
r, _, _ = r.Insert([]byte("foo"), 1)
r, _, _ = r.Insert([]byte("bar"), 2)
r, _, _ = r.Insert([]byte("foobar"), 2)

// Find the longest prefix match
m, _, _ := r.Root().LongestPrefix([]byte("foozip"))
if string(m) != "foo" {
    panic("should be foo")
}
```

----------------------------------------

TITLE: Git Push Command for YAML Project Release
DESCRIPTION: Command used to push the newly created version tag to the remote repository, making the release official.
SOURCE: https://github.com/moby/moby/blob/master/vendor/sigs.k8s.io/yaml/RELEASE.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
git push $VERSION
```

----------------------------------------

TITLE: Changelog Format in Markdown
DESCRIPTION: Standard changelog format documenting version history with sections for Breaking Changes, Fixed issues, Added features, Changed functionality, and Compatibility updates. Each version is clearly dated and categorized.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/cyphar/filepath-securejoin/CHANGELOG.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
# Changelog #
All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](http://keepachangelog.com/)
and this project adheres to [Semantic Versioning](http://semver.org/).

## [Unreleased] ##

## [0.4.1] - 2025-01-28 ##

### Fixed ###
- The restrictions added for `root` paths...

## [0.4.0] - 2025-01-13 ##

### Breaking ####
- `SecureJoin(VFS)` will now return an error...
```

----------------------------------------

TITLE: Network Driver Leave Request Format
DESCRIPTION: Format for the POST request to NetworkDriver.Leave endpoint when removing an endpoint from a sandbox.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/remote.md#2025-04-10_snippet_13

LANGUAGE: json
CODE:
```
{
    "NetworkID": string,
    "EndpointID": string
}
```

----------------------------------------

TITLE: NAT Table IPTables Rules
DESCRIPTION: NAT table configuration for port forwarding and masquerading in Docker network
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap-noproxy.md#2025-04-10_snippet_2

LANGUAGE: plaintext
CODE:
```
-P PREROUTING ACCEPT
-P INPUT ACCEPT
-P OUTPUT ACCEPT
-P POSTROUTING ACCEPT
-N DOCKER
-A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER
-A OUTPUT -m addrtype --dst-type LOCAL -j DOCKER
-A POSTROUTING -o bridge1 -m addrtype --src-type LOCAL -j MASQUERADE
-A POSTROUTING -s 192.0.2.0/24 ! -o bridge1 -j MASQUERADE
-A POSTROUTING -o docker0 -m addrtype --src-type LOCAL -j MASQUERADE
-A POSTROUTING -s 172.17.0.0/16 ! -o docker0 -j MASQUERADE
-A POSTROUTING -s 192.0.2.2/32 -d 192.0.2.2/32 -p tcp -m tcp --dport 80 -j MASQUERADE
-A DOCKER -p tcp -m tcp --dport 8080 -j DNAT --to-destination 192.0.2.2:80
```

----------------------------------------

TITLE: Calculating Unary Request Error Percentage for gRPC Services using Prometheus
DESCRIPTION: This query computes the percentage of failed unary requests for each gRPC service. It combines the error rate and total request rate queries to calculate the failure percentage, which can be used for SLA monitoring.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/grpc-ecosystem/go-grpc-prometheus/README.md#2025-04-10_snippet_5

LANGUAGE: jsoniq
CODE:
```
sum(rate(grpc_server_handled_total{job="foo",grpc_type="unary",grpc_code!="OK"}[1m])) by (grpc_service)
 / 
sum(rate(grpc_server_started_total{job="foo",grpc_type="unary"}[1m])) by (grpc_service)
 * 100.0
```

----------------------------------------

TITLE: Adding Fork as Remote
DESCRIPTION: These commands navigate to the OpenCensus Go directory in the GOPATH and add the user's fork as a remote repository named 'fork'.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opencensus.io/CONTRIBUTING.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
cd $(go env GOPATH)/src/go.opencensus.io
git remote add fork git@github.com:YOUR_GITHUB_USERNAME/opencensus-go.git
```

----------------------------------------

TITLE: Creating a Network and Running a Container with Published Port in nat-unprotected Mode
DESCRIPTION: This bash snippet demonstrates how to create a Docker network with nat-unprotected gateway mode and run a container with a published port. The commands set up a bridge network named 'bridge1' with a specific subnet and gateway, then run a busybox container that maps host port 8080 to container port 80.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/templates/usernet-portmap-natunprot.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
docker network create \
  -o com.docker.network.bridge.name=bridge1 \
  -o com.docker.network.bridge.gateway_mode_ipv4=nat-unprotected \
  --subnet 192.0.2.0/24 --gateway 192.0.2.1 bridge1
docker run --network bridge1 -p 8080:80 --name c1 busybox
```

----------------------------------------

TITLE: Project Repository Link in Markdown
DESCRIPTION: Markdown link to the Moby community guidelines document in the project repository.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/who-written-for.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
<a href="https://github.com/moby/moby/blob/master/CONTRIBUTING.md#docker-community-guidelines" target="_blank">community guidelines</a>
```

----------------------------------------

TITLE: Executing the Plugin RPC Generator from command line
DESCRIPTION: Example shell command that runs the Plugin RPC Generator tool with specific parameters to generate proxy code for the volumeDriver interface.
SOURCE: https://github.com/moby/moby/blob/master/pkg/plugins/pluginrpc-gen/README.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
$ pluginrpc-gen --type volumeDriver --name VolumeDriver -i volumes/drivers/extpoint.go -o volumes/drivers/proxy.go
```

----------------------------------------

TITLE: Docker Service Creation Command for Swarm
DESCRIPTION: Example Docker command to create a Swarm service with port 8080 published to port 80 in the container.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/swarm-portmap.md#2025-04-10_snippet_0

LANGUAGE: shell
CODE:
```
docker service create -p 8080:80 busybox top
```

----------------------------------------

TITLE: Defining PortStatus Message in Protocol Buffers for Docker SwarmKit
DESCRIPTION: This snippet defines a message 'PortStatus' for Docker SwarmKit, including a repeated field for ports of type PortConfig.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_39

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "PortStatus"
  field {
    name: "ports"
    number: 1
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.PortConfig"
    json_name: "ports"
  }
}
```

----------------------------------------

TITLE: Adding SetAttribute Method to Trace API in Go SDK
DESCRIPTION: Adds a new SetAttribute method to the trace API that takes a string key and interface{} value.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_43

LANGUAGE: Go
CODE:
```
SetAttribute(string, interface{})
```

----------------------------------------

TITLE: Pushing Docker Image to Registry with HTTP POST Request
DESCRIPTION: Sends a POST request to push a Docker image to a registry. The request may include authentication headers for private registries.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_57

LANGUAGE: http
CODE:
```
POST /v1.24/images/test/push HTTP/1.1
```

----------------------------------------

TITLE: Setting Custom Output for klog in Go
DESCRIPTION: Illustrates how to redirect klog output to a custom io.Writer using SetOutput() method.
SOURCE: https://github.com/moby/moby/blob/master/vendor/k8s.io/klog/v2/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
klog.SetOutput()
```

----------------------------------------

TITLE: Adding a Git Remote for Your Fork
DESCRIPTION: Command to add your personal fork as a remote to the local Git repository. This allows you to push changes to your fork for creating pull requests.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-10_snippet_2

LANGUAGE: sh
CODE:
```
git remote add <YOUR_FORK> git@github.com:<YOUR_GITHUB_USERNAME>/opentelemetry-go
```

----------------------------------------

TITLE: Graceful Server Shutdown Implementation
DESCRIPTION: Shows how to implement graceful shutdown of a Mux server using Go's built-in shutdown capabilities.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gorilla/mux/README.md#2025-04-10_snippet_13

LANGUAGE: go
CODE:
```
package main

import (
    "context"
    "flag"
    "log"
    "net/http"
    "os"
    "os/signal"
    "time"

    "github.com/gorilla/mux"
)

func main() {
    var wait time.Duration
    flag.DurationVar(&wait, "graceful-timeout", time.Second * 15, "the duration for which the server gracefully wait for existing connections to finish - e.g. 15s or 1m")
    flag.Parse()

    r := mux.NewRouter()
    // Add your routes as needed

    srv := &http.Server{
        Addr:         "0.0.0.0:8080",
        WriteTimeout: time.Second * 15,
        ReadTimeout:  time.Second * 15,
        IdleTimeout:  time.Second * 60,
        Handler: r,
    }

    go func() {
        if err := srv.ListenAndServe(); err != nil {
            log.Println(err)
        }
    }()

    c := make(chan os.Signal, 1)
    signal.Notify(c, os.Interrupt)
    <-c
    ctx, cancel := context.WithTimeout(context.Background(), wait)
    defer cancel()
    srv.Shutdown(ctx)
    log.Println("shutting down")
    os.Exit(0)
}
```

----------------------------------------

TITLE: Global MeterProvider Usage
DESCRIPTION: Example showing recommended usage of global MeterProvider after deprecation of go.opentelemetry.io/otel/metric/global package.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_20

LANGUAGE: go
CODE:
```
NewMeterProvider().Meter("")
```

----------------------------------------

TITLE: Markdown Link to Kubernetes Code of Conduct
DESCRIPTION: Markdown heading and link directing users to the official Kubernetes Community Code of Conduct document.
SOURCE: https://github.com/moby/moby/blob/master/vendor/k8s.io/klog/v2/code-of-conduct.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
# Kubernetes Community Code of Conduct

Please refer to our [Kubernetes Community Code of Conduct](https://git.k8s.io/community/code-of-conduct.md)
```

----------------------------------------

TITLE: Running Diagnostic Client for Overlay Network
DESCRIPTION: Example bash command to use the diagnostic client to examine the overlay network table for a specific network on a non-default port.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/cmd/diagnostic/README.md#2025-04-10_snippet_16

LANGUAGE: bash
CODE:
```
$ diagnostiClient -port 2001 -t overlay -v -net n8a8ie6tb3wr2e260vxj8ncy4 -a
```

----------------------------------------

TITLE: Defining ConfChangeSingle Message Type in Protobuf for Raft
DESCRIPTION: Protocol Buffer definition for the ConfChangeSingle message type used in Raft consensus algorithm. This message represents a single configuration change with a type and node ID.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_111

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "ConfChangeSingle"
  field {
    name: "type"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".raftpb.ConfChangeType"
    options {
      65001: 0
    }
    json_name: "type"
  }
  field {
    name: "node_id"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    options {
      65001: 0
      65004: "NodeID"
    }
    json_name: "nodeId"
  }
}
```

----------------------------------------

TITLE: Component Table in Markdown
DESCRIPTION: A markdown table describing the main components of the Docker Distribution project, including registry, libraries, specifications, and documentation.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/distribution/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
|**Component**       |Description                                                                                                                                                                                         |
|--------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **registry**       | An implementation of the [Docker Registry HTTP API V2](docs/spec/api.md) for use with docker 1.6+.                                                                                                  |\n| **libraries**      | A rich set of libraries for interacting with distribution components. Please see [godoc](https://godoc.org/github.com/docker/distribution) for details. **Note**: These libraries are **unstable**. |\n| **specifications** | _Distribution_ related specifications are available in [docs/spec](docs/spec)                                                                                                                        |\n| **documentation**  | Docker's full documentation set is available at [docs.docker.com](https://docs.docker.com). This repository [contains the subset](docs/) related just to the registry.                                                                                                                                          |
```

----------------------------------------

TITLE: Docker Network and Container Setup Commands
DESCRIPTION: Commands to create a user-defined network and run a container with a published port without userland proxy
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap-noproxy.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
dockerd --userland-proxy=false
docker network create \
  -o com.docker.network.bridge.name=bridge1 \
  --subnet 192.0.2.0/24 --gateway 192.0.2.1 bridge1
docker run --network bridge1 -p 8080:80 --name c1 busybox
```

----------------------------------------

TITLE: Basic Usage of Go Struct Converter Chain
DESCRIPTION: Demonstrates the basic usage of the converter chain for transforming between different struct versions. This example shows how to create a conversion chain and execute a conversion between structs.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/anchore/go-struct-converter/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
chain := converter.NewChain(V1{}, V2{}, V3{})

chain.Convert(myV1struct, &myV3struct)
```

----------------------------------------

TITLE: Starting Docker Daemon in Debug Mode
DESCRIPTION: Start the Docker daemon in debug mode as a background process within the development container.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/set-up-dev-env.md#2025-04-10_snippet_10

LANGUAGE: bash
CODE:
```
# dockerd -D &
```

----------------------------------------

TITLE: Defining NodeDescription Message in Protocol Buffers
DESCRIPTION: This snippet defines the NodeDescription message type which contains information about a node in a Docker Swarm cluster, including hostname, platform, resources, engine information, TLS configuration, FIPS status, and CSI (Container Storage Interface) information.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_23

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "NodeDescription"
  field {
    name: "hostname"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "hostname"
  }
  field {
    name: "platform"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Platform"
    json_name: "platform"
  }
  field {
    name: "resources"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Resources"
    json_name: "resources"
  }
  field {
    name: "engine"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.EngineDescription"
    json_name: "engine"
  }
  field {
    name: "tls_info"
    number: 5
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.NodeTLSInfo"
    options {
      65004: "TLSInfo"
    }
    json_name: "tlsInfo"
  }
  field {
    name: "fips"
    number: 6
    label: LABEL_OPTIONAL
    type: TYPE_BOOL
    options {
      65004: "FIPS"
    }
    json_name: "fips"
  }
  field {
    name: "csi_info"
    number: 7
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.NodeCSIInfo"
    options {
      65004: "CSIInfo"
    }
    json_name: "csiInfo"
  }
}
```

----------------------------------------

TITLE: Upgrading dependency in Go module
DESCRIPTION: Upgrades the golang.org/x/sys/unix dependency to address a security vulnerability.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_24

LANGUAGE: Go
CODE:
```
Upgrade `golang.org/x/sys/unix` from `v0.0.0-20210423185535-09eb48e85fd7` to `v0.0.0-20220919091848-fb04ddd9f9c8`.
```

----------------------------------------

TITLE: Registering for Memory Pressure Events (v1)
DESCRIPTION: Sets up event notification for memory pressure events at medium pressure level using the default notification mode.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/README.md#2025-04-10_snippet_12

LANGUAGE: go
CODE:
```
event := cgroup1.MemoryPressureEvent(cgroup1.MediumPressure, cgroup1.DefaultMode)
efd, err := control.RegisterMemoryEvent(event)
```

----------------------------------------

TITLE: Defining WatchActionKind Enum in Docker SwarmKit Protobuf
DESCRIPTION: Defines the WatchActionKind enumeration that specifies possible action types for watch events. It includes values for unknown actions, create, update, and remove operations.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_136

LANGUAGE: protobuf
CODE:
```
enum_type {
  name: "WatchActionKind"
  value {
    name: "WATCH_ACTION_UNKNOWN"
    number: 0
    options {
      66001: "WatchActionKindUnknown"
    }
  }
  value {
    name: "WATCH_ACTION_CREATE"
    number: 1
    options {
      66001: "WatchActionKindCreate"
    }
  }
  value {
    name: "WATCH_ACTION_UPDATE"
    number: 2
    options {
      66001: "WatchActionKindUpdate"
    }
  }
  value {
    name: "WATCH_ACTION_REMOVE"
    number: 4
    options {
      66001: "WatchActionKindRemove"
    }
  }
  options {
    62001: 0
    62023: "WatchActionKind"
  }
}
```

----------------------------------------

TITLE: Container Restart Response
DESCRIPTION: Example HTTP response for a successful container restart operation, showing a 204 No Content status code.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_33

LANGUAGE: http
CODE:
```
HTTP/1.1 204 No Content
```

----------------------------------------

TITLE: Installing UUID Package for Go
DESCRIPTION: This command installs the UUID package from the GitHub repository using Go's package management system. It fetches the latest version of the package and adds it to the current Go module.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/google/uuid/README.md#2025-04-10_snippet_0

LANGUAGE: sh
CODE:
```
go get github.com/google/uuid
```

----------------------------------------

TITLE: HTML Comment Block for Contact Information Template
DESCRIPTION: HTML comment block containing a template for adding custom contact information to the contributing guidelines
SOURCE: https://github.com/moby/moby/blob/master/vendor/sigs.k8s.io/yaml/CONTRIBUTING.md#2025-04-10_snippet_1

LANGUAGE: html
CODE:
```
<!---
Custom Information - if you're copying this template for the first time you can add custom content here, for example:

## Contact Information

- [Slack channel](https://kubernetes.slack.com/messages/kubernetes-users) - Replace `kubernetes-users` with your slack channel string, this will send users directly to your channel. 
- [Mailing list](URL)

-->
```

----------------------------------------

TITLE: Defining Protocol Buffer ServiceOptions
DESCRIPTION: Defines options for protocol buffer service definitions, including deprecation markers and extensibility points.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_14

LANGUAGE: protobuf
CODE:
```
message_type {
    name: "ServiceOptions"
    field {
      name: "deprecated"
      number: 33
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    extension_range {
      start: 1000
      end: 536870912
    }
  }
```

----------------------------------------

TITLE: Checking Git Version on Linux/macOS
DESCRIPTION: Command to verify git installation and check its version on the system.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/software-required.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
$ git --version
```

----------------------------------------

TITLE: Installing bbolt CLI to GOBIN
DESCRIPTION: Command to install the bbolt command line utility to the Go binary directory.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_2

LANGUAGE: sh
CODE:
```
$ go install go.etcd.io/bbolt/cmd/bbolt@latest
```

----------------------------------------

TITLE: Renaming Observer Instrument in Go SDK
DESCRIPTION: Renames the 'Observer' instrument to 'ValueObserver' in the OpenTelemetry Go SDK metric API.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_41

LANGUAGE: Go
CODE:
```
// Old
Observer

// New
ValueObserver
```

----------------------------------------

TITLE: IPTables Filter4 Setup Commands
DESCRIPTION: Shows the actual iptables commands used to set up the filter table rules for IPv4 network filtering.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/templates/new-daemon.md#2025-04-10_snippet_1

LANGUAGE: shell
CODE:
```
{{index . "SFilter4"}}
```

----------------------------------------

TITLE: Iptables Filter Table Configuration
DESCRIPTION: The complete filter table configuration showing all chains and rules created for Docker networking, including specific rules for container port exposure and network isolation between bridges.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap.md#2025-04-10_snippet_1

LANGUAGE: text
CODE:
```
Chain INPUT (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         

Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DOCKER-USER  0    --  *      *       0.0.0.0/0            0.0.0.0/0           
2        0     0 DOCKER-FORWARD  0    --  *      *       0.0.0.0/0            0.0.0.0/0           

Chain OUTPUT (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         

Chain DOCKER (2 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 ACCEPT     6    --  !bridge1 bridge1  0.0.0.0/0            192.0.2.2            tcp dpt:80
2        0     0 DROP       0    --  !docker0 docker0  0.0.0.0/0            0.0.0.0/0           
3        0     0 DROP       0    --  !bridge1 bridge1  0.0.0.0/0            0.0.0.0/0           

Chain DOCKER-BRIDGE (1 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DOCKER     0    --  *      docker0  0.0.0.0/0            0.0.0.0/0           
2        0     0 DOCKER     0    --  *      bridge1  0.0.0.0/0            0.0.0.0/0           

Chain DOCKER-CT (1 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 ACCEPT     0    --  *      docker0  0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED
2        0     0 ACCEPT     0    --  *      bridge1  0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED

Chain DOCKER-FORWARD (1 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DOCKER-CT  0    --  *      *       0.0.0.0/0            0.0.0.0/0           
2        0     0 DOCKER-ISOLATION-STAGE-1  0    --  *      *       0.0.0.0/0            0.0.0.0/0           
3        0     0 DOCKER-BRIDGE  0    --  *      *       0.0.0.0/0            0.0.0.0/0           
4        0     0 ACCEPT     0    --  docker0 *       0.0.0.0/0            0.0.0.0/0           
5        0     0 ACCEPT     0    --  bridge1 *       0.0.0.0/0            0.0.0.0/0           

Chain DOCKER-ISOLATION-STAGE-1 (1 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DOCKER-ISOLATION-STAGE-2  0    --  docker0 !docker0  0.0.0.0/0            0.0.0.0/0           
2        0     0 DOCKER-ISOLATION-STAGE-2  0    --  bridge1 !bridge1  0.0.0.0/0            0.0.0.0/0           

Chain DOCKER-ISOLATION-STAGE-2 (2 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DROP       0    --  *      bridge1  0.0.0.0/0            0.0.0.0/0           
2        0     0 DROP       0    --  *      docker0  0.0.0.0/0            0.0.0.0/0           

Chain DOCKER-USER (1 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 RETURN     0    --  *      *       0.0.0.0/0            0.0.0.0/0           
```

----------------------------------------

TITLE: Adding User to Docker Group on Linux
DESCRIPTION: Command to add the current user to the docker group on Linux systems, requiring logout/login to take effect.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/software-required.md#2025-04-10_snippet_5

LANGUAGE: bash
CODE:
```
$ sudo usermod -aG docker ubuntu
```

----------------------------------------

TITLE: Gateway Allocation Check Response in Remote Driver Protocol
DESCRIPTION: The remote driver responds to the gateway allocation check request, indicating whether to skip IPv4 or IPv6 gateway allocation.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/remote.md#2025-04-10_snippet_3

LANGUAGE: JSON
CODE:
```
{
		"SkipIPv4": false,
		"SkipIPv6": false
    }
```

----------------------------------------

TITLE: Defining NodeTLSInfo Message in Protocol Buffers
DESCRIPTION: This message type defines TLS (Transport Layer Security) information for a node, including the trust root certificate, certificate issuer subject, and certificate issuer public key, all stored as byte arrays.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_24

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "NodeTLSInfo"
  field {
    name: "trust_root"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_BYTES
    json_name: "trustRoot"
  }
  field {
    name: "cert_issuer_subject"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_BYTES
    json_name: "certIssuerSubject"
  }
  field {
    name: "cert_issuer_public_key"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_BYTES
    json_name: "certIssuerPublicKey"
  }
}
```

----------------------------------------

TITLE: Adding String Methods to Value and KeyValue
DESCRIPTION: Adds String method to Value and KeyValue types in the log package.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_11

LANGUAGE: Go
CODE:
```
String method to Value and KeyValue in go.opentelemetry.io/otel/log
```

----------------------------------------

TITLE: Registering for OOM Events (v1)
DESCRIPTION: Sets up event notification for Out-Of-Memory (OOM) events in a cgroup, showing two equivalent methods to achieve the same result.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/README.md#2025-04-10_snippet_13

LANGUAGE: go
CODE:
```
efd, err := control.OOMEventFD()
// or by using RegisterMemoryEvent
event := cgroup1.OOMEvent()
efd, err := control.RegisterMemoryEvent(event)
```

----------------------------------------

TITLE: Installing and Running Local Go Documentation Server
DESCRIPTION: Commands to install and run a local documentation server using pkgsite. This helps contributors preview how their documentation will look on pkg.go.dev.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-10_snippet_4

LANGUAGE: sh
CODE:
```
go install golang.org/x/pkgsite/cmd/pkgsite@latest
pkgsite
```

----------------------------------------

TITLE: Initializing Root Logger in Go Main Function
DESCRIPTION: Example showing how to initialize the root logger in a Go application's main function using a hypothetical 'logimpl' implementation.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/go-logr/logr/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
    func main() {
        // ... other setup code ...

        // Create the "root" logger.  We have chosen the "logimpl" implementation,
        // which takes some initial parameters and returns a logr.Logger.
        logger := logimpl.New(param1, param2)

        // ... other setup code ...
```

----------------------------------------

TITLE: HTML Comment Block for Custom Guidelines
DESCRIPTION: HTML comment block providing guidance for repository-specific contribution guidelines placement
SOURCE: https://github.com/moby/moby/blob/master/vendor/sigs.k8s.io/yaml/CONTRIBUTING.md#2025-04-10_snippet_0

LANGUAGE: html
CODE:
```
<!---
If your repo has certain guidelines for contribution, put them here ahead of the general k8s resources
-->
```

----------------------------------------

TITLE: Installing Hashstructure Library with Go Get
DESCRIPTION: Command to install the hashstructure library using Go's package management system. It specifically recommends using v2 of the library to address collision issues from v1.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/mitchellh/hashstructure/v2/README.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
$ go get github.com/mitchellh/hashstructure/v2
```

----------------------------------------

TITLE: Markdown Repository Link
DESCRIPTION: Simple markdown document containing a header and link to the new location of the Docker image specification.
SOURCE: https://github.com/moby/moby/blob/master/image/spec/spec.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
# Docker Image Specification v1.3.0

This specification moved to a separate repository:
https://github.com/moby/docker-image-spec
```

----------------------------------------

TITLE: Setting Environment Variable to Disable Default Deadlines in Go SDK
DESCRIPTION: Shows how to opt-out of the default deadline behavior in Google Cloud API Go clients by setting the environment variable GOOGLE_API_GO_EXPERIMENTAL_DISABLE_DEFAULT_DEADLINE to true before client initialization.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_3

LANGUAGE: markdown
CODE:
```
To opt-out of this behavior, set the environment variable
`GOOGLE_API_GO_EXPERIMENTAL_DISABLE_DEFAULT_DEADLINE` to `true` prior to
initializing a client. This opt-out mechanism will be removed in a later
release, with a notice similar to this one ahead of its removal.
```

----------------------------------------

TITLE: Defining Method Descriptor in Protocol Buffers
DESCRIPTION: This snippet defines the structure of a method descriptor in Protocol Buffers. It includes fields for name, input and output types, options, and streaming configurations.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_8

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "MethodDescriptorProto"
  field {
    name: "name"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "name"
  }
  field {
    name: "input_type"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "inputType"
  }
  field {
    name: "output_type"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "outputType"
  }
  field {
    name: "options"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".google.protobuf.MethodOptions"
    json_name: "options"
  }
  field {
    name: "client_streaming"
    number: 5
    label: LABEL_OPTIONAL
    type: TYPE_BOOL
    default_value: "false"
    json_name: "clientStreaming"
  }
  field {
    name: "server_streaming"
    number: 6
    label: LABEL_OPTIONAL
    type: TYPE_BOOL
    default_value: "false"
    json_name: "serverStreaming"
  }
}
```

----------------------------------------

TITLE: Running the Docker Daemon with Options
DESCRIPTION: This snippet demonstrates the basic syntax for running the Docker daemon (dockerd) with command-line options. It shows that options should be specified after the 'dockerd' keyword.
SOURCE: https://github.com/moby/moby/blob/master/man/dockerd.8.md#2025-04-10_snippet_0

LANGUAGE: shell
CODE:
```
dockerd [OPTIONS]
```

----------------------------------------

TITLE: Configuring Logrus Environment-Specific Formatters in Go
DESCRIPTION: This snippet demonstrates how to configure Logrus formatters based on the environment. It uses a global Environment variable to determine whether to use JSON or Text formatter.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/sirupsen/logrus/README.md#2025-04-10_snippet_8

LANGUAGE: go
CODE:
```
import (
  log "github.com/sirupsen/logrus"
)

func init() {
  // do something here to set environment depending on an environment variable
  // or command-line flag
  if Environment == "production" {
    log.SetFormatter(&log.JSONFormatter{})
  } else {
    // The TextFormatter is default, you don't actually have to do this.
    log.SetFormatter(&log.TextFormatter{})
  }
}
```

----------------------------------------

TITLE: Building Moby Binary on Windows
DESCRIPTION: These PowerShell commands set the Git commit and run the Moby build process in a Docker container.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/software-req-win.md#2025-04-10_snippet_4

LANGUAGE: powershell
CODE:
```
$DOCKER_GITCOMMIT=(git rev-parse --short HEAD)
docker run --name binaries -e DOCKER_GITCOMMIT=$DOCKER_GITCOMMIT nativebuildimage hack\make.ps1 -Binary
docker run --name binaries -e DOCKER_GITCOMMIT=$DOCKER_GITCOMMIT -m 2GB nativebuildimage hack\make.ps1 -Binary  # (if using Hyper-V containers)
```

----------------------------------------

TITLE: Defining Duration Message in Protocol Buffers
DESCRIPTION: Defines the Duration message type with seconds and nanos fields. Includes package options for various programming languages.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_1

LANGUAGE: Protocol Buffers
CODE:
```
file {
  name: "google/protobuf/duration.proto"
  package: "google.protobuf"
  message_type {
    name: "Duration"
    field {
      name: "seconds"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_INT64
      json_name: "seconds"
    }
    field {
      name: "nanos"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_INT32
      json_name: "nanos"
    }
  }
  options {
    java_package: "com.google.protobuf"
    java_outer_classname: "DurationProto"
    java_multiple_files: true
    go_package: "github.com/golang/protobuf/ptypes/duration"
    cc_enable_arenas: true
    objc_class_prefix: "GPB"
    csharp_namespace: "Google.Protobuf.WellKnownTypes"
  }
  syntax: "proto3"
}
```

----------------------------------------

TITLE: Environment Variable Changes in OpenTelemetry Go SDK
DESCRIPTION: The fix ensures proper parsing of special characters like '+', '/' in environment variables OTEL_RESOURCE_ATTRIBUTES, OTEL_EXPORTER_OTLP_HEADERS and related variables that were previously being rendered as whitespace.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_14

LANGUAGE: environment
CODE:
```
OTEL_RESOURCE_ATTRIBUTES
OTEL_EXPORTER_OTLP_HEADERS
OTEL_EXPORTER_OTLP_METRICS_HEADERS
OTEL_EXPORTER_OTLP_TRACES_HEADERS
```

----------------------------------------

TITLE: Defining NetworkAttachmentConfig Message in Protocol Buffers for Docker SwarmKit
DESCRIPTION: This snippet defines a message 'NetworkAttachmentConfig' for Docker SwarmKit, including fields for target, aliases, addresses, and driver_attachment_opts. It also includes a nested message for DriverAttachmentOptsEntry.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_41

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "NetworkAttachmentConfig"
  field {
    name: "target"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "target"
  }
  field {
    name: "aliases"
    number: 2
    label: LABEL_REPEATED
    type: TYPE_STRING
    json_name: "aliases"
  }
  field {
    name: "addresses"
    number: 3
    label: LABEL_REPEATED
    type: TYPE_STRING
    json_name: "addresses"
  }
  field {
    name: "driver_attachment_opts"
    number: 4
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.NetworkAttachmentConfig.DriverAttachmentOptsEntry"
    json_name: "driverAttachmentOpts"
  }
  nested_type {
    name: "DriverAttachmentOptsEntry"
    field {
      name: "key"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "key"
    }
    field {
      name: "value"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "value"
    }
    options {
      map_entry: true
    }
  }
}
```

----------------------------------------

TITLE: Pushing Feature Branch to Fork
DESCRIPTION: This snippet shows how to push the local feature branch to the forked repository on GitHub.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/mistifyio/go-zfs/v3/CONTRIBUTING.md#2025-04-10_snippet_4

LANGUAGE: bash
CODE:
```
$ git push origin <feature-branch-name>
```

----------------------------------------

TITLE: Installing Registry from Source with Go Get
DESCRIPTION: Uses the Go package manager to fetch and install the registry command from GitHub. This is the simplest way to get the latest version of the registry source.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/distribution/BUILDING.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
go get github.com/docker/distribution/cmd/registry
```

----------------------------------------

TITLE: Configuring Retry Sink in Go
DESCRIPTION: Example showing how to create a retrying sink that implements backoff logic after consecutive failures. Uses a breaker strategy with 5 attempts and 1 second delay.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/go-events/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
hs := newHTTPSink(/*...*/)
retry := NewRetryingSink(hs, NewBreaker(5, time.Second))
```

----------------------------------------

TITLE: Installing Google Cloud Compute Metadata Library in Go
DESCRIPTION: This command installs the Google Cloud Compute metadata library using the Go package manager. It fetches the latest version of the library from the specified repository.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/compute/metadata/README.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
go get cloud.google.com/go/compute/metadata
```

----------------------------------------

TITLE: Displaying PkgGoDev Badge for OTLP Metric gRPC Exporter in Markdown
DESCRIPTION: This snippet shows how to include a PkgGoDev badge in a Markdown file. The badge links to the package documentation for the OTLP Metric gRPC Exporter on pkg.go.dev.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc)](https://pkg.go.dev/go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc)
```

----------------------------------------

TITLE: Creating and Navigating Repositories Directory
DESCRIPTION: Commands to create and navigate to a repos directory for storing repositories
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/set-up-git.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
$ mkdir repos
$ cd repos
```

----------------------------------------

TITLE: Finalize Cache POST Endpoint
DESCRIPTION: POST endpoint for finalizing a cache record after all data chunks have been uploaded. Requires the total size of the uploaded data for verification.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/tonistiigi/go-actions-cache/api.md#2025-04-10_snippet_3

LANGUAGE: http
CODE:
```
POST /caches/[cacheID]
Content-Type: application/json

{
  "size": total_size
}
```

----------------------------------------

TITLE: Signing Git Commits for Moby Project Contributions
DESCRIPTION: This code snippet demonstrates the format for signing off on git commits when contributing to the Moby project. It includes the Developer Certificate of Origin and instructions for adding the sign-off line.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/opencontainers/cgroups/CONTRIBUTING.md#2025-04-10_snippet_0

LANGUAGE: plaintext
CODE:
```
Developer Certificate of Origin
Version 1.1

Copyright (C) 2004, 2006 The Linux Foundation and its contributors.
1 Letterman Drive
Suite D4700
San Francisco, CA, 94129

Everyone is permitted to copy and distribute verbatim copies of this
license document, but changing it is not allowed.


Developer's Certificate of Origin 1.1

By making a contribution to this project, I certify that:

(a) The contribution was created in whole or in part by me and I
    have the right to submit it under the open source license
    indicated in the file; or

(b) The contribution is based upon previous work that, to the best
    of my knowledge, is covered under an appropriate open source
    license and I have the right under that license to submit that
    work with modifications, whether created in whole or in part
    by me, under the same open source license (unless I am
    permitted to submit under a different license), as indicated
    in the file; or

(c) The contribution was provided directly to me by some other
    person who certified (a), (b) or (c) and I have not modified
    it.

(d) I understand and agree that this project and the contribution
    are public and that a record of the contribution (including all
    personal information I submit with it, including my sign-off) is
    maintained indefinitely and may be redistributed consistent with
    this project or the open source license(s) involved.
```

LANGUAGE: plaintext
CODE:
```
Signed-off-by: Joe Smith <joe@gmail.com>
```

----------------------------------------

TITLE: Running Specific Integration Test in Moby
DESCRIPTION: This command demonstrates how to run a specific integration test (TestDockerCLIBuildSuite) in the Moby project using the TESTFLAGS environment variable.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/test.md#2025-04-10_snippet_3

LANGUAGE: bash
CODE:
```
$ TESTFLAGS='-test.run TestDockerCLIBuildSuite' make test-integration
```

----------------------------------------

TITLE: Installing Gorilla Mux in Go
DESCRIPTION: Command to install the Gorilla Mux package using Go's package management system.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gorilla/mux/README.md#2025-04-10_snippet_0

LANGUAGE: sh
CODE:
```
go get -u github.com/gorilla/mux
```

----------------------------------------

TITLE: Defining Protobuf Extensions for Go Code Generation
DESCRIPTION: This snippet defines multiple protobuf extensions for customizing Go code generation. It includes options for enum prefixes, getters, marshalers, and various other features. These extensions are applied to EnumOptions, EnumValueOptions, FileOptions, and MessageOptions.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_21

LANGUAGE: protobuf
CODE:
```
dependency: "google/protobuf/descriptor.proto"
extension {
  name: "goproto_enum_prefix"
  extendee: ".google.protobuf.EnumOptions"
  number: 62001
  label: LABEL_OPTIONAL
  type: TYPE_BOOL
  json_name: "goprotoEnumPrefix"
}
extension {
  name: "goproto_enum_stringer"
  extendee: ".google.protobuf.EnumOptions"
  number: 62021
  label: LABEL_OPTIONAL
  type: TYPE_BOOL
  json_name: "goprotoEnumStringer"
}
// ... (additional extensions omitted for brevity)
extension {
  name: "sizer"
  extendee: ".google.protobuf.MessageOptions"
  number: 64019
  label: LABEL_OPTIONAL
  type: TYPE_BOOL
  json_name: "sizer"
}
```

----------------------------------------

TITLE: Cloning OpenCensus Go Repository
DESCRIPTION: This command clones the OpenCensus Go repository to the user's GOPATH. It's the first step in setting up the development environment.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opencensus.io/CONTRIBUTING.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
$ go get -d go.opencensus.io
```

----------------------------------------

TITLE: Registering Logrus Fatal Handlers in Go
DESCRIPTION: This snippet shows how to register a fatal handler with Logrus. The handler function will be called when any fatal level message is logged, allowing for graceful shutdown before the program exits.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/sirupsen/logrus/README.md#2025-04-10_snippet_13

LANGUAGE: go
CODE:
```
handler := func() {
  // gracefully shutdown something...
}
logrus.RegisterExitHandler(handler)
```

----------------------------------------

TITLE: Handling String Resources in Functions Metadata JSON Unmarshaller
DESCRIPTION: Update to the functions/metadata package to properly handle string resources in the JSON unmarshaller, ensuring correct parsing of function metadata.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_11

LANGUAGE: markdown
CODE:
```
- functions/metadata:
  - Handle string resources in JSON unmarshaller.
```

----------------------------------------

TITLE: Creating Docker Internal Networks with and without ICC
DESCRIPTION: These commands create two internal Docker networks: one with inter-container communication (ICC) enabled and another with ICC disabled. They also run containers on these networks.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/templates/usernet-internal.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
docker network create \
  -o com.docker.network.bridge.name=bridgeICC \
  --internal \
  --subnet 192.0.2.0/24 --gateway 192.0.2.1 bridge1
docker run --network bridgeICC --name c1 busybox

docker network create \
  -o com.docker.network.bridge.name=bridgeNoICC \
  -o com.docker.network.bridge.enable_icc=true \
  --internal \
  --subnet 198.51.100.0/24 --gateway 198.51.100.1 bridge1
docker run --network bridgeNoICC --name c1 busybox
```

----------------------------------------

TITLE: Demonstrating manual sign-off format for go-struct-converter commits
DESCRIPTION: This snippet shows the format for manually adding a sign-off line to a commit message, which includes the contributor's name and email address.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/anchore/go-struct-converter/CONTRIBUTING.md#2025-04-10_snippet_1

LANGUAGE: text
CODE:
```
Signed-off-by: John Doe <john.doe@example.com>
```

----------------------------------------

TITLE: Importing Cobra in Go Application
DESCRIPTION: Go import statement to include the Cobra library in a Go application.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/spf13/cobra/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
import "github.com/spf13/cobra"
```

----------------------------------------

TITLE: Set Intersection Operation in Go
DESCRIPTION: Demonstrates using the Intersect method to find common elements between two sets. The example finds science classes that are also required classes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/deckarep/golang-set/v2/README.md#2025-04-10_snippet_5

LANGUAGE: go
CODE:
```
reqScience := sciences.Intersect(required)
```

----------------------------------------

TITLE: Installing azcore Module for Go SDK
DESCRIPTION: This command adds the latest version of the azcore module to your go.mod file. It's typically not needed to be run explicitly as azcore is usually installed as a dependency of other client modules.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/Azure/azure-sdk-for-go/sdk/azcore/README.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
go get github.com/Azure/azure-sdk-for-go/sdk/azcore
```

----------------------------------------

TITLE: Creating BigQuery Dataset with Metadata
DESCRIPTION: This code demonstrates the updated method for creating a BigQuery dataset, which now requires DatasetMetadata as the second argument. It also highlights the renaming of the ID field to FullID in DatasetMetadata.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_19

LANGUAGE: go
CODE:
```
Dataset.Create(ctx, DatasetMetadata{})
```

----------------------------------------

TITLE: Table-Driven Testing for Routes with Variables
DESCRIPTION: Demonstrates how to test routes with path variables using table-driven tests. The test creates a new router for each test case to properly evaluate the path variables against the handler.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gorilla/mux/README.md#2025-04-10_snippet_22

LANGUAGE: go
CODE:
```
// endpoints_test.go
func TestMetricsHandler(t *testing.T) {
    tt := []struct{
        routeVariable string
        shouldPass bool
    }{
        {"goroutines", true},
        {"heap", true},
        {"counters", true},
        {"queries", true},
        {"adhadaeqm3k", false},
    }

    for _, tc := range tt {
        path := fmt.Sprintf("/metrics/%s", tc.routeVariable)
        req, err := http.NewRequest("GET", path, nil)
        if err != nil {
            t.Fatal(err)
        }

        rr := httptest.NewRecorder()
	
	// To add the vars to the context, 
	// we need to create a router through which we can pass the request.
	router := mux.NewRouter()
        router.HandleFunc("/metrics/{type}", MetricsHandler)
        router.ServeHTTP(rr, req)

        // In this case, our MetricsHandler returns a non-200 response
        // for a route variable it doesn't know about.
        if rr.Code == http.StatusOK && !tc.shouldPass {
            t.Errorf("handler should have failed on routeVariable %s: got %v want %v",
                tc.routeVariable, rr.Code, http.StatusOK)
        }
    }
}
```

----------------------------------------

TITLE: Android Integration with BoltDB
DESCRIPTION: Shows how to initialize BoltDB in an Android application, including proper file path handling and cloud backup prevention.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_22

LANGUAGE: java
CODE:
```
String path;
if (android.os.Build.VERSION.SDK_INT >=android.os.Build.VERSION_CODES.LOLLIPOP){
    path = getNoBackupFilesDir().getAbsolutePath();
} else{
    path = getFilesDir().getAbsolutePath();
}
Boltmobiledemo.BoltDB boltDB = Boltmobiledemo.NewBoltDB(path)
```

----------------------------------------

TITLE: Installing the Compress Package with Go Get
DESCRIPTION: Command to add the compress package to a Go project using go get. The command fetches the latest version of the package.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/klauspost/compress/README.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
go get github.com/klauspost/compress@latest
```

----------------------------------------

TITLE: IPAM Driver GetCapabilities Response Format
DESCRIPTION: JSON response structure for the /IpamDriver.GetCapabilities endpoint. The response includes boolean flags indicating whether the driver requires MAC addresses and request replay functionality.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/ipam.md#2025-04-10_snippet_5

LANGUAGE: json
CODE:
```
{
	"RequiresMACAddress": bool,
	"RequiresRequestReplay": bool
}
```

----------------------------------------

TITLE: Sample Version Header in Markdown
DESCRIPTION: Example of a version header format used in the changelog showing version numbers and release date.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
## [1.31.0/0.53.0/0.7.0/0.0.10] 2024-10-11
```

----------------------------------------

TITLE: Defining Field Descriptor in Protocol Buffers
DESCRIPTION: This snippet defines the structure of a field descriptor in Protocol Buffers. It includes fields for name, number, label, type, and various options. It also defines enums for field types and labels.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_4

LANGUAGE: protobuf
CODE:
```
field {
  name: "json_name"
  number: 10
  label: LABEL_OPTIONAL
  type: TYPE_STRING
  json_name: "jsonName"
}
field {
  name: "options"
  number: 8
  label: LABEL_OPTIONAL
  type: TYPE_MESSAGE
  type_name: ".google.protobuf.FieldOptions"
  json_name: "options"
}
enum_type {
  name: "Type"
  value {
    name: "TYPE_DOUBLE"
    number: 1
  }
  value {
    name: "TYPE_FLOAT"
    number: 2
  }
  // ... (other enum values)
}
enum_type {
  name: "Label"
  value {
    name: "LABEL_OPTIONAL"
    number: 1
  }
  value {
    name: "LABEL_REQUIRED"
    number: 2
  }
  value {
    name: "LABEL_REPEATED"
    number: 3
  }
}
```

----------------------------------------

TITLE: Disabling Locking in Logger (Markdown)
DESCRIPTION: Demonstrates how to disable the default mutex locking in Logger when it's not needed for thread safety.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/sirupsen/logrus/README.md#2025-04-10_snippet_14

LANGUAGE: markdown
CODE:
```
If you are sure such locking is not needed, you can call logger.SetNoLock() to disable the locking.
```

----------------------------------------

TITLE: Applying Apache License 2.0 Boilerplate Notice
DESCRIPTION: This snippet provides the boilerplate notice to be included when applying the Apache License 2.0 to a project. It includes placeholders for the copyright year and owner's name, as well as the full license text and conditions.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/aws/aws-sdk-go-v2/service/internal/presigned-url/LICENSE.txt#2025-04-10_snippet_0

LANGUAGE: plaintext
CODE:
```
   Copyright [yyyy] [name of copyright owner]

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
```

----------------------------------------

TITLE: Defining IPAMConfig Message in Protocol Buffers for Docker SwarmKit
DESCRIPTION: This snippet defines a message 'IPAMConfig' for Docker SwarmKit, including fields for family, subnet, range, gateway, and reserved. It includes an enum for AddressFamily and a nested message for ReservedEntry.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_42

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "IPAMConfig"
  field {
    name: "family"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.IPAMConfig.AddressFamily"
    json_name: "family"
  }
  field {
    name: "subnet"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "subnet"
  }
  field {
    name: "range"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "range"
  }
  field {
    name: "gateway"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "gateway"
  }
  field {
    name: "reserved"
    number: 5
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.IPAMConfig.ReservedEntry"
    json_name: "reserved"
  }
  nested_type {
    name: "ReservedEntry"
    field {
      name: "key"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "key"
    }
    field {
      name: "value"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "value"
    }
    options {
      map_entry: true
    }
  }
}
```

----------------------------------------

TITLE: Support for Disabling CPU Profile Collection in Go Profiler
DESCRIPTION: Updates to the profiler package to support disabling CPU profile collection and adding logging when profile creation attempts begin, improving flexibility and visibility.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_9

LANGUAGE: markdown
CODE:
```
- profiler:
  - Support disabling CPU profile collection.
  - Log when a profile creation attempt begins.
```

----------------------------------------

TITLE: Container Unpause Response
DESCRIPTION: Example HTTP response for a successful container unpause operation, showing a 204 No Content status code.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_43

LANGUAGE: http
CODE:
```
HTTP/1.1 204 No Content
```

----------------------------------------

TITLE: Custom Time Transformer in Go
DESCRIPTION: Implementation of a custom transformer for handling time.Time struct merging with special zero-value detection logic.
SOURCE: https://github.com/moby/moby/blob/master/vendor/dario.cat/mergo/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
package main

import (
	"fmt"
	"dario.cat/mergo"
    "reflect"
    "time"
)

type timeTransformer struct {
}

func (t timeTransformer) Transformer(typ reflect.Type) func(dst, src reflect.Value) error {
	if typ == reflect.TypeOf(time.Time{}) {
		return func(dst, src reflect.Value) error {
			if dst.CanSet() {
				isZero := dst.MethodByName("IsZero")
				result := isZero.Call([]reflect.Value{})
				if result[0].Bool() {
					dst.Set(src)
				}
			}
			return nil
		}
	}
	return nil
}

type Snapshot struct {
	Time time.Time
	// ...
}

func main() {
	src := Snapshot{time.Now()}
	dest := Snapshot{}
	mergo.Merge(&dest, src, mergo.WithTransformers(timeTransformer{}))
	fmt.Println(dest)
	// Will print
	// { 2018-01-12 01:15:00 +0000 UTC m=+0.000000001 }
}
```

----------------------------------------

TITLE: Implementing Mock TranslationClient in Go
DESCRIPTION: This code demonstrates how to create a mock implementation of the TranslationClient interface for testing purposes. It includes a simple implementation of the TranslateText method that returns a fixed response.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/testing.md#2025-04-10_snippet_4

LANGUAGE: go
CODE:
```
import (
        "context"
        "testing"

        "github.com/googleapis/gax-go/v2"
        translatepb "google.golang.org/genproto/googleapis/cloud/translate/v3"
)

type mockClient struct{}

func (*mockClient) TranslateText(_ context.Context, req *translatepb.TranslateTextRequest, opts ...gax.CallOption) (*translatepb.TranslateTextResponse, error) {
        resp := &translatepb.TranslateTextResponse{
                Translations: []*translatepb.Translation{
                        &translatepb.Translation{
                                TranslatedText: "Hello World",
                        },
                },
        }
        return resp, nil
}

func TestTranslateTextWithAbstractClient(t *testing.T) {
        client := &mockClient{}
        text, err := TranslateTextWithInterfaceClient(client, "Hola Mundo", "en-US")
        if err != nil {
                t.Fatal(err)
        }
        if text != "Hello World" {
                t.Fatalf("got %q, want Hello World", text)
        }
}
```

----------------------------------------

TITLE: Connecting to Remote Syslog via UDP
DESCRIPTION: Shows how to establish a connection to a remote syslog server using unencrypted UDP. This creates a writer for sending log messages to the specified UDP endpoint with the given priority and tag.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/RackSec/srslog/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
w, err := syslog.Dial("udp", "192.168.0.50:514", syslog.LOG_ERR, "testtag")
```

----------------------------------------

TITLE: Converting Between Struct Versions Using the Chain
DESCRIPTION: Demonstrates how to use the conversion chain to transform a V1 struct into a V3 struct. The chain handles intermediate conversions automatically.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/anchore/go-struct-converter/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
v1 := // somehow get a populated v1 struct
v3 := V3{}
chain.Convert(v1, &v3)
```

----------------------------------------

TITLE: Displaying PkgGoDev Badge for OpenTelemetry Attribute Package
DESCRIPTION: Markdown code showing a PkgGoDev badge that links to the Go documentation for the OpenTelemetry attribute package. This badge provides a visual indicator and quick access to the official package documentation.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/attribute/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/attribute)](https://pkg.go.dev/go.opentelemetry.io/otel/attribute)
```

----------------------------------------

TITLE: Displaying PkgGoDev Badge for OpenTelemetry Semantic Conventions in Markdown
DESCRIPTION: Markdown code for displaying a PkgGoDev badge that links to the documentation for the OpenTelemetry semantic conventions package v1.26.0. The badge provides a visual indication of the package's availability on pkg.go.dev.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/semconv/v1.26.0/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/semconv/v1.26.0)](https://pkg.go.dev/go.opentelemetry.io/otel/semconv/v1.26.0)
```

----------------------------------------

TITLE: Defining RequestPool Function Signature for IPAM Driver in Go
DESCRIPTION: Function signature for requesting an address pool from the IPAM driver. It handles address space, pool allocation, and returns pool identifiers and network information.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/ipam.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
RequestPool(addressSpace, pool, subPool string, options map[string]string, v6 bool) (string, *net.IPNet, map[string]string, error)
```

----------------------------------------

TITLE: Defining Enum Descriptor in Protocol Buffers
DESCRIPTION: This snippet defines the structure of an enum descriptor in Protocol Buffers. It includes fields for name, values, options, and reserved ranges.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_6

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "EnumDescriptorProto"
  field {
    name: "name"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "name"
  }
  field {
    name: "value"
    number: 2
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".google.protobuf.EnumValueDescriptorProto"
    json_name: "value"
  }
  // ... (other fields)
  nested_type {
    name: "EnumReservedRange"
    field {
      name: "start"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_INT32
      json_name: "start"
    }
    field {
      name: "end"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_INT32
      json_name: "end"
    }
  }
}
```

----------------------------------------

TITLE: FIFO Operations Interface - Go
DESCRIPTION: Core interface definitions for FIFO operations including opening, reading, writing, and closing FIFOs. Includes support for context cancellation and various flags for controlling FIFO behavior.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/fifo/readme.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
// OpenFifo opens a fifo. Returns io.ReadWriteCloser.
// Context can be used to cancel this function until open(2) has not returned.
// Accepted flags:
// - syscall.O_CREAT - create new fifo if one doesn't exist
// - syscall.O_RDONLY - open fifo only from reader side
// - syscall.O_WRONLY - open fifo only from writer side
// - syscall.O_RDWR - open fifo from both sides, never block on syscall level
// - syscall.O_NONBLOCK - return io.ReadWriteCloser even if other side of the
//     fifo isn't open. read/write will be connected after the actual fifo is
//     open or after fifo is closed.
func OpenFifo(ctx context.Context, fn string, flag int, perm os.FileMode) (io.ReadWriteCloser, error)


// Read from a fifo to a byte array.
func (f *fifo) Read(b []byte) (int, error)


// Write from byte array to a fifo.
func (f *fifo) Write(b []byte) (int, error)


// Close the fifo. Next reads/writes will error. This method can also be used
// before open(2) has returned and fifo was never opened.
func (f *fifo) Close() error
```

----------------------------------------

TITLE: Thread-Safe File Writing with O_APPEND Flag (Markdown)
DESCRIPTION: Explains a scenario where logger.Out can be thread-safe without additional locking, using the O_APPEND flag for file operations.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/sirupsen/logrus/README.md#2025-04-10_snippet_15

LANGUAGE: markdown
CODE:
```
2) logger.Out is an os.File handler opened with `O_APPEND` flag, and every write is smaller than 4k. (This allows multi-thread/multi-process writing)
```

----------------------------------------

TITLE: Running Go tests with race detection
DESCRIPTION: Command to run the go-toml test suite with race detection enabled.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/pelletier/go-toml/v2/CONTRIBUTING.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
go test -race ./...
```

----------------------------------------

TITLE: Creating New Reader Instances in Go
DESCRIPTION: Functions for creating new Reader instances with different initialization options.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/philhofer/fwd/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
func NewReader(r io.Reader) *Reader

func NewReaderSize(r io.Reader, n int) *Reader
```

----------------------------------------

TITLE: Adding Empty Function for KeyValue
DESCRIPTION: Adds Empty function to return a KeyValue for an empty value in logging.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_6

LANGUAGE: Go
CODE:
```
Empty function in go.opentelemetry.io/otel/log to return a KeyValue for an empty value
```

----------------------------------------

TITLE: Defining Oneof Descriptor in Protocol Buffers
DESCRIPTION: This snippet defines the structure of a oneof descriptor in Protocol Buffers. It includes fields for name and options.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_5

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "OneofDescriptorProto"
  field {
    name: "name"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "name"
  }
  field {
    name: "options"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".google.protobuf.OneofOptions"
    json_name: "options"
  }
}
```

----------------------------------------

TITLE: Installing Google Cloud Long-Running Operations Library in Go
DESCRIPTION: Command to install the Google Cloud long-running operations helper library using Go's package manager. This library provides utilities for working with operations that may take extended time to complete.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/longrunning/README.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
go get cloud.google.com/go/longrunning
```

----------------------------------------

TITLE: Building Linux Guest Agent in PowerShell
DESCRIPTION: Commands to build the Linux guest agent by setting GOOS environment variable to Linux and building from the gcs command directory.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/Microsoft/hcsshim/README.md#2025-04-10_snippet_0

LANGUAGE: powershell
CODE:
```
C:\> $env:GOOS="linux"
C:\> go build .\cmd\gcs\
```

----------------------------------------

TITLE: Importing srslog Package in Go
DESCRIPTION: Shows how to switch from Go's standard syslog library to the srslog package. The import statement replaces the standard log/syslog package with the GitHub-hosted srslog package.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/RackSec/srslog/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
import(
    //"log/syslog"
    syslog "github.com/RackSec/srslog"
)
```

----------------------------------------

TITLE: Adding Writer to Zap IO Package
DESCRIPTION: Adds zapio.Writer to use a Zap logger as an io.Writer.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.uber.org/zap/CHANGELOG.md#2025-04-10_snippet_5

LANGUAGE: Markdown
CODE:
```
[#971][]: Add `zapio.Writer` to use a Zap logger as an `io.Writer`.
```

----------------------------------------

TITLE: Verifying signed-off commit in go-struct-converter
DESCRIPTION: This shell command and its output demonstrate how to check that a commit was properly signed off by examining the git log.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/anchore/go-struct-converter/CONTRIBUTING.md#2025-04-10_snippet_4

LANGUAGE: shell
CODE:
```
$ git log -1
commit 37ceh170e4hb283bb73d958f2036ee5k07e7fde7 (HEAD -> issue-35, origin/main, main)
Author: John Doe <john.doe@example.com>
Date:   Mon Aug 1 11:27:13 2020 -0400

    this is a commit message

    Signed-off-by: John Doe <john.doe@example.com>
```

----------------------------------------

TITLE: Referencing Docker CLI Compilation in Dockerfile
DESCRIPTION: This snippet shows the line in the Dockerfile where the Docker CLI is now compiled after being moved to a separate repository.
SOURCE: https://github.com/moby/moby/blob/master/reports/2017-05-08.md#2025-04-10_snippet_0

LANGUAGE: Markdown
CODE:
```
[Dockerfile](https://github.com/moby/moby/blob/a762ceace4e8c1c7ce4fb582789af9d8074be3e1/Dockerfile#L248)
```

----------------------------------------

TITLE: Defining File Options in Protocol Buffers
DESCRIPTION: This snippet defines the structure of file options in Protocol Buffers. It includes various configuration options for different programming languages and runtime behaviors.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_9

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "FileOptions"
  field {
    name: "java_package"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "javaPackage"
  }
  field {
    name: "java_outer_classname"
    number: 8
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "javaOuterClassname"
  }
  // ... (other fields)
  enum_type {
    name: "OptimizeMode"
    value {
      name: "SPEED"
      number: 1
    }
    value {
      name: "CODE_SIZE"
      number: 2
    }
    value {
      name: "LITE_RUNTIME"
      number: 3
    }
  }
  extension_range {
    start: 1000
    end: 536870912
  }
  reserved_range {
    start: 38
    end: 39
  }
}
```

----------------------------------------

TITLE: Implementing Bidirectional Struct Conversions
DESCRIPTION: Defines struct versions with both forward and backward migration capabilities. This implementation allows conversions in either direction between V1, V2, and V3 structs.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/anchore/go-struct-converter/README.md#2025-04-10_snippet_4

LANGUAGE: go
CODE:
```
// --------- V1 struct definition below ---------

type V1 struct {
  Name     string
  OldField string
}

func (to *V1) ConvertFrom(from interface{}) error {
  if from, ok := from.(V2); ok { // backward migration
    to.OldField = from.NewField
  }
  return nil
}

// --------- V2 struct definition below ---------

type V2 struct {
  Name     string
  NewField string
}

func (to *V2) ConvertFrom(from interface{}) error {
  if from, ok := from.(V1); ok { // forward migration
    to.NewField = from.OldField
  }
  if from, ok := from.(V3); ok { // backward migration
    to.NewField = from.FinalField[0]
  }
  return nil
}

// --------- V3 struct definition below ---------

type V3 struct {
  Name       []string
  FinalField []string
}

func (to *V3) ConvertFrom(from interface{}) error {
  if from, ok := from.(V2); ok { // forward migration
    to.FinalField = []string{from.NewField}
  }
  return nil
}
```

----------------------------------------

TITLE: Displaying Supported Versions in Markdown Table
DESCRIPTION: This markdown table shows which versions of the project are currently supported for security updates. It uses checkmarks and X marks to indicate support status.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/pelletier/go-toml/v2/SECURITY.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
| Version    | Supported          |
| ---------- | ------------------ |
| Latest 2.x | :white_check_mark: |
| All 1.x    | :x:                |
| All 0.x    | :x:                |
```

----------------------------------------

TITLE: Cloning Moby Fork Repository
DESCRIPTION: Command to clone a forked Moby repository to local machine
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/set-up-git.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
$ git clone https://github.com/YOUR_ACCOUNT/moby.git moby-fork
```

----------------------------------------

TITLE: Bug Fix - Optional X-Cloud-Trace-Context Fields
DESCRIPTION: Fix to allow X-Cloud-Trace-Context fields to be optional in logging implementation.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/logging/CHANGES.md#2025-04-10_snippet_1

LANGUAGE: markdown
CODE:
```
### Bug Fixes

* **logging:** allow X-Cloud-Trace-Context fields to be optional ([#3062](https://www.github.com/googleapis/google-cloud-go/issues/3062)) ([7ff03cf](https://www.github.com/googleapis/google-cloud-go/commit/7ff03cf9a544e753de5b034e18339ecf517d2193))
```

----------------------------------------

TITLE: Updating BigQuery Table Access Pattern
DESCRIPTION: Changes to the way tables are accessed in BigQuery, replacing Client.OpenTable with DatasetInProject method chain.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_24

LANGUAGE: go
CODE:
```
client.OpenTable("project", "dataset", "table")
```

LANGUAGE: go
CODE:
```
client.DatasetInProject("project", "dataset").Table("table")
```

----------------------------------------

TITLE: Running Go Tests Command
DESCRIPTION: Command to run the test suite for the go-toml project using Go's built-in test tool
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/pelletier/go-toml/CONTRIBUTING.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
go test ./...
```

----------------------------------------

TITLE: Various Fuzzing API Examples
DESCRIPTION: Demonstrates different API calls for fuzzing various data types including strings, integers, bytes, booleans, maps, and files
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/AdaLogics/go-fuzz-headers/README.md#2025-04-10_snippet_4

LANGUAGE: go
CODE:
```
createdString, err := f.GetString() // Gets a string
createdInt, err := f.GetInt() // Gets an integer
createdByte, err := f.GetByte() // Gets a byte
createdBytes, err := f.GetBytes() // Gets a byte slice
createdBool, err := f.GetBool() // Gets a boolean
err := f.FuzzMap(target_map) // Fills a map
createdTarBytes, err := f.TarBytes() // Gets bytes of a valid tar archive
err := f.CreateFiles(inThisDir) // Fills inThisDir with files
createdString, err := f.GetStringFrom("anyCharInThisString", ofThisLength) // Gets a string that consists of chars from "anyCharInThisString" and has the exact length "ofThisLength"
```

----------------------------------------

TITLE: Git Tag Command for YAML Project Release
DESCRIPTION: Command used by project owners to create a signed git tag for a new release version, which includes the changelog information.
SOURCE: https://github.com/moby/moby/blob/master/vendor/sigs.k8s.io/yaml/RELEASE.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
git tag -s $VERSION
```

----------------------------------------

TITLE: Running Tests in Cobra Project
DESCRIPTION: Commands for running tests in the Cobra project, showing both the go test command and make test options.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/spf13/cobra/CONTRIBUTING.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
go test ./...
```

LANGUAGE: bash
CODE:
```
make test
```

----------------------------------------

TITLE: Listing Docker Networks and Services
DESCRIPTION: Commands to list Docker networks and services on the host, showing the default networks and empty service list.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/vagrant.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
vagrant@net-1:~$ docker network ls
$ docker service ls
```

----------------------------------------

TITLE: Defining ttrpc Data Flags in Markdown Table
DESCRIPTION: Presents a table of ttrpc data flags, including their numeric values, names, and descriptions. These flags are used to indicate the state of the data stream and whether the message contains actual data.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/ttrpc/PROTOCOL.md#2025-04-10_snippet_3

LANGUAGE: markdown
CODE:
```
| Flag | Name            | Description                       |
|------|-----------------|-----------------------------------|
| 0x01 | `remote closed` | No more data expected from remote |
| 0x04 | `no data`       | This message does not have data   |
```

----------------------------------------

TITLE: Query Cache GET Endpoint
DESCRIPTION: GET endpoint for querying cache entries using key prefixes and version namespacing. Returns cache key, scope, and archive location for downloading the cached data.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/tonistiigi/go-actions-cache/api.md#2025-04-10_snippet_0

LANGUAGE: http
CODE:
```
GET /cache?keys=<comma-separated-keys>&version=<namespace-value>
```

----------------------------------------

TITLE: Setting Up Prometheus Exporter in OpenTelemetry Go
DESCRIPTION: This example demonstrates how to create and configure a Prometheus exporter using the OpenTelemetry Go SDK, including custom options.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_23

LANGUAGE: Go
CODE:
```
import (
    "go.opentelemetry.io/otel/exporters/prometheus"
    prom "github.com/prometheus/client_golang/prometheus"
)

exporter, err := prometheus.New(
    prometheus.WithRegisterer(prom.NewRegistry()),
    prometheus.WithoutUnits(),
    prometheus.WithAggregationSelector(customAggregationSelector),
)
if err != nil {
    // Handle error
}
```

----------------------------------------

TITLE: Independent Validator Usage in Go
DESCRIPTION: Example showing how to create and use a Validator instance independently of token parsing. Demonstrates setting up validation with custom leeway options.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/golang-jwt/jwt/v5/MIGRATION_GUIDE.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
var v = jwt.NewValidator(jwt.WithLeeway(5*time.Second))
v.Validate(myClaims)
```

----------------------------------------

TITLE: Requesting Container with Size Information in Docker API
DESCRIPTION: Makes an HTTP GET request to retrieve container information with additional size data. The size=1 query parameter requests disk usage information for the container.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_14

LANGUAGE: HTTP
CODE:
```
GET /v1.24/containers/4fa6e0f0c678/json?size=1 HTTP/1.1
```

----------------------------------------

TITLE: Specifying codespell Package Version
DESCRIPTION: Defines the exact version requirement for the codespell Python package used for spell checking. The package version is pinned to 2.3.0 for consistency.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/requirements.txt#2025-04-10_snippet_0

LANGUAGE: plaintext
CODE:
```
codespell==2.3.0
```

----------------------------------------

TITLE: OpenTelemetry Compatibility Test Matrix
DESCRIPTION: Table showing the compatibility testing matrix across different operating systems, Go versions and architectures used in CI testing.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_40

LANGUAGE: markdown
CODE:
```
| OS      | Go Version | Architecture |
| ------- | ---------- | ------------ |
| Ubuntu  | 1.15       | amd64        |
| Ubuntu  | 1.14       | amd64        |
| Ubuntu  | 1.15       | 386          |
| Ubuntu  | 1.14       | 386          |
| MacOS   | 1.15       | amd64        |
| MacOS   | 1.14       | amd64        |
| Windows | 1.15       | amd64        |
| Windows | 1.14       | amd64        |
| Windows | 1.15       | 386          |
| Windows | 1.14       | 386          |
```

----------------------------------------

TITLE: Creating BigQuery Table with Standard SQL
DESCRIPTION: This snippet illustrates how to create a BigQuery table using Standard SQL as the default query syntax. It shows the updated method signature for Table.Create, which now takes TableMetadata as the second argument.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_18

LANGUAGE: go
CODE:
```
Table.Create(ctx, TableMetadata{})
```

----------------------------------------

TITLE: Creating Custom Overlay Network
DESCRIPTION: Create a new overlay network named 'foobar' and list networks to verify its creation.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/vagrant.md#2025-04-10_snippet_4

LANGUAGE: bash
CODE:
```
$ docker network create -d overlay foobar
$ docker network ls
```

----------------------------------------

TITLE: Idempotent Batch Operation in bbolt
DESCRIPTION: Go code showing a proper way to use DB.Batch() with idempotent operations and handling side effects in bbolt.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_9

LANGUAGE: go
CODE:
```
var id uint64
err := db.Batch(func(tx *bolt.Tx) error {
	// Find last key in bucket, decode as bigendian uint64, increment
	// by one, encode back to []byte, and add new key.
	...
	id = newValue
	return nil
})
if err != nil {
	return ...
}
fmt.Println("Allocated ID %d", id)
```

----------------------------------------

TITLE: Importing Mousetrap Package in Go
DESCRIPTION: This snippet shows the import of the mousetrap package, which is used for creating Windows executables that can be double-clicked.
SOURCE: https://github.com/moby/moby/blob/master/vendor/modules.txt#2025-04-10_snippet_2

LANGUAGE: Go
CODE:
```
github.com/inconshreveable/mousetrap
```

----------------------------------------

TITLE: Environment Variable Configuration Example
DESCRIPTION: Example shell configuration for setting required test environment variables
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CONTRIBUTING.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
#### START GO SDK Test Variables
# Developers Console project's ID (e.g. bamboo-shift-455) for the general project.
export GCLOUD_TESTS_GOLANG_PROJECT_ID=your-project
```

----------------------------------------

TITLE: Running Linter Across Modules
DESCRIPTION: PowerShell script to run golangci-lint across different modules with multiple GOOS values.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/Microsoft/hcsshim/README.md#2025-04-10_snippet_7

LANGUAGE: powershell
CODE:
```
> foreach ( $goos in ('windows', 'linux') ) {
    foreach ( $repo in ('.', 'test') ) {
        pwsh -Command "cd $repo && go env -w GOOS=$goos && golangci-lint.exe run --verbose"
    }
}
```

----------------------------------------

TITLE: Listing Processes in a cgroup (v1)
DESCRIPTION: Lists all processes in a cgroup, with an option to recursively include processes in child cgroups. This example uses the Devices subsystem.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/README.md#2025-04-10_snippet_6

LANGUAGE: go
CODE:
```
processes, err := control.Processes(cgroup1.Devices, recursive)
```

----------------------------------------

TITLE: Using CircBuf Package to Create and Write to a Circular Buffer in Go
DESCRIPTION: This snippet demonstrates how to create a new circular buffer with a fixed size of 6 bytes and write a string to it. It then verifies that only the last 6 bytes are retained in the buffer.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/armon/circbuf/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
buf, _ := NewBuffer(6)
buf.Write([]byte("hello world"))

if string(buf.Bytes()) != " world" {
    panic("should only have last 6 bytes!")
}
```

----------------------------------------

TITLE: Using HttpSnoop to Capture HTTP Metrics in Go
DESCRIPTION: Example showing how to wrap an HTTP handler with HttpSnoop to capture and log metrics for each request. The code demonstrates capturing response code, duration, and bytes written while maintaining handler functionality.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/felixge/httpsnoop/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
// myH is your app's http handler, perhaps a http.ServeMux or similar.
var myH http.Handler
// wrappedH wraps myH in order to log every request.
wrappedH := http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
	m := httpsnoop.CaptureMetrics(myH, w, r)
	log.Printf(
		"%s %s (code=%d dt=%s written=%d)",
		r.Method,
		r.URL,
		m.Code,
		m.Duration,
		m.Written,
	)
})
http.ListenAndServe(":8080", wrappedH)
```

----------------------------------------

TITLE: Defining Peer and WeightedPeer Messages in Protocol Buffers
DESCRIPTION: Defines message types 'Peer' and 'WeightedPeer' for representing network peers in Docker SwarmKit. The WeightedPeer includes a weight field, possibly for load balancing or routing purposes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_47

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "Peer"
  field {
    name: "node_id"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "nodeId"
  }
  field {
    name: "addr"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "addr"
  }
}

message_type {
  name: "WeightedPeer"
  field {
    name: "peer"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Peer"
    json_name: "peer"
  }
  field {
    name: "weight"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_INT64
    json_name: "weight"
  }
}
```

----------------------------------------

TITLE: Displaying PkgGoDev Badge for OpenTelemetry Semantic Conventions in Markdown
DESCRIPTION: This code snippet shows how to embed a PkgGoDev badge in a Markdown file. The badge links to the documentation for the OpenTelemetry Semantic Conventions package version 1.20.0 on pkg.go.dev.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/semconv/v1.20.0/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/semconv/v1.20.0)](https://pkg.go.dev/go.opentelemetry.io/otel/semconv/v1.20.0)
```

----------------------------------------

TITLE: Markdown Release Notes
DESCRIPTION: Release notes for Google Cloud Go logging client, formatted in Markdown with version numbers, feature additions, bug fixes and dependency updates.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/logging/CHANGES.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
# Changes

## [1.9.0](https://github.com/googleapis/google-cloud-go/compare/logging/v1.8.1...logging/v1.9.0) (2023-12-12)

### Features

* **logging:** Add Cloud Run job monitored resource
* **logging:** Automatic project detection in logging.NewClient()

### Bug Fixes

* **logging:** Added marshalling methods for proto fields in structuredLogEntry
* **logging:** Bump google.golang.org/api to v0.149.0
* **logging:** Update golang.org/x/net to v0.17.0
```

----------------------------------------

TITLE: Type Assertion for Multierror in Go
DESCRIPTION: Demonstrates how to check and access the underlying errors list using type assertion when working with multierror values.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/hashicorp/go-multierror/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
if err := something(); err != nil {
	if merr, ok := err.(*multierror.Error); ok {
		// Use merr.Errors
	}
}
```

----------------------------------------

TITLE: Building Containerd Shim on Windows
DESCRIPTION: PowerShell commands to build the Containerd shim for Windows by setting GOOS environment variable and building from the containerd-shim-runhcs-v1 directory.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/Microsoft/hcsshim/README.md#2025-04-10_snippet_3

LANGUAGE: powershell
CODE:
```
C:\> $env:GOOS="windows"
C:\> go build .\cmd\containerd-shim-runhcs-v1
```

----------------------------------------

TITLE: Defining Unreleased Changes Section in Markdown
DESCRIPTION: This snippet creates a section for unreleased changes in the changelog using Markdown formatting.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/grpc-ecosystem/go-grpc-prometheus/CHANGELOG.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
## [Unreleased]
```

----------------------------------------

TITLE: Building Linux Guest Agent in Shell
DESCRIPTION: Command to build the Linux guest agent on a Linux machine using go build command.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/Microsoft/hcsshim/README.md#2025-04-10_snippet_1

LANGUAGE: shell
CODE:
```
> go build ./cmd/gcs
```

----------------------------------------

TITLE: Basic SecureJoin Implementation with chroot
DESCRIPTION: A trivial implementation of SecureJoin using chroot on GNU/Linux systems. This example requires root privileges and uses the readlink command to resolve paths.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/cyphar/filepath-securejoin/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
package securejoin

import (
	"os/exec"
	"path/filepath"
)

func SecureJoin(root, unsafePath string) (string, error) {
	unsafePath = string(filepath.Separator) + unsafePath
	cmd := exec.Command("chroot", root,
		"readlink", "--canonicalize-missing", "--no-newline", unsafePath)
	output, err := cmd.CombinedOutput()
	if err != nil {
		return "", err
	}
	expanded := string(output)
	return filepath.Join(root, expanded), nil
}
```

----------------------------------------

TITLE: Translating Text with Concrete Client in Go
DESCRIPTION: This function demonstrates how to use a concrete TranslationClient from the cloud.google.com/go/translate/apiv3 package to translate text. It takes a client, text to translate, and target language as input, and returns the translated text.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/testing.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
import (
        "context"
        "fmt"
        "log"
        "os"

        translate "cloud.google.com/go/translate/apiv3"
        "github.com/googleapis/gax-go/v2"
        translatepb "google.golang.org/genproto/googleapis/cloud/translate/v3"
)

func TranslateTextWithConcreteClient(client *translate.TranslationClient, text string, targetLang string) (string, error) {
        ctx := context.Background()
        log.Printf("Translating %q to %q", text, targetLang)
        req := &translatepb.TranslateTextRequest{
                Parent:             fmt.Sprintf("projects/%s/locations/global", os.Getenv("GOOGLE_CLOUD_PROJECT")),
                TargetLanguageCode: "en-US",
                Contents:           []string{text},
        }
        resp, err := client.TranslateText(ctx, req)
        if err != nil {
                return "", fmt.Errorf("unable to translate text: %v", err)
        }
        translations := resp.GetTranslations()
        if len(translations) != 1 {
                return "", fmt.Errorf("expected only one result, got %d", len(translations))
        }
        return translations[0].TranslatedText, nil
}
```

----------------------------------------

TITLE: Custom Token Source Authorization
DESCRIPTION: Creates a new client using a custom OAuth2 token source for authentication
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/README.md#2025-04-10_snippet_4

LANGUAGE: go
CODE:
```
tokenSource := ...
client, err := storage.NewClient(ctx, option.WithTokenSource(tokenSource))
```

----------------------------------------

TITLE: Digest Type Methods in Go
DESCRIPTION: Key methods of the Digest type implementing hash.Hash64 interface, allowing incremental hashing of bytes and strings.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/cespare/xxhash/v2/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
func (*Digest) Write([]byte) (int, error)
func (*Digest) WriteString(string) (int, error)
func (*Digest) Sum64() uint64
```

----------------------------------------

TITLE: Container Size Response in Docker API
DESCRIPTION: JSON response showing container information with size metrics included. SizeRw represents the size of files that have been created or changed, and SizeRootFs shows the total size of all files in the container.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_15

LANGUAGE: JSON
CODE:
```
{
....
"SizeRw": 0,
"SizeRootFs": 972,
....
}
```

----------------------------------------

TITLE: Running benchmark tests with ci.sh script
DESCRIPTION: Command to verify performance impact of code changes using the project's CI script.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/pelletier/go-toml/v2/CONTRIBUTING.md#2025-04-10_snippet_4

LANGUAGE: bash
CODE:
```
./ci.sh benchmark -d v2
```

----------------------------------------

TITLE: Reading /proc Filesystem in Go for Prometheus
DESCRIPTION: This code snippet demonstrates how to read a file from the /proc filesystem in Go, using the util.ReadFileNoStat function to avoid issues with continuously changing files.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/prometheus/procfs/CONTRIBUTING.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
data, err := util.ReadFileNoStat("/proc/cpuinfo")
if err != nil {
    return err
}
reader := bytes.NewReader(data)
scanner := bufio.NewScanner(reader)
```

----------------------------------------

TITLE: Importing In-Toto Golang Package in Go
DESCRIPTION: This snippet shows the import of the in-toto-golang package and its subpackages. It includes the core in-toto package and SLSA provenance-related subpackages.
SOURCE: https://github.com/moby/moby/blob/master/vendor/modules.txt#2025-04-10_snippet_1

LANGUAGE: Go
CODE:
```
github.com/in-toto/in-toto-golang/in_toto
github.com/in-toto/in-toto-golang/in_toto/slsa_provenance/common
github.com/in-toto/in-toto-golang/in_toto/slsa_provenance/v0.1
github.com/in-toto/in-toto-golang/in_toto/slsa_provenance/v0.2
```

----------------------------------------

TITLE: Running Container with Containerd
DESCRIPTION: PowerShell command to run a Windows container using the Containerd runtime.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/Microsoft/hcsshim/README.md#2025-04-10_snippet_5

LANGUAGE: powershell
CODE:
```
C:\> ctr.exe run --runtime io.containerd.runhcs.v1 --rm mcr.microsoft.com/windows/nanoserver:2004 windows-test cmd /c "echo Hello World!"
```

----------------------------------------

TITLE: Generating Containerd Config
DESCRIPTION: PowerShell command to generate and save a default Containerd configuration file.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/Microsoft/hcsshim/README.md#2025-04-10_snippet_4

LANGUAGE: powershell
CODE:
```
.\containerd.exe config default | Out-File "C:\Program Files\containerd\config.toml" -Encoding ascii
```

----------------------------------------

TITLE: Example Go Code Range Reader Usage (Storage)
DESCRIPTION: Example showing how to read the last N bytes of a file using negative range in Go Storage client.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_12

LANGUAGE: go
CODE:
```
obj.NewRangeReader(ctx, -10, -1)
```

----------------------------------------

TITLE: Fuzzing Nested Structs Example
DESCRIPTION: Shows how to fuzz nested structs with multiple levels of structure
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/AdaLogics/go-fuzz-headers/README.md#2025-04-10_snippet_2

LANGUAGE: go
CODE:
```
type PersonI struct {
    Name       string
    Age        int
    BestFriend PersonII
}
type PersonII struct {
    Name string
    Age  int
}
p := PersonI{}
err := f.GenerateStruct(&p)
```

----------------------------------------

TITLE: Defining AcceptancePolicy Message in Protocol Buffers
DESCRIPTION: Defines a message type 'AcceptancePolicy' with a field for policies. It includes a nested message 'RoleAdmissionPolicy' for defining admission policies based on node roles in Docker SwarmKit.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_49

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "AcceptancePolicy"
  field {
    name: "policies"
    number: 1
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.AcceptancePolicy.RoleAdmissionPolicy"
    json_name: "policies"
  }
  nested_type {
    name: "RoleAdmissionPolicy"
    field {
      name: "role"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".docker.swarmkit.v1.NodeRole"
      json_name: "role"
    }
    field {
      name: "autoaccept"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "autoaccept"
    }
    field {
      name: "secret"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".docker.swarmkit.v1.AcceptancePolicy.RoleAdmissionPolicy.Secret"
      json_name: "secret"
    }
    nested_type {
      name: "Secret"
      field {
        name: "data"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_BYTES
        json_name: "data"
      }
      field {
        name: "alg"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "alg"
      }
    }
  }
}
```

----------------------------------------

TITLE: ASCII Art Diagram of GetEntries Behavior
DESCRIPTION: ASCII diagram illustrating the old and new behavior of get-entries requests, showing how requests are aligned with entry boundaries for improved caching.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/google/certificate-transparency-go/CHANGELOG.md#2025-04-10_snippet_1

LANGUAGE: text
CODE:
```
Old behaviour:
             1         2         3
             0         0         0
Entries>-----|---------|---------|----...
Client A -------|---------|----------|
...
Client B --|--------|---------|-------...
           ^        ^         ^
           `--------`---------`---- requests

With coercion (max batch = 10 entries):
             1         2         3
             0         0         0
Entries>-----|---------|---------|----...
Client A ----X---------|---------|...
Client B --|-X---------|---------|-------...
             ^
             `-- Requests truncated
```

----------------------------------------

TITLE: Loading and Accessing TOML Data
DESCRIPTION: Example showing how to load TOML content from a string and access values using direct path access and intermediate objects.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/pelletier/go-toml/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
config, _ := toml.Load(`
[postgres]
user = "pelletier"
password = "mypassword"`)
// retrieve data directly
user := config.Get("postgres.user").(string)

// or using an intermediate object
postgresConfig := config.Get("postgres").(*toml.Tree)
password := postgresConfig.Get("password").(string)
```

----------------------------------------

TITLE: Adding Dependencies in Go Modules for Prometheus
DESCRIPTION: These commands demonstrate how to add or update dependencies using Go modules in the Prometheus project. It includes picking the latest tagged release or a specific version.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/prometheus/procfs/CONTRIBUTING.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
# Pick the latest tagged release.
go get example.com/some/module/pkg

# Pick a specific version.
go get example.com/some/module/pkg@vX.Y.Z
```

----------------------------------------

TITLE: Formal structure of Moby commit messages
DESCRIPTION: Specifies the formal structure of commit messages for the Moby project, including the subject line, blank lines, explanation, and footer format.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/godbus/dbus/v5/CONTRIBUTING.md#2025-04-10_snippet_1

LANGUAGE: markdown
CODE:
```
<subsystem>: <what changed>
<BLANK LINE>
<why this change was made>
<BLANK LINE>
<footer>
```

----------------------------------------

TITLE: Checking Windows Build Version in PowerShell
DESCRIPTION: This PowerShell command retrieves the Windows build version, which must be at least 14393 for Moby development.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/software-req-win.md#2025-04-10_snippet_0

LANGUAGE: powershell
CODE:
```
PS C:\> $(gin).WindowsBuildLabEx
```

----------------------------------------

TITLE: Installing and Running Codebase Checks
DESCRIPTION: Commands for installing golangci-lint and running code quality checks through the presubmit script. The presubmit script handles code generation, building, testing and linting.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/google/certificate-transparency-go/README.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
# Install golangci-lint
go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.46.1

# Run code generation, build, test and linters
./scripts/presubmit.sh

# Run build, test and linters but skip code generation
./scripts/presubmit.sh  --no-generate

# Or just run the linters alone:
golangci-lint run
```

----------------------------------------

TITLE: Merging Fields in Firestore Document Update
DESCRIPTION: This code shows how to use the renamed Merge method (previously MergePaths) to update specific fields in a Firestore document. It requires the use of FieldPaths to specify which fields to merge.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_17

LANGUAGE: go
CODE:
```
docref.Update(ctx, []firestore.Update{{Path: "Field", Value: aStruct.Field}})
```

----------------------------------------

TITLE: Example Go Spanner Auth Scopes Usage
DESCRIPTION: Example showing how to specify cloud API access scopes when starting a Spanner instance.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_13

LANGUAGE: go
CODE:
```
StartInstance /* allowing specification of cloud API access scopes */
```

----------------------------------------

TITLE: Advanced Route Matching in Go using Gorilla Mux
DESCRIPTION: Demonstrates various advanced route matching techniques, including path prefixes, HTTP methods, schemes, headers, and custom matcher functions.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gorilla/mux/README.md#2025-04-10_snippet_5

LANGUAGE: go
CODE:
```
r.PathPrefix("/products/")

r.Methods("GET", "POST")

r.Schemes("https")

r.Headers("X-Requested-With", "XMLHttpRequest")

r.Queries("key", "value")

r.MatcherFunc(func(r *http.Request, rm *RouteMatch) bool {
    return r.ProtoMajor == 0
})
```

----------------------------------------

TITLE: Running Google Cloud SDK Integration Tests in Shell
DESCRIPTION: Shell commands demonstrating how to run integration tests for Google Cloud SDK. The examples show how to run all tests or tests for specific modules like datastore. These commands are to be executed after setting up the necessary environment variables.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CONTRIBUTING.md#2025-04-10_snippet_4

LANGUAGE: sh
CODE:
```
$ go test -v ./...
```

----------------------------------------

TITLE: Commit References in Markdown
DESCRIPTION: Markdown formatted commit references with issue numbers and commit hashes for tracking specific changes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/googleapis/gax-go/v2/CHANGES.md#2025-04-10_snippet_1

LANGUAGE: markdown
CODE:
```
[#291](https://github.com/googleapis/gax-go/issues/291)) ([11503ed](https://github.com/googleapis/gax-go/commit/11503ed98df4ae1bbdedf91ff64d47e63f187d68))
```

----------------------------------------

TITLE: Creating PackageURL from Components in Go
DESCRIPTION: Example showing how to create a new PackageURL instance by specifying its individual components (type, namespace, name, version, qualifiers, and subpath).
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/package-url/packageurl-go/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
package main

import (
	"fmt"

	"github.com/package-url/packageurl-go"
)

func main() {
	instance := packageurl.NewPackageURL("test", "ok", "name", "version", nil, "")
	fmt.Printf("%s", instance.ToString())
}
```

----------------------------------------

TITLE: Latest Feature Release Note (v1.16.0)
DESCRIPTION: Release note introducing DisableDefaultTimeout config option for IMDS calls.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/aws/aws-sdk-go-v2/feature/ec2/imds/CHANGELOG.md#2025-04-10_snippet_1

LANGUAGE: markdown
CODE:
```
# v1.16.0 (2024-03-21)

* **Feature**: Add config switch `DisableDefaultTimeout` that allows you to disable the default operation timeout (5 seconds) for IMDS calls.
```

----------------------------------------

TITLE: Git Commit Sign-off Format for go-units Contributions
DESCRIPTION: The required format for signing off on git commits when contributing to the go-units project. Contributors must add this line to every commit message using their real name and email address.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/go-units/CONTRIBUTING.md#2025-04-10_snippet_1

LANGUAGE: text
CODE:
```
Signed-off-by: Joe Smith <joe.smith@email.com>
```

----------------------------------------

TITLE: Using go mod to Replace Google Domain Dependencies
DESCRIPTION: Provides commands to work around access issues to google.golang.org domain using Go modules. This solution creates aliases for golang.org packages using the replace feature of go mod.
SOURCE: https://github.com/moby/moby/blob/master/vendor/google.golang.org/grpc/README.md#2025-04-10_snippet_1

LANGUAGE: sh
CODE:
```
go mod edit -replace=google.golang.org/grpc=github.com/grpc/grpc-go@latest
go mod tidy
go mod vendor
go build -mod=vendor
```

----------------------------------------

TITLE: Installing sockaddr CLI Utility in Go
DESCRIPTION: Command to install the sockaddr CLI utility via go get. This utility exposes nearly all of the library's functionality and can be used as an administrative or testing tool.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/hashicorp/go-sockaddr/README.md#2025-04-10_snippet_0

LANGUAGE: text
CODE:
```
$ go get -u github.com/hashicorp/go-sockaddr/cmd/sockaddr
```

----------------------------------------

TITLE: Creating Docker Network with ICC Disabled and Running Container
DESCRIPTION: Commands to create a user-defined bridge network with inter-container communication disabled and then run a container on that network with a published port. These commands establish the network environment described in the document.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap-noicc.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
docker network create \
  -o com.docker.network.bridge.name=bridge1 \
  -o com.docker.network.bridge.enable_icc=false \
  --subnet 192.0.2.0/24 --gateway 192.0.2.1 bridge1
docker run --network bridge1 -p 8080:80 --name c1 busybox
```

----------------------------------------

TITLE: Serving Static Files with Go and Gorilla Mux
DESCRIPTION: Illustrates how to serve static files using Gorilla Mux, including setting up a file server and handling path prefixes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gorilla/mux/README.md#2025-04-10_snippet_8

LANGUAGE: go
CODE:
```
func main() {
    var dir string

    flag.StringVar(&dir, "dir", ".", "the directory to serve files from. Defaults to the current dir")
    flag.Parse()
    r := mux.NewRouter()

    // This will serve files under http://localhost:8000/static/<filename>
    r.PathPrefix("/static/").Handler(http.StripPrefix("/static/", http.FileServer(http.Dir(dir))))

    srv := &http.Server{
        Handler:      r,
        Addr:         "127.0.0.1:8000",
        // Good practice: enforce timeouts for servers you create!
        WriteTimeout: 15 * time.Second,
        ReadTimeout:  15 * time.Second,
    }

    log.Fatal(srv.ListenAndServe())
}
```

----------------------------------------

TITLE: Creating Docker Swarm Service with Published Port
DESCRIPTION: Command to create a Docker Swarm service that publishes port 8080 to internal port 80 and runs the 'top' command in a busybox container.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/templates/swarm-portmap.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
docker service create -p 8080:80 busybox top
```

----------------------------------------

TITLE: Special-case Marshaling for Functions Metadata in Go SDK
DESCRIPTION: Commit reference showing the implementation of special-case marshaling for the functions/metadata package, likely to handle specific data types or formats.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_5

LANGUAGE: markdown
CODE:
```
* **functions/metadata:** Special-case marshaling ([#2669](https://www.github.com/googleapis/google-cloud-go/issues/2669)) ([d8d7fc6](https://www.github.com/googleapis/google-cloud-go/commit/d8d7fc66cbc42f79bec25fb0daaf53d926e3645b))
```

----------------------------------------

TITLE: Package Declaration and Import
DESCRIPTION: Declares the goautoneg package and imports required dependency from bitbucket.org
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/munnerz/goautoneg/README.txt#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
package goautoneg
import "bitbucket.org/ww/goautoneg"
```

----------------------------------------

TITLE: Committing Changes with Issue Reference
DESCRIPTION: This code demonstrates how to commit changes with a message that includes the issue number for better tracking and organization.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/mistifyio/go-zfs/v3/CONTRIBUTING.md#2025-04-10_snippet_3

LANGUAGE: bash
CODE:
```
$ git commit -m "Issue #<issue-number> - <commit-message>"
```

----------------------------------------

TITLE: Verifying Built Binary Version
DESCRIPTION: Checks the version of the registry binary that was built by the make process and placed in the bin directory.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/distribution/BUILDING.md#2025-04-10_snippet_6

LANGUAGE: bash
CODE:
```
$ ./bin/registry --version
./bin/registry github.com/docker/distribution v2.0.0-alpha.2-80-g16d8b2c.m
```

----------------------------------------

TITLE: Basic XXHash API Functions in Go
DESCRIPTION: Core API functions of the xxhash package including Sum64 for byte slices, Sum64String for strings, and Digest struct definition.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/cespare/xxhash/v2/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
func Sum64(b []byte) uint64
func Sum64String(s string) uint64
type Digest struct{ ... }
    func New() *Digest
```

----------------------------------------

TITLE: Configuring Git client for automatic sign-offs in go-struct-converter
DESCRIPTION: These shell commands demonstrate how to configure the Git client with a user's name and email, which enables automatic sign-offs when creating commits.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/anchore/go-struct-converter/CONTRIBUTING.md#2025-04-10_snippet_2

LANGUAGE: shell
CODE:
```
$ git config --global user.name "John Doe"
$ git config --global user.email "john.doe@example.com"
```

----------------------------------------

TITLE: Building Docker on Windows using PowerShell
DESCRIPTION: The make.ps1 script is a Windows-native build script using PowerShell. It provides support for local Windows development and Windows-to-Windows CI, but with limited functionality compared to the Linux counterpart.
SOURCE: https://github.com/moby/moby/blob/master/hack/README.md#2025-04-10_snippet_2

LANGUAGE: PowerShell
CODE:
```
### make.ps1

- The Windows native build script that uses PowerShell semantics; it is limited
unlike `hack\make.sh` since it does not provide support for the full set of
operations provided by the Linux counterpart, `make.sh`. However, `make.ps1`
does provide support for local Windows development and Windows to Windows CI.
More information is found within `make.ps1` by the author, @jhowardmsft
```

----------------------------------------

TITLE: Authentication Middleware Implementation
DESCRIPTION: Shows implementation of a complex authentication middleware that validates session tokens.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gorilla/mux/README.md#2025-04-10_snippet_15

LANGUAGE: go
CODE:
```
type authenticationMiddleware struct {
	tokenUsers map[string]string
}

func (amw *authenticationMiddleware) Populate() {
	amw.tokenUsers["00000000"] = "user0"
	amw.tokenUsers["aaaaaaaa"] = "userA"
	amw.tokenUsers["05f717e5"] = "randomUser"
	amw.tokenUsers["deadbeef"] = "user0"
}

func (amw *authenticationMiddleware) Middleware(next http.Handler) http.Handler {
    return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
        token := r.Header.Get("X-Session-Token")

        if user, found := amw.tokenUsers[token]; found {
        	log.Printf("Authenticated user %s\n", user)
        	next.ServeHTTP(w, r)
        } else {
        	http.Error(w, "Forbidden", http.StatusForbidden)
        }
    })
}
```

----------------------------------------

TITLE: Adding Scope Tags to Zipkin Exporter
DESCRIPTION: Adds otel.scope.name and otel.scope.version tags to spans exported by the Zipkin exporter.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_9

LANGUAGE: Go
CODE:
```
otel.scope.name and otel.scope.version tags to spans exported by go.opentelemetry.io/otel/exporters/zipkin
```

----------------------------------------

TITLE: Basic xxhash API Functions in Go
DESCRIPTION: The core API functions of the xxhash package, including Sum64 for computing hashes from byte slices, Sum64String for strings, and the basic Digest struct constructor.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/klauspost/compress/zstd/internal/xxhash/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
func Sum64(b []byte) uint64
func Sum64String(s string) uint64
type Digest struct{ ... }
    func New() *Digest
```

----------------------------------------

TITLE: Network Statistics Message Definition in Protobuf
DESCRIPTION: Defines the structure for network interface statistics including received and transmitted bytes, packets, errors, and drops.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/cgroup1/stats/metrics.pb.txt#2025-04-10_snippet_4

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "NetworkStat"
  field {
    name: "name"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "name"
  }
  [...additional fields omitted for brevity...]
}
```

----------------------------------------

TITLE: Checking Out Development Branch
DESCRIPTION: Ensure you are on the 'dry-run-test' branch for development work.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/set-up-dev-env.md#2025-04-10_snippet_6

LANGUAGE: bash
CODE:
```
$ git checkout dry-run-test
```

----------------------------------------

TITLE: Platform Specifier Example
DESCRIPTION: Shows a common example of a platform specifier for Linux AMD64 architecture
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/platforms/README.md#2025-04-10_snippet_1

LANGUAGE: markdown
CODE:
```
linux/amd64
```

----------------------------------------

TITLE: Running Moby Validation Tests on Windows
DESCRIPTION: This PowerShell command runs validation tests for the Moby project on Windows.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/software-req-win.md#2025-04-10_snippet_7

LANGUAGE: powershell
CODE:
```
hack\make.ps1 -DCO -PkgImports -GoFormat
```

----------------------------------------

TITLE: Defining TranslationClient Interface in Go
DESCRIPTION: This code snippet defines an interface for the TranslationClient, which can be used for mocking in tests. It includes the TranslateText method used in the previous examples.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/testing.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
type TranslationClient interface {
        TranslateText(ctx context.Context, req *translatepb.TranslateTextRequest, opts ...gax.CallOption) (*translatepb.TranslateTextResponse, error)
}
```

----------------------------------------

TITLE: Accept Header Parser Function Declaration
DESCRIPTION: Function signature for parsing an HTTP Accept header string into a sorted list of Accept clauses.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/munnerz/goautoneg/README.txt#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
func ParseAccept(header string) (accept []Accept)
```

----------------------------------------

TITLE: Installing PTY Package via Go Get
DESCRIPTION: Command to install the pty package using go get package manager.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/creack/pty/README.md#2025-04-10_snippet_0

LANGUAGE: sh
CODE:
```
go get github.com/creack/pty
```

----------------------------------------

TITLE: Setting Protocol Buffer Options for Go Package
DESCRIPTION: Specifies the Go package for the generated code from this Protocol Buffer definition. It sets the package to 'github.com/containerd/cgroups/cgroup2/stats'.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/cgroup2/stats/metrics.pb.txt#2025-04-10_snippet_6

LANGUAGE: Protocol Buffers
CODE:
```
options {
  go_package: "github.com/containerd/cgroups/cgroup2/stats"
}
syntax: "proto3"
```

----------------------------------------

TITLE: Running Tests and Linters for Zap
DESCRIPTION: This snippet demonstrates how to run the test suite and linters for the Zap project using make commands.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.uber.org/zap/CONTRIBUTING.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
make test
make lint
```

----------------------------------------

TITLE: Opening BoltDB in Read-Only Mode
DESCRIPTION: Shows how to open a BoltDB database in read-only mode using Options.ReadOnly flag. This allows shared read access while preventing write operations.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_20

LANGUAGE: go
CODE:
```
db, err := bolt.Open("my.db", 0666, &bolt.Options{ReadOnly: true})
if err != nil {
	log.Fatal(err)
}
```

----------------------------------------

TITLE: Cloning the OpenTelemetry Go Repository with Git
DESCRIPTION: Command to clone the opentelemetry-go repository from GitHub using git. This is the first step for contributors to get the source code.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-10_snippet_0

LANGUAGE: sh
CODE:
```
git clone https://github.com/open-telemetry/opentelemetry-go.git
```

----------------------------------------

TITLE: Cloning Moby Repository in PowerShell
DESCRIPTION: These PowerShell commands clone the Moby repository and navigate to the project directory.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/software-req-win.md#2025-04-10_snippet_2

LANGUAGE: powershell
CODE:
```
git clone https://github.com/moby/moby
cd moby
```

----------------------------------------

TITLE: Implementing Fake Translation Server in Go
DESCRIPTION: This code snippet demonstrates how to create a fake translation server for testing purposes. It implements the TranslationServiceServer interface and provides a mock implementation of the TranslateText method.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/testing.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
import (
        "context"

        translatepb "google.golang.org/genproto/googleapis/cloud/translate/v3"
)

type fakeTranslationServer struct {
        translatepb.UnimplementedTranslationServiceServer
}

func (f *fakeTranslationServer) TranslateText(ctx context.Context, req *translatepb.TranslateTextRequest) (*translatepb.TranslateTextResponse, error) {
        resp := &translatepb.TranslateTextResponse{
                Translations: []*translatepb.Translation{
                        &translatepb.Translation{
                                TranslatedText: "Hello World",
                        },
                },
        }
        return resp, nil
}
```

----------------------------------------

TITLE: Configuring Sysctls in Docker Container Configuration
DESCRIPTION: Sets kernel parameters (sysctls) for a container. This example enables IP forwarding within the container by setting the appropriate network parameter.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_9

LANGUAGE: json
CODE:
```
{ "net.ipv4.ip_forward": "1" }
```

----------------------------------------

TITLE: Running BitSet Tests in Bash
DESCRIPTION: Commands for running tests and checking code coverage for the BitSet library.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/bits-and-blooms/bitset/README.md#2025-04-10_snippet_6

LANGUAGE: bash
CODE:
```
go test
go test -cover
```

----------------------------------------

TITLE: Enabling Experimental Resource Semantic Conventions in OpenTelemetry Go SDK
DESCRIPTION: Sets the OTEL_GO_X_RESOURCE environment variable to 'true' to enable experimental resource semantic conventions in the OpenTelemetry Go SDK.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/sdk/internal/x/README.md#2025-04-10_snippet_0

LANGUAGE: console
CODE:
```
export OTEL_GO_X_RESOURCE=true
```

----------------------------------------

TITLE: Pushing Changes to Forked Zap Repository
DESCRIPTION: This snippet demonstrates how to push the local changes to the forked Zap repository on GitHub after making and testing the changes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.uber.org/zap/CONTRIBUTING.md#2025-04-10_snippet_3

LANGUAGE: bash
CODE:
```
git push origin cool_new_feature
```

----------------------------------------

TITLE: Implementing Custom Type Option in Go
DESCRIPTION: Creates an option implementation for custom types with a WithMyType function that sets the custom type value in the config.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-10_snippet_10

LANGUAGE: go
CODE:
```
type myTypeOption struct {
	MyType MyType
}

func (o myTypeOption) apply(c config) config {
	c.MyType = o.MyType
    return c
}

// WithMyType sets T to have include MyType.
func WithMyType(t MyType) Option {
	return myTypeOption{t}
}
```

----------------------------------------

TITLE: Building Moby Docker Image on Windows
DESCRIPTION: These Docker commands build the Moby image on Windows, with an option for Hyper-V containers.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/software-req-win.md#2025-04-10_snippet_3

LANGUAGE: powershell
CODE:
```
docker build -t nativebuildimage -f .\Dockerfile.windows .
docker build -t nativebuildimage -f Dockerfile.windows -m 2GB .  # (if using Hyper-V containers)
```

----------------------------------------

TITLE: RDMA Statistics Message Definition in Protobuf
DESCRIPTION: Defines the structure for RDMA (Remote Direct Memory Access) statistics including current usage and limits for HCA handles and objects.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/cgroup1/stats/metrics.pb.txt#2025-04-10_snippet_3

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "RdmaStat"
  field {
    name: "current"
    number: 1
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".io.containerd.cgroups.v1.RdmaEntry"
    json_name: "current"
  }
  field {
    name: "limit"
    number: 2
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".io.containerd.cgroups.v1.RdmaEntry"
    json_name: "limit"
  }
}
```

----------------------------------------

TITLE: Defining DispatcherConfig Message in Protocol Buffers
DESCRIPTION: Defines a message type 'DispatcherConfig' with a field for heartbeat period. This is used for configuring the dispatcher in Docker SwarmKit.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_54

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "DispatcherConfig"
  field {
    name: "heartbeat_period"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".google.protobuf.Duration"
    json_name: "heartbeatPeriod"
  }
}
```

----------------------------------------

TITLE: Installing Atomic Package in Go
DESCRIPTION: This command installs the 'atomic' package using the Go package manager. It specifies version 1 of the package.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.uber.org/atomic/README.md#2025-04-10_snippet_0

LANGUAGE: shell
CODE:
```
$ go get -u go.uber.org/atomic@v1
```

----------------------------------------

TITLE: Apache License 2.0 Boilerplate Notice Template
DESCRIPTION: Standard boilerplate notice text for applying the Apache License 2.0 to a project, including copyright notice and license terms.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/aws/aws-sdk-go-v2/service/sts/LICENSE.txt#2025-04-10_snippet_0

LANGUAGE: text
CODE:
```
   Copyright [yyyy] [name of copyright owner]

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
```

----------------------------------------

TITLE: Cloning and Setting Up Zap Repository in Go Workspace
DESCRIPTION: This snippet shows how to fork, clone, and set up the Zap repository in the Go workspace. It includes steps to add the upstream remote and fetch the latest changes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.uber.org/zap/CONTRIBUTING.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
mkdir -p $GOPATH/src/go.uber.org
cd $GOPATH/src/go.uber.org
git clone git@github.com:your_github_username/zap.git
cd zap
git remote add upstream https://github.com/uber-go/zap.git
git fetch upstream
```

----------------------------------------

TITLE: Using Go Get to Clone the OpenTelemetry Go Repository
DESCRIPTION: Alternative command to clone the repository using Go's package management. This approach uses the official Go module path to retrieve the code.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-10_snippet_1

LANGUAGE: sh
CODE:
```
go get -d go.opentelemetry.io/otel
```

----------------------------------------

TITLE: Installing JWT-Go Package with Go Modules
DESCRIPTION: Command to add the JWT-Go package as a dependency in a Go project using Go modules. This installs the v5 version of the library.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/golang-jwt/jwt/v5/README.md#2025-04-10_snippet_0

LANGUAGE: sh
CODE:
```
go get -u github.com/golang-jwt/jwt/v5
```

----------------------------------------

TITLE: Listing Docker Images
DESCRIPTION: List the Docker images present in the development container.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/set-up-dev-env.md#2025-04-10_snippet_13

LANGUAGE: bash
CODE:
```
# docker images
```

----------------------------------------

TITLE: Flag Value Retrieval
DESCRIPTION: Demonstrates getting flag values from a FlagSet using helper functions.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/spf13/pflag/README.md#2025-04-10_snippet_5

LANGUAGE: go
CODE:
```
i, err := flagset.GetInt("flagname")
```

----------------------------------------

TITLE: Integrating Log Rotation with Zap and Lumberjack in Go
DESCRIPTION: Demonstrates how to integrate the lumberjack package for log rotation with Zap. It creates a zapcore.WriteSyncer using lumberjack.Logger and sets up a new Zap logger core.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.uber.org/zap/FAQ.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
w := zapcore.AddSync(&lumberjack.Logger{
  Filename:   "/var/log/myapp/foo.log",
  MaxSize:    500, // megabytes
  MaxBackups: 3,
  MaxAge:     28, // days
})
core := zapcore.NewCore(
  zapcore.NewJSONEncoder(zap.NewProductionEncoderConfig()),
  w,
  zap.InfoLevel,
)
logger := zap.New(core)
```

----------------------------------------

TITLE: Release History Links in Markdown
DESCRIPTION: Markdown formatted version comparison links showing the changes between different releases of the gax-go library.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/googleapis/gax-go/v2/CHANGES.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
[2.12.0](https://github.com/googleapis/gax-go/compare/v2.11.0...v2.12.0)
```

----------------------------------------

TITLE: GCP Project Setup and Testing Commands
DESCRIPTION: Shell commands for setting up GCP resources required for integration testing, including storage buckets, PubSub topics, Spanner instances, and KMS keys
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CONTRIBUTING.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
# Sets the default project in your env.
$ gcloud config set project $GCLOUD_TESTS_GOLANG_PROJECT_ID

# Authenticates the gcloud tool with your account.
$ gcloud auth login

# Create the indexes for all the databases
$ gcloud alpha datastore indexes create --database=your-databaseID-1 --project=$GCLOUD_TESTS_GOLANG_PROJECT_ID testdata/index.yaml

# Creates a Google Cloud storage bucket
$ gsutil mb gs://$GCLOUD_TESTS_GOLANG_PROJECT_ID
$ gsutil acl ch -g cloud-logs@google.com:O gs://$GCLOUD_TESTS_GOLANG_PROJECT_ID

# Creates a PubSub topic
$ gcloud beta pubsub topics create go-storage-notification-test

# Creates a Spanner instance
$ gcloud beta spanner instances create go-integration-test --config regional-us-central1 --nodes 10 --description 'Instance for go client test'

$ export MY_KEYRING=some-keyring-name
$ export MY_LOCATION=global
$ export MY_SINGLE_LOCATION=us-central1

# Creates KMS resources
$ gcloud kms keyrings create $MY_KEYRING --location $MY_LOCATION
$ gcloud kms keys create key1 --keyring $MY_KEYRING --location $MY_LOCATION --purpose encryption
$ gcloud kms keys create key2 --keyring $MY_KEYRING --location $MY_LOCATION --purpose encryption
$ export GCLOUD_TESTS_GOLANG_KEYRING=projects/$GCLOUD_TESTS_GOLANG_PROJECT_ID/locations/$MY_LOCATION/keyRings/$MY_KEYRING
$ gsutil kms authorize -p $GCLOUD_TESTS_GOLANG_PROJECT_ID -k $GCLOUD_TESTS_GOLANG_KEYRING/cryptoKeys/key1
```

----------------------------------------

TITLE: Git Commit Sign-off Line Example
DESCRIPTION: Example of how to properly sign-off a git commit message with the Signed-off-by line that must be included in every commit to certify compliance with the Developer Certificate of Origin.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/distribution/reference/CONTRIBUTING.md#2025-04-10_snippet_1

LANGUAGE: markdown
CODE:
```
    Signed-off-by: Joe Smith <joe.smith@email.com>
```

----------------------------------------

TITLE: Generating Docker Engine Man Pages with Make
DESCRIPTION: Demonstrates how to generate Docker Engine man pages using the make command. Requires a Go toolchain and places generated pages in man*N* subdirectories.
SOURCE: https://github.com/moby/moby/blob/master/man/README.md#2025-04-10_snippet_0

LANGUAGE: shell
CODE:
```
make
```

----------------------------------------

TITLE: Configuring Exemplars in OpenTelemetry Go Metric SDK
DESCRIPTION: Examples of enabling exemplars and setting exemplar filters using environment variables. This includes enabling/disabling exemplars and setting different filter types.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/sdk/metric/internal/x/README.md#2025-04-10_snippet_1

LANGUAGE: console
CODE:
```
export OTEL_GO_X_EXEMPLAR=true
```

LANGUAGE: console
CODE:
```
unset OTEL_GO_X_EXEMPLAR
```

LANGUAGE: console
CODE:
```
export OTEL_METRICS_EXEMPLAR_FILTER=always_on
```

LANGUAGE: console
CODE:
```
export OTEL_METRICS_EXEMPLAR_FILTER=always_off
```

LANGUAGE: console
CODE:
```
export OTEL_METRICS_EXEMPLAR_FILTER=trace_based
```

LANGUAGE: console
CODE:
```
unset OTEL_METRICS_EXEMPLAR_FILTER
```

----------------------------------------

TITLE: SwarmKit Protobuf Message Definitions
DESCRIPTION: Comprehensive protobuf message type definitions for Docker SwarmKit v1. Includes definitions for encryption configuration, placement preferences, certificates, manager status, health checks and other core SwarmKit functionality.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_56

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "EncryptionConfig"
  field {
    name: "auto_lock_managers"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_BOOL
    json_name: "autoLockManagers"
  }
}

message_type {
  name: "SpreadOver"
  field {
    name: "spread_descriptor"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "spreadDescriptor"
  }
}

message_type {
  name: "PlacementPreference"
  field {
    name: "spread"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.SpreadOver"
    oneof_index: 0
    json_name: "spread"
  }
  oneof_decl {
    name: "Preference"
  }
}

// Additional message types follow similar pattern...
```

----------------------------------------

TITLE: Displaying PkgGoDev Badge for Trace Noop Package
DESCRIPTION: This code snippet displays a badge linking to the GoDoc page for the Trace Noop package. It uses Markdown syntax to create an image link.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/trace/noop/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/trace/noop)](https://pkg.go.dev/go.opentelemetry.io/otel/trace/noop)
```

----------------------------------------

TITLE: Markdown Version Support Table
DESCRIPTION: A markdown table showing the support status for different versions of Moby, with version 0.3.x being supported and versions below 0.3 being unsupported.
SOURCE: https://github.com/moby/moby/blob/master/vendor/dario.cat/mergo/SECURITY.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
| Version | Supported          |
| ------- | ------------------ |
| 0.3.x   | :white_check_mark: |
| < 0.3   | :x:                |
```

----------------------------------------

TITLE: Displaying Developer's Certificate of Origin for go-struct-converter
DESCRIPTION: This snippet shows the full text of the Developer's Certificate of Origin (DCO) version 1.1, which contributors must agree to when making contributions to the project.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/anchore/go-struct-converter/CONTRIBUTING.md#2025-04-10_snippet_0

LANGUAGE: text
CODE:
```
Developer's Certificate of Origin 1.1

By making a contribution to this project, I certify that:

   (a) The contribution was created in whole or in part by me and I
       have the right to submit it under the open source license
       indicated in the file; or

   (b) The contribution is based upon previous work that, to the best
       of my knowledge, is covered under an appropriate open source
       license and I have the right under that license to submit that
       work with modifications, whether created in whole or in part
       by me, under the same open source license (unless I am
       permitted to submit under a different license), as indicated
       in the file; or

   (c) The contribution was provided directly to me by some other
       person who certified (a), (b) or (c) and I have not modified
       it.

   (d) I understand and agree that this project and the contribution
       are public and that a record of the contribution (including all
       personal information I submit with it, including my sign-off) is
       maintained indefinitely and may be redistributed consistent with
       this project or the open source license(s) involved.
```

----------------------------------------

TITLE: Pulling Upstream Changes in go-zfs
DESCRIPTION: This code snippet demonstrates how to fetch and merge the latest changes from the upstream repository into the local master branch.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/mistifyio/go-zfs/v3/CONTRIBUTING.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
$ git checkout master
$ git fetch upstream
$ git merge upstream/master
```

----------------------------------------

TITLE: Installing Google Cloud Package
DESCRIPTION: Command to install specific Google Cloud packages using go get
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/README.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
go get cloud.google.com/go/firestore
```

----------------------------------------

TITLE: Running SCTP Server and Client Examples in Go
DESCRIPTION: This snippet demonstrates how to build and run SCTP server and client examples using Go. It includes commands for compiling the example code and running both the server and client with specific port and IP configurations.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/ishidawataru/sctp/README.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
$ cd example
$ go build
$ # run example SCTP server
$ ./example -server -port 1000 -ip 10.10.0.1,10.20.0.1
$ # run example SCTP client
$ ./example -port 1000 -ip 10.10.0.1,10.20.0.1
```

----------------------------------------

TITLE: Cleaning Up Network Links
DESCRIPTION: Removes a manually created network link interface using the ip command.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/macvlan.md#2025-04-10_snippet_15

LANGUAGE: bash
CODE:
```
ip link del foo
```

----------------------------------------

TITLE: Iptables Filter Table Rules
DESCRIPTION: Detailed iptables rules for the filter table, showing chains and policies for Docker network traffic management. This includes rules for isolation, forwarding, and user-defined chains.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap-lo.md#2025-04-10_snippet_1

LANGUAGE: plaintext
CODE:
```
-P INPUT ACCEPT
-P FORWARD ACCEPT
-P OUTPUT ACCEPT
-N DOCKER
-N DOCKER-BRIDGE
-N DOCKER-CT
-N DOCKER-FORWARD
-N DOCKER-ISOLATION-STAGE-1
-N DOCKER-ISOLATION-STAGE-2
-N DOCKER-USER
-A FORWARD -j DOCKER-USER
-A FORWARD -j DOCKER-FORWARD
-A DOCKER -d 192.0.2.2/32 ! -i bridge1 -o bridge1 -p tcp -m tcp --dport 80 -j ACCEPT
-A DOCKER ! -i docker0 -o docker0 -j DROP
-A DOCKER ! -i bridge1 -o bridge1 -j DROP
-A DOCKER-BRIDGE -o docker0 -j DOCKER
-A DOCKER-BRIDGE -o bridge1 -j DOCKER
-A DOCKER-CT -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A DOCKER-CT -o bridge1 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A DOCKER-FORWARD -j DOCKER-CT
-A DOCKER-FORWARD -j DOCKER-ISOLATION-STAGE-1
-A DOCKER-FORWARD -j DOCKER-BRIDGE
-A DOCKER-FORWARD -i docker0 -j ACCEPT
-A DOCKER-FORWARD -i bridge1 -j ACCEPT
-A DOCKER-ISOLATION-STAGE-1 -i docker0 ! -o docker0 -j DOCKER-ISOLATION-STAGE-2
-A DOCKER-ISOLATION-STAGE-1 -i bridge1 ! -o bridge1 -j DOCKER-ISOLATION-STAGE-2
-A DOCKER-ISOLATION-STAGE-2 -o bridge1 -j DROP
-A DOCKER-ISOLATION-STAGE-2 -o docker0 -j DROP
-A DOCKER-USER -j RETURN
```

----------------------------------------

TITLE: OpenTelemetry SDK Resource Badge
DESCRIPTION: Markdown code displaying a package documentation badge that links to the Go package documentation for the OpenTelemetry SDK Resource package
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/sdk/resource/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/sdk/resource)](https://pkg.go.dev/go.opentelemetry.io/otel/sdk/resource)
```

----------------------------------------

TITLE: Displaying Moby Project Logo in Markdown
DESCRIPTION: This snippet shows how to embed the Moby Project logo image in a Markdown file, including alt text and a title attribute.
SOURCE: https://github.com/moby/moby/blob/master/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
![Moby Project logo](docs/static_files/moby-project-logo.png "The Moby Project")
```

----------------------------------------

TITLE: Running tests in gRPC-Go project
DESCRIPTION: Command to run all tests in the repository with different CPU configurations and a timeout limit. This is required to ensure your changes don't break existing functionality.
SOURCE: https://github.com/moby/moby/blob/master/vendor/google.golang.org/grpc/CONTRIBUTING.md#2025-04-10_snippet_1

LANGUAGE: shell
CODE:
```
go test -cpu 1,4 -timeout 7m ./...
```

----------------------------------------

TITLE: Running benchmarks for go-toml
DESCRIPTION: Command to execute performance benchmarks for the go-toml project with multiple iterations for statistical significance.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/pelletier/go-toml/v2/CONTRIBUTING.md#2025-04-10_snippet_3

LANGUAGE: bash
CODE:
```
go test ./... -bench=. -count=10
```

----------------------------------------

TITLE: Basic Flag Import in Go
DESCRIPTION: Shows how to import pflag as a replacement for Go's native flag package.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/spf13/pflag/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
import flag "github.com/spf13/pflag"
```

----------------------------------------

TITLE: Basic Flag Import in Go
DESCRIPTION: Shows how to import pflag as a replacement for Go's native flag package.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/spf13/pflag/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
import flag "github.com/spf13/pflag"
```

----------------------------------------

TITLE: Running bbolt Command Line Utility
DESCRIPTION: Command to run the bbolt command line utility directly using Go run.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_1

LANGUAGE: sh
CODE:
```
$ go run go.etcd.io/bbolt/cmd/bbolt@latest
```

----------------------------------------

TITLE: OpenTelemetry SDK Badge Markdown
DESCRIPTION: Markdown code for displaying the PkgGoDev badge with a link to the OpenTelemetry Go SDK package documentation.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/sdk/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/sdk)](https://pkg.go.dev/go.opentelemetry.io/otel/sdk)
```

----------------------------------------

TITLE: Generating Contributors List in Bash
DESCRIPTION: The generate-authors.sh script creates an AUTHORS file containing names and emails of all individual contributors to the repository.
SOURCE: https://github.com/moby/moby/blob/master/hack/README.md#2025-04-10_snippet_1

LANGUAGE: Bash
CODE:
```
## Generate Authors (generate-authors.sh)

Generates AUTHORS; a file with all the names and corresponding emails of
individual contributors. AUTHORS can be found in the home directory of
this repository.
```

----------------------------------------

TITLE: Defining ConfChangeTransition Enum in Protobuf for Raft
DESCRIPTION: Protocol Buffer definition for the ConfChangeTransition enum used in Raft consensus algorithm. This enumeration defines transition types for configuration changes, including automatic and joint consensus transitions.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_115

LANGUAGE: protobuf
CODE:
```
enum_type {
  name: "ConfChangeTransition"
  value {
    name: "ConfChangeTransitionAuto"
    number: 0
  }
  value {
    name: "ConfChangeTransitionJointImplicit"
    number: 1
  }
  value {
    name: "ConfChangeTransitionJointExplicit"
    number: 2
  }
}
```

----------------------------------------

TITLE: Running Module-Specific Tests for Google Cloud SDK in Shell
DESCRIPTION: Shell commands showing how to navigate to a specific module directory and run integration tests only for that module. This example demonstrates running tests specifically for the datastore module.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CONTRIBUTING.md#2025-04-10_snippet_5

LANGUAGE: sh
CODE:
```
$ cd datastore
$ go test -v ./...
```

----------------------------------------

TITLE: Building Registry with Make
DESCRIPTION: Uses the provided Makefile to perform a complete build process including formatting, vetting, linting, building, testing and generating binaries.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/distribution/BUILDING.md#2025-04-10_snippet_5

LANGUAGE: bash
CODE:
```
$ make
+ clean
+ fmt
+ vet
+ lint
+ build
github.com/docker/docker/vendor/src/code.google.com/p/go/src/pkg/archive/tar
github.com/sirupsen/logrus
github.com/docker/libtrust
...
github.com/yvasiyarov/gorelic
github.com/docker/distribution/registry/handlers
github.com/docker/distribution/cmd/registry
+ test
...
ok    github.com/docker/distribution/digest 7.875s
ok    github.com/docker/distribution/manifest 0.028s
ok    github.com/docker/distribution/notifications  17.322s
?     github.com/docker/distribution/registry [no test files]
ok    github.com/docker/distribution/registry/api/v2  0.101s
?     github.com/docker/distribution/registry/auth  [no test files]
ok    github.com/docker/distribution/registry/auth/silly  0.011s
...
+ /Users/sday/go/src/github.com/docker/distribution/bin/registry
+ /Users/sday/go/src/github.com/docker/distribution/bin/registry-api-descriptor-template
+ binaries
```

----------------------------------------

TITLE: Flag Default Value Setting
DESCRIPTION: Example of setting NoOptDefVal for flags to handle no-option cases.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/spf13/pflag/README.md#2025-04-10_snippet_7

LANGUAGE: go
CODE:
```
var ip = flag.IntP("flagname", "f", 1234, "help message")
flag.Lookup("flagname").NoOptDefVal = "4321"
```

----------------------------------------

TITLE: BoltDB Mobile Implementation in Go
DESCRIPTION: Demonstrates the implementation of a BoltDB wrapper struct for mobile use with iOS and Android. Includes initialization and basic database operations.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.etcd.io/bbolt/README.md#2025-04-10_snippet_21

LANGUAGE: go
CODE:
```
func NewBoltDB(filepath string) *BoltDB {
	db, err := bolt.Open(filepath+"/demo.db", 0600, nil)
	if err != nil {
		log.Fatal(err)
	}

	return &BoltDB{db}
}

type BoltDB struct {
	db *bolt.DB
	...
}

func (b *BoltDB) Path() string {
	return b.db.Path()
}

func (b *BoltDB) Close() {
	b.db.Close()
}
```

----------------------------------------

TITLE: Importing Go-TOML Package
DESCRIPTION: Basic import statement for including the go-toml library in a Go project.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/pelletier/go-toml/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
import "github.com/pelletier/go-toml"
```

----------------------------------------

TITLE: Displaying PkgGoDev Badge for OpenTelemetry Metric API in Markdown
DESCRIPTION: This snippet shows how to embed a PkgGoDev badge in Markdown, linking to the documentation for the OpenTelemetry Metric API package in Go.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/metric/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/metric)](https://pkg.go.dev/go.opentelemetry.io/otel/metric)
```

----------------------------------------

TITLE: Installing Docker Engine Man Pages with Make
DESCRIPTION: Shows how to install the generated Docker Engine man pages using make install. Supports customization variables like prefix, mandir, INSTALL, INSTALL_DATA, and DESTDIR.
SOURCE: https://github.com/moby/moby/blob/master/man/README.md#2025-04-10_snippet_1

LANGUAGE: shell
CODE:
```
make install
```

----------------------------------------

TITLE: Defining EntryType Enum in Protobuf for Raft
DESCRIPTION: Protocol Buffer definition for the EntryType enum used in Raft consensus algorithm. This enumeration defines types of log entries in the Raft log, including normal entries and configuration change entries.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_113

LANGUAGE: protobuf
CODE:
```
enum_type {
  name: "EntryType"
  value {
    name: "EntryNormal"
    number: 0
  }
  value {
    name: "EntryConfChange"
    number: 1
  }
  value {
    name: "EntryConfChangeV2"
    number: 2
  }
}
```

----------------------------------------

TITLE: Displaying Second Release Candidate Versions
DESCRIPTION: Illustrates version increments for a second release candidate after minor incompatible changes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/VERSIONING.md#2025-04-10_snippet_4

LANGUAGE: markdown
CODE:
```
* `otel`: `v1.0.0-RC2`
* `otel/trace`: `v1.0.0-RC2`
* `otel/baggage`: `v1.0.0-RC2`
* `otel/sdk/trace`: `v1.0.0-RC2`
```

----------------------------------------

TITLE: Flag Deprecation Examples
DESCRIPTION: Shows how to deprecate flags and flag shorthands with usage messages.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/spf13/pflag/README.md#2025-04-10_snippet_9

LANGUAGE: go
CODE:
```
flags.MarkDeprecated("badflag", "please use --good-flag instead")
```

LANGUAGE: go
CODE:
```
flags.MarkShorthandDeprecated("noshorthandflag", "please use --noshorthandflag only")
```

----------------------------------------

TITLE: Enabling Prometheus Histogram Metrics in Go
DESCRIPTION: Code to enable histogram metrics for monitoring RPC latency distributions in the gRPC server.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/grpc-ecosystem/go-grpc-prometheus/README.md#2025-04-10_snippet_2

LANGUAGE: jsoniq
CODE:
```
grpc_prometheus.EnableHandlingTimeHistogram()
```

----------------------------------------

TITLE: Defining Protocol Buffer EnumValueOptions
DESCRIPTION: Defines options that can be applied to individual enum values, including deprecation markers.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_13

LANGUAGE: protobuf
CODE:
```
message_type {
    name: "EnumValueOptions"
    field {
      name: "deprecated"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    extension_range {
      start: 1000
      end: 536870912
    }
  }
```

----------------------------------------

TITLE: Apache License 2.0 Boilerplate Notice
DESCRIPTION: Standard boilerplate text for applying the Apache License 2.0 to a project. Users should replace the placeholder copyright information with their own details and include this notice in the appropriate comment syntax for their file format.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/aws/aws-sdk-go-v2/feature/ec2/imds/LICENSE.txt#2025-04-10_snippet_0

LANGUAGE: plaintext
CODE:
```
Copyright [yyyy] [name of copyright owner]

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```

----------------------------------------

TITLE: Displaying Release Candidate for All Modules
DESCRIPTION: Shows version numbers for a release candidate that includes all modules, including previously unstable ones.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/VERSIONING.md#2025-04-10_snippet_7

LANGUAGE: markdown
CODE:
```
* `otel`: `v1.1.0-RC1`
* `otel/trace`: `v1.1.0-RC1`
* `otel/metric`: `v1.1.0-RC1`
* `otel/baggage`: `v1.1.0-RC1`
* `otel/sdk/trace`: `v1.1.0-RC1`
* `otel/sdk/metric`: `v1.1.0-RC1`
```

----------------------------------------

TITLE: Defining Protocol Buffer File Declaration for GoGo Protobuf
DESCRIPTION: Declares a protobuf file with name and package for GoGo Protobuf extensions, which provide additional protobuf functionality for Go.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_20

LANGUAGE: protobuf
CODE:
```
file {
  name: "gogoproto/gogo.proto"
  package: "gogoproto"
}
```

----------------------------------------

TITLE: Displaying First Stable Release Versions
DESCRIPTION: Shows the version numbers for the first stable release of the evaluated modules.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/VERSIONING.md#2025-04-10_snippet_5

LANGUAGE: markdown
CODE:
```
* `otel`: `v1.0.0`
* `otel/trace`: `v1.0.0`
* `otel/baggage`: `v1.0.0`
* `otel/sdk/trace`: `v1.0.0`
```

----------------------------------------

TITLE: Disable Flag Sorting
DESCRIPTION: Shows how to disable automatic sorting of flags in help and usage messages.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/spf13/pflag/README.md#2025-04-10_snippet_11

LANGUAGE: go
CODE:
```
flags.BoolP("verbose", "v", false, "verbose output")
flags.String("coolflag", "yeaah", "it's really cool flag")
flags.Int("usefulflag", 777, "sometimes it's very useful")
flags.SortFlags = false
flags.PrintDefaults()
```

----------------------------------------

TITLE: Implementing Client-side gRPC Prometheus Interceptors in Go
DESCRIPTION: Setup of client-side gRPC interceptors for Prometheus monitoring. Shows how to configure the client connection with unary and stream interceptors for metric collection.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/grpc-ecosystem/go-grpc-prometheus/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
import "github.com/grpc-ecosystem/go-grpc-prometheus"
...
   clientConn, err = grpc.Dial(
       address,
		   grpc.WithUnaryInterceptor(grpc_prometheus.UnaryClientInterceptor),
		   grpc.WithStreamInterceptor(grpc_prometheus.StreamClientInterceptor)
   )
   client = pb_testproto.NewTestServiceClient(clientConn)
   resp, err := client.PingEmpty(s.ctx, &myservice.Request{Msg: "hello"})
```

----------------------------------------

TITLE: Creating Container Base Image
DESCRIPTION: Shell commands to create a base image for the guest agent by pulling busybox, creating a container, and exporting its rootfs.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/Microsoft/hcsshim/README.md#2025-04-10_snippet_2

LANGUAGE: shell
CODE:
```
docker pull busybox
docker run --name base_image_container busybox
docker export base_image_container | gzip > base.tar.gz
BASE=./base.tar.gz
make all
```

----------------------------------------

TITLE: Displaying Mixed Stable and Unstable Release Versions
DESCRIPTION: Illustrates a release with both stable module updates and unstable module changes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/VERSIONING.md#2025-04-10_snippet_6

LANGUAGE: markdown
CODE:
```
* `otel`: `v1.0.1`
* `otel/trace`: `v1.0.1`
* `otel/metric`: `v0.15.0`
* `otel/baggage`: `v1.0.1`
* `otel/sdk/trace`: `v1.0.1`
* `otel/sdk/metric`: `v0.15.0`
```

----------------------------------------

TITLE: Defining Protocol Buffer UninterpretedOption with NamePart
DESCRIPTION: Defines structure for custom options in protocol buffers that are not recognized by the parser, including nested NamePart message.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_16

LANGUAGE: protobuf
CODE:
```
message_type {
    name: "UninterpretedOption"
    field {
      name: "name"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption.NamePart"
      json_name: "name"
    }
    field {
      name: "identifier_value"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "identifierValue"
    }
    field {
      name: "positive_int_value"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_UINT64
      json_name: "positiveIntValue"
    }
    field {
      name: "negative_int_value"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_INT64
      json_name: "negativeIntValue"
    }
    field {
      name: "double_value"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      json_name: "doubleValue"
    }
    field {
      name: "string_value"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      json_name: "stringValue"
    }
    field {
      name: "aggregate_value"
      number: 8
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "aggregateValue"
    }
    nested_type {
      name: "NamePart"
      field {
        name: "name_part"
        number: 1
        label: LABEL_REQUIRED
        type: TYPE_STRING
        json_name: "namePart"
      }
      field {
        name: "is_extension"
        number: 2
        label: LABEL_REQUIRED
        type: TYPE_BOOL
        json_name: "isExtension"
      }
    }
  }
```

----------------------------------------

TITLE: Demonstrating Contrib Repository Module Path Versioning in Go
DESCRIPTION: This example shows how to include the major version number in module paths and import statements for Go modules in the contrib repository with version v2 or higher. It includes examples for module declarations, import statements, and go get commands.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/VERSIONING.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
module go.opentelemetry.io/contrib/instrumentation/host/v2
require go.opentelemetry.io/contrib/instrumentation/host/v2 v2.0.1
import "go.opentelemetry.io/contrib/instrumentation/host/v2"
go get go.opentelemetry.io/contrib/instrumentation/host/v2@v2.0.1
```

----------------------------------------

TITLE: Go Flag Integration
DESCRIPTION: Example of integrating standard Go flags with pflag.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/spf13/pflag/README.md#2025-04-10_snippet_12

LANGUAGE: go
CODE:
```
import (
	goflag "flag"
	flag "github.com/spf13/pflag"
)

var ip *int = flag.Int("flagname", 1234, "help message for flagname")

func main() {
	flag.CommandLine.AddGoFlagSet(goflag.CommandLine)
	flag.Parse()
}
```

----------------------------------------

TITLE: Installing and Using go-md2man in Bash
DESCRIPTION: Commands for installing go-md2man via Go and converting a markdown file to a man page. The tool is installed using go install and then executed with input and output path parameters.
SOURCE: https://github.com/moby/moby/blob/master/man/vendor/github.com/cpuguy83/go-md2man/v2/README.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
go install github.com/cpuguy83/go-md2man@latest

go-md2man -in /path/to/markdownfile.md -out /manfile/output/path
```

----------------------------------------

TITLE: Container Stop Response
DESCRIPTION: Example HTTP response for a successful container stop operation, showing a 204 No Content status code.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/v1.24.md#2025-04-10_snippet_31

LANGUAGE: http
CODE:
```
HTTP/1.1 204 No Content
```

----------------------------------------

TITLE: Configuring Views in OpenTelemetry Go SDK
DESCRIPTION: This code shows how to use the new WithView option to configure views for a MeterProvider in the OpenTelemetry Go SDK metric package.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_22

LANGUAGE: Go
CODE:
```
import "go.opentelemetry.io/otel/sdk/metric"

mp := metric.NewMeterProvider(
    metric.WithView(customView),
)
```

----------------------------------------

TITLE: Defining Protocol Buffer MessageType and FieldOptions
DESCRIPTION: Defines Protocol Buffer message types and field options including CType enum, field options for packed fields, JSON types, and other field attributes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_10

LANGUAGE: protobuf
CODE:
```
message_type {
    name: "FieldOptions"
    field {
      name: "ctype"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".google.protobuf.FieldOptions.CType"
      default_value: "STRING"
      json_name: "ctype"
    }
    field {
      name: "packed"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "packed"
    }
    field {
      name: "jstype"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".google.protobuf.FieldOptions.JSType"
      default_value: "JS_NORMAL"
      json_name: "jstype"
    }
    field {
      name: "lazy"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "lazy"
    }
    field {
      name: "deprecated"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "weak"
      number: 10
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "weak"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    enum_type {
      name: "CType"
      value {
        name: "STRING"
        number: 0
      }
      value {
        name: "CORD"
        number: 1
      }
      value {
        name: "STRING_PIECE"
        number: 2
      }
    }
    enum_type {
      name: "JSType"
      value {
        name: "JS_NORMAL"
        number: 0
      }
      value {
        name: "JS_STRING"
        number: 1
      }
      value {
        name: "JS_NUMBER"
        number: 2
      }
    }
    extension_range {
      start: 1000
      end: 536870912
    }
    reserved_range {
      start: 4
      end: 5
    }
  }
```

----------------------------------------

TITLE: Displaying Initial Module Versions
DESCRIPTION: Lists the initial versions of the OpenTelemetry Go modules before any stable releases.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/VERSIONING.md#2025-04-10_snippet_2

LANGUAGE: markdown
CODE:
```
* `otel`: `v0.14.0`
* `otel/trace`: `v0.14.0`
* `otel/metric`: `v0.14.0`
* `otel/baggage`: `v0.14.0`
* `otel/sdk/trace`: `v0.14.0`
* `otel/sdk/metric`: `v0.14.0`
```

----------------------------------------

TITLE: Importing JWT-Go Package in Go Code
DESCRIPTION: Example of how to import the JWT-Go package in Go code, making the library's functionality available in the application.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/golang-jwt/jwt/v5/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
import "github.com/golang-jwt/jwt/v5"
```

----------------------------------------

TITLE: Basic Error Accumulation in Go
DESCRIPTION: Demonstrates how to accumulate multiple errors using the Append function, which combines errors regardless of whether the initial error is nil, a multierror.Error, or a regular error.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/hashicorp/go-multierror/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
var result error

if err := step1(); err != nil {
	result = multierror.Append(result, err)
}
if err := step2(); err != nil {
	result = multierror.Append(result, err)
}

return result
```

----------------------------------------

TITLE: Defining Containerd Runc Options Protocol Structure
DESCRIPTION: Protocol buffer schema defining the Options message type for containerd runc runtime configuration. Includes fields for runtime settings like pivot root, keyring, cgroups, and various paths.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/containerd/api/types/runc/options/next.pb.txt#2025-04-10_snippet_0

LANGUAGE: protobuf
CODE:
```
message Options {
  bool no_pivot_root = 1;
  bool no_new_keyring = 2;
  string shim_cgroup = 3;
  uint32 io_uid = 4;
  uint32 io_gid = 5;
  string binary_name = 6;
  string root = 7;
  bool systemd_cgroup = 9;
  string criu_image_path = 10;
  string criu_work_path = 11;
  string task_api_address = 12;
  uint32 task_api_version = 13;
  reserved 8;
}
```

----------------------------------------

TITLE: MeterProvider Shutdown Behavior
DESCRIPTION: Change in MeterProvider behavior to return noop meters after shutdown.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_17

LANGUAGE: go
CODE:
```
MeterProvider.Shutdown() // Returns noop meters after shutdown
```

----------------------------------------

TITLE: Defining Wrapper Types in Protocol Buffers
DESCRIPTION: Defines wrapper message types for various primitive types such as DoubleValue, FloatValue, Int64Value, etc. Includes package options for different programming languages.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_2

LANGUAGE: Protocol Buffers
CODE:
```
file {
  name: "google/protobuf/wrappers.proto"
  package: "google.protobuf"
  message_type {
    name: "DoubleValue"
    field {
      name: "value"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      json_name: "value"
    }
  }
  message_type {
    name: "FloatValue"
    field {
      name: "value"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_FLOAT
      json_name: "value"
    }
  }
  // ... (other wrapper types omitted for brevity)
  options {
    java_package: "com.google.protobuf"
    java_outer_classname: "WrappersProto"
    java_multiple_files: true
    go_package: "github.com/golang/protobuf/ptypes/wrappers"
    cc_enable_arenas: true
    objc_class_prefix: "GPB"
    csharp_namespace: "Google.Protobuf.WellKnownTypes"
  }
  syntax: "proto3"
}
```

----------------------------------------

TITLE: Package Import Changes in OpenTelemetry Go SDK
DESCRIPTION: List of package imports that were modified or removed in the OpenTelemetry Go SDK, including removal of deprecated packages and addition of new ones.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_15

LANGUAGE: go
CODE:
```
go.opentelemetry.io/otel/bridge/opencensus
go.opentelemetry.io/otel/exporters/otlp/otlpmetric
go.opentelemetry.io/otel/example/view
go.opentelemetry.io/otel/example/fib
```

----------------------------------------

TITLE: Updating Test Fixtures for Procfs Library in Bash
DESCRIPTION: Bash commands for removing existing test fixtures and regenerating them. This is part of the process for updating the test fixtures used in unit testing the procfs library.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/prometheus/procfs/README.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
rm -rf testdata/fixtures
make test
```

----------------------------------------

TITLE: Default Fields Usage Example
DESCRIPTION: Demonstrates how to set up default fields that will be included in all log entries for a given context.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/sirupsen/logrus/README.md#2025-04-10_snippet_4

LANGUAGE: go
CODE:
```
requestLogger := log.WithFields(log.Fields{"request_id": request_id, "user_ip": user_ip})
requestLogger.Info("something happened on that request") # will log request_id and user_ip
requestLogger.Warn("something not great happened")
```

----------------------------------------

TITLE: Defining ReleasePool Function Signature for IPAM Driver in Go
DESCRIPTION: Function signature for releasing a previously registered address pool. It accepts a poolID parameter and returns an error if the operation fails.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/ipam.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
ReleasePool(poolID string) error
```

----------------------------------------

TITLE: Using strings.Cut() for Better Performance
DESCRIPTION: Code improvement that replaces string.SplitN() with strings.Cut() for better readability and memory usage.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_16

LANGUAGE: go
CODE:
```
strings.Cut() // replacing strings.SplitN()
```

----------------------------------------

TITLE: Configuring Span Limits with Environment Variables in Go
DESCRIPTION: Code snippet showing the environment variables supported for configuring span limits in the OpenTelemetry Go SDK. These variables control attribute counts, event counts, link counts, and value length limits.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_27

LANGUAGE: Go
CODE:
```
OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT
OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT
OTEL_SPAN_EVENT_COUNT_LIMIT
OTEL_EVENT_ATTRIBUTE_COUNT_LIMIT
OTEL_SPAN_LINK_COUNT_LIMIT
OTEL_LINK_ATTRIBUTE_COUNT_LIMIT
```

----------------------------------------

TITLE: New Go Package Import Example
DESCRIPTION: Example showing import path for semantic conventions package.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_29

LANGUAGE: go
CODE:
```
"go.opentelemetry.io/otel/semconv/v1.7.0"
```

----------------------------------------

TITLE: Including Dockerfile Syntax File in User's Nano Configuration
DESCRIPTION: Configuration line to add to ~/.nanorc to enable Dockerfile syntax highlighting for a single user. This tells Nano where to find the custom syntax definition file.
SOURCE: https://github.com/moby/moby/blob/master/contrib/syntax/nano/README.md#2025-04-10_snippet_0

LANGUAGE: plaintext
CODE:
```
## Dockerfile files
include "~/.nano/syntax/Dockerfile.nanorc"
```

----------------------------------------

TITLE: Initializing Logrus Hooks in Go
DESCRIPTION: This snippet demonstrates how to set up Logrus hooks for Airbrake error reporting and syslog logging. It shows the import of necessary packages and the initialization of hooks in the init function.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/sirupsen/logrus/README.md#2025-04-10_snippet_5

LANGUAGE: go
CODE:
```
import (
  log "github.com/sirupsen/logrus"
  "gopkg.in/gemnasium/logrus-airbrake-hook.v2" // the package is named "airbrake"
  logrus_syslog "github.com/sirupsen/logrus/hooks/syslog"
  "log/syslog"
)

func init() {

  // Use the Airbrake hook to report errors that have Error severity or above to
  // an exception tracker. You can create custom hooks, see the Hooks section.
  log.AddHook(airbrake.NewHook(123, "xyz", "production"))

  hook, err := logrus_syslog.NewSyslogHook("udp", "localhost:514", syslog.LOG_INFO, "")
  if err != nil {
    log.Error("Unable to connect to local syslog daemon")
  } else {
    log.AddHook(hook)
  }
}
```

----------------------------------------

TITLE: Adding AddLink Support to OpenCensus Bridge
DESCRIPTION: Adds support for AddLink functionality to the OpenCensus bridge.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_10

LANGUAGE: Go
CODE:
```
Support for AddLink to go.opentelemetry.io/otel/bridge/opencensus
```

----------------------------------------

TITLE: Defining Stats Aggregations
DESCRIPTION: Examples of creating different types of aggregations (Distribution, Count, Sum) for OpenCensus views
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opencensus.io/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
distAgg := view.Distribution(1<<32, 2<<32, 3<<32)
countAgg := view.Count()
sumAgg := view.Sum()
```

----------------------------------------

TITLE: Global MeterProvider Support
DESCRIPTION: Added support for global MeterProvider with Meter, GetMeterProvider, and SetMeterProvider functions.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_18

LANGUAGE: go
CODE:
```
Meter() // Get metric.Meter from global provider
GetMeterProvider() // Get global metric.MeterProvider
SetMeterProvider() // Set global metric.MeterProvider
```

----------------------------------------

TITLE: MapCarrier Type Usage
DESCRIPTION: Example showing the type definition for MapCarrier used for propagation.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_30

LANGUAGE: go
CODE:
```
map[string]string
```

----------------------------------------

TITLE: Implementing Writer Methods in Go
DESCRIPTION: Various methods for the Writer struct, including buffer operations, writing, and flushing.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/philhofer/fwd/README.md#2025-04-10_snippet_6

LANGUAGE: go
CODE:
```
func (w *Writer) BufferSize() int

func (w *Writer) Buffered() int

func (w *Writer) Flush() error

func (w *Writer) Next(n int) ([]byte, error)

func (w *Writer) ReadFrom(r io.Reader) (int64, error)

func (w *Writer) Write(p []byte) (int, error)

func (w *Writer) WriteByte(b byte) error

func (w *Writer) WriteString(s string) (int, error)
```

----------------------------------------

TITLE: Markdown Package Header with Badge
DESCRIPTION: Markdown header with package name and PkgGoDev documentation badge link
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/metric/embedded/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
# Metric Embedded

[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/metric/embedded)](https://pkg.go.dev/go.opentelemetry.io/otel/metric/embedded)
```

----------------------------------------

TITLE: VSCode Linting Configuration
DESCRIPTION: JSON configuration for enabling golangci-lint in VSCode workspace settings.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/Microsoft/hcsshim/README.md#2025-04-10_snippet_6

LANGUAGE: json
CODE:
```
{
    "go.lintTool": "golangci-lint",
    "go.lintOnSave": "package"
}
```

----------------------------------------

TITLE: Creating and Pushing a Feature Branch
DESCRIPTION: This set of commands demonstrates how to create a new feature branch, make changes, commit them, and push the branch to the user's fork. This is the typical workflow for submitting a new feature or bug fix.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opencensus.io/CONTRIBUTING.md#2025-04-10_snippet_3

LANGUAGE: bash
CODE:
```
$ git checkout -b feature
# edit files
$ git commit
$ git push fork feature
```

----------------------------------------

TITLE: Changelog Section Headers
DESCRIPTION: Standard section headers used to categorize different types of changes in the changelog.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_1

LANGUAGE: markdown
CODE:
```
### Added
### Changed
### Deprecated
### Fixed
### Removed
```

----------------------------------------

TITLE: Updating DroppedAttributeCount Behavior in Go OpenTelemetry
DESCRIPTION: Changes the DroppedAttributeCount field to only represent attributes dropped for the span itself.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_38

LANGUAGE: Go
CODE:
```
The `DroppedAttributeCount` field of the `Span` in the `go.opentelemetry.io/otel` package now only represents the number of attributes dropped for the span itself.
It no longer is a conglomerate of itself, events, and link attributes that have been dropped.
```

----------------------------------------

TITLE: Sample CORS Request Response
DESCRIPTION: Example of the response output from a curl request to a CORS-enabled endpoint, showing the headers and response body.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/gorilla/mux/README.md#2025-04-10_snippet_18

LANGUAGE: bash
CODE:
```
*   Trying ::1...
* TCP_NODELAY set
* Connected to localhost (::1) port 8080 (#0)
> GET /foo HTTP/1.1
> Host: localhost:8080
> User-Agent: curl/7.59.0
> Accept: */*
> 
< HTTP/1.1 200 OK
< Access-Control-Allow-Methods: GET,PUT,PATCH,OPTIONS
< Access-Control-Allow-Origin: *
< Date: Fri, 28 Jun 2019 20:13:30 GMT
< Content-Length: 3
< Content-Type: text/plain; charset=utf-8
< 
* Connection #0 to host localhost left intact
foo
```

----------------------------------------

TITLE: Installing Codec Library in Go
DESCRIPTION: Command to install the Codec library using Go's package manager.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/hashicorp/go-msgpack/codec/README.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
go get github.com/ugorji/go/codec
```

----------------------------------------

TITLE: Creating Docker Network and Running Container
DESCRIPTION: Commands to create a custom Docker network and run a container with port mapping on a loopback address. This sets up the environment for the subsequent iptables rules.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap-lo.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
docker network create \
  -o com.docker.network.bridge.name=bridge1 \
  --subnet 192.0.2.0/24 --gateway 192.0.2.1 bridge1
docker run --network bridge1 -p 127.0.0.1:8080:80 --name c1 busybox
```

----------------------------------------

TITLE: Enabling gRPC-Go Logging
DESCRIPTION: Shows how to enable logging in gRPC-Go by setting environment variables. These commands turn on verbose logging to help with debugging connection issues.
SOURCE: https://github.com/moby/moby/blob/master/vendor/google.golang.org/grpc/README.md#2025-04-10_snippet_2

LANGUAGE: console
CODE:
```
$ export GRPC_GO_LOG_VERBOSITY_LEVEL=99
$ export GRPC_GO_LOG_SEVERITY_LEVEL=info
```

----------------------------------------

TITLE: Adding WithClock Option to Zap
DESCRIPTION: Adds zap.WithClock option to control the source of time via the new zapcore.Clock interface.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.uber.org/zap/CHANGELOG.md#2025-04-10_snippet_6

LANGUAGE: Markdown
CODE:
```
[#897][]: Add `zap.WithClock` option to control the source of time via the new `zapcore.Clock` interface.
```

----------------------------------------

TITLE: Adding Cancelable Context to DNS Lookup in Compute Metadata
DESCRIPTION: Update to the compute/metadata package that passes a cancelable context to DNS lookups, allowing for timeouts and cancellation during metadata operations.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_7

LANGUAGE: markdown
CODE:
```
- compute/metadata: 
  - Pass cancelable context to DNS lookup.
```

----------------------------------------

TITLE: Defining HugeTlbStat Message Type in Protocol Buffers
DESCRIPTION: Defines the HugeTlbStat message type with fields for current usage, maximum usage, and page size of HugeTLB (Huge Translation Lookaside Buffer) memory. This structure represents statistics for huge page allocations.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/cgroup2/stats/metrics.pb.txt#2025-04-10_snippet_5

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "HugeTlbStat"
  field {
    name: "current"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    json_name: "current"
  }
  field {
    name: "max"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_UINT64
    json_name: "max"
  }
  field {
    name: "pagesize"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "pagesize"
  }
}
```

----------------------------------------

TITLE: Managing Network Namespaces with Go
DESCRIPTION: This example demonstrates how to use the netns package to create, switch between, and manage network namespaces in Go. It shows how to lock the OS thread, create a new namespace, list network interfaces, and switch back to the original namespace.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/vishvananda/netns/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
package main

import (
    "fmt"
    "net"
    "runtime"

    "github.com/vishvananda/netns"
)

func main() {
    // Lock the OS Thread so we don't accidentally switch namespaces
    runtime.LockOSThread()
    defer runtime.UnlockOSThread()

    // Save the current network namespace
    origns, _ := netns.Get()
    defer origns.Close()

    // Create a new network namespace
    newns, _ := netns.New()
    defer newns.Close()

    // Do something with the network namespace
    ifaces, _ := net.Interfaces()
    fmt.Printf("Interfaces: %v\n", ifaces)

    // Switch back to the original namespace
    netns.Set(origns)
}
```

----------------------------------------

TITLE: Adding and Committing Changes
DESCRIPTION: Commands to stage, commit, and push changes to the repository
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/set-up-git.md#2025-04-10_snippet_6

LANGUAGE: bash
CODE:
```
$ touch TEST.md
$ git status
$ git add TEST.md
$ git commit -s -m "Making a dry run test."
$ git push --set-upstream origin dry-run-test
```

----------------------------------------

TITLE: Running race detection tests in gRPC-Go project
DESCRIPTION: Command to run all tests with race detection enabled, using different CPU configurations and a timeout limit. This helps catch concurrency issues in the code.
SOURCE: https://github.com/moby/moby/blob/master/vendor/google.golang.org/grpc/CONTRIBUTING.md#2025-04-10_snippet_2

LANGUAGE: shell
CODE:
```
go test -race -cpu 1,4 -timeout 7m ./...
```

----------------------------------------

TITLE: Adding BufferedWriteSyncer to Zap Core
DESCRIPTION: Introduces zapcore.BufferedWriteSyncer, a new WriteSyncer that buffers messages in-memory and flushes them periodically.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.uber.org/zap/CHANGELOG.md#2025-04-10_snippet_4

LANGUAGE: Markdown
CODE:
```
[#961][]: Add `zapcore.BufferedWriteSyncer`, a new `WriteSyncer` that buffers messages in-memory and flushes them periodically.
```

----------------------------------------

TITLE: Git Shortlog Example from v2.1.1
DESCRIPTION: Example of a git shortlog entry showing commit history and author information for version 2.1.1
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/mistifyio/go-zfs/v3/CHANGELOG.md#2025-04-10_snippet_1

LANGUAGE: plaintext
CODE:
```
    Alexey Guskov (1):
      zfs command uses different order of arguments on freebsd
```

----------------------------------------

TITLE: Defining RdmaEntry Message Type in Protocol Buffers
DESCRIPTION: Defines the RdmaEntry message type with fields for device, HCA handles, and HCA objects. This structure represents a single RDMA entry.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/cgroups/v3/cgroup2/stats/metrics.pb.txt#2025-04-10_snippet_2

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "RdmaEntry"
  field {
    name: "device"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "device"
  }
  field {
    name: "hca_handles"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_UINT32
    json_name: "hcaHandles"
  }
  field {
    name: "hca_objects"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_UINT32
    json_name: "hcaObjects"
  }
}
```

----------------------------------------

TITLE: Handling Shared Configuration with Multiple Option Types in Go
DESCRIPTION: Demonstrates how to handle configuration that is shared between different types (Dog and Bird) with specific and common options using interface composition.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-10_snippet_13

LANGUAGE: go
CODE:
```
// config holds options for all animals.
type config struct {
	Weight      float64
	Color       string
	MaxAltitude float64
}

// DogOption apply Dog specific options.
type DogOption interface {
	applyDog(config) config
}

// BirdOption apply Bird specific options.
type BirdOption interface {
	applyBird(config) config
}

// Option apply options for all animals.
type Option interface {
	BirdOption
	DogOption
}

type weightOption float64

func (o weightOption) applyDog(c config) config {
	c.Weight = float64(o)
	return c
}

func (o weightOption) applyBird(c config) config {
	c.Weight = float64(o)
	return c
}

func WithWeight(w float64) Option { return weightOption(w) }

type furColorOption string

func (o furColorOption) applyDog(c config) config {
	c.Color = string(o)
	return c
}

func WithFurColor(c string) DogOption { return furColorOption(c) }

type maxAltitudeOption float64

func (o maxAltitudeOption) applyBird(c config) config {
	c.MaxAltitude = float64(o)
	return c
}

func WithMaxAltitude(a float64) BirdOption { return maxAltitudeOption(a) }

func NewDog(name string, o ...DogOption) Dog    {…}
func NewBird(name string, o ...BirdOption) Bird {…}
```

----------------------------------------

TITLE: Displaying Final Stable Release for All Modules
DESCRIPTION: Lists the version numbers for the final stable release of all modules, including the newly stabilized metric modules.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/VERSIONING.md#2025-04-10_snippet_8

LANGUAGE: markdown
CODE:
```
* `otel`: `v1.1.0`
* `otel/trace`: `v1.1.0`
* `otel/metric`: `v1.1.0`
* `otel/baggage`: `v1.1.0`
* `otel/sdk/trace`: `v1.1.0`
* `otel/sdk/metric`: `v1.1.0`
```

----------------------------------------

TITLE: Managing Go Module Dependencies for Prometheus
DESCRIPTION: These commands tidy up the go.mod and go.sum files, and copy new or updated dependencies to the vendor directory in the Prometheus project.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/prometheus/procfs/CONTRIBUTING.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
# The GO111MODULE variable can be omitted when the code isn't located in GOPATH.
GO111MODULE=on go mod tidy

GO111MODULE=on go mod vendor
```

----------------------------------------

TITLE: Updating Storage Bucket Creation
DESCRIPTION: Changes to bucket creation pattern, moving from AdminClient to methods on Client.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_27

LANGUAGE: go
CODE:
```
adminClient.CreateBucket(ctx, bucketName, attrs)
```

LANGUAGE: go
CODE:
```
client.Bucket(bucketName).Create(ctx, projectID, attrs)
```

----------------------------------------

TITLE: Documenting Changelog Entries in Markdown
DESCRIPTION: This code snippet shows the structure of changelog entries using Markdown formatting. It includes version numbers, dates, feature additions, and bug fixes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/google/uuid/CHANGELOG.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
## [1.6.0](https://github.com/google/uuid/compare/v1.5.0...v1.6.0) (2024-01-16)


### Features

* add Max UUID constant ([#149](https://github.com/google/uuid/issues/149)) ([c58770e](https://github.com/google/uuid/commit/c58770eb495f55fe2ced6284f93c5158a62e53e3))


### Bug Fixes

* fix typo in version 7 uuid documentation ([#153](https://github.com/google/uuid/issues/153)) ([016b199](https://github.com/google/uuid/commit/016b199544692f745ffc8867b914129ecb47ef06))
* Monotonicity in UUIDv7 ([#150](https://github.com/google/uuid/issues/150)) ([a2b2b32](https://github.com/google/uuid/commit/a2b2b32373ff0b1a312b7fdf6d38a977099698a6))
```

----------------------------------------

TITLE: Navigating to Home Directory in Bash
DESCRIPTION: Command to change to user's home directory
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/set-up-git.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
$ cd ~
```

----------------------------------------

TITLE: Defining an Option Interface for Configuration in Go
DESCRIPTION: Creates an Option interface with an unexported apply method that returns a modified config. This pattern makes the interface sealed to prevent external implementation.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-10_snippet_7

LANGUAGE: go
CODE:
```
type Option interface {
	apply(config) config
}
```

----------------------------------------

TITLE: Updating span status setting behavior in Go SDK
DESCRIPTION: Updates the span.SetStatus method to make calls that would lower the status no-ops.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_26

LANGUAGE: Go
CODE:
```
`span.SetStatus` has been updated such that calls that lower the status are now no-ops.
```

----------------------------------------

TITLE: Error Cause Type Switch Pattern in Go
DESCRIPTION: Demonstrates how to use errors.Cause with type assertion to handle specific error types while maintaining the ability to handle unknown errors.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/pkg/errors/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
switch err := errors.Cause(err).(type) {
case *MyError:
        // handle specifically
default:
        // unknown error
}
```

----------------------------------------

TITLE: Updating PubSub Push Configuration in Go
DESCRIPTION: Changes the method for modifying a subscription's push configuration from ModifyPushConfig to the new Update method with SubscriptionConfigToUpdate struct.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_20

LANGUAGE: go
CODE:
```
sub.ModifyPushConfig(ctx, pubsub.PushConfig{Endpoint: "https://example.com/push"})
```

LANGUAGE: go
CODE:
```
sub.Update(ctx, pubsub.SubscriptionConfigToUpdate{
    PushConfig: &pubsub.PushConfig{Endpoint: "https://example.com/push"},
})
```

----------------------------------------

TITLE: Adding ParseAtomicLevel Function in Zap
DESCRIPTION: Adds a new function zap.ParseAtomicLevel to parse an AtomicLevel from a string.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.uber.org/zap/CHANGELOG.md#2025-04-10_snippet_1

LANGUAGE: Markdown
CODE:
```
[#1048][]: Add `zap.ParseAtomicLevel` to parse an `AtomicLevel` from a string.
```

----------------------------------------

TITLE: Installing Cobra Library Using Go Get
DESCRIPTION: Command to install the latest version of the Cobra library using Go get package manager.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/spf13/cobra/README.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
go get -u github.com/spf13/cobra@latest
```

----------------------------------------

TITLE: Creating and Pushing a Feature Branch Workflow
DESCRIPTION: Complete Git workflow for creating a new branch, making changes, running checks, and pushing to your fork. This is the recommended process for submitting changes to the project.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-10_snippet_3

LANGUAGE: sh
CODE:
```
git checkout -b <YOUR_BRANCH_NAME>
# edit files
# update changelog
make precommit
git add -p
git commit
git push <YOUR_FORK> <YOUR_BRANCH_NAME>
```

----------------------------------------

TITLE: Developer Certificate of Origin Text in Markdown
DESCRIPTION: The full text of the Developer Certificate of Origin (DCO) version 1.1 that contributors must certify to when making contributions to the project. This certifies they have the right to submit the code under the open source license.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/distribution/reference/CONTRIBUTING.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
```
Developer Certificate of Origin
Version 1.1

Copyright (C) 2004, 2006 The Linux Foundation and its contributors.
660 York Street, Suite 102,
San Francisco, CA 94110 USA

Everyone is permitted to copy and distribute verbatim copies of this
license document, but changing it is not allowed.

Developer's Certificate of Origin 1.1

By making a contribution to this project, I certify that:

(a) The contribution was created in whole or in part by me and I
    have the right to submit it under the open source license
    indicated in the file; or

(b) The contribution is based upon previous work that, to the best
    of my knowledge, is covered under an appropriate open source
    license and I have the right under that license to submit that
    work with modifications, whether created in whole or in part
    by me, under the same open source license (unless I am
    permitted to submit under a different license), as indicated
    in the file; or

(c) The contribution was provided directly to me by some other
    person who certified (a), (b) or (c) and I have not modified
    it.

(d) I understand and agree that this project and the contribution
    are public and that a record of the contribution (including all
    personal information I submit with it, including my sign-off) is
    maintained indefinitely and may be redistributed consistent with
    this project or the open source license(s) involved.
```
```

----------------------------------------

TITLE: Proposing a Motion Subject Template in Markdown
DESCRIPTION: This snippet demonstrates the recommended subject template for proposing a motion in an OCI project. It includes the project name, vote indicator, motion description, and voting window closure.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/opencontainers/cgroups/GOVERNANCE.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
> [{project} VOTE]: {motion description} (closes {end of voting window})
```

----------------------------------------

TITLE: Disabling OpenCensus Telemetry in Go Profiler Package
DESCRIPTION: Describes a change to the profiler package where OpenCensus Telemetry is disabled by default for profiler requests, with instructions on how to re-enable it through configuration.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_6

LANGUAGE: markdown
CODE:
```
- profiler:
  - Disable OpenCensus Telemetry for requests made by the profiler package by default. You can re-enable it using `profiler.Config.EnableOCTelemetry`.
```

----------------------------------------

TITLE: Adding ParseLevel Function in Zap Core
DESCRIPTION: Adds a new function zapcore.ParseLevel to parse a Level from a string.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.uber.org/zap/CHANGELOG.md#2025-04-10_snippet_0

LANGUAGE: Markdown
CODE:
```
[#1047][]: Add `zapcore.ParseLevel` to parse a `Level` from a string.
```

----------------------------------------

TITLE: Installing Cobra CLI Generator
DESCRIPTION: Command to install the cobra-cli generator tool for bootstrapping Cobra applications.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/spf13/cobra/README.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
go install github.com/spf13/cobra-cli@latest
```

----------------------------------------

TITLE: Implementing Boolean Option with Default True in Go
DESCRIPTION: Creates an option implementation for boolean values defaulting to true, with a WithoutOption function that disables the option.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CONTRIBUTING.md#2025-04-10_snippet_9

LANGUAGE: go
CODE:
```
type defaultTrueOption bool

func (o defaultTrueOption) apply(c config) config {
	c.Bool = bool(o)
    return c
}

// WithoutOption sets a T to have Bool option excluded.
func WithoutOption() Option {
	return defaultTrueOption(false)
}
```

----------------------------------------

TITLE: IPTables NAT4 Setup Commands
DESCRIPTION: Shows the actual iptables commands used to set up the nat table rules for IPv4 network address translation.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/templates/new-daemon.md#2025-04-10_snippet_3

LANGUAGE: shell
CODE:
```
{{index . "SNat4"}}
```

----------------------------------------

TITLE: Example Motion Proposal Subject in Markdown
DESCRIPTION: This snippet provides an example of a motion proposal subject line, specifically for tagging a release candidate in the runtime-spec project.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/opencontainers/cgroups/GOVERNANCE.md#2025-04-10_snippet_1

LANGUAGE: markdown
CODE:
```
> [runtime-spec VOTE]: Tag 0647920 as 1.0.0-rc (closes 2016-06-03 20:00 UTC)
```

----------------------------------------

TITLE: Issue Reference Format
DESCRIPTION: Examples of GitHub issue reference links used to track related issues and pull requests.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_2

LANGUAGE: markdown
CODE:
```
[#4648](https://www.github.com/googleapis/google-cloud-go/issues/4648)
```

----------------------------------------

TITLE: Updated Token Struct Definition in Go
DESCRIPTION: New Token struct definition showing the changed Signature field type from string to []byte and other structural components of a JWT token.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/golang-jwt/jwt/v5/MIGRATION_GUIDE.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
type Token struct {
	Raw       string                 // Raw contains the raw token
	Method    SigningMethod          // Method is the signing method used or to be used
	Header    map[string]interface{} // Header is the first segment of the token in decoded form
	Claims    Claims                 // Claims is the second segment of the token in decoded form
	Signature []byte                 // Signature is the third segment of the token in decoded form
	Valid     bool                   // Valid specifies if the token is valid
}
```

----------------------------------------

TITLE: Running Tests for Prometheus Project in Go
DESCRIPTION: This command runs all tests for the Prometheus project. It's recommended to run this before committing and pushing changes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/prometheus/procfs/CONTRIBUTING.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
make test         # Make sure all the tests pass before you commit and push :)
```

----------------------------------------

TITLE: Using Tags with Profiler
DESCRIPTION: Example showing how to apply OpenCensus tags as profiler labels for Go 1.9+ applications
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opencensus.io/README.md#2025-04-10_snippet_6

LANGUAGE: go
CODE:
```
ctx, err = tag.New(ctx,
	tag.Insert(osKey, "macOS-10.12.5"),
	tag.Insert(userIDKey, "fff0989878"),
)
if err != nil {
	log.Fatal(err)
}
tag.Do(ctx, func(ctx context.Context) {
	// Do work.
	// When profiling is on, samples will be
	// recorded with the key/values from the tag map.
})
```

----------------------------------------

TITLE: Git Commit Sign-off for Docker Contributions
DESCRIPTION: Example of the signed-off-by line that must be added to every git commit message when contributing to Docker projects. This sign-off certifies that the contributor has read and agreed to the Developer Certificate of Origin.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/go-events/CONTRIBUTING.md#2025-04-10_snippet_1

LANGUAGE: text
CODE:
```
Signed-off-by: Joe Smith <joe.smith@email.com>
```

----------------------------------------

TITLE: Defining ttrpc Request Flags in Markdown Table
DESCRIPTION: Presents a table of ttrpc request flags, including their numeric values, names, and descriptions. These flags are used to indicate the state of the request stream.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/ttrpc/PROTOCOL.md#2025-04-10_snippet_2

LANGUAGE: markdown
CODE:
```
| Flag | Name            | Description                                      |
|------|-----------------|--------------------------------------------------|
| 0x01 | `remote closed` | Non-unary, but no more data expected from remote |
| 0x02 | `remote open`   | Non-unary, remote is still sending data          |
```

----------------------------------------

TITLE: Bug Fix - Prevent Library Panic
DESCRIPTION: Fix to prevent panic in library code, addressing issue #1862.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/logging/CHANGES.md#2025-04-10_snippet_2

LANGUAGE: markdown
CODE:
```
* **logging:** do not panic in library code ([#3076](https://www.github.com/googleapis/google-cloud-go/issues/3076)) ([529be97](https://www.github.com/googleapis/google-cloud-go/commit/529be977f766443f49cb8914e17ba07c93841e84)), closes [#1862](https://www.github.com/googleapis/google-cloud-go/issues/1862)
```

----------------------------------------

TITLE: Additional Iptables Rules for Loopback Port Mapping
DESCRIPTION: Extra iptables rules added to the raw-PREROUTING chain to prevent remote access to ports mapped on the loopback address. These rules enhance security by dropping traffic not originating from the loopback interface.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap-lo.md#2025-04-10_snippet_3

LANGUAGE: plaintext
CODE:
```
-P PREROUTING ACCEPT
-P OUTPUT ACCEPT
-A PREROUTING -d 127.0.0.1/32 ! -i lo -p tcp -m tcp --dport 8080 -j DROP
-A PREROUTING -d 192.0.2.2/32 ! -i bridge1 -p tcp -m tcp --dport 80 -j DROP
```

----------------------------------------

TITLE: Reading /sys Filesystem in Go for Prometheus
DESCRIPTION: This code snippet shows how to read a small file from the /sys filesystem in Go, using the util.SysReadFile function which is optimized for reading single values.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/prometheus/procfs/CONTRIBUTING.md#2025-04-10_snippet_4

LANGUAGE: go
CODE:
```
data, err := util.SysReadFile("/sys/class/power_supply/BAT0/capacity")
```

----------------------------------------

TITLE: Configuring Git User Information for Signed Commits
DESCRIPTION: Commands to set up Git configuration with your name and email, which is required for signing commits when contributing to the Docker registry.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/distribution/CONTRIBUTING.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
git config user.name "Real Name" && git config user.email mail@example.com"
```

----------------------------------------

TITLE: Defining Protocol Buffer File Options
DESCRIPTION: Defines file-level options for Protocol Buffer files, specifying language-specific settings for code generation.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_19

LANGUAGE: protobuf
CODE:
```
options {
    java_package: "com.google.protobuf"
    java_outer_classname: "DescriptorProtos"
    optimize_for: SPEED
    go_package: "github.com/golang/protobuf/protoc-gen-go/descriptor;descriptor"
    cc_enable_arenas: true
    objc_class_prefix: "GPB"
    csharp_namespace: "Google.Protobuf.Reflection"
  }
```

----------------------------------------

TITLE: Updating Version Constant in Go
DESCRIPTION: This snippet shows how to update the version constant in the internal/version/version.go file. The Repo constant should be set to the current date in YYYYMMDD format.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/RELEASING.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
const Repo = "YYYYMMDD"
```

----------------------------------------

TITLE: Markdown Release History Document
DESCRIPTION: Chronological version history for the Moby project documenting features, bug fixes and other changes across releases from version 1.16.0 down to 1.6.0.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/Azure/azure-sdk-for-go/sdk/azcore/CHANGELOG.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
# Release History

## 1.16.0 (2024-10-17)

### Features Added

* Added field `Kind` to `runtime.StartSpanOptions` to allow a kind to be set when starting a span.

### Bugs Fixed

* `BearerTokenPolicy` now rewinds request bodies before retrying

## 1.15.0 (2024-10-14)

### Features Added

* `BearerTokenPolicy` handles CAE claims challenges

### Bugs Fixed

* Omit the `ResponseError.RawResponse` field from JSON marshaling so instances can be marshaled.
* Fixed an integer overflow in the retry policy.

### Other Changes

* Update dependencies.
```

----------------------------------------

TITLE: Iptables Raw Table Configuration
DESCRIPTION: The raw table configuration for Docker networking, containing a rule to block direct access to container ports from outside the container's network for security purposes.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap.md#2025-04-10_snippet_5

LANGUAGE: text
CODE:
```
Chain PREROUTING (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DROP       6    --  !bridge1 *       0.0.0.0/0            192.0.2.2            tcp dpt:80

Chain OUTPUT (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         
```

----------------------------------------

TITLE: Running Code Formatting in Cobra Project
DESCRIPTION: Command to run the make all target which ensures proper code formatting for the Cobra project.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/spf13/cobra/CONTRIBUTING.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
make all
```

----------------------------------------

TITLE: Installing Linting Dependency
DESCRIPTION: Installs the golint tool required for the Makefile build process to perform code linting.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/distribution/BUILDING.md#2025-04-10_snippet_4

LANGUAGE: bash
CODE:
```
go get github.com/golang/lint/golint
```

----------------------------------------

TITLE: Example Go Emulator Host Configuration
DESCRIPTION: Example showing how to configure Storage emulator host environment variable.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_14

LANGUAGE: go
CODE:
```
STORAGE_EMULATOR_HOST
```

----------------------------------------

TITLE: Apache License 2.0 Boilerplate Notice
DESCRIPTION: Standard copyright and license notice template to be included in source files. The template includes placeholders for year and copyright owner information that should be replaced when applying the license.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/aws/aws-sdk-go-v2/aws/protocol/eventstream/LICENSE.txt#2025-04-10_snippet_0

LANGUAGE: text
CODE:
```
Copyright [yyyy] [name of copyright owner]

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```

----------------------------------------

TITLE: Breaking Change Release Note (v1.14.0)
DESCRIPTION: Release note documenting minimum Go version requirement change to 1.19.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/aws/aws-sdk-go-v2/feature/ec2/imds/CHANGELOG.md#2025-04-10_snippet_2

LANGUAGE: markdown
CODE:
```
# v1.14.0 (2023-10-31)

* **Feature**: **BREAKING CHANGE**: Bump minimum go version to 1.19 per the revised [go version support policy](https://aws.amazon.com/blogs/developer/aws-sdk-for-go-aligns-with-go-release-policy-on-supported-runtimes/).
* **Dependency Update**: Updated to the latest SDK module versions
```

----------------------------------------

TITLE: Docker's NAT Table iptables Rules for Routed-Mode Network
DESCRIPTION: The NAT table iptables commands for a Docker container on a routed-mode network. These rules handle network address translation for container traffic, particularly for published ports and internet access.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap-routed.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
-P PREROUTING ACCEPT
-P INPUT ACCEPT
-P OUTPUT ACCEPT
-P POSTROUTING ACCEPT
-N DOCKER
-A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER
-A OUTPUT ! -d 127.0.0.0/8 -m addrtype --dst-type LOCAL -j DOCKER
-A POSTROUTING -s 172.17.0.0/16 ! -o docker0 -j MASQUERADE
-A DOCKER -i bridge1 -j RETURN
-A DOCKER -i docker0 -j RETURN
```

----------------------------------------

TITLE: Quick Contribution Workflow for Cobra
DESCRIPTION: Step-by-step Git commands demonstrating the full contribution workflow for the Cobra project, from forking to creating a pull request.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/spf13/cobra/CONTRIBUTING.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
git clone https://github.com/your_username/cobra && cd cobra
```

LANGUAGE: bash
CODE:
```
git checkout -b my-new-feature
```

LANGUAGE: bash
CODE:
```
make test
```

LANGUAGE: bash
CODE:
```
git add .
```

LANGUAGE: bash
CODE:
```
git commit -m 'Add some feature'
```

LANGUAGE: bash
CODE:
```
git push origin my-new-feature
```

----------------------------------------

TITLE: Creating a Feature Branch in go-zfs
DESCRIPTION: This snippet shows how to create a new feature branch for working on a specific issue or feature in the go-zfs project.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/mistifyio/go-zfs/v3/CONTRIBUTING.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
$ git checkout -b <feature-branch-name>
```

----------------------------------------

TITLE: Implementing Protected Interfaces in Go
DESCRIPTION: Code snippet showing interfaces that are prevented from being implemented by end-users, part of the OpenTelemetry SDK's API controls.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_39

LANGUAGE: go
CODE:
```
"otel/exporters/otlp/otlphttp".Option
"otel/exporters/stdout".Option
"otel/oteltest".Option
"otel/trace".TracerOption
"otel/trace".SpanOption
"otel/trace".EventOption
"otel/trace".LifeCycleOption
"otel/trace".InstrumentationOption
"otel/sdk/resource".Option
"otel/sdk/trace".ParentBasedSamplerOption
"otel/sdk/trace".ReadOnlySpan
"otel/sdk/trace".ReadWriteSpan
```

----------------------------------------

TITLE: Defining Process Details Protocol Structure
DESCRIPTION: Protocol buffer schema defining the ProcessDetails message type for container process information. Contains the exec ID field for process identification.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/containerd/api/types/runc/options/next.pb.txt#2025-04-10_snippet_2

LANGUAGE: protobuf
CODE:
```
message ProcessDetails {
  string exec_id = 1;
}
```

----------------------------------------

TITLE: Docker API Authentication Example
DESCRIPTION: Example of Docker API authentication configuration showing registry token support.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/version-history.md#2025-04-10_snippet_14

LANGUAGE: markdown
CODE:
```
AuthConfig now supports a `registrytoken` for token based authentication
```

----------------------------------------

TITLE: Creating a Routed-Mode Network and Running a Container with Published Port in Docker
DESCRIPTION: Commands to create a Docker network in routed gateway mode with a specific subnet and gateway, then running a container on this network with port 80 published to host port 8080.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap-routed.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
docker network create \
  -o com.docker.network.bridge.name=bridge1 \
  -o com.docker.network.bridge.gateway_mode_ipv4=routed \
  --subnet 192.0.2.0/24 --gateway 192.0.2.1 bridge1
docker run --network bridge1 -p 8080:80 --name c1 busybox
```

----------------------------------------

TITLE: Creating a signed-off commit for go-struct-converter
DESCRIPTION: This shell command shows how to create a commit with an automatic sign-off using the -s or --signoff flag.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/anchore/go-struct-converter/CONTRIBUTING.md#2025-04-10_snippet_3

LANGUAGE: shell
CODE:
```
$ git commit -s -m "this is a commit message"
```

----------------------------------------

TITLE: Cloning and Setting Up go-zfs Repository
DESCRIPTION: This snippet shows how to clone the go-zfs repository, navigate to the project directory, and add the upstream remote for synchronization.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/mistifyio/go-zfs/v3/CONTRIBUTING.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
$ git clone git@github.com:<your-username>/go-zfs.git
$ cd go-zfs
$ git remote add upstream https://github.com/mistifyio/go-zfs.git
```

----------------------------------------

TITLE: Testing Windows Binary Against Linux Daemon in Moby
DESCRIPTION: These commands demonstrate how to set up the environment and run tests for a Windows binary against a Linux daemon in the Moby project.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/test.md#2025-04-10_snippet_5

LANGUAGE: bash
CODE:
```
$ export DOCKER_REMOTE_DAEMON=1
$ export DOCKER_TEST_HOST=tcp://213.124.23.200:2376
$ hack/make.sh binary test-integration
```

----------------------------------------

TITLE: Defining Watch Service in Docker SwarmKit Protobuf
DESCRIPTION: Defines the Watch service that allows clients to subscribe to object changes in Docker SwarmKit. It provides a Watch method that accepts a WatchRequest and streams WatchMessage responses.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_137

LANGUAGE: protobuf
CODE:
```
service {
  name: "Watch"
  method {
    name: "Watch"
    input_type: ".docker.swarmkit.v1.WatchRequest"
    output_type: ".docker.swarmkit.v1.WatchMessage"
    options {
      73626345 {
        1: "swarm-manager"
      }
    }
    server_streaming: true
  }
}
```

----------------------------------------

TITLE: Updating Cluster Volumes in Docker API
DESCRIPTION: A new PUT /volumes{name} endpoint has been added to update cluster volumes (CNI). This functionality is only supported when the daemon is a Swarm manager.
SOURCE: https://github.com/moby/moby/blob/master/docs/api/version-history.md#2025-04-10_snippet_10

LANGUAGE: markdown
CODE:
```
* Added a new `PUT /volumes{name}` endpoint to update cluster volumes (CNI).
  Cluster volumes are only supported if the daemon is a Swarm manager.
```

----------------------------------------

TITLE: IPTables Filter Table Configuration
DESCRIPTION: The full filter table configuration showing chains and rules for the Docker network. This includes rules to disable inter-container communication on the bridge1 network while allowing incoming traffic to published ports.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap-noicc.md#2025-04-10_snippet_1

LANGUAGE: plaintext
CODE:
```
Chain INPUT (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         

Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DOCKER-USER  0    --  *      *       0.0.0.0/0            0.0.0.0/0           
2        0     0 DOCKER-FORWARD  0    --  *      *       0.0.0.0/0            0.0.0.0/0           

Chain OUTPUT (policy ACCEPT 0 packets, 0 bytes)
num   pkts bytes target     prot opt in     out     source               destination         

Chain DOCKER (2 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 ACCEPT     6    --  !bridge1 bridge1  0.0.0.0/0            192.0.2.2            tcp dpt:80
2        0     0 DROP       0    --  !docker0 docker0  0.0.0.0/0            0.0.0.0/0           
3        0     0 DROP       0    --  !bridge1 bridge1  0.0.0.0/0            0.0.0.0/0           

Chain DOCKER-BRIDGE (1 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DOCKER     0    --  *      docker0  0.0.0.0/0            0.0.0.0/0           
2        0     0 DOCKER     0    --  *      bridge1  0.0.0.0/0            0.0.0.0/0           

Chain DOCKER-CT (1 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 ACCEPT     0    --  *      docker0  0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED
2        0     0 ACCEPT     0    --  *      bridge1  0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED

Chain DOCKER-FORWARD (1 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DOCKER-CT  0    --  *      *       0.0.0.0/0            0.0.0.0/0           
2        0     0 DOCKER-ISOLATION-STAGE-1  0    --  *      *       0.0.0.0/0            0.0.0.0/0           
3        0     0 DOCKER-BRIDGE  0    --  *      *       0.0.0.0/0            0.0.0.0/0           
4        0     0 ACCEPT     0    --  docker0 *       0.0.0.0/0            0.0.0.0/0           
5        0     0 DROP       0    --  bridge1 bridge1  0.0.0.0/0            0.0.0.0/0           
6        0     0 ACCEPT     0    --  bridge1 !bridge1  0.0.0.0/0            0.0.0.0/0           

Chain DOCKER-ISOLATION-STAGE-1 (1 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DOCKER-ISOLATION-STAGE-2  0    --  docker0 !docker0  0.0.0.0/0            0.0.0.0/0           
2        0     0 DOCKER-ISOLATION-STAGE-2  0    --  bridge1 !bridge1  0.0.0.0/0            0.0.0.0/0           

Chain DOCKER-ISOLATION-STAGE-2 (2 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 DROP       0    --  *      bridge1  0.0.0.0/0            0.0.0.0/0           
2        0     0 DROP       0    --  *      docker0  0.0.0.0/0            0.0.0.0/0           

Chain DOCKER-USER (1 references)
num   pkts bytes target     prot opt in     out     source               destination         
1        0     0 RETURN     0    --  *      *       0.0.0.0/0            0.0.0.0/0           
```

----------------------------------------

TITLE: ANSI Feature Builder Example
DESCRIPTION: Example of using the builder pattern to combine multiple ANSI features for custom formatting
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/morikuni/aec/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
custom := aec.EmptyBuilder.Right(2).RGB8BitF(128, 255, 64).RedB().ANSI
custom.Apply("Hello World")
```

----------------------------------------

TITLE: Git Shortlog Example from v3.0.0
DESCRIPTION: Example of a git shortlog entry showing commit history and author information for version 3.0.0
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/mistifyio/go-zfs/v3/CHANGELOG.md#2025-04-10_snippet_0

LANGUAGE: plaintext
CODE:
```
    Amit Krishnan (1):
      Issue #39 and Issue #40 - Enable Solaris support for go-zfs Switch from zfs/zpool get to zfs/zpool list for better performance Signed-off-by: Amit Krishnan <krish.amit@gmail.com>
```

----------------------------------------

TITLE: Importing Google Cloud Go Package
DESCRIPTION: Basic import statement for the main Google Cloud Go package
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
import "cloud.google.com/go"
```

----------------------------------------

TITLE: Defining LogMessage Structure in Protobuf
DESCRIPTION: Defines the structure of a LogMessage in Protocol Buffers, including fields for context, timestamp, stream, data, and attributes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_107

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "LogMessage"
  field {
    name: "context"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.LogContext"
    options {
      65001: 0
    }
    json_name: "context"
  }
  field {
    name: "timestamp"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".google.protobuf.Timestamp"
    json_name: "timestamp"
  }
  field {
    name: "stream"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.LogStream"
    json_name: "stream"
  }
  field {
    name: "data"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_BYTES
    json_name: "data"
  }
  field {
    name: "attrs"
    number: 5
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.LogAttr"
    options {
      65001: 0
    }
    json_name: "attrs"
  }
}
```

----------------------------------------

TITLE: Displaying PkgGoDev Badge in Markdown
DESCRIPTION: Markdown snippet that displays a PkgGoDev badge linking to the documentation for the go.opentelemetry.io/otel/trace/embedded package.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/trace/embedded/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/trace/embedded)](https://pkg.go.dev/go.opentelemetry.io/otel/trace/embedded)
```

----------------------------------------

TITLE: Filter Table IPTables Rules
DESCRIPTION: Complete filter table configuration showing Docker network isolation and forwarding rules
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap-noproxy.md#2025-04-10_snippet_1

LANGUAGE: plaintext
CODE:
```
-P INPUT ACCEPT
-P FORWARD ACCEPT
-P OUTPUT ACCEPT
-N DOCKER
-N DOCKER-BRIDGE
-N DOCKER-CT
-N DOCKER-FORWARD
-N DOCKER-ISOLATION-STAGE-1
-N DOCKER-ISOLATION-STAGE-2
-N DOCKER-USER
-A FORWARD -j DOCKER-USER
-A FORWARD -j DOCKER-FORWARD
-A DOCKER -d 192.0.2.2/32 ! -i bridge1 -o bridge1 -p tcp -m tcp --dport 80 -j ACCEPT
-A DOCKER ! -i docker0 -o docker0 -j DROP
-A DOCKER ! -i bridge1 -o bridge1 -j DROP
-A DOCKER-BRIDGE -o docker0 -j DOCKER
-A DOCKER-BRIDGE -o bridge1 -j DOCKER
-A DOCKER-CT -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A DOCKER-CT -o bridge1 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A DOCKER-FORWARD -j DOCKER-CT
-A DOCKER-FORWARD -j DOCKER-ISOLATION-STAGE-1
-A DOCKER-FORWARD -j DOCKER-BRIDGE
-A DOCKER-FORWARD -i docker0 -j ACCEPT
-A DOCKER-FORWARD -i bridge1 -j ACCEPT
-A DOCKER-ISOLATION-STAGE-1 -i docker0 ! -o docker0 -j DOCKER-ISOLATION-STAGE-2
-A DOCKER-ISOLATION-STAGE-1 -i bridge1 ! -o bridge1 -j DOCKER-ISOLATION-STAGE-2
-A DOCKER-ISOLATION-STAGE-2 -o bridge1 -j DROP
-A DOCKER-ISOLATION-STAGE-2 -o docker0 -j DROP
-A DOCKER-USER -j RETURN
```

----------------------------------------

TITLE: Formatting Byte Sizes with Floating Point in Go
DESCRIPTION: Examples of using fmt.Printf with floating point flags to format byte sizes. This demonstrates decimal and binary unit suffixes, as well as automatic unit selection based on value size.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/tonistiigi/units/readme.md#2025-04-10_snippet_0

LANGUAGE: Go
CODE:
```
fmt.Printf("%.2f", 123 * B)   => "123B"
fmt.Printf("%.2f", 1234 * B)  => "1.23kB"
fmt.Printf("%g", 1200 * B)    => "1.2kB"
fmt.Printf("%#g", 1024 * B)   => "1KiB"
```

----------------------------------------

TITLE: Defining ttrpc Message Types in Markdown Table
DESCRIPTION: Presents a table of ttrpc message types, including their numeric identifiers, names, and descriptions. This table provides a quick reference for the three main message types used in the protocol.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/ttrpc/PROTOCOL.md#2025-04-10_snippet_1

LANGUAGE: markdown
CODE:
```
| Message Type | Name     | Description                      |
|--------------|----------|----------------------------------|
| 0x01         | Request  | Initiates stream                 |
| 0x02         | Response | Final stream data and terminates |
| 0x03         | Data     | Stream data                      |
```

----------------------------------------

TITLE: Managing MySQL Database with Goose
DESCRIPTION: Commands to set up and tear down a MySQL database using goose migrations. These commands initialize the schema needed for CFSSL certificate operations.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/cloudflare/cfssl/certdb/README.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
goose -path certdb/mysql up
```

LANGUAGE: bash
CODE:
```
goose -path certdb/mysql down
```

----------------------------------------

TITLE: Defining Health Service in SwarmKit Protobuf
DESCRIPTION: Defines the Health service and related message types in SwarmKit protocol buffers. This service enables health checking of SwarmKit components with status responses indicating serving state.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_105

LANGUAGE: protobuf
CODE:
```
name: "HealthCheckRequest"
field {
  name: "service"
  number: 1
  label: LABEL_OPTIONAL
  type: TYPE_STRING
  json_name: "service"
}
}
message_type {
  name: "HealthCheckResponse"
  field {
    name: "status"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.HealthCheckResponse.ServingStatus"
    json_name: "status"
  }
  enum_type {
    name: "ServingStatus"
    value {
      name: "UNKNOWN"
      number: 0
    }
    value {
      name: "SERVING"
      number: 1
    }
    value {
      name: "NOT_SERVING"
      number: 2
    }
  }
}
service {
  name: "Health"
  method {
    name: "Check"
    input_type: ".docker.swarmkit.v1.HealthCheckRequest"
    output_type: ".docker.swarmkit.v1.HealthCheckResponse"
    options {
      73626345 {
        1: "swarm-manager"
      }
    }
  }
}
```

----------------------------------------

TITLE: Explaining Clock Package Purpose and Origin in Markdown
DESCRIPTION: Documentation explaining the Clock package, which provides an interface for time-based operations and allows mocking time for testing. It notes that this is a copy of k8s.io/utils/clock to avoid a circular dependency between packages.
SOURCE: https://github.com/moby/moby/blob/master/vendor/k8s.io/klog/v2/internal/clock/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
# Clock

This package provides an interface for time-based operations.  It allows
mocking time for testing.

This is a copy of k8s.io/utils/clock. We have to copy it to avoid a circular
dependency (k8s.io/klog -> k8s.io/utils -> k8s.io/klog).
```

----------------------------------------

TITLE: Creating Docker Network and Running Container with Published Port
DESCRIPTION: Commands to create a Docker network with nat-unprotected gateway mode and run a container with a published port on that network.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap-natunprot.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
docker network create \
  -o com.docker.network.bridge.name=bridge1 \
  -o com.docker.network.bridge.gateway_mode_ipv4=nat-unprotected \
  --subnet 192.0.2.0/24 --gateway 192.0.2.1 bridge1
docker run --network bridge1 -p 8080:80 --name c1 busybox
```

----------------------------------------

TITLE: Importing Mode Package in Go
DESCRIPTION: Example of importing the Mode package in a Go source file.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/tonistiigi/dchapes-mode/README.md#2025-04-10_snippet_1

LANGUAGE: Go
CODE:
```
import "hg.sr.ht/~dchapes/mode"
```

----------------------------------------

TITLE: Implementing Reader Methods in Go
DESCRIPTION: Various methods for the Reader struct, including buffer operations, reading, and skipping.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/philhofer/fwd/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
func (r *Reader) BufferSize() int

func (r *Reader) Buffered() int

func (r *Reader) Next(n int) ([]byte, error)

func (r *Reader) Peek(n int) ([]byte, error)

func (r *Reader) Read(b []byte) (int, error)

func (r *Reader) ReadByte() (byte, error)

func (r *Reader) ReadFull(b []byte) (int, error)

func (r *Reader) Reset(rd io.Reader)

func (r *Reader) Skip(n int) (int, error)

func (r *Reader) WriteTo(w io.Writer) (int64, error)
```

----------------------------------------

TITLE: Managing PostgreSQL Database with Goose
DESCRIPTION: Commands to set up and tear down a PostgreSQL database using goose migrations. These commands initialize the schema needed for CFSSL certificate operations.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/cloudflare/cfssl/certdb/README.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
goose -path certdb/pg up
```

LANGUAGE: bash
CODE:
```
goose -path certdb/pg down
```

----------------------------------------

TITLE: Defining Dispatcher Service in SwarmKit Protobuf
DESCRIPTION: Defines the Dispatcher service in SwarmKit protocol buffers. This service handles worker-manager communication including sessions, heartbeats, task and volume status updates, and assignment delivery.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_104

LANGUAGE: protobuf
CODE:
```
name: "Dispatcher"
method {
  name: "Session"
  input_type: ".docker.swarmkit.v1.SessionRequest"
  output_type: ".docker.swarmkit.v1.SessionMessage"
  options {
    73626345 {
      1: "swarm-worker"
      1: "swarm-manager"
    }
  }
  server_streaming: true
}
method {
  name: "Heartbeat"
  input_type: ".docker.swarmkit.v1.HeartbeatRequest"
  output_type: ".docker.swarmkit.v1.HeartbeatResponse"
  options {
    73626345 {
      1: "swarm-worker"
      1: "swarm-manager"
    }
  }
}
method {
  name: "UpdateTaskStatus"
  input_type: ".docker.swarmkit.v1.UpdateTaskStatusRequest"
  output_type: ".docker.swarmkit.v1.UpdateTaskStatusResponse"
  options {
    73626345 {
      1: "swarm-worker"
      1: "swarm-manager"
    }
  }
}
method {
  name: "UpdateVolumeStatus"
  input_type: ".docker.swarmkit.v1.UpdateVolumeStatusRequest"
  output_type: ".docker.swarmkit.v1.UpdateVolumeStatusResponse"
  options {
    73626345 {
      1: "swarm-worker"
      1: "swarm-manager"
    }
  }
}
method {
  name: "Tasks"
  input_type: ".docker.swarmkit.v1.TasksRequest"
  output_type: ".docker.swarmkit.v1.TasksMessage"
  options {
    deprecated: true
    73626345 {
      1: "swarm-worker"
      1: "swarm-manager"
    }
  }
  server_streaming: true
}
method {
  name: "Assignments"
  input_type: ".docker.swarmkit.v1.AssignmentsRequest"
  output_type: ".docker.swarmkit.v1.AssignmentsMessage"
  options {
    73626345 {
      1: "swarm-worker"
      1: "swarm-manager"
    }
  }
  server_streaming: true
}
```

----------------------------------------

TITLE: Creating a Signed Git Tag for klog Release
DESCRIPTION: Command for creating a signed git tag for a new klog release version, where the maintainer inserts the changelog details.
SOURCE: https://github.com/moby/moby/blob/master/vendor/k8s.io/klog/v2/RELEASE.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
git tag -s $VERSION
```

----------------------------------------

TITLE: NAT Table Rules for Docker Internal Networks
DESCRIPTION: This snippet displays the iptables nat table rules for Docker internal networks. It shows the configuration for network address translation in the context of internal Docker networks.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/templates/usernet-internal.md#2025-04-10_snippet_2

LANGUAGE: iptables
CODE:
```
{{index . "LNat4"}}
```

LANGUAGE: iptables
CODE:
```
{{index . "SNat4"}}
```

----------------------------------------

TITLE: Upload Cache Data PATCH Endpoint
DESCRIPTION: PATCH endpoint for uploading chunks of cache data using Content-Range headers to specify the data range being uploaded. Accepts raw binary data.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/tonistiigi/go-actions-cache/api.md#2025-04-10_snippet_2

LANGUAGE: http
CODE:
```
PATCH /caches/[cacheID]
Content-Type: application/octet-stream
```

----------------------------------------

TITLE: Adding NewReflectedEncoder Field to EncoderConfig
DESCRIPTION: Adds a new field EncoderConfig.NewReflectedEncoder to customize JSON encoding of reflected log fields.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.uber.org/zap/CHANGELOG.md#2025-04-10_snippet_3

LANGUAGE: Markdown
CODE:
```
[#1039][]: Add `EncoderConfig.NewReflectedEncoder` field to customize JSON encoding of reflected log fields.
```

----------------------------------------

TITLE: Running Tests for PackageURL Go Implementation
DESCRIPTION: Example command output showing how to run tests for the packageurl-go library using Make, which pulls test fixtures shared between all package-url projects.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/package-url/packageurl-go/README.md#2025-04-10_snippet_3

LANGUAGE: shell
CODE:
```
$ make test
go test -v -cover ./...
=== RUN   TestFromStringExamples
--- PASS: TestFromStringExamples (0.00s)
=== RUN   TestToStringExamples
--- PASS: TestToStringExamples (0.00s)
=== RUN   TestStringer
--- PASS: TestStringer (0.00s)
=== RUN   TestQualifiersMapConversion
--- PASS: TestQualifiersMapConversion (0.00s)
PASS
coverage: 90.7% of statements
ok      github.com/package-url/packageurl-go    0.004s  coverage: 90.7% of statements
```

----------------------------------------

TITLE: Defining Assignment-Related Message Types in SwarmKit Protobuf
DESCRIPTION: Defines protocol buffer messages for assignments management in SwarmKit. Includes AssignmentsRequest for requesting assignments, Assignment for different assignment types (task, secret, config, volume), and AssignmentChange for tracking updates.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_101

LANGUAGE: protobuf
CODE:
```
name: "AssignmentsRequest"
field {
  name: "session_id"
  number: 1
  label: LABEL_OPTIONAL
  type: TYPE_STRING
  json_name: "sessionId"
}
}
message_type {
  name: "Assignment"
  field {
    name: "task"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Task"
    oneof_index: 0
    json_name: "task"
  }
  field {
    name: "secret"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Secret"
    oneof_index: 0
    json_name: "secret"
  }
  field {
    name: "config"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Config"
    oneof_index: 0
    json_name: "config"
  }
  field {
    name: "volume"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.VolumeAssignment"
    oneof_index: 0
    json_name: "volume"
  }
  oneof_decl {
    name: "item"
  }
}
```

----------------------------------------

TITLE: Checking Explorer Process Start in Go
DESCRIPTION: Function signature for detecting if the current process was started by double-clicking in Windows Explorer. Returns a boolean value indicating the process start method.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/inconshreveable/mousetrap/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
func StartedByExplorer() (bool)
```

----------------------------------------

TITLE: Apache License 2.0 Boilerplate Notice Template
DESCRIPTION: Standard boilerplate notice to be included in files to apply the Apache License 2.0, with placeholders for copyright year and owner information. Also includes the standard permissions and limitations text.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/aws/aws-sdk-go-v2/internal/configsources/LICENSE.txt#2025-04-10_snippet_0

LANGUAGE: text
CODE:
```
Copyright [yyyy] [name of copyright owner]

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```

----------------------------------------

TITLE: Benchmarking Darwin ARM64 Performance for CSV Parsing
DESCRIPTION: Benchmark results comparing go-csvvalue with stdlib CSV parser on Darwin ARM64 platform, demonstrating performance characteristics across different implementations.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/tonistiigi/go-csvvalue/readme.md#2025-04-10_snippet_1

LANGUAGE: text
CODE:
```
goos: darwin
goarch: arm64
pkg: github.com/tonistiigi/go-csvvalue
BenchmarkFields/stdlib/nocache-10                1679923               784.9 ns/op          4520 B/op         14 allocs/op
BenchmarkFields/stdlib/withcache-10              1641891               826.9 ns/op          4520 B/op         14 allocs/op
BenchmarkFields/csvvalue/withcache-10           34399642                33.93 ns/op            0 B/op          0 allocs/op
BenchmarkFields/csvvalue/nocache-10             17441373                67.21 ns/op           48 B/op          1 allocs/op
PASS
```

----------------------------------------

TITLE: Concurrent Huff0 Decompression with Decoder in Go
DESCRIPTION: This snippet shows how to use a stateless Decoder for concurrent decompression of content with a fixed table. The capacity of the provided slice indicates the expected output size.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/klauspost/compress/huff0/README.md#2025-04-10_snippet_3

LANGUAGE: go
CODE:
```
type Decoder struct {}

// Request a Decoder for concurrent decompression
decoder := scratch.RequestDecoder(expectedOutputSize)

// Use decoder for decompression
output, err := decoder.Decompress(input)
```

----------------------------------------

TITLE: Defining ConfChangeV2 Message Type in Protobuf for Raft
DESCRIPTION: Protocol Buffer definition for the ConfChangeV2 message type used in Raft consensus algorithm. This message represents a group of configuration changes with a transition type, multiple change entries, and context data.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_112

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "ConfChangeV2"
  field {
    name: "transition"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".raftpb.ConfChangeTransition"
    options {
      65001: 0
    }
    json_name: "transition"
  }
  field {
    name: "changes"
    number: 2
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".raftpb.ConfChangeSingle"
    options {
      65001: 0
    }
    json_name: "changes"
  }
  field {
    name: "context"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_BYTES
    json_name: "context"
  }
}
```

----------------------------------------

TITLE: SwarmKit Heartbeat Message Definitions
DESCRIPTION: Defines message types for heartbeat functionality including HeartbeatRequest and HeartbeatResponse structures. These messages handle session monitoring and timing information.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_97

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "HeartbeatRequest"
  field {
    name: "session_id"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "sessionId"
  }
}
```

----------------------------------------

TITLE: Installing Levenshtein Package in Go
DESCRIPTION: This command installs the Levenshtein package using Go's package management system. It fetches the package from the specified GitHub repository and makes it available for use in Go projects.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/agext/levenshtein/README.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
go get github.com/agext/levenshtein
```

----------------------------------------

TITLE: Regenerating Protobuf Go Code for HTTP JSON Error Schema
DESCRIPTION: This command regenerates the protobuf Go code for the error.proto file. It requires a local copy of googleapis, the protoc compiler, the Go protobuf plugin, and the goimports tool.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/googleapis/gax-go/v2/apierror/internal/proto/README.md#2025-04-10_snippet_0

LANGUAGE: sh
CODE:
```
protoc -I $GOOGLEAPIS -I. --go_out=. --go_opt=module=github.com/googleapis/gax-go/v2/apierror/internal/proto error.proto
goimports -w .
```

----------------------------------------

TITLE: Updating Jaeger Exporter Environment Variables in Go
DESCRIPTION: Renames Jaeger exporter environment variables to comply with OpenTelemetry specifications.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/CHANGELOG.md#2025-04-10_snippet_36

LANGUAGE: Go
CODE:
```
Updated Jaeger Environment Variables: `JAEGER_ENDPOINT`, `JAEGER_USER`, `JAEGER_PASSWORD`
to `OTEL_EXPORTER_JAEGER_ENDPOINT`, `OTEL_EXPORTER_JAEGER_USER`, `OTEL_EXPORTER_JAEGER_PASSWORD` in compliance with OTel specification.
```

----------------------------------------

TITLE: Implementing BOM Detection and Removal in Go
DESCRIPTION: This example demonstrates how to use the utfbom package to detect and remove the Unicode Byte Order Mark from data. It shows both simple BOM skipping and BOM skipping with encoding detection for two test cases - one with a UTF-8 BOM and one without.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/dimchansky/utfbom/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
package main

import (
	"bytes"
	"fmt"
	"io/ioutil"

	"github.com/dimchansky/utfbom"
)

func main() {
	trySkip([]byte("\xEF\xBB\xBFhello"))
	trySkip([]byte("hello"))
}

func trySkip(byteData []byte) {
	fmt.Println("Input:", byteData)

	// just skip BOM
	output, err := ioutil.ReadAll(utfbom.SkipOnly(bytes.NewReader(byteData)))
	if err != nil {
		fmt.Println(err)
		return
	}
	fmt.Println("ReadAll with BOM skipping", output)

	// skip BOM and detect encoding
	sr, enc := utfbom.Skip(bytes.NewReader(byteData))
	fmt.Printf("Detected encoding: %s\n", enc)
	output, err = ioutil.ReadAll(sr)
	if err != nil {
		fmt.Println(err)
		return
	}
	fmt.Println("ReadAll with BOM detection and skipping", output)
	fmt.Println()
}
```

----------------------------------------

TITLE: Docker's Generated iptables Rules for Routed-Mode Network
DESCRIPTION: The complete set of iptables commands that Docker generates for a container on a routed-mode network with a published port. These rules manage network isolation, port forwarding, and inter-container communication.
SOURCE: https://github.com/moby/moby/blob/master/integration/network/bridge/iptablesdoc/generated/usernet-portmap-routed.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
-P INPUT ACCEPT
-P FORWARD ACCEPT
-P OUTPUT ACCEPT
-N DOCKER
-N DOCKER-BRIDGE
-N DOCKER-CT
-N DOCKER-FORWARD
-N DOCKER-ISOLATION-STAGE-1
-N DOCKER-ISOLATION-STAGE-2
-N DOCKER-USER
-A FORWARD -j DOCKER-USER
-A FORWARD -j DOCKER-FORWARD
-A DOCKER -d 192.0.2.2/32 ! -i bridge1 -o bridge1 -p tcp -m tcp --dport 80 -j ACCEPT
-A DOCKER ! -i docker0 -o docker0 -j DROP
-A DOCKER -o bridge1 -p icmp -j ACCEPT
-A DOCKER ! -i bridge1 -o bridge1 -j DROP
-A DOCKER-BRIDGE -o docker0 -j DOCKER
-A DOCKER-BRIDGE -o bridge1 -j DOCKER
-A DOCKER-CT -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A DOCKER-CT -o bridge1 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A DOCKER-FORWARD -j DOCKER-CT
-A DOCKER-FORWARD -j DOCKER-ISOLATION-STAGE-1
-A DOCKER-FORWARD -j DOCKER-BRIDGE
-A DOCKER-FORWARD -i docker0 -j ACCEPT
-A DOCKER-FORWARD -i bridge1 -j ACCEPT
-A DOCKER-ISOLATION-STAGE-1 -i bridge1 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A DOCKER-ISOLATION-STAGE-1 -o bridge1 -j RETURN
-A DOCKER-ISOLATION-STAGE-1 -i docker0 ! -o docker0 -j DOCKER-ISOLATION-STAGE-2
-A DOCKER-ISOLATION-STAGE-1 -i bridge1 ! -o bridge1 -j DOCKER-ISOLATION-STAGE-2
-A DOCKER-ISOLATION-STAGE-2 -o bridge1 -j DROP
-A DOCKER-ISOLATION-STAGE-2 -o docker0 -j DROP
-A DOCKER-USER -j RETURN
```

----------------------------------------

TITLE: SwarmKit Control Service Method Definitions
DESCRIPTION: Service definition for the Control service including RPC method declarations for node, task, and service management operations. Each method specifies input/output types and includes swarm-manager options.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_94

LANGUAGE: protobuf
CODE:
```
service {
  name: "Control"
  method {
    name: "GetNode"
    input_type: ".docker.swarmkit.v1.GetNodeRequest"
    output_type: ".docker.swarmkit.v1.GetNodeResponse"
    options {
      73626345 {
        1: "swarm-manager"
      }
    }
  }
  // Additional methods...
}
```

----------------------------------------

TITLE: Installing DNS Library in Go
DESCRIPTION: Commands to get and build the DNS library using Go modules. The library uses semantic versioning for releases.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/miekg/dns/README.md#2025-04-10_snippet_0

LANGUAGE: shell
CODE:
```
go get github.com/miekg/dns\ngo build github.com/miekg/dns
```

----------------------------------------

TITLE: Displaying PkgGoDev Badge for OpenTelemetry Go SDK Instrumentation
DESCRIPTION: This markdown snippet displays a badge linking to the package documentation for the OpenTelemetry Go SDK instrumentation package on pkg.go.dev.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/sdk/instrumentation/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/sdk/instrumentation)](https://pkg.go.dev/go.opentelemetry.io/otel/sdk/instrumentation)
```

----------------------------------------

TITLE: Adding Properties to ListBlob Response
DESCRIPTION: Adds Owner, Group, Permissions, Acl, and ResourceType properties to the BlobPropertiesInternal definition.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/Azure/azure-sdk-for-go/sdk/storage/azblob/internal/generated/autorest.md#2025-04-10_snippet_1

LANGUAGE: yaml
CODE:
```
directive:  
- from: swagger-document    
  where: $.definitions
  transform: >
    $.BlobPropertiesInternal.properties["Owner"] = {
    "type" : "string",
    };
    $.BlobPropertiesInternal.properties["Group"] = {
    "type" : "string",
    };
    $.BlobPropertiesInternal.properties["Permissions"] = {
    "type" : "string",
    };
    $.BlobPropertiesInternal.properties["Acl"] = {
    "type" : "string",
    };
    $.BlobPropertiesInternal.properties["ResourceType"] = {
    "type" : "string",
    };
```

----------------------------------------

TITLE: Checking Go Version for Memberlist Installation
DESCRIPTION: Command to verify the installed Go version, as memberlist requires Go 1.2+ to build.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/hashicorp/memberlist/README.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
go version
```

----------------------------------------

TITLE: Example Tally Results Subject in Markdown
DESCRIPTION: This snippet provides an example of a tally results subject line, showing the outcome of a vote for tagging a release candidate in the runtime-spec project.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/opencontainers/cgroups/GOVERNANCE.md#2025-04-10_snippet_3

LANGUAGE: markdown
CODE:
```
> [runtime-spec adopted]: Tag 0647920 as 1.0.0-rc (+6 -0 #3)
```

----------------------------------------

TITLE: Defining SwarmKit Resource Messages in Protocol Buffers
DESCRIPTION: Protocol Buffer message definitions for handling Docker Swarm resources, including core types like Resource, Volume, and their associated request/response messages. Includes specifications for filters and CRUD operations.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_93

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "UpdateResourceResponse"
  field {
    name: "resource"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Resource"
    json_name: "resource"
  }
}
```

----------------------------------------

TITLE: Installing aec Go Package
DESCRIPTION: Command to install the aec package using go get
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/morikuni/aec/README.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
go get github.com/morikuni/aec
```

----------------------------------------

TITLE: Markdown Badge for OpenTelemetry Trace Package
DESCRIPTION: Displays a PkgGoDev badge that links to the Go package documentation for the OpenTelemetry trace package.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/trace/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/trace)](https://pkg.go.dev/go.opentelemetry.io/otel/trace)
```

----------------------------------------

TITLE: AWS SDK Go v2 Release History
DESCRIPTION: Markdown formatted changelog documenting version history from v1.3.0 to v1.14.0, including features like API client updates, retry configuration changes, endpoint support updates, and dependency changes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/aws/aws-sdk-go-v2/service/cloudwatchlogs/CHANGELOG.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
# v1.14.0 (2022-02-24)

* **Feature**: API client updated
* **Feature**: Adds RetryMaxAttempts and RetryMod to API client Options. This allows the API clients' default Retryer to be configured from the shared configuration files or environment variables. Adding a new Retry mode of `Adaptive`. `Adaptive` retry mode is an experimental mode, adding client rate limiting when throttles reponses are received from an API. See [retry.AdaptiveMode](https://pkg.go.dev/github.com/aws/aws-sdk-go-v2/aws/retry#AdaptiveMode) for more details, and configuration options.
* **Feature**: Updated `github.com/aws/smithy-go` to latest version
* **Dependency Update**: Updated to the latest SDK module versions

# v1.13.0 (2022-01-14)

* **Feature**: Updated `github.com/aws/smithy-go` to latest version
* **Dependency Update**: Updated to the latest SDK module versions

# v1.12.0 (2022-01-07)

* **Feature**: Updated `github.com/aws/smithy-go` to latest version
* **Dependency Update**: Updated to the latest SDK module versions

# v1.11.0 (2021-12-21)

* **Feature**: API Paginators now support specifying the initial starting token, and support stopping on empty string tokens.
* **Feature**: API client updated
* **Feature**: Updated to latest service endpoints

# v1.10.2 (2021-12-02)

* **Bug Fix**: Fixes a bug that prevented aws.EndpointResolverWithOptions from being used by the service client. ([#1514](https://github.com/aws/aws-sdk-go-v2/pull/1514))
* **Dependency Update**: Updated to the latest SDK module versions

# v1.10.1 (2021-11-19)

* **Dependency Update**: Updated to the latest SDK module versions

# v1.10.0 (2021-11-12)

* **Feature**: Service clients now support custom endpoints that have an initial URI path defined.

# v1.9.0 (2021-11-06)

* **Feature**: The SDK now supports configuration of FIPS and DualStack endpoints using environment variables, shared configuration, or programmatically.
* **Feature**: Updated `github.com/aws/smithy-go` to latest version
* **Dependency Update**: Updated to the latest SDK module versions

# v1.8.0 (2021-10-21)

* **Feature**: API client updated
* **Feature**: Updated  to latest version
* **Dependency Update**: Updated to the latest SDK module versions

# v1.7.2 (2021-10-11)

* **Dependency Update**: Updated to the latest SDK module versions

# v1.7.1 (2021-09-17)

* **Dependency Update**: Updated to the latest SDK module versions

# v1.7.0 (2021-08-27)

* **Feature**: Updated `github.com/aws/smithy-go` to latest version
* **Dependency Update**: Updated to the latest SDK module versions

# v1.6.0 (2021-08-19)

* **Feature**: API client updated
* **Dependency Update**: Updated to the latest SDK module versions

# v1.5.2 (2021-08-04)

* **Dependency Update**: Updated `github.com/aws/smithy-go` to latest version.
* **Dependency Update**: Updated to the latest SDK module versions

# v1.5.1 (2021-07-15)

* **Dependency Update**: Updated `github.com/aws/smithy-go` to latest version
* **Dependency Update**: Updated to the latest SDK module versions

# v1.5.0 (2021-06-25)

* **Feature**: Updated `github.com/aws/smithy-go` to latest version
* **Dependency Update**: Updated to the latest SDK module versions

# v1.4.0 (2021-05-25)

* **Feature**: API client updated

# v1.3.1 (2021-05-20)

* **Dependency Update**: Updated to the latest SDK module versions

# v1.3.0 (2021-05-14)

* **Feature**: Constant has been added to modules to enable runtime version inspection for reporting.
* **Dependency Update**: Updated to the latest SDK module versions
```

----------------------------------------

TITLE: Formatting List of Extended Key Usage Options in Markdown
DESCRIPTION: Markdown table showing the mapping between config strings and Extended Key Usage values for CTFE filtering. Lists supported golang x509 EKUs and their corresponding configuration strings.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/google/certificate-transparency-go/CHANGELOG.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
  |Config string               | Extended Key Usage                     |
  |----------------------------|----------------------------------------|
  |`Any`                       |  ExtKeyUsageAny                        |
  |`ServerAuth`                |  ExtKeyUsageServerAuth                 |
  |`ClientAuth`                |  ExtKeyUsageClientAuth                 |
  |`CodeSigning`               |  ExtKeyUsageCodeSigning                |
  |`EmailProtection`           |  ExtKeyUsageEmailProtection            |
  |`IPSECEndSystem`            |  ExtKeyUsageIPSECEndSystem             |
  |`IPSECTunnel`               |  ExtKeyUsageIPSECTunnel                |
  |`IPSECUser`                 |  ExtKeyUsageIPSECUser                  |
  |`TimeStamping`              |  ExtKeyUsageTimeStamping               |
  |`OCSPSigning`               |  ExtKeyUsageOCSPSigning                |
  |`MicrosoftServerGatedCrypto`|  ExtKeyUsageMicrosoftServerGatedCrypto |
  |`NetscapeServerGatedCrypto` |  ExtKeyUsageNetscapeServerGatedCrypto  |
```

----------------------------------------

TITLE: Connecting to Docker Host and Checking Version
DESCRIPTION: SSH into one of the Docker hosts (net-1) and verify the Docker version installed.
SOURCE: https://github.com/moby/moby/blob/master/libnetwork/docs/vagrant.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
$ vagrant ssh net-1
vagrant@net-1:~$ docker version
```

----------------------------------------

TITLE: Defining NetworkAttachment Message Type in Protocol Buffers for Docker Swarmkit
DESCRIPTION: This snippet defines the NetworkAttachment message type, which represents a network connection for a task. It includes fields for the network and associated addresses.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_81

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "NetworkAttachment"
  field {
    name: "network"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Network"
    json_name: "network"
  }
  field {
    name: "addresses"
    number: 2
    label: LABEL_REPEATED
    type: TYPE_STRING
    json_name: "addresses"
  }
}
```

----------------------------------------

TITLE: Installing OpenCensus Go Package
DESCRIPTION: Command to install the OpenCensus Go package using go get
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opencensus.io/README.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
$ go get -u go.opencensus.io
```

----------------------------------------

TITLE: Displaying PkgGoDev Badge for OTLP Metric HTTP Exporter in Markdown
DESCRIPTION: This code snippet shows how to embed a PkgGoDev badge in a Markdown file. The badge links to the package documentation for the OTLP Metric HTTP Exporter on pkg.go.dev.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp)](https://pkg.go.dev/go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp)
```

----------------------------------------

TITLE: Initial Feature Release Note (v1.1.0)
DESCRIPTION: Initial version release note adding runtime version inspection capability and updating dependencies.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/aws/aws-sdk-go-v2/feature/ec2/imds/CHANGELOG.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
# v1.1.0 (2021-05-14)

* **Feature**: Constant has been added to modules to enable runtime version inspection for reporting.
* **Dependency Update**: Updated to the latest SDK module versions
```

----------------------------------------

TITLE: Sink Interface Definition in Go
DESCRIPTION: Definition of the core Sink interface used for implementing custom event handling behavior, showing required Write and Close methods.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/go-events/README.md#2025-04-10_snippet_4

LANGUAGE: go
CODE:
```
type Sink {
	Write(Event) error
	Close() error
}
```

----------------------------------------

TITLE: Support Table in Markdown
DESCRIPTION: A markdown table listing various support channels for the Docker Distribution project, including IRC, issue tracker, Google Groups, and mailing list.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/distribution/README.md#2025-04-10_snippet_1

LANGUAGE: markdown
CODE:
```
<table>\n<tr>\n\t<th align="left">\n\tIRC\n\t</th>\n\t<td>\n\t#docker-distribution on FreeNode\n\t</td>\n</tr>\n<tr>\n\t<th align="left">\n\tIssue Tracker\n\t</th>\n\t<td>\n\tgithub.com/docker/distribution/issues\n\t</td>\n</tr>\n<tr>\n\t<th align="left">\n\tGoogle Groups\n\t</th>\n\t<td>\n\thttps://groups.google.com/a/dockerproject.org/forum/#!forum/distribution\n\t</td>\n</tr>\n<tr>\n\t<th align="left">\n\tMailing List\n\t</th>\n\t<td>\n\tdocker@dockerproject.org\n\t</td>\n</tr>\n</table>
```

----------------------------------------

TITLE: Defining Node Message Type in Protocol Buffers for Docker Swarmkit
DESCRIPTION: This snippet defines the Node message type, which represents a node in the Swarm cluster. It includes fields for node identification, specifications, status, and network attachments.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_77

LANGUAGE: Protocol Buffers
CODE:
```
message_type {
  name: "Node"
  field {
    name: "id"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "id"
  }
  field {
    name: "meta"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Meta"
    options {
      65001: 0
    }
    json_name: "meta"
  }
  field {
    name: "spec"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.NodeSpec"
    options {
      65001: 0
    }
    json_name: "spec"
  }
  field {
    name: "description"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.NodeDescription"
    json_name: "description"
  }
  field {
    name: "status"
    number: 5
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.NodeStatus"
    options {
      65001: 0
    }
    json_name: "status"
  }
  field {
    name: "manager_status"
    number: 6
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.ManagerStatus"
    json_name: "managerStatus"
  }
  field {
    name: "attachment"
    number: 7
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.NetworkAttachment"
    options {
      deprecated: true
    }
    json_name: "attachment"
  }
  field {
    name: "certificate"
    number: 8
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Certificate"
    options {
      65001: 0
    }
    json_name: "certificate"
  }
  field {
    name: "role"
    number: 9
    label: LABEL_OPTIONAL
    type: TYPE_ENUM
    type_name: ".docker.swarmkit.v1.NodeRole"
    json_name: "role"
  }
  field {
    name: "attachments"
    number: 10
    label: LABEL_REPEATED
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.NetworkAttachment"
    json_name: "attachments"
  }
  field {
    name: "VXLANUDPPort"
    number: 11
    label: LABEL_OPTIONAL
    type: TYPE_UINT32
    json_name: "VXLANUDPPort"
  }
  options {
    70001 {
      1 {
        1: 1
        2: 1
        3: 1
        4: 1
        5: 1
        6: 1
        11: 1
        12: 1
      }
    }
  }
}
```

----------------------------------------

TITLE: Installing Goose Database Migration Tool
DESCRIPTION: Command to install the goose database migration tool which is used to set up and manage database schemas for CFSSL.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/cloudflare/cfssl/certdb/README.md#2025-04-10_snippet_0

LANGUAGE: bash
CODE:
```
go get bitbucket.org/liamstask/goose/cmd/goose
```

----------------------------------------

TITLE: Markdown Badge Integration for Go Package
DESCRIPTION: Markdown code that displays a PkgGoDev badge linking to the OpenTelemetry metric exemplar package documentation.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/sdk/metric/exemplar/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/sdk/metric/exemplar)](https://pkg.go.dev/go.opentelemetry.io/otel/sdk/metric/exemplar)
```

----------------------------------------

TITLE: AWS SDK Version History in Markdown
DESCRIPTION: Markdown formatted version history documenting changes across multiple AWS SDK releases including feature updates, bug fixes, and dependency changes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/aws/aws-sdk-go-v2/service/ssooidc/CHANGELOG.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
# v1.26.4 (2024-07-10.2)

* **Dependency Update**: Updated to the latest SDK module versions

# v1.26.3 (2024-07-10)

* **Dependency Update**: Updated to the latest SDK module versions

# v1.26.2 (2024-07-03)

* No change notes available for this release.

# v1.26.1 (2024-06-28)

* **Dependency Update**: Updated to the latest SDK module versions
```

----------------------------------------

TITLE: Displaying First Release Candidate Versions
DESCRIPTION: Shows the version numbers for the first release candidates of stable modules, while unstable modules remain at their previous version.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/VERSIONING.md#2025-04-10_snippet_3

LANGUAGE: markdown
CODE:
```
* `otel`: `v1.0.0-RC1`
* `otel/trace`: `v1.0.0-RC1`
* `otel/baggage`: `v1.0.0-RC1`
* `otel/sdk/trace`: `v1.0.0-RC1`
```

----------------------------------------

TITLE: Creating Registry Data Directory
DESCRIPTION: Creates a directory to store registry data. This step might require proper permissions to be set.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/docker/distribution/BUILDING.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
mkdir -p /var/lib/registry
```

----------------------------------------

TITLE: Defining NodeCA Service in SwarmKit Protobuf
DESCRIPTION: This snippet defines the NodeCA service in SwarmKit's protobuf, which handles node certificate issuance and status checks. It includes methods for issuing node certificates and checking certificate status.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_75

LANGUAGE: protobuf
CODE:
```
service NodeCA {
  rpc IssueNodeCertificate(IssueNodeCertificateRequest) returns (IssueNodeCertificateResponse) {
    option (docker.protobuf.plugin.tls_authorization) = {
      insecure: true
    };
  }
  rpc NodeCertificateStatus(NodeCertificateStatusRequest) returns (NodeCertificateStatusResponse) {
    option (docker.protobuf.plugin.tls_authorization) = {
      insecure: true
    };
  }
}
```

----------------------------------------

TITLE: New API Function Signatures
DESCRIPTION: Function signatures for the new API including OpenInRoot, OpenatInRoot, and Reopen functions that provide more secure file operations.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/cyphar/filepath-securejoin/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
func OpenInRoot(root, unsafePath string) (*os.File, error)
func OpenatInRoot(root *os.File, unsafePath string) (*os.File, error)
func Reopen(handle *os.File, flags int) (*os.File, error)
```

----------------------------------------

TITLE: Integer Flag Declaration in Go
DESCRIPTION: Demonstrates declaring an integer flag with a default value and help message.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/spf13/pflag/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
var ip *int = flag.Int("flagname", 1234, "help message for flagname")
```

----------------------------------------

TITLE: Displaying Developer Certificate of Origin in Markdown
DESCRIPTION: This snippet shows the full text of the Developer Certificate of Origin (DCO) version 1.1, which contributors must agree to when signing their commits.
SOURCE: https://github.com/moby/moby/blob/master/CONTRIBUTING.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
```
Developer Certificate of Origin
Version 1.1

Copyright (C) 2004, 2006 The Linux Foundation and its contributors.
1 Letterman Drive
Suite D4700
San Francisco, CA, 94129

Everyone is permitted to copy and distribute verbatim copies of this
license document, but changing it is not allowed.

Developer's Certificate of Origin 1.1

By making a contribution to this project, I certify that:

(a) The contribution was created in whole or in part by me and I
    have the right to submit it under the open source license
    indicated in the file; or

(b) The contribution is based upon previous work that, to the best
    of my knowledge, is covered under an appropriate open source
    license and I have the right under that license to submit that
    work with modifications, whether created in whole or in part
    by me, under the same open source license (unless I am
    permitted to submit under a different license), as indicated
    in the file; or

(c) The contribution was provided directly to me by some other
    person who certified (a), (b) or (c) and I have not modified
    it.

(d) I understand and agree that this project and the contribution
    are public and that a record of the contribution (including all
    personal information I submit with it, including my sign-off) is
    maintained indefinitely and may be redistributed consistent with
    this project or the open source license(s) involved.
```
```

----------------------------------------

TITLE: Displaying Package Documentation Badge in Markdown
DESCRIPTION: Markdown code to display the pkg.go.dev documentation badge for the OpenTelemetry SDK metric data package with a link to the full documentation.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/sdk/metric/metricdata/README.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
[![PkgGoDev](https://pkg.go.dev/badge/go.opentelemetry.io/otel/sdk/metric/metricdata)](https://pkg.go.dev/go.opentelemetry.io/otel/sdk/metric/metricdata)
```

----------------------------------------

TITLE: Defining ttrpc Message Frame Structure in Markdown
DESCRIPTION: Illustrates the structure of a ttrpc message frame, including data length, stream ID, message type, flags, and data fields. The frame is represented using ASCII art for visual clarity.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/containerd/ttrpc/PROTOCOL.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
+---------------------------------------------------------------+
|                       Data Length (32)                        |
+---------------------------------------------------------------+
|                        Stream ID (32)                         |
+---------------+-----------------------------------------------+
| Msg Type (8)  |
+---------------+
|   Flags (8)   |
+---------------+-----------------------------------------------+
|                           Data (*)                            |
+---------------------------------------------------------------+
```

----------------------------------------

TITLE: Defining CA Service in SwarmKit Protobuf
DESCRIPTION: This snippet defines the CA (Certificate Authority) service in SwarmKit's protobuf. It includes methods for getting root CA certificates and unlock keys, with TLS authorization options.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_74

LANGUAGE: protobuf
CODE:
```
service CA {
  rpc GetRootCACertificate(GetRootCACertificateRequest) returns (GetRootCACertificateResponse) {
    option (docker.protobuf.plugin.tls_authorization) = {
      insecure: true
    };
  }
  rpc GetUnlockKey(GetUnlockKeyRequest) returns (GetUnlockKeyResponse) {
    option (docker.protobuf.plugin.tls_authorization) = {
      roles: "swarm-manager"
    };
  }
}
```

----------------------------------------

TITLE: Converting Markdown to Manpage Using Command Line Arguments
DESCRIPTION: Example showing how to convert a markdown file to a manpage using explicit command line arguments for input and output files.
SOURCE: https://github.com/moby/moby/blob/master/man/vendor/github.com/cpuguy83/go-md2man/v2/go-md2man.1.md#2025-04-10_snippet_1

LANGUAGE: bash
CODE:
```
go-md2man -in=go-md2man.1.md -out=go-md2man.1
```

----------------------------------------

TITLE: Conditional Error Return in Go
DESCRIPTION: Shows how to return a multierror only if it contains actual errors using the ErrorOrNil method.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/hashicorp/go-multierror/README.md#2025-04-10_snippet_5

LANGUAGE: go
CODE:
```
var result *multierror.Error

// ... accumulate errors here

// Return the `error` only if errors were added to the multierror, otherwise
// return nil since there are no errors.
return result.ErrorOrNil()
```

----------------------------------------

TITLE: Declaring Go Module Dependencies
DESCRIPTION: Defines required Go module dependencies for markdown processing. Includes go-md2man v2.0.6 with Go 1.12 requirement and blackfriday v2.1.0.
SOURCE: https://github.com/moby/moby/blob/master/man/vendor/modules.txt#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
# github.com/cpuguy83/go-md2man/v2 v2.0.6
## explicit; go 1.12
github.com/cpuguy83/go-md2man/v2
github.com/cpuguy83/go-md2man/v2/md2man
# github.com/russross/blackfriday/v2 v2.1.0
## explicit
github.com/russross/blackfriday/v2
```

----------------------------------------

TITLE: Disabling Experimental Resource Semantic Conventions in OpenTelemetry Go SDK
DESCRIPTION: Unsets the OTEL_GO_X_RESOURCE environment variable to disable experimental resource semantic conventions in the OpenTelemetry Go SDK.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opentelemetry.io/otel/sdk/internal/x/README.md#2025-04-10_snippet_1

LANGUAGE: console
CODE:
```
unset OTEL_GO_X_RESOURCE
```

----------------------------------------

TITLE: Running Tests for OpenCensus Go
DESCRIPTION: These commands install necessary tools (only needed once) and then run the project's tests. This ensures that the development environment is set up correctly and all tests pass before making changes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/go.opencensus.io/CONTRIBUTING.md#2025-04-10_snippet_2

LANGUAGE: bash
CODE:
```
$ make install-tools  # Only first time.
$ make
```

----------------------------------------

TITLE: Defining NodeCSIInfo Message in Protocol Buffers
DESCRIPTION: This message type defines Container Storage Interface (CSI) information for a node, including plugin name, node ID, maximum volumes per node, and accessible topology information for container storage plugins.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_25

LANGUAGE: protobuf
CODE:
```
message_type {
  name: "NodeCSIInfo"
  field {
    name: "plugin_name"
    number: 1
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "pluginName"
  }
  field {
    name: "node_id"
    number: 2
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "nodeId"
  }
  field {
    name: "max_volumes_per_node"
    number: 3
    label: LABEL_OPTIONAL
    type: TYPE_INT64
    json_name: "maxVolumesPerNode"
  }
  field {
    name: "accessible_topology"
    number: 4
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".docker.swarmkit.v1.Topology"
    json_name: "accessibleTopology"
  }
}
```

----------------------------------------

TITLE: Basic Markdown Processing without Extensions
DESCRIPTION: Example showing how to process markdown using only the basic feature set without any extensions.
SOURCE: https://github.com/moby/moby/blob/master/man/vendor/github.com/russross/blackfriday/v2/README.md#2025-04-10_snippet_1

LANGUAGE: go
CODE:
```
output := blackfriday.Run(input, blackfriday.WithNoExtensions())
```

----------------------------------------

TITLE: Importing Exponential Backoff Package in Go
DESCRIPTION: Shows how to import the exponential backoff package in a Go project. The import path includes a version number at the end.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/cenkalti/backoff/v4/README.md#2025-04-10_snippet_0

LANGUAGE: Go
CODE:
```
import "github.com/cenkalti/backoff/v4"
```

----------------------------------------

TITLE: Apache License 2.0 Boilerplate Notice
DESCRIPTION: Standard copyright and license notice template to be included in source files. Contains placeholders for year and copyright owner information that should be replaced with actual values.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/aws/aws-sdk-go-v2/service/cloudwatchlogs/LICENSE.txt#2025-04-10_snippet_0

LANGUAGE: text
CODE:
```
Copyright [yyyy] [name of copyright owner]

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```

----------------------------------------

TITLE: Generating Protocol Buffer Files in Moby
DESCRIPTION: Command to regenerate .pb.go files from .proto source files using make. This should be run whenever .proto files are modified to ensure generated code is up to date.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/README.md#2025-04-10_snippet_0

LANGUAGE: shell
CODE:
```
$ make generate
```

----------------------------------------

TITLE: Checking Docker Version in Development Container
DESCRIPTION: Verify the Docker client and server versions within the development container.
SOURCE: https://github.com/moby/moby/blob/master/docs/contributing/set-up-dev-env.md#2025-04-10_snippet_11

LANGUAGE: bash
CODE:
```
# docker version
```

----------------------------------------

TITLE: Defining Protocol Buffer GeneratedCodeInfo with Annotation
DESCRIPTION: Defines structures for generated code information including annotations that provide metadata about generated code.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_18

LANGUAGE: protobuf
CODE:
```
message_type {
    name: "GeneratedCodeInfo"
    field {
      name: "annotation"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.GeneratedCodeInfo.Annotation"
      json_name: "annotation"
    }
    nested_type {
      name: "Annotation"
      field {
        name: "path"
        number: 1
        label: LABEL_REPEATED
        type: TYPE_INT32
        options {
          packed: true
        }
        json_name: "path"
      }
      field {
        name: "source_file"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "sourceFile"
      }
      field {
        name: "begin"
        number: 3
        label: LABEL_OPTIONAL
        type: TYPE_INT32
        json_name: "begin"
      }
      field {
        name: "end"
        number: 4
        label: LABEL_OPTIONAL
        type: TYPE_INT32
        json_name: "end"
      }
    }
  }
```

----------------------------------------

TITLE: Go Module Dependencies List
DESCRIPTION: List of Go module dependencies with specific versions required for the Moby/Docker project. Most dependencies are using go 1.17 or later, with explicit version constraints specified.
SOURCE: https://github.com/moby/moby/blob/master/vendor/modules.txt#2025-04-10_snippet_6

LANGUAGE: go
CODE:
```
## explicit; go 1.18
github.com/moby/swarmkit/v2/agent
github.com/moby/swarmkit/v2/agent/configs
github.com/moby/swarmkit/v2/agent/csi
github.com/moby/swarmkit/v2/agent/csi/plugin
github.com/moby/swarmkit/v2/agent/exec
# github.com/moby/sys/atomicwriter v0.1.0
## explicit; go 1.18
github.com/moby/sys/atomicwriter
# github.com/moby/sys/mount v0.3.4
## explicit; go 1.17
github.com/moby/sys/mount
```

----------------------------------------

TITLE: Importing Clock Interface in Go
DESCRIPTION: This snippet demonstrates how to import the Clock interface from the correct repository path in Go projects.
SOURCE: https://github.com/moby/moby/blob/master/vendor/code.cloudfoundry.org/clock/README.md#2025-04-10_snippet_0

LANGUAGE: go
CODE:
```
import "code.cloudfoundry.org/clock"
```

----------------------------------------

TITLE: Apache License 2.0 Boilerplate Notice Template
DESCRIPTION: Standard boilerplate notice text to be included in source files when applying the Apache 2.0 license. Includes placeholders for copyright year and owner information, along with the standard Apache 2.0 license notice text.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/aws/aws-sdk-go-v2/service/sso/LICENSE.txt#2025-04-10_snippet_0

LANGUAGE: text
CODE:
```
Copyright [yyyy] [name of copyright owner]

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```

----------------------------------------

TITLE: Git Commit Reference Format
DESCRIPTION: Examples of Git commit reference links and hashes used throughout the changelog to track individual changes.
SOURCE: https://github.com/moby/moby/blob/master/vendor/cloud.google.com/go/CHANGES.md#2025-04-10_snippet_1

LANGUAGE: markdown
CODE:
```
([e385b40](https://www.github.com/googleapis/google-cloud-go/commit/e385b40a1e2ecf81f5fd0910de5c37275951f86b))
```

----------------------------------------

TITLE: Defining Protocol Buffer OneofOptions
DESCRIPTION: Defines the OneofOptions message type that supports extensibility through uninterpreted options.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_11

LANGUAGE: protobuf
CODE:
```
message_type {
    name: "OneofOptions"
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    extension_range {
      start: 1000
      end: 536870912
    }
  }
```

----------------------------------------

TITLE: Go Module Dependencies Declaration
DESCRIPTION: Comprehensive list of Go module dependencies specifying required versions and minimum Go versions for the Moby project. Includes various libraries for networking, cryptography, telemetry, and other core functionalities.
SOURCE: https://github.com/moby/moby/blob/master/vendor/modules.txt#2025-04-10_snippet_7

LANGUAGE: go
CODE:
```
## explicit; go 1.17
github.com/vbatts/tar-split/archive/tar
github.com/vbatts/tar-split/tar/asm
github.com/vbatts/tar-split/tar/storage
# github.com/vishvananda/netlink v1.3.1-0.20250209162617-655392bc778a
## explicit; go 1.12
github.com/vishvananda/netlink
github.com/vishvananda/netlink/nl
# github.com/vishvananda/netns v0.0.5
## explicit; go 1.17
github.com/vishvananda/netns
```

----------------------------------------

TITLE: Installing Mode Package via Go Get
DESCRIPTION: Command to install the Mode package using Go's package management system.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/tonistiigi/dchapes-mode/README.md#2025-04-10_snippet_0

LANGUAGE: shell
CODE:
```
go get hg.sr.ht/~dchapes/mode
```

----------------------------------------

TITLE: Apache License Boilerplate Notice Template
DESCRIPTION: Standard boilerplate notice text for applying the Apache License 2.0 to a software project. Includes placeholders for copyright year and owner information.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/aws/aws-sdk-go-v2/service/ssooidc/LICENSE.txt#2025-04-10_snippet_0

LANGUAGE: text
CODE:
```
Copyright [yyyy] [name of copyright owner]

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```

----------------------------------------

TITLE: Linking to Buildkit POC Repository in Markdown
DESCRIPTION: This snippet provides a Markdown link to the proof-of-concept repository for Buildkit, a new build system for Docker.
SOURCE: https://github.com/moby/moby/blob/master/reports/builder/2017-06-12.md#2025-04-10_snippet_0

LANGUAGE: Markdown
CODE:
```
[POC repo](https://github.com/tonistiigi/buildkit_poc)
```

----------------------------------------

TITLE: Defining Descriptor Types in Protocol Buffers
DESCRIPTION: Defines descriptor types for Protocol Buffers including FileDescriptorSet, FileDescriptorProto, DescriptorProto, and related nested types. These are used for reflection and metadata in Protocol Buffers.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/moby/swarmkit/v2/api/api.pb.txt#2025-04-10_snippet_3

LANGUAGE: Protocol Buffers
CODE:
```
file {
  name: "google/protobuf/descriptor.proto"
  package: "google.protobuf"
  message_type {
    name: "FileDescriptorSet"
    field {
      name: "file"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.FileDescriptorProto"
      json_name: "file"
    }
  }
  message_type {
    name: "FileDescriptorProto"
    // ... (fields omitted for brevity)
  }
  message_type {
    name: "DescriptorProto"
    // ... (fields and nested types omitted for brevity)
  }
  message_type {
    name: "ExtensionRangeOptions"
    // ... (fields omitted for brevity)
  }
  message_type {
    name: "FieldDescriptorProto"
    // ... (fields omitted for brevity)
  }
  // ... (other message types omitted for brevity)
}
```

----------------------------------------

TITLE: Importing SCTP Package in Go
DESCRIPTION: This snippet shows the import of the SCTP (Stream Control Transmission Protocol) package for Go, which provides SCTP functionality.
SOURCE: https://github.com/moby/moby/blob/master/vendor/modules.txt#2025-04-10_snippet_3

LANGUAGE: Go
CODE:
```
github.com/ishidawataru/sctp
```

----------------------------------------

TITLE: Applying Apache License 2.0 Boilerplate Notice
DESCRIPTION: This snippet provides the boilerplate notice to be included when applying the Apache License 2.0 to a project. It includes placeholders for the copyright year and owner, as well as the full text of the license notice.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding/LICENSE.txt#2025-04-10_snippet_0

LANGUAGE: Text
CODE:
```
   Copyright [yyyy] [name of copyright owner]

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
```

----------------------------------------

TITLE: Applying Apache License 2.0 Boilerplate Notice
DESCRIPTION: This snippet provides the boilerplate notice to be included when applying the Apache License 2.0 to a project. It includes placeholders for the copyright year and owner, as well as the standard license text and conditions.
SOURCE: https://github.com/moby/moby/blob/master/vendor/github.com/aws/aws-sdk-go-v2/config/LICENSE.txt#2025-04-10_snippet_0

LANGUAGE: Text
CODE:
```
   Copyright [yyyy] [name of copyright owner]

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
```

----------------------------------------

TITLE: Markdown Redirect Notice
DESCRIPTION: Markdown content providing information about the moved Docker Image Specification repository
SOURCE: https://github.com/moby/moby/blob/master/image/spec/v1.md#2025-04-10_snippet_0

LANGUAGE: markdown
CODE:
```
# Docker Image Specification v1.0.0

This specification moved to a separate repository:
https://github.com/moby/docker-image-spec
```

----------------------------------------

TITLE: Defining Go Module Dependencies for Moby Project
DESCRIPTION: This snippet lists the required Go modules and their versions for the Moby project. It includes dependencies such as AWS SDK components, container runtimes, networking libraries, and various utility packages.
SOURCE: https://github.com/moby/moby/blob/master/vendor/modules.txt#2025-04-10_snippet_0

LANGUAGE: Go
CODE:
```
## explicit; go 1.20
github.com/aws/smithy-go
github.com/aws/smithy-go/auth
github.com/aws/smithy-go/auth/bearer
github.com/aws/smithy-go/context
github.com/aws/smithy-go/document
github.com/aws/smithy-go/encoding
github.com/aws/smithy-go/encoding/httpbinding
github.com/aws/smithy-go/encoding/json
github.com/aws/smithy-go/encoding/xml
github.com/aws/smithy-go/endpoints
github.com/aws/smithy-go/internal/sync/singleflight
github.com/aws/smithy-go/io
github.com/aws/smithy-go/logging
github.com/aws/smithy-go/middleware
github.com/aws/smithy-go/private/requestcompression
github.com/aws/smithy-go/ptr
github.com/aws/smithy-go/rand
github.com/aws/smithy-go/sync
github.com/aws/smithy-go/time
github.com/aws/smithy-go/transport/http
github.com/aws/smithy-go/transport/http/internal/io
# github.com/beorn7/perks v1.0.1
## explicit; go 1.11
github.com/beorn7/perks/quantile
# github.com/bits-and-blooms/bitset v1.13.0
## explicit; go 1.16
github.com/bits-and-blooms/bitset
# github.com/bmizerany/assert v0.0.0-20160611221934-b7ed37b82869
## explicit
# github.com/cenkalti/backoff/v4 v4.3.0
## explicit; go 1.18
github.com/cenkalti/backoff/v4
# github.com/cespare/xxhash/v2 v2.3.0
## explicit; go 1.11
github.com/cespare/xxhash/v2
# github.com/cilium/ebpf v0.17.3
## explicit; go 1.22
github.com/cilium/ebpf
github.com/cilium/ebpf/asm
github.com/cilium/ebpf/btf
github.com/cilium/ebpf/internal
github.com/cilium/ebpf/internal/kallsyms
github.com/cilium/ebpf/internal/kconfig
github.com/cilium/ebpf/internal/linux
github.com/cilium/ebpf/internal/sys
github.com/cilium/ebpf/internal/sysenc
github.com/cilium/ebpf/internal/testutils/fdtrace
github.com/cilium/ebpf/internal/tracefs
github.com/cilium/ebpf/internal/unix
github.com/cilium/ebpf/link
# github.com/cloudflare/cfssl v1.6.4
## explicit; go 1.18
github.com/cloudflare/cfssl/api
github.com/cloudflare/cfssl/auth
github.com/cloudflare/cfssl/certdb
github.com/cloudflare/cfssl/config
github.com/cloudflare/cfssl/crypto/pkcs7
github.com/cloudflare/cfssl/csr
github.com/cloudflare/cfssl/errors
github.com/cloudflare/cfssl/helpers
github.com/cloudflare/cfssl/helpers/derhelpers
github.com/cloudflare/cfssl/info
github.com/cloudflare/cfssl/initca
github.com/cloudflare/cfssl/log
github.com/cloudflare/cfssl/ocsp/config
github.com/cloudflare/cfssl/signer
github.com/cloudflare/cfssl/signer/local
# github.com/container-storage-interface/spec v1.5.0
## explicit; go 1.16
github.com/container-storage-interface/spec/lib/go/csi
# github.com/containerd/cgroups/v3 v3.0.5
## explicit; go 1.22.0
github.com/containerd/cgroups/v3
github.com/containerd/cgroups/v3/cgroup1
github.com/containerd/cgroups/v3/cgroup1/stats
github.com/containerd/cgroups/v3/cgroup2
github.com/containerd/cgroups/v3/cgroup2/stats
# github.com/containerd/console v1.0.4
## explicit; go 1.13
github.com/containerd/console
# github.com/containerd/containerd/api v1.8.0
## explicit; go 1.21
github.com/containerd/containerd/api/events
github.com/containerd/containerd/api/runtime/sandbox/v1
github.com/containerd/containerd/api/services/containers/v1
github.com/containerd/containerd/api/services/content/v1
github.com/containerd/containerd/api/services/diff/v1
github.com/containerd/containerd/api/services/events/v1
github.com/containerd/containerd/api/services/images/v1
github.com/containerd/containerd/api/services/introspection/v1
github.com/containerd/containerd/api/services/leases/v1
github.com/containerd/containerd/api/services/namespaces/v1
github.com/containerd/containerd/api/services/sandbox/v1
github.com/containerd/containerd/api/services/snapshots/v1
github.com/containerd/containerd/api/services/streaming/v1
github.com/containerd/containerd/api/services/tasks/v1
github.com/containerd/containerd/api/services/transfer/v1
github.com/containerd/containerd/api/services/version/v1
github.com/containerd/containerd/api/types
github.com/containerd/containerd/api/types/runc/options
github.com/containerd/containerd/api/types/runtimeoptions/v1
github.com/containerd/containerd/api/types/task
github.com/containerd/containerd/api/types/transfer
# github.com/containerd/containerd/v2 v2.0.4
## explicit; go 1.22.0
github.com/containerd/containerd/v2/client
github.com/containerd/containerd/v2/cmd/containerd/server/config
github.com/containerd/containerd/v2/contrib/nvidia
github.com/containerd/containerd/v2/core/containers
github.com/containerd/containerd/v2/core/content
github.com/containerd/containerd/v2/core/content/proxy
github.com/containerd/containerd/v2/core/diff
github.com/containerd/containerd/v2/core/diff/proxy
github.com/containerd/containerd/v2/core/events
github.com/containerd/containerd/v2/core/events/proxy
github.com/containerd/containerd/v2/core/images
github.com/containerd/containerd/v2/core/images/archive
github.com/containerd/containerd/v2/core/images/converter
github.com/containerd/containerd/v2/core/images/usage
github.com/containerd/containerd/v2/core/introspection
github.com/containerd/containerd/v2/core/introspection/proxy
github.com/containerd/containerd/v2/core/leases
github.com/containerd/containerd/v2/core/leases/proxy
github.com/containerd/containerd/v2/core/metadata
github.com/containerd/containerd/v2/core/metadata/boltutil
github.com/containerd/containerd/v2/core/mount
github.com/containerd/containerd/v2/core/remotes
github.com/containerd/containerd/v2/core/remotes/docker
github.com/containerd/containerd/v2/core/remotes/docker/auth
github.com/containerd/containerd/v2/core/remotes/docker/config
github.com/containerd/containerd/v2/core/remotes/docker/schema1
github.com/containerd/containerd/v2/core/remotes/errors
github.com/containerd/containerd/v2/core/sandbox
github.com/containerd/containerd/v2/core/sandbox/proxy
github.com/containerd/containerd/v2/core/snapshots
github.com/containerd/containerd/v2/core/snapshots/proxy
github.com/containerd/containerd/v2/core/streaming
github.com/containerd/containerd/v2/core/streaming/proxy
github.com/containerd/containerd/v2/core/transfer
github.com/containerd/containerd/v2/core/transfer/proxy
github.com/containerd/containerd/v2/core/transfer/streaming
github.com/containerd/containerd/v2/core/unpack
github.com/containerd/containerd/v2/defaults
github.com/containerd/containerd/v2/internal/cleanup
github.com/containerd/containerd/v2/internal/fsverity
github.com/containerd/containerd/v2/internal/kmutex
github.com/containerd/containerd/v2/internal/randutil
github.com/containerd/containerd/v2/internal/userns
github.com/containerd/containerd/v2/pkg/apparmor
github.com/containerd/containerd/v2/pkg/archive
github.com/containerd/containerd/v2/pkg/archive/compression
github.com/containerd/containerd/v2/pkg/archive/tarheader
github.com/containerd/containerd/v2/pkg/cap
github.com/containerd/containerd/v2/pkg/cio
github.com/containerd/containerd/v2/pkg/deprecation
github.com/containerd/containerd/v2/pkg/dialer
github.com/containerd/containerd/v2/pkg/epoch
github.com/containerd/containerd/v2/pkg/filters
github.com/containerd/containerd/v2/pkg/gc
github.com/containerd/containerd/v2/pkg/identifiers
github.com/containerd/containerd/v2/pkg/kernelversion
github.com/containerd/containerd/v2/pkg/labels
github.com/containerd/containerd/v2/pkg/namespaces
github.com/containerd/containerd/v2/pkg/oci
github.com/containerd/containerd/v2/pkg/protobuf
github.com/containerd/containerd/v2/pkg/protobuf/proto
github.com/containerd/containerd/v2/pkg/protobuf/types
github.com/containerd/containerd/v2/pkg/reference
github.com/containerd/containerd/v2/pkg/rootfs
github.com/containerd/containerd/v2/pkg/seccomp
github.com/containerd/containerd/v2/pkg/snapshotters
github.com/containerd/containerd/v2/pkg/sys
github.com/containerd/containerd/v2/pkg/tracing
github.com/containerd/containerd/v2/plugins
github.com/containerd/containerd/v2/plugins/content/local
github.com/containerd/containerd/v2/plugins/diff/walking
github.com/containerd/containerd/v2/plugins/services
github.com/containerd/containerd/v2/plugins/services/content/contentserver
github.com/containerd/containerd/v2/plugins/snapshots/overlay/overlayutils
github.com/containerd/containerd/v2/version
# github.com/containerd/continuity v0.4.5
## explicit; go 1.21
github.com/containerd/continuity/devices
github.com/containerd/continuity/driver
github.com/containerd/continuity/fs
github.com/containerd/continuity/sysx
# github.com/containerd/errdefs v1.0.0
## explicit; go 1.20
github.com/containerd/errdefs
# github.com/containerd/errdefs/pkg v0.3.0
## explicit; go 1.22
github.com/containerd/errdefs/pkg/errgrpc
github.com/containerd/errdefs/pkg/internal/cause
github.com/containerd/errdefs/pkg/internal/types
# github.com/containerd/fifo v1.1.0
## explicit; go 1.18
github.com/containerd/fifo
# github.com/containerd/go-cni v1.1.12
## explicit; go 1.21
github.com/containerd/go-cni
# github.com/containerd/go-runc v1.1.0
## explicit; go 1.18
github.com/containerd/go-runc
# github.com/containerd/log v0.1.0
## explicit; go 1.20
github.com/containerd/log
github.com/containerd/log/logtest
# github.com/containerd/nydus-snapshotter v0.15.0
## explicit; go 1.22.0
github.com/containerd/nydus-snapshotter/pkg/converter
github.com/containerd/nydus-snapshotter/pkg/converter/tool
github.com/containerd/nydus-snapshotter/pkg/label
# github.com/containerd/platforms v1.0.0-rc.1
## explicit; go 1.20
github.com/containerd/platforms
# github.com/containerd/plugin v1.0.0
## explicit; go 1.20
github.com/containerd/plugin
# github.com/containerd/stargz-snapshotter/estargz v0.16.3
## explicit; go 1.22.0
github.com/containerd/stargz-snapshotter/estargz
github.com/containerd/stargz-snapshotter/estargz/errorutil
# github.com/containerd/ttrpc v1.2.7
## explicit; go 1.19
github.com/containerd/ttrpc
# github.com/containerd/typeurl/v2 v2.2.3
## explicit; go 1.21
github.com/containerd/typeurl/v2
# github.com/containernetworking/cni v1.2.3
```